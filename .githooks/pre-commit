#!/usr/bin/env sh
set -eu > /dev/null 2>&1

cd "$(${GIT:-git} rev-parse --show-toplevel)" ||
	{
		printf '%s\n' "ERROR: Unable to find git toplevel." >&2
		exit 1
	}

# Spaces in filenames
if (find . -print | awk '{ print "\""$0"\"" }' | grep ' ' >&2); then
	printf '%s\n' "ERROR: Filename check failed due to spaces in above files!" >&2
	exit 1
fi

# Whitespace (depends on Git settings)
${GIT:-git} diff --check >&2 ||
	{
		printf '%s\n' "ERROR: Whitespace check failed in above files!" >&2
		exit 1
	}

# Whitespace (trailing, requires grep -E)
if ( (find . -name '*.[ch]' -exec grep -E "$(printf '\t')" "{}" -l \;) | grep . >&2); then
	printf '%s\n' "ERROR: Tabs check failed in above files!" >&2
	exit 1
fi

# Cpp indentation
if (command -v cppi > /dev/null 2>&1); then
	CPPISCAN="$(${MAKE:-make} cppiscan 2>&1 | grep '/' || true)"
	test -z "${CPPISCAN:-}" ||
		{
			printf '%s\n' "${CPPISCAN:?}" >&2
			printf '%s\n' "ERROR: Cppi check failed in above files!" >&2
			printf '%s\n' "       (Try \"${MAKE:-make} cppifix\" for auto fix)" >&2
			exit 1
		}
else
	printf '%s\n' 'WARNING: "cppi" not found in PATH - some checks skipped!' >&2
fi

# Tabs
if ( (find . -name '*.[ch]' -exec grep "$(printf '\t')" "{}" -l \;) | grep . >&2); then
	printf '%s\n' "ERROR: Tabs check failed in above files!" >&2
	exit 1
fi
