!SIZE 004640
000000 xxxx 004115702000        tsx2	rd_clock
000001 xxxx 000032757000        staq	Date        "MM/DD HH:MM
000002 xxxx 004316701000        call    ioa(msgHello, Date, Date+1)
000003 xxxx 000010710000
000004 xxxx 000000000000
000005 xxxx 000011000000
000006 xxxx 000032000000
000007 xxxx 000033000000
000010 xxxx 000040710000         tra BTD0
000011 xxxx 031124150151 msgHello:  acc         "This is TestEIS ...^g^g\r\n" 
000012 xxxx 163040151163  
000013 xxxx 040124145163  
000014 xxxx 164105111123  
000015 xxxx 040056056056  
000016 xxxx 136147136147  
000017 xxxx 015012040040  
000020 xxxx 015104141164 msg1:      acc         "Date: ^g^g \r\n" 
000021 xxxx 145072040136  
000022 xxxx 147136147040  
000023 xxxx 015012040040  
000024 xxxx 000000000012 Ten:    dec 10
000025 xxxx 021124150151 TENmsg: acc     /This is ^d ... \r\n/ 
000026 xxxx 163040151163  
000027 xxxx 040136144040  
000030 xxxx 056056056040  
000031 xxxx 015012040040  
000032 xxxx 000000000000 Date:   bss     2
000034 xxxx 017102124104 BTDmsg:    acc         "BTD Tests ...\r\n" 
000035 xxxx 040124145163  
000036 xxxx 164163040056  
000037 xxxx 056056015012  
000040 xxxx 004316701000         call    ioa(BTDmsg)
000041 xxxx 000044710000
000042 xxxx 000000000000
000043 xxxx 000034000000
000044 xxxx 000000301400         BTD     (),()
000045 xxxx 000056400002         NDSC9   FLD1a,2,2        " binary operand descriptor 
000046 xxxx 000057010004         NDSC9   FLD2a,0,4,1      " decimal operand descriptor 
000047 xxxx 004316701000         call    ioa(msg2, FLD2a, FLD2a)
000050 xxxx 000055710000
000051 xxxx 000000000000
000052 xxxx 000060000000
000053 xxxx 000057000000
000054 xxxx 000057000000
000055 xxxx 000075710000         tra     BTD2
000056 xxxx 777777777000 FLD1a:  dec     -512    " 7 7 7 7 7 7 7 7 7 0 0 0
000057 xxxx 000000000000 FLD2a:  bss     1       " 0 5 5 0 6 5 0 6 1 0 6 2
000060 xxxx 061122145163 msg2:   acc         "Result: ^n (^a) (Should be 055065061062 (-512))\r\n" 
000061 xxxx 165154164072  
000062 xxxx 040136156040  
000063 xxxx 050136141051  
000064 xxxx 040050123150  
000065 xxxx 157165154144  
000066 xxxx 040142145040  
000067 xxxx 060065065060  
000070 xxxx 066065060066  
000071 xxxx 061060066062  
000072 xxxx 040050055065  
000073 xxxx 061062051051  
000074 xxxx 015012040040  
000075 xxxx 000000301400         BTD     (),()
000076 xxxx 000220600001         NDSC9   FLD1b,3,1 
000077 xxxx 000221220003         NDSC9   FLD2b,1,3,2 
000100 xxxx 004316701000         call    ioa(msg2b, FLD2b, FLD2b)
000101 xxxx 000106710000
000102 xxxx 000000000000
000103 xxxx 000222000000
000104 xxxx 000221000000
000105 xxxx 000221000000
000106 xxxx 000107617000         tov     *+1         " reset OVR
000107 xxxx 000172710000         tra     BTD3
000110 xxxx 777777747707 N12345: dec     -12345
000111 xxxx 000000000000 errnum:     bss	,2
000113 xxxx 000000000000 errtemp:	bss	,16
000133 xxxx 000000000000 ertally:	bss	,1
000134 xxxx 000000000000 errarg:     bss	,1
000135 xxxx 000000000000 erlen:      bss	,1
000136 xxxx 401020403020 eredit_d:	vfd	9/lte+1,o9/20,9/lte+3,o9/20,9/lte+4,o9/52,9/mfls+10,9/enf
000137 xxxx 404052152040 
000140 xxxx 321000000000             vfd	9/mvc+1
000141 xxxx 065122145163 msg2_b:     acc /Result: ^n ^n (Should be 320000000001 043105000000)\r\n/ 
000142 xxxx 165154164072  
000143 xxxx 040136156040  
000144 xxxx 136156040050  
000145 xxxx 123150157165  
000146 xxxx 154144040142  
000147 xxxx 145040063062  
000150 xxxx 060060060060  
000151 xxxx 060060060060  
000152 xxxx 060061040060  
000153 xxxx 064063061060  
000154 xxxx 065060060060  
000155 xxxx 060060060051  
000156 xxxx 015012040040  
000157 xxxx 053122145163 msg2_c:     acc /Result: '^g^g' (Should be '      -12345')\r\n/ 
000160 xxxx 165154164072  
000161 xxxx 040047136147  
000162 xxxx 136147047040  
000163 xxxx 050123150157  
000164 xxxx 165154144040  
000165 xxxx 142145040047  
000166 xxxx 040040040040  
000167 xxxx 040040055061  
000170 xxxx 062063064065  
000171 xxxx 047051015012  
000172 xxxx 000110235000         lda     N12345
000173 xxxx 000134755000         sta     errarg
000174 xxxx 000000301400         btd     (),()       "convert decimal number
000175 xxxx 000134000004         desc9a	errarg,4 
000176 xxxx 000111050014         desc4ls	errnum,12 
000177 xxxx 004316701000         call    ioa(msg2_b, errnum, errnum+1)
000200 xxxx 000205710000
000201 xxxx 000000000000
000202 xxxx 000141000000
000203 xxxx 000111000000
000204 xxxx 000112000000
000205 xxxx 000000024400         mvne	(),(),()	"edit the output
000206 xxxx 000111050014         desc4ls	errnum,12 
000207 xxxx 000136000011         desc9a	eredit_d,9 
000210 xxxx 000113020014         desc6a	errtemp,12 
000211 xxxx 004316701000         call    ioa(msg2_c, errtemp, errtemp+1)
000212 xxxx 000217710000
000213 xxxx 000000000000
000214 xxxx 000157000000
000215 xxxx 000113000000
000216 xxxx 000114000000
000217 xxxx 000243710000         tra     DTB0
000220 xxxx 000000000377 FLD1b:  dec     255     " 0 0 0 0 0 0 0 0 0 3 7 7
000221 xxxx 000000000000 FLD2b:  bss     1       " 0 0 0 0 6 5 0 6 5 0 5 3
000222 xxxx 060122145163 msg2b:  acc         "Result: ^n (^a) (Should be 000065065053 (55+))\r\n" 
000223 xxxx 165154164072  
000224 xxxx 040136156040  
000225 xxxx 050136141051  
000226 xxxx 040050123150  
000227 xxxx 157165154144  
000230 xxxx 040142145040  
000231 xxxx 060060060060  
000232 xxxx 066065060066  
000233 xxxx 065060065063  
000234 xxxx 040050065065  
000235 xxxx 053051051015  
000236 xxxx 012040040040  
000237 xxxx 017104124102 DTBmsg:    acc         "DTB Tests ...\r\n" 
000240 xxxx 040124145163  
000241 xxxx 164163040056  
000242 xxxx 056056015012  
000243 xxxx 004316701000 DTB0:   call    ioa(DTBmsg)
000244 xxxx 000247710000
000245 xxxx 000000000000
000246 xxxx 000237000000
000247 xxxx 000000305400         DTB     (), ()
000250 xxxx 003322360005         NDSC4   FLD1c,3,5,2 
000251 xxxx 003324000004         NDSC9   FLD2c,0,4 
000252 xxxx 004316701000         call    ioa(msg3, FLD2c)
000253 xxxx 000257710000
000254 xxxx 000000000000
000255 xxxx 003257000000
000256 xxxx 003324000000
000257 xxxx 000000305400         DTB     (), ()
000260 xxxx 003325370003         NDSC4   FLD1d,3,3,3 
000261 xxxx 003326400002         NDSC9   FLD2d,2,2 
000262 xxxx 004316701000         call    ioa(msg4, FLD2d)
000263 xxxx 000267710000
000264 xxxx 000000000000
000265 xxxx 003271000000
000266 xxxx 003326000000
000267 xxxx 000000305400         DTB     (), ()
000270 xxxx 003327030004         NDSC9   FLD1e,0,4,3 
000271 xxxx 003330600001         NDSC9   FLD2e,3,1 
000272 xxxx 004316701000         call    ioa(msg5, FLD2e)
000273 xxxx 000277710000
000274 xxxx 000000000000
000275 xxxx 003303000000
000276 xxxx 003330000000
000277 xxxx 004316701000         call    ioa(MVNEmsg)
000300 xxxx 000303710000
000301 xxxx 000000000000
000302 xxxx 003315000000
000303 xxxx 000000024400         MVNE    (),(),()
000304 xxxx 003374020012         NDSC9   FLD1f,0,10,2 
000305 xxxx 003377000005         desc9a  FLD2f, 5 
000306 xxxx 003411000014         desc9a  FLD3f, 12 
000307 xxxx 004316701000         call    ioa(msg6, FLD3f, FLD3f+1, FLD3f+2)
000310 xxxx 000316710000
000311 xxxx 000000000000
000312 xxxx 003331000000
000313 xxxx 003411000000
000314 xxxx 003412000000
000315 xxxx 003413000000
000316 xxxx 000000024400         MVNE    (),(),()
000317 xxxx 003374020012         desc9ts FLD1f, 10 
000320 xxxx 003401000016         desc9a  FLD2f1, 14 
000321 xxxx 003414020014         desc6a  FLD3f1, 12      " 6-bit gebcd receiving string 
000322 xxxx 004316701000         call    ioa(msg7, FLD3f1, FLD3f1+1)
000323 xxxx 000330710000
000324 xxxx 000000000000
000325 xxxx 003345000000
000326 xxxx 003414000000
000327 xxxx 003415000000
000330 xxxx 000000024400         MVNE    (),(),()
000331 xxxx 003374020012         desc9ts FLD1f, 10 
000332 xxxx 003405000016         desc9a  FLD2f2, 14      " play around with $ and - 
000333 xxxx 003416000014         desc9a  FLD3f2, 12 
000334 xxxx 004316701000         call    ioa(msg8, FLD3f2, FLD3f2+1, FLD3f2+2)
000335 xxxx 000343710000
000336 xxxx 000000000000
000337 xxxx 003360000000
000340 xxxx 003416000000
000341 xxxx 003417000000
000342 xxxx 003420000000
000343 xxxx 000000024400         MVNE    (), (), ()      " with (*) protection & (.) insertion
000344 xxxx 003435060010         NDSC4   FLD1g,0,8,2 
000345 xxxx 003436000006         desc9a  FLD2g, 6 
000346 xxxx 003440000014         desc9a  FLD3g,12 
000347 xxxx 004316701000         call    ioa(msg9, FLD3g, FLD3g+1, FLD3g+2)
000350 xxxx 000356710000
000351 xxxx 000000000000
000352 xxxx 003421000000
000353 xxxx 003440000000
000354 xxxx 003441000000
000355 xxxx 003442000000
000356 xxxx 004316701000         call    ioa(MVEmsg)
000357 xxxx 000362710000
000360 xxxx 000000000000
000361 xxxx 003443000000
000362 xxxx 000000020400         MVE    (), (), ()       " move alphanumeric edited
000363 xxxx 003470220024         desc6a   FLD1h(2),20 
000364 xxxx 003474000031         desc9a   FLD2h,25       " example in DH02 had 35 - don't think so 
000365 xxxx 003503020036         desc6a   FLD3h,30 
000366 xxxx 004316701000         call    ioa(msg10, FLD3h, FLD3h+1, FLD3h+2, FLD3h+3, FLD3h+4) 
000367 xxxx 000377710000
000370 xxxx 000000000000
000371 xxxx 003447000000
000372 xxxx 003503000000
000373 xxxx 003504000000
000374 xxxx 003505000000
000375 xxxx 003506000000
000376 xxxx 003507000000
000377 xxxx 000000020400         MVE     (), (), ()      " move alphanumeric edited
000400 xxxx 003524000007         desc9a   FLD1i,7        " sending field operand descriptor 
000401 xxxx 003526000006         desc9a   FLD2i,6        " micro-op string operand descriptor 
000402 xxxx 003531200007         desc9a   FLD3i+1(1),7   " receiving field operand descriptor 
000403 xxxx 004316701000         call    ioa(msg11, FLD3i, FLD3i+1, FLD3i+2) 
000404 xxxx 000412710000
000405 xxxx 000000000000
000406 xxxx 003510000000
000407 xxxx 003530000000
000410 xxxx 003531000000
000411 xxxx 003532000000
000412 xxxx 004316701000         call    ioa(MLRmsg)
000413 xxxx 000416710000
000414 xxxx 000000000000
000415 xxxx 003533000000
000416 xxxx 020000100400         MLR     (),(),fill(20)     " move with blank fill
000417 xxxx 003555020014         desc6a  FLD1j,12           " sending descriptor 
000420 xxxx 003557420016         desc6a  FLD2j(4),14         " receiving descriptor 
000421 xxxx 004316701000         call    ioa(msg12, FLD2j, FLD2j+1, FLD2j+2)
000422 xxxx 000430710000
000423 xxxx 000000000000
000424 xxxx 003540000000
000425 xxxx 003557000000
000426 xxxx 003560000000
000427 xxxx 003561000000
000430 xxxx 400000100400         MLR     (),(),fill(400)
000431 xxxx 003600320011         desc6a  FLD1k(3),9 
000432 xxxx 003602640012         desc4a  FLD2k(6),10 
000433 xxxx 004316701000         call    ioa(msg13, FLD2k, FLD2k+1)
000434 xxxx 000441710000
000435 xxxx 000000000000
000436 xxxx 003562000000
000437 xxxx 003602000000
000440 xxxx 003603000000
000441 xxxx 000013223003         LDX3    =11, DU     " Original had DL which is wrong......
000442 xxxx 040000100413         MLR     (x3), (), fill(040)
000443 xxxx 003616200010         desc9a  FLD1l(1), 8 
000444 xxxx 003624000010         desc9a  FLD2l, 8 
000445 xxxx 004316701000         call    ioa(msg14, FLD2l, FLD2l+1)
000446 xxxx 000453710000
000447 xxxx 000000000000
000450 xxxx 003604000000
000451 xxxx 003624000000
000452 xxxx 003625000000
000453 xxxx 000004235007         LDA     =4,DL
000454 xxxx 000003236007         LDQ     =3,DL
000455 xxxx 040006100405         MLR     (al),(ql), fill(040)
000456 xxxx 003642000003         desc9A  FLD1m, 3 
000457 xxxx 003647400003         desc9a  FLD2m(2),3 
000460 xxxx 004316701000         call    ioa(msg15, FLD2m, FLD2m+1, FLD2m+2)
000461 xxxx 000467710000
000462 xxxx 000000000000
000463 xxxx 003626000000
000464 xxxx 003647000000
000465 xxxx 003650000000
000466 xxxx 003651000000
000467 xxxx 004633762400         LAR2    =0              " SET AR2 TO ALL 0'S
000470 xxxx 003670623000         EAX3    FLD2n
000471 xxxx 200000507413         AWDX    pr2|0,3         " AR2=address of Y
000472 xxxx 040100100404         MLR     (IC),(pr),fill(040)
000473 xxxx 003172200006         desc9a  FLD1n-*+1(1),6      " was desc9a  5(1),6 ("call" takes up many words....) 
000474 xxxx 200000000006         desc9a  pr2|0, 6 
000475 xxxx 004316701000         call    ioa(msg16, FLD2n, FLD2n+1)
000476 xxxx 000503710000
000477 xxxx 000000000000
000500 xxxx 003652000000
000501 xxxx 003670000000
000502 xxxx 003671000000
000503 xxxx 004316701000         call    ioa(MRLmsg)
000504 xxxx 000507710000
000505 xxxx 000000000000
000506 xxxx 003672000000
000507 xxxx 020000101400         MRL     (),(),fill(20)
000510 xxxx 003714020014         desc6a  FLD1o, 12            "ADSC6   FLD1,,12 
000511 xxxx 003716420016         desc6a  FLD2o(4), 14         "ADSC6   FLD2,4,14 
000512 xxxx 004316701000         call    ioa(msg17, FLD2o, FLD2o+1, FLD2o+2)
000513 xxxx 000521710000
000514 xxxx 000000000000
000515 xxxx 003677000000
000516 xxxx 003716000000
000517 xxxx 003717000000
000520 xxxx 003720000000
000521 xxxx 400000101400         MRL     (),(),fill(400)
000522 xxxx 003740320011         desc6a  FLD1p(3),9 
000523 xxxx 003742440014         desc4a  FLD2p(4),12 
000524 xxxx 004316701000         call    ioa(msg18, FLD2p, FLD2p+1)
000525 xxxx 000532710000
000526 xxxx 000000000000
000527 xxxx 003721000000
000530 xxxx 003742000000
000531 xxxx 003743000000
000532 xxxx 000764710000         tra     MVT0
000533 xxxx 017115126124 MVTmsg: acc     /MVT Tests ...\r\n/  
000534 xxxx 040124145163  
000535 xxxx 164163040056  
000536 xxxx 056056015012  
000537 xxxx 051122145163 msg19:  acc     /Result: '^n' (Should be '001043105155')\r\n/ 
000540 xxxx 165154164072  
000541 xxxx 040047136156  
000542 xxxx 047040050123  
000543 xxxx 150157165154  
000544 xxxx 144040142145  
000545 xxxx 040047060060  
000546 xxxx 061060064063  
000547 xxxx 061060065061  
000550 xxxx 065065047051  
000551 xxxx 015012040040  
000552 xxxx 202020202001 FLD1q:  bci     /     123456/ 
000553 xxxx 020304050620  
000554 xxxx 000000000000 FLD2q:  bss     1       " 0123456-      (Result)
000555 xxxx 000001002003 TABLE1: OCT     000001002003,004005006007  " 0X
000556 xxxx 004005006007
000557 xxxx 010011017017         OCT     010011017017,017017017017  " 1X
000560 xxxx 017017017017
000561 xxxx 000017017017         OCT     000017017017,017017017017  " 2X
000562 xxxx 017017017017
000563 xxxx 017017017017         OCT     017017017017,017017017017  " 3X
000564 xxxx 017017017017
000565 xxxx 017017017017         OCT     017017017017,017017017017  " 4X
000566 xxxx 017017017017
000567 xxxx 017017015017         OCT     017017015017,017017017017  " 5X
000570 xxxx 017017017017
000571 xxxx 014017017017         OCT     014017017017,017017017017  " 6X
000572 xxxx 017017017017
000573 xxxx 017017017017         OCT     017017017017,017017017017  " 7X
000574 xxxx 017017017017
000575 xxxx 051122145163 msg20:  acc     /Result: '^n' (Should be '022064126314')\r\n/ 
000576 xxxx 165154164072  
000577 xxxx 040047136156  
000600 xxxx 047040050123  
000601 xxxx 150157165154  
000602 xxxx 144040142145  
000603 xxxx 040047060062  
000604 xxxx 062060066064  
000605 xxxx 061062066063  
000606 xxxx 061064047051  
000607 xxxx 015012040040  
000610 xxxx 022064126317 FLD3q:  OCT     022064126317    " 123456++
000611 xxxx 000000000000 FLD4q:  BSS     1               " 022064126314  (Result)
000612 xxxx 000001002003 TAB:    OCT     000001002003,004005006007
000613 xxxx 004005006007
000614 xxxx 010011014014         OCT     010011014014,014015014014
000615 xxxx 014015014014
000616 xxxx 071122145163 msg21:  acc     "Result: '^a^a^a^a^a' (Should be 'TTYMESSAGE201     !!')\r\n" 
000617 xxxx 165154164072  
000620 xxxx 040047136141  
000621 xxxx 136141136141  
000622 xxxx 136141136141  
000623 xxxx 047040050123  
000624 xxxx 150157165154  
000625 xxxx 144040142145  
000626 xxxx 040047124124  
000627 xxxx 131115105123  
000630 xxxx 123101107105  
000631 xxxx 062060061040  
000632 xxxx 040040040040  
000633 xxxx 041041047051  
000634 xxxx 015012040040  
000635 xxxx 636370442562 FLD1r:  BCI     /TTYMESSAGE201      / 
000636 xxxx 622127250200  
000637 xxxx 012020202020  
000640 xxxx 202020202020  
000641 xxxx 000000000000 FLD2r:  BSS     5
000646 xxxx 060061062063 TABLE9: aci     '01234567'  " 0X 
000647 xxxx 064065066067  
000650 xxxx 070071133043         aci     '89[#@:>?'  " 1X 
000651 xxxx 100072076077  
000652 xxxx 040101102103         aci     ' ABCDEFG'  " 2X 
000653 xxxx 104105106107  
000654 xxxx 110111046056         aci     'HI&.](<\'  " 3X 
000655 xxxx 135050074107  
000656 xxxx 136112113114         aci     '^JKLMNOP'  " 4X 
000657 xxxx 115116117120  
000660 xxxx 121122055044         aci     "QR-$*);'"  " 5X 
000661 xxxx 052051073047  
000662 xxxx 054057123124         aci     ',/STUVWX'  " 6X  
000663 xxxx 125126127130  
000664 xxxx 131132137054         aci     'YZ_,%="!'  " 7X  
000665 xxxx 045075042041  
000666 xxxx 041122145163 msg22a: acc     /Result: '^a' (Should be '123M')\r\n/ 
000667 xxxx 165154164072  
000670 xxxx 040047136141  
000671 xxxx 047040050123  
000672 xxxx 150157165154  
000673 xxxx 144040142145  
000674 xxxx 040047061062  
000675 xxxx 063115047051  
000676 xxxx 015012040040  
000677 xxxx 041122145163 msg22b: acc     /Result: '^a' (Should be '1234')\r\n/ 
000700 xxxx 165154164072  
000701 xxxx 040047136141  
000702 xxxx 047040050123  
000703 xxxx 150157165154  
000704 xxxx 144040142145  
000705 xxxx 040047061062  
000706 xxxx 063064047051  
000707 xxxx 015012040040  
000710 xxxx 000015022064 P6a:    ac4     /   -1234/        "-1234 ——> 123M   (Yes, that's what it's supposed to be) 
000711 xxxx 000013022064 P6b:    ac4     /   +1234/        "+1234 ——> 1234 
000712 xxxx 323403000404 MOPS:   vfd     9/mvc+3,9/lte+3, o9/0, 9/lte+4  " MICROP  (MVC,3),(LTE,3)m1O000,(LTE,4),1O040,(MORS,1)
000713 xxxx 040361000000         vfd     o9/040, 9/mors+1
000714 xxxx 060061062063 TABLE22:aci     /01234567/        " 0X 
000715 xxxx 064065066067  
000716 xxxx 070071000000         VFD     A2/89,18/0,36/0  " 1X
000717 xxxx 000000000000 
000720 xxxx 000000000000         OCT     0,0               " 2X
000721 xxxx 000000000000
000722 xxxx 000000000000         OCT     0,0               " 3X
000723 xxxx 000000000000
000724 xxxx 040112113114         ACI     / JKLMNOP/        " 4X 
000725 xxxx 115116117120  
000726 xxxx 121122000000         VFD     A2/QR,18/0,36/0  " 5X
000727 xxxx 000000000000 
000730 xxxx 000000000000         OCT     0,0               " 6X
000731 xxxx 000000000000
000732 xxxx 000000000000         OCT     0,0               " 7X
000733 xxxx 000000000000
000734 xxxx 000000000000 PRTOUT: BSS     5
000741 xxxx 000000000000 APRINT: BSS     5
000746 xxxx 060061062063 DECTAB: aci     '0123456789+++-+F'  " decimal --> ascii 
000747 xxxx 064065066067  
000750 xxxx 070071053053  
000751 xxxx 053055053106  
000752 xxxx 047122145163 msg23:  acc     /Result: '^a^a' (Should be '-1234FFF')\r\n/ 
000753 xxxx 165154164072  
000754 xxxx 040047136141  
000755 xxxx 136141047040  
000756 xxxx 050123150157  
000757 xxxx 165154144040  
000760 xxxx 142145040047  
000761 xxxx 055061062063  
000762 xxxx 064106106106  
000763 xxxx 047051015012  
000764 xxxx 004316701000         call    ioa(MVTmsg)
000765 xxxx 000770710000
000766 xxxx 000000000000
000767 xxxx 000533000000
000770 xxxx 052000160400         MVT     (),(), fill(52)
000771 xxxx 000552420007         desc6a  FLD1q(4),7 
000772 xxxx 000554040010         desc4a  FLD2q,8 
000773 xxxx 000555000000         ARG     TABLE1
000774 xxxx 004316701000         call    ioa(msg19, FLD2q)
000775 xxxx 001001710000
000776 xxxx 000000000000
000777 xxxx 000537000000
001000 xxxx 000554000000
001001 xxxx 000000160400         MVT (), ()
001002 xxxx 000610040010         desc4a  FLD3q, 8     " ADSC4   FLD3,,8 
001003 xxxx 000611040010         desc4a  FLD4q, 8     " ADSC4   FLD4,,8 
001004 xxxx 000612000000         ARG     TAB
001005 xxxx 004316701000         call    ioa(msg20, FLD4q)
001006 xxxx 001012710000
001007 xxxx 000000000000
001010 xxxx 000575000000
001011 xxxx 000611000000
001012 xxxx 077000160400         MVT     (), (),  fill(77)    " ! fill
001013 xxxx 000635020022         desc6a  FLD1r, 18           " ADSC6   FLD1,0,18 
001014 xxxx 000641000024         desc9a  FLD2r, 20           " ADSC9   FLD2,0,20 
001015 xxxx 000646000000         ARG     TABLE9              " pointer to translation table
001016 xxxx 004316701000         call     ioa(msg21, FLD2r, FLD2r+1, FLD2r+2, FLD2r+3, FLD2r+4)
001017 xxxx 001027710000
001020 xxxx 000000000000
001021 xxxx 000616000000
001022 xxxx 000641000000
001023 xxxx 000642000000
001024 xxxx 000643000000
001025 xxxx 000644000000
001026 xxxx 000645000000
001027 xxxx 000000024400         MVNE     (), (), ()
001030 xxxx 000710350005         desc4ls  P6a(3),5    " NDSC4   6PACK,3,5,1 
001031 xxxx 000712000006         desc9a   MOPS, 6     " ADSC9   MOPS,0,6 
001032 xxxx 000734020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4 
001033 xxxx 000000160400         MVT      (), ()
001034 xxxx 000734020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4 
001035 xxxx 000741000004         desc9a   APRINT, 4   " ADSC9   APRINT,0,4 
001036 xxxx 000714000000         ARG      TABLE22
001037 xxxx 004316701000         call    ioa(msg22a, APRINT)
001040 xxxx 001044710000
001041 xxxx 000000000000
001042 xxxx 000666000000
001043 xxxx 000741000000
001044 xxxx 000000024400         MVNE     (), (), ()
001045 xxxx 000711350005         desc4ls  P6b(3),5      " NDSC4   6PACK,3,5,1 
001046 xxxx 000712000006         desc9a   MOPS, 6       " ADSC9   MOPS,0,6 
001047 xxxx 000734020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4 
001050 xxxx 000000160400         MVT      (), ()
001051 xxxx 000734020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4 
001052 xxxx 000742000004         desc9a   APRINT+1, 4   " ADSC9   APRINT,0,4 
001053 xxxx 000714000000         ARG      TABLE22
001054 xxxx 004316701000         call    ioa(msg22b, APRINT+1)
001055 xxxx 001061710000
001056 xxxx 000000000000
001057 xxxx 000677000000
001060 xxxx 000742000000
001061 xxxx 017000160400         MVT      (), (),  fill(017)
001062 xxxx 000710340005         desc4a   P6a(3), 5 
001063 xxxx 000741000010         desc9a   APRINT, 8 
001064 xxxx 000746000000         ARG      DECTAB
001065 xxxx 004316701000         call    ioa(msg23, APRINT, APRINT+1)
001066 xxxx 001073710000
001067 xxxx 000000000000
001070 xxxx 000752000000
001071 xxxx 000741000000
001072 xxxx 000742000000
001073 xxxx 001267710000         tra     SCM0
001074 xxxx 042123103115 SCMmsg: acc     /SCM Tests ... (Results 3, 0 & 7)\r\n/ 
001075 xxxx 040124145163  
001076 xxxx 164163040056  
001077 xxxx 056056040050  
001100 xxxx 122145163165  
001101 xxxx 154164163040  
001102 xxxx 063054040060  
001103 xxxx 040046040067  
001104 xxxx 051015012040  
001105 xxxx 035131157165 BADmsg: acc     /You should not see this....\r\n/ 
001106 xxxx 040163150157  
001107 xxxx 165154144040  
001110 xxxx 156157164040  
001111 xxxx 163145145040  
001112 xxxx 164150151163  
001113 xxxx 056056056056  
001114 xxxx 015012040040  
001115 xxxx 014122145163 msg24:  acc     /Result: ^d\r\n/ 
001116 xxxx 165154164072  
001117 xxxx 040136144015  
001120 xxxx 012040040040  
001121 xxxx 101102103104 FLD1s:  aci      /ABCD/     "141 142 143 144 (before mask) 
001122 xxxx 060060060064 FLD2s:  aci      /0004/     "064 (before mask) 
001123 xxxx 000000000000 FLD3s:  BSS      1          "004 (after mask)
001124 xxxx 000015022064 FLD1t:   ac4     /   -1234/         "EDEC     8P-1234   "0,1,2,3,4      -- which one do we believe? 
001125 xxxx 000000000000 FLD3t:   BSS     1
001126 xxxx 103041000000 FLD1u:  ac4  /4321    /     " EDEC  8PL4321  " 2 1 
001127 xxxx 000000011207 FLD2u:  ac4  /    0987/     " EDEC  4P0987   " 1 
001130 xxxx 000000000000 FLD3u:  BSS  1              " unmatched compare count - 1
001131 xxxx 400000040012 INDSC1u: desc4a  pr4|0, x2      "ADSC4 0,,X2,4    " FLD1 operand desc (FLD1,2,2) 
001132 xxxx 001127400001 INDSC2u: desc9a  FLD2u(2),1       "ADSC9 FLD2,0     " FLD2 operand desc (FLD2,1) 
001133 xxxx 022106157165 foundA: acc "Found an 'A' ...\r\n" 
001134 xxxx 156144040141  
001135 xxxx 156040047101  
001136 xxxx 047040056056  
001137 xxxx 056015012040  
001140 xxxx 021106157165 foundG: acc "Found a 'G' ...\r\n" 
001141 xxxx 156144040141  
001142 xxxx 040047107047  
001143 xxxx 040056056056  
001144 xxxx 015012040040  
001145 xxxx 021106157165 foundw: acc "Found a 'w' ...\r\n" 
001146 xxxx 156144040141  
001147 xxxx 040047167047  
001150 xxxx 040056056056  
001151 xxxx 015012040040  
001152 xxxx 022106157165 foundo: acc "Found an 'o' ...\r\n" 
001153 xxxx 156144040141  
001154 xxxx 156040047157  
001155 xxxx 047040056056  
001156 xxxx 056015012040  
001157 xxxx 021106157165 foundn: acc "Found a 'n' ...\r\n" 
001160 xxxx 156144040141  
001161 xxxx 040047156047  
001162 xxxx 040056056056  
001163 xxxx 015012040040  
001164 xxxx 021106157165 foundd: acc "Found a 'd' ...\r\n" 
001165 xxxx 156144040141  
001166 xxxx 040047144047  
001167 xxxx 040056056056  
001170 xxxx 015012040040  
001171 xxxx 022106157165 founda: acc "Found an 'a' ...\r\n" 
001172 xxxx 156144040141  
001173 xxxx 156040047141  
001174 xxxx 047040056056  
001175 xxxx 056015012040  
001176 xxxx 021106157165 foundg: acc "Found a 'g' ...\r\n" 
001177 xxxx 156144040141  
001200 xxxx 040047147047  
001201 xxxx 040056056056  
001202 xxxx 015012040040  
001203 xxxx 130130147130 SCM4in: aci     "XXgX" 
001204 xxxx 000000000000 SCM4tally:  bss 1
001205 xxxx 101107167157 erkey:  aci     "AGwondag" 
001206 xxxx 156144141147  
001207 xxxx 001217710000 ertable:tra     err_A
001210 xxxx 001224710000         tra     err_G
001211 xxxx 001231710000         tra     err_w
001212 xxxx 001236710000         tra     err_o
001213 xxxx 001243710000         tra     err_n
001214 xxxx 001250710000         tra     err_d
001215 xxxx 001255710000         tra     err_a
001216 xxxx 001262710000         tra     err_g
001217 xxxx 004316701000 err_A:  call    ioa(foundA)
001220 xxxx 001223710000
001221 xxxx 000000000000
001222 xxxx 001133000000
001223 xxxx 001340710000         tra     SCM4
001224 xxxx 004316701000 err_G:  call    ioa(foundG)
001225 xxxx 001230710000
001226 xxxx 000000000000
001227 xxxx 001140000000
001230 xxxx 001340710000         tra     SCM4
001231 xxxx 004316701000 err_w:  call    ioa(foundw)
001232 xxxx 001235710000
001233 xxxx 000000000000
001234 xxxx 001145000000
001235 xxxx 001340710000         tra     SCM4
001236 xxxx 004316701000 err_o:  call    ioa(foundo)
001237 xxxx 001242710000
001240 xxxx 000000000000
001241 xxxx 001152000000
001242 xxxx 001340710000         tra     SCM4
001243 xxxx 004316701000 err_n:  call    ioa(foundn)
001244 xxxx 001247710000
001245 xxxx 000000000000
001246 xxxx 001157000000
001247 xxxx 001340710000         tra     SCM4
001250 xxxx 004316701000 err_d:  call    ioa(foundd)
001251 xxxx 001254710000
001252 xxxx 000000000000
001253 xxxx 001164000000
001254 xxxx 001340710000         tra     SCM4
001255 xxxx 004316701000 err_a:  call    ioa(founda)
001256 xxxx 001261710000
001257 xxxx 000000000000
001260 xxxx 001171000000
001261 xxxx 001340710000         tra     SCM4
001262 xxxx 004316701000 err_g:  call    ioa(foundg)
001263 xxxx 001266710000
001264 xxxx 000000000000
001265 xxxx 001176000000
001266 xxxx 001340710000         tra     SCM4
001267 xxxx 004316701000         call    ioa(SCMmsg)
001270 xxxx 001273710000
001271 xxxx 000000000000
001272 xxxx 001074000000
001273 xxxx 760000124400         SCM     (),(), mask(760) "mask to eliminate zone bits
001274 xxxx 001121000004         desc9a  FLD1s,4         "character string operand desc 
001275 xxxx 001122600000         desc9a  FLD2s(3),0      "compare character operand desc 
001276 xxxx 001123000000         ARG     FLD3s           "pointer to unmatched count word
001277 xxxx 001305607000         TTF     GOT.IT          "match found - on 4th character
001300 xxxx 004316701000 NO.GOT: call    ioa(BADmsg)     "no match -  tally runout ON
001301 xxxx 001304710000
001302 xxxx 000000000000
001303 xxxx 001105000000
001304 xxxx 000000616000         dis
001305 xxxx 004316701000 GOT.IT: call    ioa(msg24, FLD3s)
001306 xxxx 001312710000
001307 xxxx 000000000000
001310 xxxx 001115000000
001311 xxxx 001123000000
001312 xxxx 000003124400         SCM      (),(DU)
001313 xxxx 001124340005         desc4a   FLD1t(3),5      "ADSC4    FLD1,3,5 
001314 xxxx 321000000000         ac4      /-1      /      "EDEC     8PL-1 
001315 xxxx 001125000000         ARG      FLD3t
001316 xxxx 001300606400         TTN      NO.GOT
001317 xxxx 004316701000         call    ioa(msg24, FLD3t)
001320 xxxx 001324710000
001321 xxxx 000000000000
001322 xxxx 001115000000
001323 xxxx 001125000000
001324 xxxx 000000124400         scm     (),()           "search table of keys
001325 xxxx 001205000010         desc9a	erkey,8 
001326 xxxx 001203400001         desc9a  SCM4in(2),1 
001327 xxxx 001204000000         arg     SCM4tally
001330 xxxx 001300606400         ttn     NO.GOT          "tra if not legal key
001331 xxxx 004316701000         call    ioa (msg24, SCM4tally)
001332 xxxx 001336710000
001333 xxxx 000000000000
001334 xxxx 001115000000
001335 xxxx 001204000000
001336 xxxx 001204236000         ldq     SCM4tally		" get character key index
001337 xxxx 001207710026         tra     ertable,ql* " dispatch on key
001340 xxxx 001357710000         tra     SCMR0
001341 xxxx 037123103115 SCMRmsg: acc     /SCMR Tests (Results 3 & 4)...\r\n/ 
001342 xxxx 122040124145  
001343 xxxx 163164163040  
001344 xxxx 050122145163  
001345 xxxx 165154164163  
001346 xxxx 040063040046  
001347 xxxx 040064051056  
001350 xxxx 056056015012  
001351 xxxx 145103041320 FLD1v:   ac4     /654321- /       " EDEC      8PL654321-   6, 5, 4, 3, 2, 1 
001352 xxxx 000000000000 FLD3v:   DEC     0                " result - match found on 4th character
001353 xxxx 001043105155 FLD1w:  ac4      /0123456-/         " 2,3,4,5,6,- 
001354 xxxx 000000000000 FLD3w:  DEC      0                  " unmatched compare count - 4
001355 xxxx 400000040016         desc4a   pr4|0,x6           " FLD1 operand desc(FLD 1,2,6) 
001356 xxxx 060000000000 FLD2w:  ac4      /3       /         " FLD2 compare character 3 
001357 xxxx 004316701000         call    ioa(SCMRmsg)
001360 xxxx 001363710000
001361 xxxx 000000000000
001362 xxxx 001341000000
001363 xxxx 760003125400         SCMR    (),(DU), mask(760)     " DU type register mod with mask
001364 xxxx 001351040006         desc4a  FLD1v, 6               " character string operand desc 
001365 xxxx 100000000000         ac4     /4       /             " 1P4 FLD2's compare character - 4 
001366 xxxx 001352000000         ARG     FLD3v                  " pointer to unmatched count word
001367 xxxx 001300606400         TTN     NO.GOT
001370 xxxx 004316701000         call    ioa (msg24, FLD3v)
001371 xxxx 001375710000
001372 xxxx 000000000000
001373 xxxx 001115000000
001374 xxxx 001352000000
001375 xxxx 000006626000         EAX6     6                  " load FLD1 length (-2) into x6
001376 xxxx 000002622000         EAX2     2                  " load character modifier into x2
001377 xxxx 001353624000         EAX4     FLD1w              " load FLD1 address into x4
001400 xxxx 400000507414         AWDX     pr4|0,4            " put FLD1 address into AR4
001401 xxxx 760000125572         SCMR     (pr,rl,id,x2),(), mask(760)        " with all options
001402 xxxx 001355000000         ARG      FLD3w+1            " pointer to FLD1 indirect desc
001403 xxxx 001356040000         desc4a   FLD2w              " pointer to compare character 
001404 xxxx 001354000000         ARG      FLD3w              " pointer to unmatched count word
001405 xxxx 001300606400         TTN      NO.GOT             " no match - tally runout ON
001406 xxxx 004316701000         call    ioa (msg24, FLD3w)
001407 xxxx 001413710000
001410 xxxx 000000000000
001411 xxxx 001115000000
001412 xxxx 001354000000
001413 xxxx 004316701000         call    ioa(TCTmsg)
001414 xxxx 001417710000
001415 xxxx 000000000000
001416 xxxx 003744000000
001417 xxxx 000000164400         TCT      ()         "     no modification
001420 xxxx 003766020014         desc6a   FLD1x,12   " indexing string operand descr. 
001421 xxxx 003771000000         ARG      TABLEx     " pointer to table
001422 xxxx 003770000000         ARG      FLD3x      " pointer to char. & count word
001423 xxxx 001300606400         TTN     NO.GOT
001424 xxxx 004316701000         call    ioa (msg24o, FLD3x)
001425 xxxx 001431710000
001426 xxxx 000000000000
001427 xxxx 003762000000
001430 xxxx 003770000000
001431 xxxx 000002622000         EAX2     2           " put 2 into X2
001432 xxxx 003776623000         EAX3     FLD1y       " put FLD1 address into X3
001433 xxxx 000006626000         EAX6     6           " put 6 into X6
001434 xxxx 700000507413         AWDX     pr7|0,3     " put FLD1 address into AR7
001435 xxxx 000000164572         TCT      (pr,rl,id,x2)   " with all modification options
001436 xxxx 004001000000         ARG      INDSCRy     " ptr. indirect operand descr.
001437 xxxx 004002000000         ARG      TABLEy
001440 xxxx 004000000000         ARG      FLD3y       " pointer to FLD3
001441 xxxx 001300606400         TTN     NO.GOT
001442 xxxx 004316701000         call    ioa (msg24o, FLD3y)
001443 xxxx 001447710000
001444 xxxx 000000000000
001445 xxxx 003762000000
001446 xxxx 004000000000
001447 xxxx 004316701000         call    ioa(TCTRmsg)
001450 xxxx 001453710000
001451 xxxx 000000000000
001452 xxxx 004021000000
001453 xxxx 000000165400         TCTR                " no modification
001454 xxxx 004033640012         desc4a  FLD1z(6),10 " indexing string operand descr 
001455 xxxx 004036000000         ARG     TABLEz      " pointer to table
001456 xxxx 004035000000         ARG     FLD3z       " pointer to char. & count word
001457 xxxx 001300607000         TTF     NO.GOT      " nonzero found
001460 xxxx 004316701000         call    ioa (msg24o, FLD3z)
001461 xxxx 001465710000
001462 xxxx 000000000000
001463 xxxx 003762000000
001464 xxxx 004035000000
001465 xxxx 004316701000         call    ioa (CMPCmsg)
001466 xxxx 001471710000
001467 xxxx 000000000000
001470 xxxx 004042000000
001471 xxxx 020000106400         CMPC    (), (), fill(020)       " compare with blank fill
001472 xxxx 004054020006         desc6a  FLD1aa,6    " field 1 operand descriptor 
001473 xxxx 004055420004         desc6a  FLD2aa(4),4 " field 2 operand descriptor 
001474 xxxx 001477600000         TZE     EQUALaa     " both fields equal
001475 xxxx 001300603000         TRC     NO.GOT      " field 1 greater
001476 xxxx 001300710000         TRA     NO.GOT      " field 1 less
001477 xxxx 004316701000 EQUALaa:call    ioa(msg25)
001500 xxxx 001503710000
001501 xxxx 000000000000
001502 xxxx 004047000000
001503 xxxx 001513710000         TRA     SCD0
001504 xxxx 032123103104 SCDmsg:    acc     "SCD Tests ... 5, 16, & 3\r\n" 
001505 xxxx 040124145163  
001506 xxxx 164163040056  
001507 xxxx 056056040065  
001510 xxxx 054040061066  
001511 xxxx 054040046040  
001512 xxxx 063015012040  
001513 xxxx 004316701000         call    ioa (SCDmsg)
001514 xxxx 001517710000
001515 xxxx 000000000000
001516 xxxx 001504000000
001517 xxxx 000000120400         SCD
001520 xxxx 001532020006         desc6a   FLD1ab,6 
001521 xxxx 001533020000         desc6a   FLD2ab(3) 
001522 xxxx 001534000000         ZERO     FLD3ab
001523 xxxx 001300607000         TTF      NO.GOT     " If we get a match
001524 xxxx 004316701000         call    ioa (msg24o, FLD3ab)
001525 xxxx 001531710000
001526 xxxx 000000000000
001527 xxxx 003762000000
001530 xxxx 001534000000
001531 xxxx 001535710000         TRA     NEXT
001532 xxxx 010203040506 FLD1ab:  BCI      /123456/    " 123456 
001533 xxxx 060504030201 FLD2ab:  BCI      /654321/    " 32 
001534 xxxx 000000000000 FLD3ab:  BSS      1           " unmatched count - 5
001535 xxxx 000000120400        SCD                 "with no options
001536 xxxx 004057020030        desc6a  DATA,24     "24 characters fetched from lower 
001537 xxxx 004064020002        desc6a  COMP,2      "DATA in units of 2 chars. and 
001540 xxxx 004063000000        ARG     COUNT       "compared with HH when HH found in
001541 xxxx 001300606400        TTN     NO.GOT      " no match found
001542 xxxx 004316701000        call    ioa (msg24o, COUNT)
001543 xxxx 001547710000
001544 xxxx 000000000000
001545 xxxx 003762000000
001546 xxxx 004063000000
001547 xxxx 000005625000        EAX5     5        " load 5 into X5
001550 xxxx 000007627000        EAX7     7        " load 7 into X7
001551 xxxx 004065624000        EAX4     FLD1ad   " load FLD1 address into X4
001552 xxxx 400000507414        AWDX     pr4|0,4  " put FLD1 address into AR4
001553 xxxx 000003120555        SCD      (pr,rl,x5),(DU)
001554 xxxx 400000000017        desc9a   pr4|0,X7 " FLD1 operand pointer (FLD1+1,1,7) 
001555 xxxx 064065000000 FLD2ad:VFD      A2/45    " FLD2 operand  " ahould be A18
001556 xxxx 004070000000        ARG      FLD3ad   " pointer to count FLD3
001557 xxxx 001300606400        TTN      NO.GOT
001560 xxxx 004316701000        call    ioa (msg24o, FLD3ad)
001561 xxxx 001565710000
001562 xxxx 000000000000
001563 xxxx 003762000000
001564 xxxx 004070000000
001565 xxxx 001574710000         tra     SCDR0
001566 xxxx 026123103104 SCDRmsg:    acc     "SCDR Tests ... 6 & 3\r\n" 
001567 xxxx 122040124145  
001570 xxxx 163164163040  
001571 xxxx 056056056040  
001572 xxxx 066040046040  
001573 xxxx 063015012040  
001574 xxxx 004316701000        call    ioa(SCDRmsg)
001575 xxxx 001600710000
001576 xxxx 000000000000
001577 xxxx 001566000000
001600 xxxx 000003121400        SCDR     (),(DU)       " DU modification of FLD2 operand descriptor
001601 xxxx 001613000010        desc9a   FLD1ae,8      " scanned string operand descriptor 
001602 xxxx 101102000000        VFD      A2/AB         " FLD2 character pair - A B
001603 xxxx 001615000000        ARG      FLD3ae        " pointer count word
001604 xxxx 001300606400        TTN      NO.GOT        " match not found - tally runout ON
001605 xxxx 004316701000        call    ioa (msg24o, FLD3ae)
001606 xxxx 001612710000
001607 xxxx 000000000000
001610 xxxx 003762000000
001611 xxxx 001615000000
001612 xxxx 001616710000         tra    SCDR2
001613 xxxx 101102103104 FLD1ae:aci      /ABCDE/       " A,B,C,D,E, 
001614 xxxx 105000000000  
001615 xxxx 000000000000 FLD3ae:BSS      1             " unmatched count - 6
001616 xxxx 000001622000        EAX2     1           " load 1 into x2
001617 xxxx 001634623000        EAX3     FLD1af      " load FLD1 address into X3
001620 xxxx 400000507413        AWDX     PR4|0,3     " put FLD1 address into AR4
001621 xxxx 000003121512        SCDR     (pr,x2),(DU) " with address modification
001622 xxxx 400000040007        desc4a   pr4|0,7     " FLD1 operand descriptor - (FLD 1,1,7) (7 is length not x7) 
001623 xxxx 043000000000        ac4      /23/        " FLD2 operand descriptor pointer 
001624 xxxx 001635000000        ARG      FLD3af      " pointer to count word
001625 xxxx 001300606400        TTN      NO.GOT      " no match - tally runout ON
001626 xxxx 004316701000        call    ioa (msg24o, FLD3af)
001627 xxxx 001633710000
001630 xxxx 000000000000
001631 xxxx 003762000000
001632 xxxx 001635000000
001633 xxxx 001636710000        tra     CMPB0
001634 xxxx 000022064126 FLD1af:ac4      /  123456/    " 0123456 VS 23 
001635 xxxx 000000000000 FLD3af:BSS      1             " unmatched count - 3
001636 xxxx 004316701000 CMPB0:  call    ioa(CMPBmsg)
001637 xxxx 001642710000
001640 xxxx 000000000000
001641 xxxx 004071000000
001642 xxxx 400000066400 CMPB1:  CMPB    (),(),fill(1)       " fill bit 1 option
001643 xxxx 001647000055         descb   FLD1ag, 45 
001644 xxxx 001651000060         descb   FLD2ag,48 
001645 xxxx 001653603000         TRC     EQU.GR              " FLD1 equal/greater than FLD2
001646 xxxx 001300710000         TRA     NO.GOT
001647 xxxx 000000000000 FLD1ag: OCT     0,777700000000      " 0000000000007777
001650 xxxx 777700000000
001651 xxxx 000000000000 FLD2ag: OCT     0,777000000000      " 0000000000007770
001652 xxxx 777000000000
001653 xxxx 004316701000 EQU.GR: call ioa(msg26)
001654 xxxx 001657710000
001655 xxxx 000000000000
001656 xxxx 004076000000
001657 xxxx 000000066400 CMPB2:  CMPB                        " no options
001660 xxxx 001665000044         descb   FLD1ah, 36 
001661 xxxx 001666230023         descb   FLD2ah(12), 19 
001662 xxxx 001300600000         TZE     NO.GOT              " FLD1 = FLD2
001663 xxxx 001300603000         TRC     NO.GOT              " FLD1 > FLD2
001664 xxxx 001667710000         TRA     FLD1LS              " FLD1 < FLD2
001665 xxxx 777777000000 FLD1ah: VFD     18/-1               " 777777000000
001666 xxxx 000077777740 FLD2ah: VFD     12/0,19/-1          " 777777400000
001667 xxxx 004316701000 FLD1LS: call ioa(msg27)
001670 xxxx 001673710000
001671 xxxx 000000000000
001672 xxxx 004103000000
001673 xxxx 000014622000         EAX2    12          " load FLD1 bit modifier into X2
001674 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
001675 xxxx 001704624000         EAX4    FLD1ai      " load FLD1 address into X4
001676 xxxx 400000507414         AWDX    4|0,4       " put FLD1 address into AR4
001677 xxxx 000020066552         CMPB    (pr,rl,x2),(id)
001700 xxxx 400000000016         descb   pr4|0,x6  " FLD1 operand descriptor 
001701 xxxx 001706000000         ARG     INDSCR      " FLD2 indirect descriptor ptr.
001702 xxxx 001707600000         TZE     EQUAL       " FLD1 = FLD2
001703 xxxx 001300710000         TRA     NO.GOT
001704 xxxx 000001000000 FLD1ai: VFD     12/0,6/1   " 770 000077000000 [sic]
001705 xxxx 000000000100 FLD2ai: VFD     24/0,6/1   " 770 000000007700 [sic]
001706 xxxx 001705460011 INDSCR: BDSC    FLD2ai,9,2,6 
001707 xxxx 004316701000 EQUAL:  call     ioa(msg28)
001710 xxxx 001713710000
001711 xxxx 000000000000
001712 xxxx 004110000000
001713 xxxx 001720710000         tra     CSL0
001714 xxxx 017103123114 CSLmsg:    acc     "CSL Tests ...\r\n" 
001715 xxxx 040124145163  
001716 xxxx 164163040056  
001717 xxxx 056056015012  
001720 xxxx 004316701000          call    ioa(CSLmsg)
001721 xxxx 001724710000
001722 xxxx 000000000000
001723 xxxx 001714000000
001724 xxxx 007400060400         CSL     (),(),bool(07),enablefault " OR - truncation enable option
001725 xxxx 001735230030         descb   FLD1aj(12), 24      " FLD1 operand descriptor 
001726 xxxx 001736000022         descb   FLD2aj, 18          " FLD2 operand descriptor 
001727 xxxx 004316701000         call    ioa (msg24o, FLD2aj)
001730 xxxx 001734710000
001731 xxxx 000000000000
001732 xxxx 003762000000
001733 xxxx 001736000000
001734 xxxx 001737710000         tra     CSL2
001735 xxxx 000077777700 FLD1aj: VFD      12/0,18/-1,6/0     " 000077777700
001736 xxxx 000000235012 FLD2aj: LDA      0,2                " 000000235012
001737 xxxx 406000060400         CSL     (),(),bool(06),fill(1)      " exclusive OR, fill bit 1 opt
001740 xxxx 000000000000         descb   0, 0         " FLD1 operand descriptor (0-length field) 
001741 xxxx 001750400022         descb   FLD2ak(18),18  " FLD2 operand descriptor 
001742 xxxx 004316701000         call    ioa (msg24o, FLD2ak)
001743 xxxx 001747710000
001744 xxxx 000000000000
001745 xxxx 003762000000
001746 xxxx 001750000000
001747 xxxx 001751710000         tra     CSL3
001750 xxxx 000000000000 FLD2ak: DEC     0           " 000000000000
001751 xxxx 000014626000         EAX6    12              " char/bit address mod to X6
001752 xxxx 000066627000         EAX7    54              " load FLD2 length into X7
001753 xxxx 001773624000         EAX4    FLD2al          " load FLD2 address into X4
001754 xxxx 400000507414         AWDX    pr4|0,4         " put FLD2 address into AR4
001755 xxxx 000156060420         CSL     (id),(ar,rl,x6) " clear operation with address modifications
001756 xxxx 000002000014         ARG     2,4             " pointer to FLD1 indirect operand descriptor
001757 xxxx 400000000017         descb   pr4|0, x7       " FLD2 operand descriptor (FLD2,54,1,3) 
001760 xxxx 004316701000         call    ioa (msg24o, FLD2al)
001761 xxxx 001765710000
001762 xxxx 000000000000
001763 xxxx 003762000000
001764 xxxx 001773000000
001765 xxxx 004316701000         call    ioa (msg24o, FLD2al+1)
001766 xxxx 001772710000
001767 xxxx 000000000000
001770 xxxx 003762000000
001771 xxxx 001774000000
001772 xxxx 002002710000         tra     CSR0
001773 xxxx 777777777777 FLD2al: VFD      36/-1,36/-1    " 777777777777
001774 xxxx 777777777777 
001775 xxxx 000000000000         BDSC    ,0              " FLD1 operand descriptor (control field zeros) 
001776 xxxx 017103123122 CSRmsg: acc     "CSR Tests ...\r\n" 
001777 xxxx 040124145163  
002000 xxxx 164163040056  
002001 xxxx 056056015012  
002002 xxxx 004316701000         call    ioa(CSRmsg)
002003 xxxx 002006710000
002004 xxxx 000000000000
002005 xxxx 001776000000
002006 xxxx 014400061400         CSR     (),(),bool(14),enablefault  " invert with truncation fault enable option
002007 xxxx 002017400022         descb   FLD1am(18),18   " FLD1 operand descriptor 
002010 xxxx 002020000014         descb   FLD2am,12       " FLD2 operand descriptor 
002011 xxxx 004316701000         call    ioa(msg24o, FLD2am)
002012 xxxx 002016710000
002013 xxxx 000000000000
002014 xxxx 003762000000
002015 xxxx 002020000000
002016 xxxx 002021710000         tra     CSR2
002017 xxxx 000000444444 FLD1am: OCT     444444          " 000000444444
002020 xxxx 000000000000 FLD2am: DEC     0               " 333300000000  (Result)
002021 xxxx 017000061400         CSR     (),(),bool(17)  " force ones operation
002022 xxxx 000000000000         BDSC    ,0              " FLD1 operand descriptor 
002023 xxxx 002032000044         BDSC    FLD2an,36,0,0   " FLD2 operand descriptor 
002024 xxxx 004316701000         call    ioa(msg24o, FLD2an)
002025 xxxx 002031710000
002026 xxxx 000000000000
002027 xxxx 003762000000
002030 xxxx 002032000000
002031 xxxx 002046710000         tra     SZTL0
002032 xxxx 000000000000 FLD2an: BSS     1               " 777777777777   (Result)
002033 xxxx 020123132124 SZTLmsg:   acc  "SZTL Tests ...\r\n" 
002034 xxxx 114040124145  
002035 xxxx 163164163040  
002036 xxxx 056056056015  
002037 xxxx 012040040040  
002040 xxxx 013061056040 msg29:     acc  "1. Passed\r\n" 
002041 xxxx 120141163163  
002042 xxxx 145144015012  
002043 xxxx 013062056040 msg30:     acc  "2. Passed\r\n" 
002044 xxxx 120141163163  
002045 xxxx 145144015012  
002046 xxxx 004316701000        call     ioa(SZTLmsg)
002047 xxxx 002052710000
002050 xxxx 000000000000
002051 xxxx 002033000000
002052 xxxx 006000064400         SZTL     (),(),bool(6)   " exclusive OR operation
002053 xxxx 002060000044         BDSC     FLD1ao,36,0,0   " FLD1 operand descriptor 
002054 xxxx 002061010043         BDSC     FLD2ao,35,0,1   " FLD2 operand descriptor 
002055 xxxx 001300601000         TNZ      NO.GOT          " zero should be ON
002056 xxxx 002062600400         TRTN     SZTL1b          " truncation indicator ON
002057 xxxx 001300710000         TRA      NO.GOT          " memory contents in octal
002060 xxxx 777777777777 FLD1ao: DEC      -1              " 777777777777
002061 xxxx 777777777777 FLD2ao: DEC      -1              " 777777777777
002062 xxxx 004316701000         call    ioa(msg29)
002063 xxxx 002066710000
002064 xxxx 000000000000
002065 xxxx 002040000000
002066 xxxx 000000634007        LDI      0,DL        
002067 xxxx 777777227003        LDX7     -1,DU           " load negative value into X7
002070 xxxx 002076754000        STI      FLD1ap          " store processor indicators
002071 xxxx 001000064400        SZTL     (),(),bool(1)   " AND operation
002072 xxxx 002076410001        descb    FLD1ap(19),1    " FLD1 operand descriptor 
002073 xxxx 002077410001        descb    FLD2ap(19),1    " FLD2 operand descriptor 
002074 xxxx 001300600000        TZE      NO.GOT          " If ZERO is ON then this is an error. not zero - neg indicator ON
002075 xxxx 002100710000        TRA      SZTL2b          " memory contents in octal
002076 xxxx 000000000000 FLD1ap:BSS      1               " x x x x x x 2 0 0 0 0 0
002077 xxxx 000000200000 FLD2ap:oct      200000          " 0 0 0 0 0 0 2 0 0 0 0 0
002100 xxxx 004316701000         call    ioa(msg30)
002101 xxxx 002104710000
002102 xxxx 000000000000
002103 xxxx 002043000000
002104 xxxx 002120710000         tra     SZTR0
002105 xxxx 021123132124 SCTRmsg: acc    "SZTR Tests ....\r\n" 
002106 xxxx 122040124145  
002107 xxxx 163164163040  
002110 xxxx 056056056056  
002111 xxxx 015012040040  
002112 xxxx 013061056040 msg31:   acc    "1. Passed\r\n" 
002113 xxxx 120141163163  
002114 xxxx 145144015012  
002115 xxxx 013062056040 msg32:   acc    "2. Passed\r\n" 
002116 xxxx 120141163163  
002117 xxxx 145144015012  
002120 xxxx 004316701000         call    ioa(SCTRmsg)
002121 xxxx 002124710000
002122 xxxx 000000000000
002123 xxxx 002105000000
002124 xxxx 003400065400        SZTR     (),(),bool(3),enablefault       " evaluate FLD1 as is (move)
002125 xxxx 002131410001        descb    FLD1aq(19),1    " FLD1 operand descr. (bit 19) 
002126 xxxx 000000000001        descb    0,1             " FLD2 operand descriptor 
002127 xxxx 001300600000        TZE      NO.GOT          " if ZERO it's an error
002130 xxxx 002132710000        TRA      SZTR1b
002131 xxxx 000000200000 FLD1aq:  oct      200000     " 0 0 0 0 0 0 2 0 0 0 0 0
002132 xxxx 004316701000 SZTR1b: call    ioa(msg31)
002133 xxxx 002136710000
002134 xxxx 000000000000
002135 xxxx 002112000000
002136 xxxx 004316701000         call    ioa(msg24o, FLD1aq)
002137 xxxx 002143710000
002140 xxxx 000000000000
002141 xxxx 003762000000
002142 xxxx 002131000000
002143 xxxx 000000634007         LDI     0,DL       " clear processor indicators
002144 xxxx 000000227003         LDX7    0,DU       " load zeros into X7
002145 xxxx 002164754000         STI     FLD1ar     " store processor indicators
002146 xxxx 014000065400         SZTR    (),(),bool(14) " invert
002147 xxxx 002164400001         descb   FLD1ar(18),1 " FLD1 operand descr. (bit 18) 
002150 xxxx 000000000001         BDSC    0,1        " FLD2 operand descriptor 
002151 xxxx 001300601000         TNZ     NO.GOT     " zero indicator ON
002152 xxxx 004316701000         call     ioa(msg32)
002153 xxxx 002156710000
002154 xxxx 000000000000
002155 xxxx 002115000000
002156 xxxx 004316701000         call    ioa(msg24o, FLD1ar)
002157 xxxx 002163710000
002160 xxxx 000000000000
002161 xxxx 003762000000
002162 xxxx 002164000000
002163 xxxx 002243710000         tra     EISdec0
002164 xxxx 000000000000 FLD1ar: dec     0           " x x x x x x 4 0 0 0 0 0
002165 xxxx 021101104062 AD2Dmsg:    acc     "AD2D Tests ....\r\n" 
002166 xxxx 104040124145  
002167 xxxx 163164163040  
002170 xxxx 056056056056  
002171 xxxx 015012040040  
002172 xxxx 070061056040 msg33:      acc     /1. Result: ^n ^n (Should be 053071070066 063066066000)\r\n/ 
002173 xxxx 122145163165  
002174 xxxx 154164072040  
002175 xxxx 136156040136  
002176 xxxx 156040050123  
002177 xxxx 150157165154  
002200 xxxx 144040142145  
002201 xxxx 040060065063  
002202 xxxx 060067061060  
002203 xxxx 067060060066  
002204 xxxx 066040060066  
002205 xxxx 063060066066  
002206 xxxx 060066066060  
002207 xxxx 060060051015  
002210 xxxx 012040040040  
002211 xxxx 070062056040 msg34:      acc     /2. Result: ^n ^n (Should be 053061063063 064000000000)\r\n/ 
002212 xxxx 122145163165  
002213 xxxx 154164072040  
002214 xxxx 136156040136  
002215 xxxx 156040050123  
002216 xxxx 150157165154  
002217 xxxx 144040142145  
002220 xxxx 040060065063  
002221 xxxx 060066061060  
002222 xxxx 066063060066  
002223 xxxx 063040060066  
002224 xxxx 064060060060  
002225 xxxx 060060060060  
002226 xxxx 060060051015  
002227 xxxx 012040040040  
002230 xxxx 050063056040 msg35:      acc     /3. Result: ^n (Should be 001023105153)\r\n/ 
002231 xxxx 122145163165  
002232 xxxx 154164072040  
002233 xxxx 136156040050  
002234 xxxx 123150157165  
002235 xxxx 154144040142  
002236 xxxx 145040060060  
002237 xxxx 061060062063  
002240 xxxx 061060065061  
002241 xxxx 065063051015  
002242 xxxx 012040040040  
002243 xxxx 004316701000             call    ioa (AD2Dmsg)
002244 xxxx 002247710000
002245 xxxx 000000000000
002246 xxxx 002165000000
002247 xxxx 000200202400             ad2d    (), (), round
002250 xxxx 002261227607             ndsc9   FLD1as,1,7,2,-2 
002251 xxxx 002263000010             ndsc9   FLD2as,0,8 
002252 xxxx 004316701000             call    ioa(msg33, FLD2as, FLD2as+1)
002253 xxxx 002260710000
002254 xxxx 000000000000
002255 xxxx 002172000000
002256 xxxx 002263000000
002257 xxxx 002264000000
002260 xxxx 002265710000             tra     AD2D2
002261 xxxx 040061062063 FLD1as:     aci     / 123450-/      " -1234.50 
002262 xxxx 064065060055  
002263 xxxx 053060060071 FLD2as:     aci     /+009/ 
002264 xxxx 070067066002             vfd     a3/876,9/2
002265 xxxx 000400202400             AD2D    (), (), enablefault "with truncation enable option
002266 xxxx 002277067610             NDSC4   FLD1at,0,8,2,-2     "FLD1 addend operand descriptor 
002267 xxxx 002300000006             NDSC9   FLD2at,0,6          "FLD2 addend operand descriptor memory contents 
002270 xxxx 004316701000             call    ioa(msg34, FLD2at, FLD2at+1)
002271 xxxx 002276710000
002272 xxxx 000000000000
002273 xxxx 002211000000
002274 xxxx 002300000000
002275 xxxx 002301000000
002276 xxxx 002302710000             tra     AD2D3
002277 xxxx 001043105153 FLD1at:     ac4     /0123456+/      "0123456+ 
002300 xxxx 053060060060 FLD2at:     vfd     a4/+000,a1/1, 9/2   "+00012
002301 xxxx 061002000000 
002302 xxxx 400000202400             AD2D    (),(),ascii     "   with plus sign octal 13 option
002303 xxxx 002313000004             NDSC9   FLD1au,0,4      "FLD1 addend operand descriptor 
002304 xxxx 002314167407             NDSC4   FLD2au,1,7,2,-4 "FLD2 addend operand descriptor 
002305 xxxx 004316701000             call    ioa(msg35, FLD2au)
002306 xxxx 002312710000
002307 xxxx 000000000000
002310 xxxx 002230000000
002311 xxxx 002314000000
002312 xxxx 002346710000             TRA     AD3D0
002313 xxxx 053071071000 FLD1au:     vfd     a3/+99, 9/0     "+990
002314 xxxx 001043105153 FLD2au:     ac4     /0123456+/      "0123456+ 
002315 xxxx 021101104063 AD3Dmsg:    acc     /AD3D Tests ... \r\n/ 
002316 xxxx 104040124145  
002317 xxxx 163164163040  
002320 xxxx 056056056040  
002321 xxxx 015012040040  
002322 xxxx 047061056040 msg36:      acc     /1. Result ^n (Should be 000260145126)\r\n/ 
002323 xxxx 122145163165  
002324 xxxx 154164040136  
002325 xxxx 156040050123  
002326 xxxx 150157165154  
002327 xxxx 144040142145  
002330 xxxx 040060060060  
002331 xxxx 062066060061  
002332 xxxx 064065061062  
002333 xxxx 066051015012  
002334 xxxx 047062056040 msg37:      acc     /2. Result ^n (Should be 000013003106)\r\n/ 
002335 xxxx 122145163165  
002336 xxxx 154164040136  
002337 xxxx 156040050123  
002340 xxxx 150157165154  
002341 xxxx 144040142145  
002342 xxxx 040060060060  
002343 xxxx 060061063060  
002344 xxxx 060063061060  
002345 xxxx 066051015012  
002346 xxxx 004316701000             call    ioa(AD3Dmsg)
002347 xxxx 002352710000
002350 xxxx 000000000000
002351 xxxx 002315000000
002352 xxxx 400200222400         AD3D    (),(),(),ROUND,ascii " w/ rounding, plus sign options
002353 xxxx 002364037604         desc9ns FLD1av,4,-2     " FLD1 addend operand descriptor 
002354 xxxx 002365027610         desc9ts FLD2av,8,-2     " FLD2 addend operand descriptor 
002355 xxxx 002367250006         desc4ls FLD3av(2),6     " operand descriptor, sum field 
002356 xxxx 004316701000         call    ioa(msg36, FLD3av)
002357 xxxx 002363710000
002360 xxxx 000000000000
002361 xxxx 002322000000
002362 xxxx 002367000000
002363 xxxx 002371710000         tra     AD3D2
002364 xxxx 061062063064 FLD1av: aci     /1234/          "  1234 
002365 xxxx 060066065064 FLD2av: aci     /0654321+/      " 0654321+ 
002366 xxxx 063062061053  
002367 xxxx 000000000000 FLD3av: BSS     2              " xx+06556   (Sum)
002371 xxxx 000002622000         EAX2     2          " load character modifier into X2
002372 xxxx 000006626000         EAX6     6          " load FLD2 length into X6
002373 xxxx 002407624000         EAX4     FLD1aw       " load FLD1 address into X4
002374 xxxx 400000507414         AWDX     pr4|0,4    " put FLD1 address into AR4
002375 xxxx 420252222500         AD3D     (ar),(rl,x2),(id),round,ascii
002376 xxxx 400000000004         desc9fl  pr4|0,4    " FLD1 operand descriptor (FLD1,0,4,0) 
002377 xxxx 002410077616         desc4ns  FLD2aw,x6,-2 " FLD2 operand descriptor (FLD2,2,6,3,-2) 
002400 xxxx 002412000000         ARG      DFLD3aw      " pointer,FLD3 operand descriptor
002401 xxxx 004316701000         call    ioa(msg37, FLD3aw)
002402 xxxx 002406710000
002403 xxxx 000000000000
002404 xxxx 002334000000
002405 xxxx 002411000000
002406 xxxx 002450710000         tra     SB2D0
002407 xxxx 055061062002 FLD1aw: vfd     a3/-12, 9/2     " -12 2
002410 xxxx 000022064126 FLD2aw: ac4     /00123456/      " 00123456 
002411 xxxx 000000000000 FLD3aw: BSS     1               " xxx+0346   (Sum)
002412 xxxx 002411357705 DFLD3aw:desc4ls FLD3aw(3),5,-1  " FLD3 sum operand descriptor 
002413 xxxx 017123102062 SB2Dmsg:    acc /SB2D Tests...\r\n/ 
002414 xxxx 104040124145  
002415 xxxx 163164163056  
002416 xxxx 056056015012  
002417 xxxx 070061056040 msg38:  acc /1. result ^n ^n (Should be 055066065064 063060071376) \r\n/ 
002420 xxxx 162145163165  
002421 xxxx 154164040136  
002422 xxxx 156040136156  
002423 xxxx 040050123150  
002424 xxxx 157165154144  
002425 xxxx 040142145040  
002426 xxxx 060065065060  
002427 xxxx 066066060066  
002430 xxxx 065060066064  
002431 xxxx 040060066063  
002432 xxxx 060066060060  
002433 xxxx 067061063067  
002434 xxxx 066051040015  
002435 xxxx 012040040040  
002436 xxxx 047062056040 msg39:  acc /2. result ^a ^a (Should be 8753 0864)\r\n/ 
002437 xxxx 162145163165  
002440 xxxx 154164040136  
002441 xxxx 141040136141  
002442 xxxx 040050123150  
002443 xxxx 157165154144  
002444 xxxx 040142145040  
002445 xxxx 070067065063  
002446 xxxx 040060070066  
002447 xxxx 064051015012  
002450 xxxx 004316701000         call    ioa(SB2Dmsg)
002451 xxxx 002454710000
002452 xxxx 000000000000
002453 xxxx 002413000000
002454 xxxx 000200203400         SB2D     (),(),round      " with rounding option
002455 xxxx 002466067504         NDSC4    FLD1ax,0,4,2,-3  " minuend operand descriptor 
002456 xxxx 002467000010         NDSC9    FLD2ax,0,8       " subtrahend operand descriptor 
002457 xxxx 004316701000         call    ioa(msg38, FLD2ax, FLD2ax+1)
002460 xxxx 002465710000
002461 xxxx 000000000000
002462 xxxx 002417000000
002463 xxxx 002467000000
002464 xxxx 002470000000
002465 xxxx 002471710000         tra     SB2D2
002466 xxxx 022133000000 FLD1ax: ac4      /125+/         " 125+ 
002467 xxxx 053066065064 FLD2ax: vfd     a4/+654, a3/321, 9/-2
002470 xxxx 063062061776 
002471 xxxx 000400203400         SB2D    (),(),enablefault   " with truncation enable option
002472 xxxx 002503077410         NDSC4   FLD1ay,0,8,3,-4       " minuend operand descriptor 
002473 xxxx 002504037610         NDSC9   FLD2ay,0,8,3,-2       " subtrahend operand descriptor 
002474 xxxx 004316701000         call    ioa(msg39, FLD2ay, FLD2ay+1)
002475 xxxx 002502710000
002476 xxxx 000000000000
002477 xxxx 002436000000
002500 xxxx 002504000000
002501 xxxx 002505000000
002502 xxxx 002543710000         tra     SB3D0
002503 xxxx 022064126170 FLD1ay: ac4     /12345678/          " 12345678 
002504 xxxx 070067066065 FLD2ay: aci     /87654321/          " 87654321 
002505 xxxx 064063062061  
002506 xxxx 021123102063 SB3Dmsg:    acc "SB3D Tests ... \r\n" 
002507 xxxx 104040124145  
002510 xxxx 163164163040  
002511 xxxx 056056056040  
002512 xxxx 015012040040  
002513 xxxx 067061056040 msg40:  acc     /1. Result ^n ^n (Should be 000000000053 060060060177)\r\n/ 
002514 xxxx 122145163165  
002515 xxxx 154164040136  
002516 xxxx 156040136156  
002517 xxxx 040050123150  
002520 xxxx 157165154144  
002521 xxxx 040142145040  
002522 xxxx 060060060060  
002523 xxxx 060060060060  
002524 xxxx 060060065063  
002525 xxxx 040060066060  
002526 xxxx 060066060060  
002527 xxxx 066060061067  
002530 xxxx 067051015012  
002531 xxxx 047062056040 msg41:  acc     /2. Result ^n (Should be 320010144031)\r\n/ 
002532 xxxx 122145163165  
002533 xxxx 154164040136  
002534 xxxx 156040050123  
002535 xxxx 150157165154  
002536 xxxx 144040142145  
002537 xxxx 040063062060  
002540 xxxx 060061060061  
002541 xxxx 064064060063  
002542 xxxx 061051015012  
002543 xxxx 004316701000         call    ioa(SB3Dmsg)
002544 xxxx 002547710000
002545 xxxx 000000000000
002546 xxxx 002506000000
002547 xxxx 000200223400         SB3D    (),(),(),round  "with rounding option
002550 xxxx 002563060004         desc4ts FLD1az,4        "subtrahend operand descriptor 
002551 xxxx 002564050004         desc4ls FLD2az,4        "minuend operand descriptor 
002552 xxxx 002565600005         desc9fl FLD3az(3),5     "operand desc for result field 
002553 xxxx 001300601000         tnz     NO.GOT
002554 xxxx 004316701000         call    ioa(msg40, FLD3az, FLD3az+1)
002555 xxxx 002562710000
002556 xxxx 000000000000
002557 xxxx 002513000000
002560 xxxx 002565000000
002561 xxxx 002566000000
002562 xxxx 002567710000         tra     SB3D2
002563 xxxx 022075000000 FLD1az: ac4     /123-/         " 123- 
002564 xxxx 321043000000 FLD2az: ac4     /-123/         " -123 
002565 xxxx 000000000000 FLD3az: BSS     2              " XXX+000+127 (Result) zero indicator ON
002567 xxxx 000400223400         SB3D    (),(),(),enablefault   " with truncation enable option
002570 xxxx 002603000010         desc9fl FLD1ba, 8              " minuend operand descriptor 
002571 xxxx 002605000010         desc9fl FLD2ba, 8              " subtrahend operand descriptor 
002572 xxxx 002607057610         desc4ls FLD3ba, 8, -2          " result operand descriptor 
002573 xxxx 001300605000         tpl     NO.GOT                 "indicators on? -  negative and truncation
002574 xxxx 001300601400         trtf    NO.GOT
002575 xxxx 004316701000        call     ioa(msg41, FLD3ba)
002576 xxxx 002602710000
002577 xxxx 000000000000
002600 xxxx 002531000000
002601 xxxx 002607000000
002602 xxxx 002641710000         tra     MP2D0
002603 xxxx 055071070067 FLD1ba: vfd  a4/-987, a3/654, 9/-3   " - 9 8 7 6 5 4 -3
002604 xxxx 066065064775 
002605 xxxx 055061062063 FLD2ba: vfd  a4/-123, a3/456, 9/-3   " - 1 2 3 4 5 6 -3
002606 xxxx 064065066775 
002607 xxxx 000000000000 FLD3ba: BSS      1                   " -0086419   (Result)
002610 xxxx 020115120062 MP2Dmsg:    acc     ?MP2D Tests ...\r\n? 
002611 xxxx 104040124145  
002612 xxxx 163164163040  
002613 xxxx 056056056015  
002614 xxxx 012040040040  
002615 xxxx 047061056040 msg42:      acc     ?1. Result ^n (Should be 260000044151)\r\n? 
002616 xxxx 122145163165  
002617 xxxx 154164040136  
002620 xxxx 156040050123  
002621 xxxx 150157165154  
002622 xxxx 144040142145  
002623 xxxx 040062066060  
002624 xxxx 060060060060  
002625 xxxx 064064061065  
002626 xxxx 061051015012  
002627 xxxx 047062056040 msg43:      acc     ?2. Result ^n (Should be 301043105375)\r\n? 
002630 xxxx 122145163165  
002631 xxxx 154164040136  
002632 xxxx 156040050123  
002633 xxxx 150157165154  
002634 xxxx 144040142145  
002635 xxxx 040063060061  
002636 xxxx 060064063061  
002637 xxxx 060065063067  
002640 xxxx 065051015012  
002641 xxxx 004316701000             call    ioa(MP2Dmsg)
002642 xxxx 002645710000
002643 xxxx 000000000000
002644 xxxx 002610000000
002645 xxxx 400200206400         MP2D    (),(),round,ascii   "rounding and plus sign options
002646 xxxx 002656027504         desc9ts FLD1bb, 4, -3       "multiplier operand descriptor 
002647 xxxx 002657057610         desc4ls FLD2bb, 8, -2       "multiplicand operand descriptor 
002650 xxxx 004316701000         call    ioa(msg42, FLD2bb)
002651 xxxx 002655710000
002652 xxxx 000000000000
002653 xxxx 002615000000
002654 xxxx 002657000000
002655 xxxx 002660710000         tra MP2D2
002656 xxxx 060060062053 FLD1bb: aci     /002+/          " 002+ 
002657 xxxx 261043105147 FLD2bb: ac4     /+1234567/      " +1234567 
002660 xxxx 000200206400        MP2D     (),(),round     "rounding option
002661 xxxx 002671077610        desc4ns  FLD1bc, 8, -2   "multiplier operand descriptor 
002662 xxxx 002672040010        desc4fl  FLD2bc, 8       "multiplicand operand descriptor 
002663 xxxx 004316701000        call     ioa(msg43, FLD2bc)
002664 xxxx 002670710000
002665 xxxx 000000000000
002666 xxxx 002627000000
002667 xxxx 002672000000
002670 xxxx 002724710000        tra      MP3D0
002671 xxxx 000000000020 FLD1bc:  ac4    /00000010/      " 00000010 
002672 xxxx 261043105376 FLD2bc:  ac4    /+12345ON/      " +12345-2 
002673 xxxx 021115120063 MP3Dmsg:    acc /MP3D Tests ... \r\n/ 
002674 xxxx 104040124145  
002675 xxxx 163164163040  
002676 xxxx 056056056040  
002677 xxxx 015012040040  
002700 xxxx 046061056040 msg44:      acc /1. Result ^a ^a (Should be +61 7284)\r\n/ 
002701 xxxx 122145163165  
002702 xxxx 154164040136  
002703 xxxx 141040136141  
002704 xxxx 040050123150  
002705 xxxx 157165154144  
002706 xxxx 040142145040  
002707 xxxx 053066061040  
002710 xxxx 067062070064  
002711 xxxx 051015012040  
002712 xxxx 047062056040 msg45:      acc /2. Result ^n (Should be 275060206377)\r\n/ 
002713 xxxx 122145163165  
002714 xxxx 154164040136  
002715 xxxx 156040050123  
002716 xxxx 150157165154  
002717 xxxx 144040142145  
002720 xxxx 040062067065  
002721 xxxx 060066060062  
002722 xxxx 060066063067  
002723 xxxx 067051015012  
002724 xxxx 004316701000         call    ioa(MP3Dmsg)
002725 xxxx 002730710000
002726 xxxx 000000000000
002727 xxxx 002673000000
002730 xxxx 000200226400         MP3D    (),(),(),round   "with rounding option
002731 xxxx 002743660002         desc4ts FLD1bd(6),2      "multiplier operand descriptor 
002732 xxxx 002744057510         desc4ls FLD2bd,8,-3      "multiplicand op descriptor 
002733 xxxx 002745217607         desc9ls FLD3bd(1),7,-2   " product operand descriptor 
002734 xxxx 004316701000         call    ioa(msg44, FLD3bd, FLD3bd+1)
002735 xxxx 002742710000
002736 xxxx 000000000000
002737 xxxx 002700000000
002740 xxxx 002745000000
002741 xxxx 002746000000
002742 xxxx 002747710000         tra     MP3D2
002743 xxxx 000000000133 FLD1bd:  ac4      /0000005+/      " 0000005+ 
002744 xxxx 261043105147 FLD2bd:  ac4      /+1234567/      " +1234567 
002745 xxxx 000000000000 FLD3bd:  BSS      2               " +617284    (Product)
002747 xxxx 000400226400         MP3D    (),(),(), enablefault
002750 xxxx 002763077602         desc4ns FLD1be, 2, -2   " multiplier operand descriptor 
002751 xxxx 002764057510         desc4ls FLD2be, 8, -3   " multiplicand op descriptor 
002752 xxxx 002765140007         desc4fl FLD3be(1), 7    " product operand descriptor 
002753 xxxx 001300605000         tpl     NO.GOT          " indicators on? -  negative and truncation
002754 xxxx 001300601400         trtf    NO.GOT
002755 xxxx 004316701000         call    ioa(msg45, FLD3be)
002756 xxxx 002762710000
002757 xxxx 000000000000
002760 xxxx 002712000000
002761 xxxx 002765000000
002762 xxxx 003017710000         tra     DV2D0
002763 xxxx 045000000000 FLD1be:   ac4     /25000000/      " 25000000 
002764 xxxx 321043105147 FLD2be:   ac4     /-1234567/      "-1234567 
002765 xxxx 260000000000 FLD3be:   ac4     /+/             "+-3086-1    (Product) 
002766 xxxx 021104126062 DV2Dmsg:    acc     /DV2D Tests ... \r\n/ 
002767 xxxx 104040124145  
002770 xxxx 163164163040  
002771 xxxx 056056056040  
002772 xxxx 015012040040  
002773 xxxx 047061056040 msg46:      acc     /1. Result ^n (Should be 304062020003)\r\n/ 
002774 xxxx 122145163165  
002775 xxxx 154164040136  
002776 xxxx 156040050123  
002777 xxxx 150157165154  
003000 xxxx 144040142145  
003001 xxxx 040063060064  
003002 xxxx 060066062060  
003003 xxxx 062060060060  
003004 xxxx 063051015012  
003005 xxxx 047062056040 msg47:      acc     /2. Result ^n (Should be 300044150000)\r\n/ 
003006 xxxx 122145163165  
003007 xxxx 154164040136  
003010 xxxx 156040050123  
003011 xxxx 150157165154  
003012 xxxx 144040142145  
003013 xxxx 040063060060  
003014 xxxx 060064064061  
003015 xxxx 065060060060  
003016 xxxx 060051015012  
003017 xxxx 004316701000             call    ioa(DV2Dmsg)
003020 xxxx 003023710000
003021 xxxx 000000000000
003022 xxxx 002766000000
003023 xxxx 000000207400             DV2D    (), ()
003024 xxxx 003034467404             DESC4TS FLD1bf(4), 4, -4 "divisor operand descriptor 
003025 xxxx 003035040010             DESC4FL FLD2bf,8         "dividend operand descriptor 
003026 xxxx 004316701000             call    ioa(msg46, FLD2bf)
003027 xxxx 003033710000
003030 xxxx 000000000000
003031 xxxx 002773000000
003032 xxxx 003035000000
003033 xxxx 003036710000             tra     DV2D2
003034 xxxx 000000000053 FLD1bf:     ac4     /   0002+/      "0002+ 
003035 xxxx 260206102000 FLD2bf:     ac4     /+0864200/      "+08642 +0 
003036 xxxx 000200207400         DV2D    (),(),round     " with rounding option
003037 xxxx 003047017504         DESC9LS FLD1bg,4,-3     " divisor operand descriptor 
003040 xxxx 003050057610         DESC4LS FLD2bg,8,-2     " dividend operand descriptor 
003041 xxxx 004316701000         call    ioa(msg47, FLD2bg)
003042 xxxx 003046710000
003043 xxxx 000000000000
003044 xxxx 003005000000
003045 xxxx 003050000000
003046 xxxx 003102710000         tra     DV3D0
003047 xxxx 053060060065 FLD1bg: aci     /+005/          " +005 
003050 xxxx 260000022064 FLD2bg: ac4     /+0001234/      " +0001234 
003051 xxxx 021104126063 DVD3msg:    acc     /DV3D Tests ... \r\n/ 
003052 xxxx 104040124145  
003053 xxxx 163164163040  
003054 xxxx 056056056040  
003055 xxxx 015012040040  
003056 xxxx 047061056040 msg48:      acc     /1. Result ^n (Should be 000263202162)\r\n/ 
003057 xxxx 122145163165  
003060 xxxx 154164040136  
003061 xxxx 156040050123  
003062 xxxx 150157165154  
003063 xxxx 144040142145  
003064 xxxx 040060060060  
003065 xxxx 062066063062  
003066 xxxx 060062061066  
003067 xxxx 062051015012  
003070 xxxx 047062056040 msg49:      acc     /2. Result ^n (Should be 013103202162)\r\n/ 
003071 xxxx 122145163165  
003072 xxxx 154164040136  
003073 xxxx 156040050123  
003074 xxxx 150157165154  
003075 xxxx 144040142145  
003076 xxxx 040060061063  
003077 xxxx 061060063062  
003100 xxxx 060062061066  
003101 xxxx 062051015012  
003102 xxxx 004316701000         call    ioa(DVD3msg)
003103 xxxx 003106710000
003104 xxxx 000000000000
003105 xxxx 003051000000
003106 xxxx 400200227400         DV3D    (),(),(),round,ascii    " rounding, plus sign options
003107 xxxx 003120227603         desc9ts FLD1bh(1),3,-2          " divisor operand descriptor 
003110 xxxx 003121040011         desc4fl FLD2bh,9                " dividend operand descriptor 
003111 xxxx 003123257706         desc4ls FLD3bh(2),6,-1          " quotient operand descriptor 
003112 xxxx 004316701000         call    ioa(msg48, FLD3bh)
003113 xxxx 003117710000
003114 xxxx 000000000000
003115 xxxx 003056000000
003116 xxxx 003123000000
003117 xxxx 003124710000         tra     DV3D2
003120 xxxx 060060062055 FLD1bh: aci      /002-/                 " 002- 
003121 xxxx 330166124077 FLD2bh: ac4      /-876543OM/            " -876543-3 
003122 xxxx 320000000000  
003123 xxxx 000000000000 FLD3bh: BSS      1                      " xx+38272   (Quotient)
003124 xxxx 000002622000         EAX2    2               " load character mod into X2
003125 xxxx 000010627000         EAX7    8               " load FLD2 length into X7
003126 xxxx 003142624000         EAX4    FLD1bi          " load FLD1 address into X4
003127 xxxx 400000507414         AWDX    pr4|0, 4        " put FLD1 address into AR4
003130 xxxx 420240227512         DV3D    (pr,x2),(rl),(id),round,ascii  " with addr mod options
003131 xxxx 400000037602         desc9ns pr4|0, 2, -2    " divisor operand descriptor (FLD1,2,2,3,-2) 
003132 xxxx 003143000017         desc9fl FLD2bi, x7      " dividend operand descriptor (FLD2,0,8,0) 
003133 xxxx 400002000112         ARG     pr4|2, 2        " ptr quotient operand desc
003134 xxxx 004316701000         call    ioa(msg49, FLD3bi)
003135 xxxx 003141710000
003136 xxxx 000000000000
003137 xxxx 003070000000
003140 xxxx 003145000000
003141 xxxx 003176710000         tra     CMPN0
003142 xxxx 060060060062 FLD1bi: aci     /0002/          " 0002 
003143 xxxx 053070067066 FLD2bi: vfd     a4/+876, a3/543, 9/-3    " +876543-3
003144 xxxx 065064063775 
003145 xxxx 000000000000 FLD3bi: BSS     1               " x+438272
003146 xxxx 003145157707         desc4ls FLD3bi(1),7,-1  " quotient operand descriptor 
003147 xxxx 021103115120 CMPNmsg:    acc     "CMPN Tests ... \r\n" 
003150 xxxx 116040124145  
003151 xxxx 163164163040  
003152 xxxx 056056056040  
003153 xxxx 015012040040  
003154 xxxx 027061056040 msg50:      acc     "1. Result FLD2 = FLD1\r\n" 
003155 xxxx 122145163165  
003156 xxxx 154164040106  
003157 xxxx 114104062040  
003160 xxxx 075040106114  
003161 xxxx 104061015012  
003162 xxxx 027062056040 msg51:      acc     "2. Result FLD2 = FLD1\r\n" 
003163 xxxx 122145163165  
003164 xxxx 154164040106  
003165 xxxx 114104062040  
003166 xxxx 075040106114  
003167 xxxx 104061015012  
003170 xxxx 027063056040 msg52:      acc     "3. Result FLD2 > FLD1\r\n" 
003171 xxxx 122145163165  
003172 xxxx 154164040106  
003173 xxxx 114104062040  
003174 xxxx 076040106114  
003175 xxxx 104061015012  
003176 xxxx 004316701000         call    ioa(CMPNmsg)
003177 xxxx 003202710000
003200 xxxx 000000000000
003201 xxxx 003147000000
003202 xxxx 000000303400         CMPN     (),()           "no modification
003203 xxxx 003216057610         NDSC4    FLD1bj,0,8,1,-2 "FLD1 operand descriptor 
003204 xxxx 003217040010         NDSC4    FLD2bj,0,8,0    "FLD2 operand descriptor 
003205 xxxx 003211600000         TZE      EQUAL2          "FLD2 = FLD1 (Result - FLD2 =  FLD1)
003206 xxxx 001300604000         TMI      NO.GOT          "FLD2 < FLD1
003207 xxxx 001300602000         TNC      NO.GOT          "|FLD2| < |FLD1|
003210 xxxx 001300710000         TRA      NO.GOT
003211 xxxx 004316701000 EQUAL2: call    ioa(msg50)
003212 xxxx 003215710000
003213 xxxx 000000000000
003214 xxxx 003154000000
003215 xxxx 003220710000         tra     CMPN2
003216 xxxx 320001043105 FLD1bj: ac4     /-0012345/      " -0012345 
003217 xxxx 321043105376 FLD2bj: ac4     /-12345ON/      " -12345 -2 
003220 xxxx 000000303400         CMPN     (),()           " no modification
003221 xxxx 003226430002         desc9ns FLD1bk(2),2      " FLD1 operand descriptor 
003222 xxxx 003227067510         desc4ts FLD2bk, 8, -3    " FLD2 operand descriptor 
003223 xxxx 003230600000         TZE      EQUAL3          " FLD2 = FLD1
003224 xxxx 001300604000         TMI      NO.GOT          " FLD2 < FLD1
003225 xxxx 001300710000         TRA      NO.GOT          " FLD2 > FLD1
003226 xxxx 060060061062 FLD1bk: aci     /0012/           " +0012000 
003227 xxxx 000022000013 FLD2bk: ac4     /0012000+/       " +0012000 
003230 xxxx 004316701000 EQUAL3: call    ioa(msg51)
003231 xxxx 003234710000
003232 xxxx 000000000000
003233 xxxx 003162000000
003234 xxxx 000002622000         EAX2    2           " load character mod into X2
003235 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
003236 xxxx 003253624000         EAX4    FLD1bl      " load FLD1 address into X4
003237 xxxx 000000507414         AWDX    0,4,4       " put FLD1 address into AR4
003240 xxxx 000020303552         CMPN    (ar,rl,x2),(id)    " with address modification
003241 xxxx 400000077516         desc4ns pr4|0,x6,-3 " FLD1 operand descriptor (FLD1,2,6,3,-3) 
003242 xxxx 003255000000         ARG     FLD2bl.I    " pointer to operand descriptor
003243 xxxx 001300600000         TZE     NO.GOT      " FLD2 = FLD1
003244 xxxx 003246605000         TPL     MORE        " FLD2 > FLD1 Result - FLD2 > FLD1
003245 xxxx 001300710000         TRA     NO.GOT      " FLD2 < FLD1
003246 xxxx 004316701000         call    ioa(msg52)
003247 xxxx 003252710000
003250 xxxx 000000000000
003251 xxxx 003170000000
003252 xxxx 000000616000         dis
003253 xxxx 000022064126 FLD1bl: ac4     /00123456/      " +00123456 
003254 xxxx 001043105153 FLD2bl: ac4     /0123456+/      " +01234560 
003255 xxxx 003254067610 FLD2bl.I: desc4ts FLD2bl,8,-2 
003256 xxxx 000000616000         dis
003257 xxxx 045122145163 msg3:      acc         "Result: ^n (Should be 777777775456)\r\n" 
003260 xxxx 165154164072  
003261 xxxx 040136156040  
003262 xxxx 050123150157  
003263 xxxx 165154144040  
003264 xxxx 142145040067  
003265 xxxx 067067067067  
003266 xxxx 067067067065  
003267 xxxx 064065066051  
003270 xxxx 015012040040  
003271 xxxx 045122145163 msg4:      acc         "Result: ^n (Should be 777777001000)\r\n" 
003272 xxxx 165154164072  
003273 xxxx 040136156040  
003274 xxxx 050123150157  
003275 xxxx 165154144040  
003276 xxxx 142145040067  
003277 xxxx 067067067067  
003300 xxxx 067060060061  
003301 xxxx 060060060051  
003302 xxxx 015012040040  
003303 xxxx 045122145163 msg5:      acc         "Result: ^n (Should be 000000000777)\r\n" 
003304 xxxx 165154164072  
003305 xxxx 040136156040  
003306 xxxx 050123150157  
003307 xxxx 165154144040  
003310 xxxx 142145040060  
003311 xxxx 060060060060  
003312 xxxx 060060060060  
003313 xxxx 067067067051  
003314 xxxx 015012040040  
003315 xxxx 020115126116 MVNEmsg:   acc         "MVNE Tests ...\r\n" 
003316 xxxx 105040124145  
003317 xxxx 163164163040  
003320 xxxx 056056056015  
003321 xxxx 012040040040  
003322 xxxx 000001043115 FLD1c:  oct     000001043115    " 8P1234-
003323 xxxx 000001043115         ac4     "0001234-" 
003324 xxxx 000000000000 FLD2c:  bss     1               " 777777775456  (Result)
003325 xxxx 000005022000 FLD1d:  oct     000005022000    " 8P51200
003326 xxxx 777777777777 FLD2d:  dec     -1
003327 xxxx 061060062063 FLD1e:  oct     061060062063    " 4A1023
003330 xxxx 000000000000 FLD2e:  dec     0
003331 xxxx 055122145163 msg6:   acc     "Result: '^a^a^a' (Should be '   $3004.05-')\r\n" 
003332 xxxx 165154164072  
003333 xxxx 040047136141  
003334 xxxx 136141136141  
003335 xxxx 047040050123  
003336 xxxx 150157165154  
003337 xxxx 144040142145  
003340 xxxx 040047040040  
003341 xxxx 040044063060  
003342 xxxx 060064056060  
003343 xxxx 065055047051  
003344 xxxx 015012040040  
003345 xxxx 053122145163 msg7:   acc     "Result: '^g^g' (Should be '   $3004.05-')\r\n" 
003346 xxxx 165154164072  
003347 xxxx 040047136147  
003350 xxxx 136147047040  
003351 xxxx 050123150157  
003352 xxxx 165154144040  
003353 xxxx 142145040047  
003354 xxxx 040040040044  
003355 xxxx 063060060064  
003356 xxxx 056060065055  
003357 xxxx 047051015012  
003360 xxxx 055122145163 msg8:   acc     "Result: '^a^a^a' (Should be '   ?3004.05@')\r\n" 
003361 xxxx 165154164072  
003362 xxxx 040047136141  
003363 xxxx 136141136141  
003364 xxxx 047040050123  
003365 xxxx 150157165154  
003366 xxxx 144040142145  
003367 xxxx 040047040040  
003370 xxxx 040077063060  
003371 xxxx 060064056060  
003372 xxxx 065100047051  
003373 xxxx 015012040040  
003374 xxxx 060060060063 FLD1f:  aci     /000300405-/ 
003375 xxxx 060060064060  
003376 xxxx 065055000000  
003377 xxxx 167050207322 FLD2f:  vfd     9/mflc+7,9/enf+8,9/insb+7,9/mvc+2   "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003400 xxxx 244000000000         vfd     9/insn+4                           "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003401 xxxx 420020054060 FLD2f1: vfd     9/cht, h3/ *+       "need to be able to combine these 1st two -- h2 + h3 = h5 == 45-bits!!!
003402 xxxx 052053020033         vfd     h2/-$, o9/020, h1/.
003403 xxxx 000167050207         vfd     h1/0,9/mflc+7, 9/enf+8, 9/insb+7,9/mvc+2, 9/insn+4
003404 xxxx 322244000000 
003405 xxxx 420040052053 FLD2f2: vfd     9/cht, a3/ *+
003406 xxxx 100077054056         vfd     a2/@?, o9/054, a1/.
003407 xxxx 060167050207         vfd     a1/0, 9/mflc+7, 9/enf+8, 9/insb+7  "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003410 xxxx 322244000000         vfd     9/mvc+2, 9/insn+4                  "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003411 xxxx 000000000000 FLD3f:  bss     3
003414 xxxx 000000000000 FLD3f1: bss     2
003416 xxxx 000000000000 FLD3f2: bss     3
003421 xxxx 054122145163 msg9:   acc     "Result '^a^a^a' (Should be '*2505,09-   ')\r\n" 
003422 xxxx 165154164040  
003423 xxxx 047136141136  
003424 xxxx 141136141047  
003425 xxxx 040050123150  
003426 xxxx 157165154144  
003427 xxxx 040142145040  
003430 xxxx 047052062065  
003431 xxxx 060065054060  
003432 xxxx 071055040040  
003433 xxxx 040047051015  
003434 xxxx 012040040040  
003435 xxxx 002120120235 FLD1g:  ac4     /0250509-/  "8P250509- 
003436 xxxx 125070226322 FLD2g:  vfd     9/mvza+5, 9/ses+8, 9/insa+6, 9/mvc+2        "MICROP  (MVZA,5),(SES,8),(INSA,6),(MVC,2)
003437 xxxx 244023000000         vfd     9/insn+4, 9/insm+3                          "MICROP  (INSN,4),(INSM,3)
003440 xxxx 000000000000 FLD3g:  BSS     3
003443 xxxx 017115126105 MVEmsg: acc     "MVE Tests ...\r\n"  
003444 xxxx 040124145163  
003445 xxxx 164163040056  
003446 xxxx 056056015012  
003447 xxxx 103122145163 msg10:  acc     "Result: '^g^g^g^g^g' (Should be '* SMITHROGER, WILLIAM S. - #25')\r\n" 
003450 xxxx 165154164072  
003451 xxxx 040047136147  
003452 xxxx 136147136147  
003453 xxxx 136147136147  
003454 xxxx 047040050123  
003455 xxxx 150157165154  
003456 xxxx 144040142145  
003457 xxxx 040047052040  
003460 xxxx 123115111124  
003461 xxxx 110122117107  
003462 xxxx 105122054040  
003463 xxxx 127111114114  
003464 xxxx 111101115040  
003465 xxxx 123056040055  
003466 xxxx 040043062065  
003467 xxxx 047051015012  
003470 xxxx 010262443163 FLD1h:  BCI     "12SMITHROGERWILLIAMS25AB" 
003471 xxxx 305146272551  
003472 xxxx 663143433121  
003473 xxxx 446202052122  
003474 xxxx 420054073033 FLD2h:  vfd     9/cht, h1/*, o9/073, h1/.               "MICROP  (CHT,0),8H*,.-    
003475 xxxx 052020020020         vfd     h1/-, o9/020, o9/020, o9/020, 
003476 xxxx 020070201205         vfd     o9/020, 9/ses+8, 9/insb+1, 9/insb+5     "MICROP  (SES,8),(INSB,1),(INSB,5)
003477 xxxx 332202205327         vfd     9/mvc+10, 9/insb+2, 9/insb+5, 9/mvc+7   "MICROP  (MVC,10),(INSB,2)(INSB,5),(MVC,7)
003500 xxxx 205321203205         vfd     9/insb+5, 9/mvc+1, 9/insb+3, 9/insb+5   "MICROP  (INSB,5),(MVC,1),(INSB,3),(INSB,5)
003501 xxxx 204205200013         vfd     9/insb+4, 9/insb+5, 9/insb+0, h1/#      "MICROP  (INSB,4),(INSB,5),(INSB,0),1H#
003502 xxxx 322000000000         vfd     9/mvc+2                                 "MICROP  (MCV,2)
003503 xxxx 000000000000 FLD3h:  bss     5
003510 xxxx 055122145163 msg11:  acc     "Result: '^a^a^a' (Should be 'code error#2')\r\n" 
003511 xxxx 165154164072  
003512 xxxx 040047136141  
003513 xxxx 136141136141  
003514 xxxx 047040050123  
003515 xxxx 150157165154  
003516 xxxx 144040142145  
003517 xxxx 040047143157  
003520 xxxx 144145040145  
003521 xxxx 162162157162  
003522 xxxx 043062047051  
003523 xxxx 015012040040  
003524 xxxx 145162162157 FLD1i:  ACI     "error-2" 
003525 xxxx 162055062000  
003526 xxxx 401043325021 FLD2i:  vfd     9/lte+1, A1/#, 9/mvc+5, 9/insm+1    "MICROP  (LTE,1),1A#,(MVC,5),(INSM,1),(IGN,1),(MVC,1)
003527 xxxx 301321000000         vfd     9/ign+1, 9/mvc+1
003530 xxxx 143157144145 FLD3i:  ACI     "code ", 12 
003531 xxxx 040000000000  
003532 xxxx 000000000000  
003533 xxxx 021115114122 MLRmsg:    acc         "MLR Tests .....\r\n" 
003534 xxxx 040124145163  
003535 xxxx 164163040056  
003536 xxxx 056056056056  
003537 xxxx 015012040040  
003540 xxxx 063122145163 msg12:  acc     /Result: '^g^g^g' (Should be 'xxxxABCDEFGHIJKL  ')\r\n/ 
003541 xxxx 165154164072  
003542 xxxx 040047136147  
003543 xxxx 136147136147  
003544 xxxx 047040050123  
003545 xxxx 150157165154  
003546 xxxx 144040142145  
003547 xxxx 040047170170  
003550 xxxx 170170101102  
003551 xxxx 103104105106  
003552 xxxx 107110111112  
003553 xxxx 113114040040  
003554 xxxx 047051015012  
003555 xxxx 212223242526 FLD1j:  BCI     /ABCDEFGHIJKL/ " memory contents 
003556 xxxx 273031414243  
003557 xxxx 000000000000 FLD2j:  bss     3              "xxxxABCDEFGHIJKL  " (Result)
003562 xxxx 065122145163 msg13:  acc     /Result: ^n ^n (Should be 000000000022 064126170235)\r\n/ 
003563 xxxx 165154164072  
003564 xxxx 040136156040  
003565 xxxx 136156040050  
003566 xxxx 123150157165  
003567 xxxx 154144040142  
003570 xxxx 145040060060  
003571 xxxx 060060060060  
003572 xxxx 060060060060  
003573 xxxx 062062040060  
003574 xxxx 066064061062  
003575 xxxx 066061067060  
003576 xxxx 062063065051  
003577 xxxx 015012040040  
003600 xxxx 202020010203 FLD1k:  BCI     /   12345678R/ 
003601 xxxx 040506071051  
003602 xxxx 000000000000 FLD2k:  bss     2               "xxxxxx123456789-  (Result)
003604 xxxx 047122145163 msg14:  acc     /Result: '^a^a' (Should be 'SOURCE T')\r\n/ 
003605 xxxx 165154164072  
003606 xxxx 040047136141  
003607 xxxx 136141047040  
003610 xxxx 050123150157  
003611 xxxx 165154144040  
003612 xxxx 142145040047  
003613 xxxx 123117125122  
003614 xxxx 103105040124  
003615 xxxx 047051015012  
003616 xxxx 124110111123 FLD1l:  Aci     /THIS IS THE SOURCE TEXT/ 
003617 xxxx 040111123040  
003620 xxxx 124110105040  
003621 xxxx 123117125122  
003622 xxxx 103105040124  
003623 xxxx 105130124000  
003624 xxxx 000000000000 FLD2l:  BSS     2
003626 xxxx 055122145163 msg15:  acc     /Result: '^a^a^a' (Should be '.....LE ....')\r\n/ 
003627 xxxx 165154164072  
003630 xxxx 040047136141  
003631 xxxx 136141136141  
003632 xxxx 047040050123  
003633 xxxx 150157165154  
003634 xxxx 144040142145  
003635 xxxx 040047056056  
003636 xxxx 056056056114  
003637 xxxx 105040056056  
003640 xxxx 056056047051  
003641 xxxx 015012040040  
003642 xxxx 123101115120 FLD1m:  ACi     /SAMPLE TEXT TO MOVE/ 
003643 xxxx 114105040124  
003644 xxxx 105130124040  
003645 xxxx 124117040115  
003646 xxxx 117126105000  
003647 xxxx 056056056056 FLD2m:  aci     /............/ 
003650 xxxx 056056056056  
003651 xxxx 056056056056  
003652 xxxx 045122145163 msg16:  acc     /Result: "^a^a" (Should be "HIS IS")\r\n/ 
003653 xxxx 165154164072  
003654 xxxx 040042136141  
003655 xxxx 136141042040  
003656 xxxx 050123150157  
003657 xxxx 165154144040  
003660 xxxx 142145040042  
003661 xxxx 110111123040  
003662 xxxx 111123042051  
003663 xxxx 015012040040  
003664 xxxx 124110111123 FLD1n:  ACI     /THIS IS THE TEXT/ 
003665 xxxx 040111123040  
003666 xxxx 124110105040  
003667 xxxx 124105130124  
003670 xxxx 000000000000 FLD2n:  BSS     2
003672 xxxx 021115122114 MRLmsg:    acc         "MRL Tests .....\r\n" 
003673 xxxx 040124145163  
003674 xxxx 164163040056  
003675 xxxx 056056056056  
003676 xxxx 015012040040  
003677 xxxx 063122145163 msg17:  acc     /Result: '^g^g^g' (Should be 'xxxx  ABCDEFGHIJKL')\r\n/ 
003700 xxxx 165154164072  
003701 xxxx 040047136147  
003702 xxxx 136147136147  
003703 xxxx 047040050123  
003704 xxxx 150157165154  
003705 xxxx 144040142145  
003706 xxxx 040047170170  
003707 xxxx 170170040040  
003710 xxxx 101102103104  
003711 xxxx 105106107110  
003712 xxxx 111112113114  
003713 xxxx 047051015012  
003714 xxxx 212223242526 FLD1o:  BCI     /ABCDEFGHIJKL/ 
003715 xxxx 273031414243  
003716 xxxx 000000000000 FLD2o:  BSS     3
003721 xxxx 071122145163 msg18:  acc     /Result: '^n ^n' (Should be '000000320001 043105147211')\r\n/ 
003722 xxxx 165154164072  
003723 xxxx 040047136156  
003724 xxxx 040136156047  
003725 xxxx 040050123150  
003726 xxxx 157165154144  
003727 xxxx 040142145040  
003730 xxxx 047060060060  
003731 xxxx 060060060063  
003732 xxxx 062060060060  
003733 xxxx 061040060064  
003734 xxxx 063061060065  
003735 xxxx 061064067062  
003736 xxxx 061061047051  
003737 xxxx 015012040040  
003740 xxxx 202020010203 FLD1p:  BCI     /   12345678R/ 
003741 xxxx 040506071051  
003742 xxxx 000000000000 FLD2p:  bss     2               "xxxx-00123456789  (Result)
003744 xxxx 065124103124 TCTmsg: acc     /TCT Tests ... (Results 020000000013 & 040000000004)\r\n/ 
003745 xxxx 040124145163  
003746 xxxx 164163040056  
003747 xxxx 056056040050  
003750 xxxx 122145163165  
003751 xxxx 154164163040  
003752 xxxx 060062060060  
003753 xxxx 060060060060  
003754 xxxx 060060061063  
003755 xxxx 040046040060  
003756 xxxx 064060060060  
003757 xxxx 060060060060  
003760 xxxx 060060064051  
003761 xxxx 015012040040  
003762 xxxx 014122145163 msg24o: acc     /Result: ^n\r\n/ 
003763 xxxx 165154164072  
003764 xxxx 040136156015  
003765 xxxx 012040040040  
003766 xxxx 200102030405 FLD1x:  bci     / 1234567890#/  " 200102030405060710110013 (oct) 
003767 xxxx 060710110013  
003770 xxxx 000000000000 FLD3x:  BSS 1                   " char. & count - 020000000013
003771 xxxx 000000000000 TABLEx: OCT 000000000000,000000000000        0X
003772 xxxx 000000000000
003773 xxxx 000000020020         OCT 000000020020,020020020020        1X
003774 xxxx 020020020020
003775 xxxx 000000000000         OCT 000000000000                     2X
003776 xxxx 040040061062 FLD1y:  aci      /  1234;5/  " 040040061062063064073065  (oct) 
003777 xxxx 063064073065  
004000 xxxx 000000000000 FLD3y:  BSS     1            " char. and count 040000000004
004001 xxxx 700000000016 INDSCRy:desc9a   pr7|0, x6   " indexing FLD1 operand descr. 
004002 xxxx 000000000000 TABLEy: BSS 12               " generate 60 (oct) table chars.
004016 xxxx 000000000000         OCt 000000000000,000000000000  " (060-067)
004017 xxxx 000000000000
004020 xxxx 000000000040         OCT 000000000040               " (070-073)
004021 xxxx 046124103124 TCTRmsg:    acc        /TCTR Tests (Result 000000000012) ...\r\n/ 
004022 xxxx 122040124145  
004023 xxxx 163164163040  
004024 xxxx 050122145163  
004025 xxxx 165154164040  
004026 xxxx 060060060060  
004027 xxxx 060060060060  
004030 xxxx 060060061062  
004031 xxxx 051040056056  
004032 xxxx 056015012040  
004033 xxxx 000000000022 FLD1z:  ac4     /0000001234567890/  " 0000001234567890 
004034 xxxx 064126170220  
004035 xxxx 000000000000 FLD3z:  BSS     1           " char/count 000000000012 (oct)
004036 xxxx 000000000000 TABLEz: OCT            0,           0
004037 xxxx 000000000000
004040 xxxx 000000014014         OCT 000000014014,000000014014
004041 xxxx 000000014014
004042 xxxx 020103115120 CMPCmsg:    acc     "CMPC Tests ...\r\n" 
004043 xxxx 103040124145  
004044 xxxx 163164163040  
004045 xxxx 056056056015  
004046 xxxx 012040040040  
004047 xxxx 020124150145 msg25:  acc     "They are equal\r\n" 
004050 xxxx 171040141162  
004051 xxxx 145040145161  
004052 xxxx 165141154015  
004053 xxxx 012040040040  
004054 xxxx 212223242020 FLD1aa: BCI     /ABCD/          "     'ABCD  ' 
004055 xxxx 676767672122 FLD2aa: BCI     /XXXXABCDXXXX/  " 'XXXXABCDXXXX' 
004056 xxxx 232467676767  
004057 xxxx 212122222323 DATA:  BCI      /AABBCCDDEEFF/ 
004060 xxxx 242425252626  
004061 xxxx 272730303131        BCI      /GGHHIIJJKKLL/ 
004062 xxxx 414142424343  
004063 xxxx 000000000000 COUNT: BSS      1           "COUNT contains decimal 14 (octal 16)
004064 xxxx 303020202020 COMP:  BCI      /HH/ 
004065 xxxx 060060060060 FLD1ad:  aci      /000001234567/ 
004066 xxxx 060061062063  
004067 xxxx 064065066067  
004070 xxxx 000000000000 FLD3ad:  DEC      0           unmatched count - 3
004071 xxxx 020103115120 CMPBmsg:    acc     "CMPB Tests ...\r\n" 
004072 xxxx 102040124145  
004073 xxxx 163164163040  
004074 xxxx 056056056015  
004075 xxxx 012040040040  
004076 xxxx 020061056040 msg26:      acc     "1. FLD1 > FLD2\r\n" 
004077 xxxx 106114104061  
004100 xxxx 040076040106  
004101 xxxx 114104062015  
004102 xxxx 012040040040  
004103 xxxx 020062056040 msg27:      acc     "2. FLD1 < FLD2\r\n" 
004104 xxxx 106114104061  
004105 xxxx 040074040106  
004106 xxxx 114104062015  
004107 xxxx 012040040040  
004110 xxxx 020063056040 msg28:      acc     "3. FLD1 = FLD2\r\n" 
004111 xxxx 106114104061  
004112 xxxx 040075040106  
004113 xxxx 114104062015  
004114 xxxx 012040040040  
004115 xxxx 000000633000 rd_clock:	rccl                " read the clock
004116 xxxx 004240757000 cv_clock:	staq	rdctime     " save clock reading
004117 xxxx 004211742000 	stx2	datx2               " save XR's
004120 xxxx 004212740000 	stx0	datx2+1             " ..
004121 xxxx 000034235007 	lda     28,dl               " Initialize montab
004122 xxxx 004243755000 	sta     montab+1			" to prime Feb
004123 xxxx 004240237000 	ldaq	rdctime             " Get clock reading
004124 xxxx 000001737000 	lls     1                   " Set for dvf
004125 xxxx 004634507000 	dvf     =1000000			" Get seconds since 1900.
004126 xxxx 000044777000 	llr     36                  " Into Q.
004127 xxxx 000074506007 	div     60,dl               " Seconds since min to A, mins to Q.
004130 xxxx 004224755000 	sta     rdclock.sec         " Save for inspection.
004131 xxxx 000074506007 	div     60,dl               " Min since hr to A, hrs to Q.
004132 xxxx 004223755000 	sta     rdclock.min
004133 xxxx 000006627000 	eax7	6
004134 xxxx 004214702000 	tsx2	datecv              " Convert the minutes.
004135 xxxx 004234176000 	sbq     rdclock.zone_temp	" Adjust for GMT.
004136 xxxx 000030506007 	div     24,dl               " Days since 1900 in q.
004137 xxxx 004233756000 	stq     rdclock.day_of_century	" save for  later.
004140 xxxx 004222755000 	sta     rdclock.hr          " Hours since daybreak.
004141 xxxx 004214702000 	tsx2	datecv              " Convert the hours
004142 xxxx 002665506007 	div     365*4+1,dl          " get leap year cycle
004143 xxxx 002110115007 	cmpa	365*3+1,dl          " if in last year of cycle (the leap year)
004144 xxxx 004146604000 	tmi     *+2                 " no
004145 xxxx 004243054000 	aos     montab+1			" allow for feb 29
004146 xxxx 000002736000 	qls     2                   " 4*# leap year cycles
004147 xxxx 003555036007 	adlq	1901,dl
004150 xxxx 004232756000 	stq     rdclock.year		" Save
004151 xxxx 000044777000 	llr     36
004152 xxxx 000555506007 	div     365,dl              " Years complete since l.y.c. =>Q
004153 xxxx 000004116007 	cmpq	4,dl                " Dec 31st of leap year?
004154 xxxx 004157601000 	tnz     *+3                 " No.
004155 xxxx 000001176007 	sbq     1,dl                " Adjust year and
004156 xxxx 000555235007 	lda     365,dl              " day numbers.
004157 xxxx 004232056000 	asq     rdclock.year		" Add in years complete.
004160 xxxx 000000626000 	eax6	0                   " search for correct month
004161 xxxx 030220520201 	rpt     12,1,tmi			" .. 
004162 xxxx 004242175016 	sba     montab,6			" subtract off days for each month
004163 xxxx 777777075016 	ada     -1,6                " put back last entry
004164 xxxx 000001075007 	ada     1,dl                " plus one more
004165 xxxx 004227755000 	sta     rdclock.day_of_month	" Day of month
004166 xxxx 004214702000 	tsx2	datecv              " convert day
004167 xxxx 000000635016 	eaa     0,6
004170 xxxx 004242135003 	sbla	montab,du			" get index into month table
004171 xxxx 000022771000 	arl     18                  "..
004172 xxxx 004225755000 	sta     rdclock.month		" Save month number
004173 xxxx 004267236005 	ldq     rdc.months-1,al		" Get name of month.
004174 xxxx 004226756000 	stq     rdclock.month_name
004175 xxxx 004214702000 	tsx2	datecv              " convert month
004176 xxxx 000000024400 	mvne	(),(),()			" edit the date and time
004177 xxxx 004237070010 	desc4ns	date,8 
004200 xxxx 004256000014 	desc9a	datedit,12 
004201 xxxx 004240020014 	desc6a	rdctime,12 
004202 xxxx 004233236000 	ldq     rdclock.day_of_century
004203 xxxx 000002076007 	adq     2,dl                " Bump Tuesday into place.
004204 xxxx 000007506007 	div     7,dl
004205 xxxx 004230755000 	sta     rdclock.day_of_week
004206 xxxx 004261236005 	ldq     rdc.days,al         " Get name of day.
004207 xxxx 004231756000 	stq     rdclock.day_name
004210 xxxx 004240237000 	ldaq	rdctime             " get conversion in AQ
004211 xxxx 004211622000 datx2:	eax2	*			" restore XR's
004212 xxxx 004212620000 	eax0    *               " ..
004213 xxxx 000000710012 	tra     0,2             " return to caller
004214 xxxx 004236755000 datecv:	sta	datenum			" save number
004215 xxxx 000017301400 	btd     (),(x7)         " convert into proper place
004216 xxxx 004236000004 	desc9a	datenum,4 
004217 xxxx 004237070002 	desc4ns	date,2 
004220 xxxx 777776627017 	eax7	-2,7			" move offset index
004221 xxxx 000000710012 	tra     0,2             " and return
004222 xxxx 000000000000 	bss	,1
004223 xxxx 000000000000 	bss	,1
004224 xxxx 000000000000 	bss	,1
004225 xxxx 000000000000 	bss	,1
004226 xxxx 000000000000 	bss	,1
004227 xxxx 000000000000 	bss	,1
004230 xxxx 000000000000 	bss	,1
004231 xxxx 000000000000 	bss	,1
004232 xxxx 000000000000 	bss	,1
004233 xxxx 000000000000 	bss	,1
004234 xxxx 000000000007     dec     7   "8
004235 xxxx 160163164040     aci     'pst ' 
004236 xxxx 000000000000 datenum:	bss	,1
004237 xxxx 000000000000 date:	bss	,1
004240 xxxx 000000000000 rdctime:	bss	,2
004242 xxxx 000000000037 montab:	dec	31,28,31,30,31,30,31,31,30,31,30,31
004243 xxxx 000000000034
004244 xxxx 000000000037
004245 xxxx 000000000036
004246 xxxx 000000000037
004247 xxxx 000000000036
004250 xxxx 000000000037
004251 xxxx 000000000037
004252 xxxx 000000000036
004253 xxxx 000000000037
004254 xxxx 000000000036
004255 xxxx 000000000037
004256 xxxx 401020102260 datedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
004257 xxxx 061322021322 
004260 xxxx 260015322021 	vfd	9/insp,o9/15,9/mvc+2,9/insm+1
004261 xxxx 163165156040 rdc.days: aci	'sun mon tue wed thurfri sat ' 
004262 xxxx 155157156040  
004263 xxxx 164165145040  
004264 xxxx 167145144040  
004265 xxxx 164150165162  
004266 xxxx 146162151040  
004267 xxxx 163141164040  
004270 xxxx 152141156040 	aci	'jan feb mar apr may jun jul aug septoct nov dec ' 
004271 xxxx 146145142040  
004272 xxxx 155141162040  
004273 xxxx 141160162040  
004274 xxxx 155141171040  
004275 xxxx 152165156040  
004276 xxxx 152165154040  
004277 xxxx 141165147040  
004300 xxxx 163145160164  
004301 xxxx 157143164040  
004302 xxxx 156157166040  
004303 xxxx 144145143040  
004304 xxxx 004307710000 crlf:	save
004305 xxxx 000000000000
004306 xxxx 004305630000
004307 xxxx 004305754000
004310 xxxx 004305741000
004311 xxxx 004635235000         lda     =012
004312 xxxx 000001420400         emCall  1
004313 xxxx 004636235000         lda     =015
004314 xxxx 000001420400         emcall      1
004315 xxxx 004306710000         return  crlf
004316 xxxx 004325710000 ioa:    save    2, 4, 5, 6
004317 xxxx 000000000000
004320 xxxx 000000222003
004321 xxxx 000001224003
004322 xxxx 000002225003
004323 xxxx 000003226003
004324 xxxx 004317630000
004325 xxxx 004317754000
004326 xxxx 004317741000
004327 xxxx 004320742000
004330 xxxx 004321744000
004331 xxxx 004322745000
004332 xxxx 004323746000
004333 xxxx 000002624031 ioa1:   eax4    2, 1*   " 1st arg is control string
004334 xxxx 000003625011         eax5    3, 1    " next arg is the 1st of the numeric args. x5 points to next argument
004335 xxxx 000000626015         eax6    0, x5
004336 xxxx 000041235007         lda     041, dl " make a blank tallyb word .....
004337 xxxx 004354755000         sta     i29
004340 xxxx 000000235014     	lda     0, x4   " get 1st data word into A
004341 xxxx 000033731000         ars     27      " determine word count
004342 xxxx 000006735000     	als     6       " count to upper word of tally
004343 xxxx 004354255000     	orsa    i29
004344 xxxx 000000626014     	eax6    0, x4   " address of string into X6
004345 xxxx 004354746000     	stx6    i29     " address to upper word of tally
004346 xxxx 004354235052 inext:  lda     i29, sc
004347 xxxx 000136115007         cmpa    =o000136,dl		" ^
004350 xxxx 004355600000         tze     iernot      " if so, go process it
004351 xxxx 000001420400 out1:  	emCall  1
004352 xxxx 004346607000     	ttf     inext
004353 xxxx 004320710000         return  ioa
004354 xxxx 000000000041 i29:	tallyb  0, 0, 1 
004355 xxxx 004354235052 iernot: lda     i29, sc         " get next char ...
004356 xxxx 000136115007         cmpa    =o000136,dl     " is it another "^"?
004357 xxxx 004375600000         tze     i21             " No, just print it ...
004360 xxxx 000167115007         cmpa    =o000167,dl     " is it a "w"?
004361 xxxx 004377600000         tze     idoW            " do full word octal
004362 xxxx 000157115007         cmpa    =o000157,dl     " is it an "o"?
004363 xxxx 004425600000         tze     idoO            " print zero suppressed octal
004364 xxxx 000156115007         cmpa    =o000156,dl     " is it a "n"?
004365 xxxx 004450600000         tze     idoN            " octal w/ no spaces inserted
004366 xxxx 000144115007         cmpa    =o000144,dl     " is it a "d"?
004367 xxxx 004476600000         tze     idoD            " decimal
004370 xxxx 000141115007         cmpa    =o000141,dl     " is it a ^a?
004371 xxxx 004504600000         tze     idoA            " 4 char ascii display
004372 xxxx 000147115007         cmpa    =o000147,dl     " is it a ^g?
004373 xxxx 004515600000         tze     idoG            " 6 char GE BCD display
004374 xxxx 004351710000         tra     out1        " unknown just print it....
004375 xxxx 000001420400 i21:    emCall  1           " output A to console
004376 xxxx 004346710000         tra     inext
004377 xxxx 000000235035 idoW:   lda     0, 5*       " ^w - full-word octal xxxxxx xxxxxx
004400 xxxx 004573702000         tsx2    octwd
004401 xxxx 004474757000         staq    ioaSafe     " bcd in AQ
004402 xxxx 000044773000         lrl     36          " A => Q
004403 xxxx 000006622000         eax2    6
004404 xxxx 000000235007 idoW2:  lda     =0, dl
004405 xxxx 000006737000         lls     6
004406 xxxx 000002420400         emCall  2           " output GE code char to console
004407 xxxx 777777622012         eax2    -1, 2
004410 xxxx 004404601000         tnz     idoW2
004411 xxxx 004474237000         ldaq    ioaSafe
004412 xxxx 000000235007         lda     =0, dl      " 0 => A
004413 xxxx 000020235007         lda     =020 ,dl     " bcd ' ' => A
004414 xxxx 000002420400         emcall  2
004415 xxxx 000006622000         eax2    6
004416 xxxx 000000235007 idoW3:  lda     =0,dl
004417 xxxx 000006737000         lls     6
004420 xxxx 000002420400         emCall  2
004421 xxxx 777777622012         eax2    -1, 2
004422 xxxx 004416601000         tnz     idoW3
004423 xxxx 000001065003         adx5    1,du
004424 xxxx 004346710000         tra     inext
004425 xxxx 000000235035 idoO:   lda     0, 5*           " ^o - Zero-suppressed octal
004426 xxxx 004573702000         tsx2    octwd
004427 xxxx 004474757000         staq    ioaSafe         " bcd in AQ
004430 xxxx 004446235000         lda     idOTly
004431 xxxx 004447755000         sta     idOT
004432 xxxx 004447235052 idO1:   lda     idOT, sc        " get char into A
004433 xxxx 000000115007         cmpa    =0, dl          " a zero?
004434 xxxx 004442601000         tnz     idONZ + 1       " nope
004435 xxxx 004432607000         ttf     idO1            " Yes, a Zero. Go for more
004436 xxxx 000002420400         emCall  2               " output a single 0
004437 xxxx 000001065003         adx5    1,du
004440 xxxx 004346710000         tra     inext
004441 xxxx 004447235052 idONZ:  lda     idOT, sc        " get char into A
004442 xxxx 000002420400         emCall  2
004443 xxxx 004441607000         ttf     idONZ           " Yes, a Zero. Go for more
004444 xxxx 000001065003         adx5    1,du
004445 xxxx 004346710000         tra     inext
004446 xxxx 004474001400 idOTly: tally   ioaSafe, 12, 0 
004447 xxxx 000000000000 idOT:   bss     1
004450 xxxx 000000235035 idoN:   lda     0, 5*       " ^n - octal w/ no spaces inserted
004451 xxxx 004573702000         tsx2    octwd
004452 xxxx 004474757000         staq    ioaSafe     " bcd in AQ
004453 xxxx 000044773000         lrl     36          " A => Q
004454 xxxx 000006622000         eax2    6
004455 xxxx 000000235007 idoN2:  lda     =0,dl
004456 xxxx 000006737000         lls     6
004457 xxxx 000002420400         emCall  2           " output GE code char to console
004460 xxxx 777777622012         eax2    -1, 2
004461 xxxx 004455601000         tnz     idoN2
004462 xxxx 004474237000         ldaq    ioaSafe
004463 xxxx 000000235007         lda     =0, dl      " 0 => A
004464 xxxx 000006622000         eax2    6
004465 xxxx 000000235007 idoN3:  lda     =0, dl
004466 xxxx 000006737000         lls     6
004467 xxxx 000002420400         emCall  2
004470 xxxx 777777622012         eax2    -1, 2
004471 xxxx 004465601000         tnz     idoN3
004472 xxxx 000001065003         adx5    1,du
004473 xxxx 004346710000         tra     inext
004474 xxxx 000000000000 ioaSafe:  bss 2
004476 xxxx 000000236035 idoD:   ldq     0, 5*       " ^d
004477 xxxx 004526701000         call    toDec
004500 xxxx 004502710000
004501 xxxx 000000000000
004502 xxxx 000001065003         adx5    1,du
004503 xxxx 004346710000         tra     inext
004504 xxxx 000000236035 idoA:   ldq     0, 5*      " ^a (4 ascii chars into Q)
004505 xxxx 000004622000         eax2    4
004506 xxxx 000000235007 idoA2:  lda     =0,dl
004507 xxxx 000011737000         lls     9
004510 xxxx 000001420400         emCall  1
004511 xxxx 777777622012         eax2    -1, 2
004512 xxxx 004506601000         tnz     idoA2
004513 xxxx 000001065003         adx5    1,du        " into next argument
004514 xxxx 004346710000         tra     inext
004515 xxxx 000000236035 idoG:   ldq     0, 5*        " ^g (6 GE BCD chars into Q)
004516 xxxx 000006622000         eax2    6
004517 xxxx 000000235007 idoG2:  lda     =0,dl
004520 xxxx 000006737000         lls     6
004521 xxxx 000002420400         emCall  2
004522 xxxx 777777622012         eax2    -1, 2
004523 xxxx 004517601000         tnz     idoG2
004524 xxxx 000001065003         adx5    1,du        " into next argument
004525 xxxx 004346710000         tra     inext
004526 xxxx 004531710000 toDec:  save    "2,3,4,5,6,7
004527 xxxx 000000000000
004530 xxxx 004527630000
004531 xxxx 004527754000
004532 xxxx 004527741000
004533 xxxx 004637116000         cmpq    =-34359738368       " the weird one?
004534 xxxx 004540601000         tnz     toDec2
004535 xxxx 004572235000         lda     decMTly             " just print it and be done with it
004536 xxxx 004566755000         sta     decTly
004537 xxxx 004556710000         tra     toDec1
004540 xxxx 004562756000 toDec2: stq     decNo
004541 xxxx 000000116007         cmpq    =0,dl       " Q < 0?
004542 xxxx 004544605000         tpl     toDec0      " No
004543 xxxx 004562336000         lcq     decNo       " -decNo => Q
004544 xxxx 000012506007 toDec0: div     =10,dl      " divide Q by 10, remainder in A
004545 xxxx 000060075007         ada     =o060,dl    " add ascii '0' (=1A0) to A
004546 xxxx 004566755045         sta     decTly, scr " start writing characters backwards
004547 xxxx 000000076007         adq     =0,dl       " set flags to test if Q == 0
004550 xxxx 004544601000         tnz     toDec0      " if Q == 0 then we're essentially done with conversion
004551 xxxx 004562235000         lda     decNo
004552 xxxx 000000115007         cmpa    =0,dl
004553 xxxx 004556605000         tpl     toDec1
004554 xxxx 000055235007         lda     =o055,dl    " (-) => A
004555 xxxx 004566755045         sta     decTly, scr " write (-) sign
004556 xxxx 004566235052 toDec1: lda     decTly, sc
004557 xxxx 000001420400         emCall  1
004560 xxxx 004556607000         ttf     toDec1
004561 xxxx 004530710000         return  toDec
004562 xxxx 000000000000 decNo:  dec     0
004563 xxxx 000000000000 decBuf: bss     3
004566 xxxx 004565000040 decTly: tallyb  decBuf+2, , 0 
004567 xxxx 055063064063 decMM:  aci     "-34359738368"  " -2^^35 
004570 xxxx 065071067063  
004571 xxxx 070063066070  
004572 xxxx 004567001440 decMTly:tallyb  decMM, 12, 0 
004573 xxxx 004610742000 octwd:	stx2	octx2
004574 xxxx 000006622000 	eax2	6
004575 xxxx 000003736000 	qls     3
004576 xxxx 000003777000 	llr     3
004577 xxxx 777777622012 	eax2	-1,2
004600 xxxx 004575605400 	tpnz	*-3
004601 xxxx 004632756000 	stq     octtemp
004602 xxxx 000006622000 	eax2	6
004603 xxxx 000003736000 	qls     3
004604 xxxx 000003777000 	llr     3
004605 xxxx 777777622012 	eax2	-1,2
004606 xxxx 004603605400 	tpnz	*-3
004607 xxxx 004632235000 	lda     octtemp
004610 xxxx 004610622000 octx2:	eax2	*
004611 xxxx 000000710012 	tra     0,2
004612 xxxx 004630742000 hexwd:	stx2	hexx2
004613 xxxx 000044773000 	lrl     36          "shift to Q
004614 xxxx 000006622000 	eax2	6           "	process 6 characters
004615 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
004616 xxxx 000004737000 	lls     4           "shift in 4 bits
004617 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
004620 xxxx 004622604400 	tmoz	*+2
004621 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
004622 xxxx 000006773000 	lrl     6
004623 xxxx 004632235000 	lda     octtemp		"get temporary
004624 xxxx 000006737000 	lls     6           "insert new character
004625 xxxx 004632755000 	sta     octtemp		"and store
004626 xxxx 777777622012 	eax2	-1,2		"decrement index
004627 xxxx 004615605400 	tpnz	hexloop
004630 xxxx 004630622000 hexx2:	eax2	*
004631 xxxx 000000710012 	tra     0,2		"return to caller
004632 xxxx 000000000000 octtemp:	oct	0
004633 xxxx 000000000000 lit Lit000467 (=0)
004634 xxxx 000003641100 lit Lit004125 (=1000000)
004635 xxxx 000000000012 lit Lit004311 (=012)
004636 xxxx 000000000015 lit Lit004313 (=015)
004637 xxxx 400000000000 lit Lit004533 (=-34359738368)
