# DPS/8M simulator: src/Makefile.var
# vim: filetype=make:tabstop=4:tw=76
#
###############################################################################
#
# Copyright (c) 2021 The DPS8M Development Team
#
# All rights reserved.
#
# This software is made available under the terms of the ICU
# License, version 1.8.1 or later.  For more details, see the
# LICENSE.md file at the top-level directory of this distribution.
#
###############################################################################
# src/Makefile.var: Variable processing logic and build configuration

###############################################################################

ifeq ($(SERIAL),1)
  SERIAL=1
  USE_SERIAL=1
  CFLAGS += -DUSE_SERIAL
endif

###############################################################################

ifeq ($(ISOLTS),1)
  unexport NO_LOCKLESS
  undefine NO_LOCKLESS
  LOCKLESS=1
  ISOLTS=1
  WAM=1
  CFLAGS += -DISOLTS
endif

###############################################################################

ifeq ($(ROUND_ROBIN),1)
  ROUND_ROBIN=1
  NO_LOCKLESS=1
  undefine LOCKLESS
  unexport LOCKLESS
  CFLAGS += -DROUND_ROBIN
endif

###############################################################################

ifneq ($(NO_LOCKLESS),1)
  LOCKLESS=1
endif

###############################################################################

ifdef HDBG
  HDBG=1
  TESTING=1
  CFLAGS += -DHDBG
endif

###############################################################################

ifdef L68
  L68=1
  CFLAGS += -DL68
endif

###############################################################################

ifdef TRACKER
  TRACKER=1
  TESTING=1
  CFLAGS += -DTRACKER
  CFLAGS += -DTESTING
endif

###############################################################################

ifdef TESTING
  TESTING=1
  CFLAGS += -DTESTING
endif

###############################################################################

ifeq ($(OS),Windows_NT)
  CROSS=MINGW64
endif

###############################################################################

ifeq ($(THREADZ),1)
  THREADZ=1
  ifndef SUNPRO
    ifndef SUNLINT
      CFLAGS += -pthread
    endif
  endif
    CFLAGS += -DTHREADZ
    LIBS += -lpthread
endif

###############################################################################

ifeq ($(WAM),1)
  WAM=1
  CFLAGS += -DWAM
endif

###############################################################################

ifeq ($(LOCKLESS),1)
  LOCKLESS=1
  ifndef SUNPRO
    ifndef SUNLINT
      CFLAGS += -pthread
    endif
  endif
  ifndef SUNLINT
    ifdef SUNPRO
      CFLAGS += -mt
    endif
  endif
  CFLAGS += -DLOCKLESS
  ifndef SUNPRO
    ifndef SUNLINT
      LIBS += -lpthread
    endif
  endif
endif

###############################################################################

ifeq ($(SPEED),1)
  SPEED=1
  CFLAGS += -DSPEED
endif

###############################################################################

ifeq ($(NEED_128),1)
  NEED_128=1
  CFLAGS += -DNEED_128
endif

###############################################################################
# For embedding current time of building object

ifndef VER_CURRENT_TIME
  VER_CURRENT_TIME=$(shell env TZ=UTC date -u "+%Y-%m-%d %H:%M UTC"           \
    2> /dev/null || printf '%s\n' "2020-01-01 00:00 UTC")
endif
export VER_CURRENT_TIME

###############################################################################

ifdef OS_IBMAIX
  BUILD_OSAP_OSS_TEXT=$(shell printf '%s\n' "$(OS_IBMAIX)"  2> /dev/null  |   \
    tr -d '*'                                               2> /dev/null  |   \
      tr -s ' '                                             2> /dev/null ||   \
        printf '%s\n' "Unknown")
  export BUILD_OSAP_OSS_TEXT
  BUILD_OSAP_OSM_TEXT=$(shell (uname -M                     2> /dev/null ||   \
   uname -p 2> /dev/null)                                                 |   \
    sed 's/ (emulated by ....)//'                           2> /dev/null ||   \
      tr -d '*'                                             2> /dev/null  |   \
        tr -s ' '                                           2> /dev/null ||   \
          printf '%s\n' "Unknown")
  export BUILD_OSAP_OSM_TEXT
endif

###############################################################################

ifndef BUILD_PROM_OSV_TEXT
  ifndef BUILD_OSAP_OSS_TEXT
    BUILD_OSAP_OSS_TEXT=$(shell uname -s  2> /dev/null  |                     \
      tr -d '*'                           2> /dev/null  |                     \
        tr -s ' '                         2> /dev/null ||                     \
          printf '%s\n' "Unknown")
    export BUILD_OSAP_OSS_TEXT
  endif
  BUILD_PROM_OSV_TEXT=$(shell printf '%-20s\n' "$(BUILD_OSAP_OSS_TEXT)" |     \
    cut -b 1-20 2> /dev/null)
endif

###############################################################################

ifndef BUILD_PROM_OSA_TEXT
  ifndef BUILD_OSAP_OSM_TEXT
    BUILD_OSAP_OSM_TEXT=$(shell uname -m  2> /dev/null  |                     \
      tr -d '*'                           2> /dev/null  |                     \
        tr -s ' '                         2> /dev/null ||                     \
          printf '%s\n' "Unknown")
    export BUILD_OSAP_OSM_TEXT
  endif
  BUILD_PROM_OSA_TEXT=$(shell printf '%-20s\n' "$(BUILD_OSAP_OSM_TEXT)" |     \
    cut -b 1-20 2> /dev/null)
endif

###############################################################################

ifndef SUNPRO
  ifndef SUNLINT
    ifneq "$(findstring gcc,$(CC))" ""
      CFLAGS += -fno-delete-null-pointer-checks
      CFLAGS += -Wno-maybe-uninitialized
      CFLAGS += -Wno-unknown-warning-option
    endif
  endif
endif

###############################################################################

# Local Variables:
# mode: make
# tab-width: 4
# End:
