ASSEMBLY LISTING OF SEGMENT >spec>install>1112>save_handler_mc.alm                                                                                                                                  
ASSEMBLED ON:	11/11/89  0925.6 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1984 *
                                     6  " *                                                         *
                                     7  " ***********************************************************
                        000000       8  	segdef	save_handler_mc
                                     9  "
                                    10  " Routine to save into the toehold the machine conditions needed
                                    11  " to restart bootload Multics.  Keith Loepere, in '83.  
                                    12  "
                                    13  " Called with a pointer to the toehold.
                                    14  
                                    15  " This program is used in concert with init_toehold and with toehold.  The
                                    16  " idea is that the toehold needs a way to re-invoke bce.  To do this, it reads
                                    17  " in the memory image of bce saved by init_toehold.  It restores certain
                                    18  " processor registers, saved by this program and then transfers to bce.
                                    19  
                                    20  " Subtleties:
                                    21  "
                                    22  " The toehold returns to bce by returning here, into save_handler_mc.  This is
                                    23  " because it is the safest place to which to return, since the state of memory
                                    24  " and the processor was saved here, and only accurately describes this point in
                                    25  " time.
                                    26  "
                                    27  " When the toehold returns here, we simply return, as we did when called from
                                    28  " init_toehold.  We thus end up in init_toehold, who is smart enough to tell
                                    29  " that it is really the toehold that found its way there, and so it quickly
                                    30  " starts the process of running the initialization pass needed to restart bce.
                                    31  "
                                    32  " Since init_toehold saves the memory before calling this program, the return
                                    33  " data stored into memory by calling this program does not appear on disk.  So,
                                    34  " we save in unused locations in the toehold data that information needed to
                                    35  " reconstruct the return data in our caller's (init_toehold) stack frame so we
                                    36  " may return to it.
                                    37  
                                    38  "
                                    39  	include	stack_frame
                                   1-1  "
                                   1-2  "	BEGIN INCLUDE FILE ... stack_frame.incl.alm   6/72 RBS
                                   1-3  "
                                   1-4  " Modified: 16 Dec 1977, D. Levin - to add fio_ps_ptr
                                   1-5  " Modified:  3 Feb 1978, P. Krupp - to add run_unit_manager_bit & main_proc_bit
                                   1-6  " Modified: 21 March 1978, D. Levin - change fio_ps_ptr to support_ptr
                                   1-7  "
                        000020     1-8  	equ	stack_frame.prev_sp,16
                        000020     1-9  	equ	stack_frame.condition_word,16
                        000022    1-10  	equ	stack_frame.next_sp,18
                        000022    1-11  	equ	stack_frame.signaller_word,18
                        000024    1-12  	equ	stack_frame.return_ptr,20
                        000026    1-13  	equ	stack_frame.entry_ptr,22
                        000030    1-14  	equ	stack_frame.operator_ptr,24
                        000030    1-15  	equ	stack_frame.lp_ptr,24
                        000032    1-16  	equ	stack_frame.arg_ptr,26
                        000034    1-17  	equ	stack_frame.static_ptr,28
                        000035    1-18  	equ	stack_frame.support_ptr,29	" only used by fortran I/O
                        000036    1-19  	equ	stack_frame.on_unit_rel_ptrs,30
                        000037    1-20  	equ	stack_frame.operator_ret_ptr,31
                        000037    1-21  	equ	stack_frame.translator_id,31
                        000040    1-22  	equ	stack_frame.regs,32
                        000060    1-23  	equ	stack_frame.min_length,48
                        000020    1-24  	equ	stack_frame.flag_word,16
                        020000    1-25  	bool	stack_frame.main_proc_bit,020000	(DL)
                        010000    1-26  	bool	stack_frame.run_unit_manager,010000	(DL)
                        004000    1-27  	bool	stack_frame.signal_bit,004000		(DL)
                        002000    1-28  	bool	stack_frame.crawl_out_bit,002000	(DL)
                        001000    1-29  	bool	stack_frame.signaller_bit,001000	(DL)
                        000400    1-30  	bool	stack_frame.link_trap_bit,000400	(DL)
                        000200    1-31  	bool	stack_frame.support_bit,000200	(DL)
                        000100    1-32  	bool	stack_frame.condition_bit,000100	(DL)
                                  1-33  
                                  1-34  "
                                  1-35  "	END INCLUDE FILE  ... stack_frame.incl.alm
                                  1-36  "
                                    40  	include	toehold_save_dcls_
                                   2-1  
                                   2-2  
                                   2-3       "BEGIN INCLUDE FILE toehold_save_dcls_.incl.alm
                                   2-4  
                                   2-5  
                                   2-6  " HISTORY COMMENTS:
                                   2-7  "  1) change(83-08-01,Margulies), approve(), audit(), install():
                                   2-8  "      Initial coding by Margulies and Loepere.
                                   2-9  "  2) change(85-01-09,Fawcett), approve(85-09-09,MCR6979),
                                  2-10  "     audit(86-01-31,GDixon), install(86-03-21,MR12.0-1033):
                                  2-11  "      Support of FIPS 3380 cylinder size.
                                  2-12  "                                                      END HISTORY COMMENTS
                                  2-13  
                                  2-14  
                                  2-15  	"Created 01/29/86  1201.9 mst Wed by convert_include_file,
                                  2-16  	"   Version of 01/09/85  0754.4 mst Wed.
                                  2-17  
                                  2-18  	"Made from >dumps>old>dipper>audit_dipper>incl>toehold_save_dcls_.incl.pl1,
                                  2-19  	"   modified 01/29/86  1201.6 mst Wed
                                  2-20  
                                  2-21  "
                                  2-22  "	Structure toehold
                                  2-23  "
                        004000    2-24  	equ	toehold_size,2048
                                  2-25  
                                  2-26  
                        000000    2-27  	equ	toehold.entry_sequences,0	" DOUBLE
                        000040    2-28  	equ	toehold.flagbox,32
                        000140    2-29  	equ	toehold.handler_mc,96	" LEVEL 2
                                  2-30  
                        000220    2-31  	equ	toehold.paths,144		" LEVEL 2
                                  2-32  
                        000240    2-33  	equ	toehold.n_paths_used,160
                        000241    2-34  	equ	toehold.memory_state,161
                        000242    2-35  	equ	toehold.bce_dbr,162		" DOUBLE
                        000244    2-36  	equ	toehold.bce_mode_reg,164
                        000245    2-37  	equ	toehold.bce_cache_mode_reg,165
                        000246    2-38  	equ	toehold.esd_segnum,166
                                  2-39  
                        000247    2-40  	equ	toehold.dcw_list_size,167	" UPPER
                        000247    2-41  	equ	toehold.dcws_per_cyl,167	" LOWER
                                  2-42  
                        000250    2-43  	equ	toehold.seeks_used,168
                        000251    2-44  	equ	toehold.save_dcws,169
                        000655    2-45  	equ	toehold.handler_dcws,429
                        001660    2-46  	equ	toehold.handler_code,944	" DOUBLE
                        002760    2-47  	equ	toehold.multics_state,1520	" LEVEL 2
                                  2-48  
                                  2-49  
                                  2-50  "
                                  2-51  "	Structure dcw_list
                                  2-52  "
                        000000    2-53  	equ	dcw_list.seek_addresses,0
                        000001    2-54  	equ	dcw_list.seek_idcw,1
                        000002    2-55  	equ	dcw_list.seek_dcw,2
                        000003    2-56  	equ	dcw_list.data_idcw,3
                        000004    2-57  	equ	dcw_list.data_dcws,4
                                  2-58  
                        004230    2-59  	equ	BCE_PART_LTH,2200		" MANIFEST
                        000000    2-60  	equ	SAVED_IMAGE_RECORDX,0	" MANIFEST
                        001000    2-61  	equ	CRASH_HANDLER_RECORDX,512	" MANIFEST
                        002000    2-62  	equ	BCE_PAGING_AREA_RECORDX,1024	" MANIFEST
                        000200    2-63  	equ	BCE_PAGING_AREA_LTH,128	" MANIFEST
                        002200    2-64  	equ	MST_AREA_RECORDX,1152	" MANIFEST
                                  2-65  
                                  2-66  "
                                  2-67  "	Structure toe_hold
                                  2-68  "
                        004000    2-69  	equ	toe_hold_size,2048
                                  2-70  
                        000000    2-71  	equ	toe_hold.entry_sequences,0	" DOUBLE
                        000040    2-72  	equ	toe_hold.flagbox,32
                        000220    2-73  	equ	toe_hold.paths,144		" LEVEL 2
                                  2-74  
                        000240    2-75  	equ	toe_hold.n_paths_used,160
                        000241    2-76  	equ	toe_hold.memory_state,161
                        000242    2-77  	equ	toe_hold.bce_dbr,162	" DOUBLE
                        002760    2-78  	equ	toe_hold.multics_state,1520	" LEVEL 2
                                  2-79  
                                  2-80  
                                  2-81  "
                                  2-82  "	Structure io_path
                                  2-83  "
                        000004    2-84  	equ	io_path_size,4
                                  2-85  
                        000000    2-86  	equ	io_path.pcw,0		" DOUBLE
                                  2-87  
                        000002    2-88  	equ	io_path.port_number_word,2
                        000041    2-89  	equ	io_path.port_number_shift,33
                        000007    2-90  	bool	io_path.port_number_mask,000007
                        000002    2-91  	equ	io_path.iom_number_word,2
                        000022    2-92  	equ	io_path.iom_number_shift,18
                        077777    2-93  	bool	io_path.iom_number_mask,077777
                        000002    2-94  	equ	io_path.channel_number,2	" LOWER
                                  2-95  
                        000000    2-96  	equ	TOE_HOLD_CRASH_ENTRY,0	" MANIFEST
                        000001    2-97  	equ	TOE_HOLD_ESD_ENTRY,1	" MANIFEST
                        000002    2-98  	equ	TOE_HOLD_DUMP_ENTRY,2	" MANIFEST
                        000003    2-99  	equ	TOE_HOLD_MULTICS_ENTRY,3	" MANIFEST
                        000004   2-100  	equ	TOE_HOLD_RESTART_ENTRY,4	" MANIFEST
                        000005   2-101  	equ	TOE_HOLD_BOOT_ENTRY,5	" MANIFEST
                        000014   2-102  	equ	TOE_HOLD_BOS_ENTRY,12	" MANIFEST
                        000015   2-103  	equ	TOE_HOLD_BOS_NO_SAVE_ENTRY,13	" MANIFEST
                        000016   2-104  	equ	TOE_HOLD_BOS_MULTICS_ENTRY,14	" MANIFEST
                                 2-105  
                                 2-106  "
                                 2-107  "	Structure mc_state
                                 2-108  "
                        001020   2-109  	equ	mc_state_size,528
                                 2-110  
                        000000   2-111  	equ	mc_state.mc_,0		" LEVEL 2
                                 2-112  
                        000060   2-113  	equ	mc_state.masks,48
                        000100   2-114  	equ	mc_state.interrupt,64	" DOUBLE
                        000102   2-115  	equ	mc_state.mode_reg,66
                        000103   2-116  	equ	mc_state.cache_mode_reg,67
                        000104   2-117  	equ	mc_state.dbr,68		" DOUBLE
                        000106   2-118  	equ	mc_state.cfg,70		" DOUBLE
                        000110   2-119  	equ	mc_state.bar,72
                        000111   2-120  	equ	mc_state.old_memory_state,73
                        000120   2-121  	equ	mc_state.ou_history_registers,80 " DOUBLE
                        000160   2-122  	equ	mc_state.cu_history_registers,112 " DOUBLE
                        000220   2-123  	equ	mc_state.du_history_registers,144 " DOUBLE
                        000260   2-124  	equ	mc_state.apu_history_registers,176 " DOUBLE
                        000320   2-125  	equ	mc_state.ptwam_ptrs,208
                        000420   2-126  	equ	mc_state.ptwam_regs,272
                        000520   2-127  	equ	mc_state.sdwam_ptrs,336
                        000620   2-128  	equ	mc_state.sdwam_regs,400	" DOUBLE
                                 2-129  
                        000000   2-130  	equ	Initial_undefined,0		" MANIFEST
                        000001   2-131  	equ	At_bce__early,1		" MANIFEST
                        000002   2-132  	equ	At_bce__boot,2		" MANIFEST
                        000003   2-133  	equ	Multics,3			" MANIFEST
                        000004   2-134  	equ	Undefined_saving_state,4	" MANIFEST
                        000005   2-135  	equ	Undefined_reading_bce,5	" MANIFEST
                        000006   2-136  	equ	At_bce__crash,6		" MANIFEST
                        000007   2-137  	equ	At_bce__shutdown,7		" MANIFEST
                        000010   2-138  	equ	Undefined_continue,8	" MANIFEST
                        000011   2-139  	equ	Undefined_saving_mem,9	" MANIFEST
                                 2-140  
                                 2-141  "
                                 2-142  "	Structure mc
                                 2-143  "
                        000060   2-144  	equ	mc_size,48
                                 2-145  
                        000000   2-146  	equ	mc.prs,0
                                 2-147  
                        000020   2-148  	equ	mc.regs_word,16
                        001532   2-149  	equ	mc.regs_shift,858
                        000020   2-150  	equ	mc.x,16			" UPPER
                                 2-151  
                        000024   2-152  	equ	mc.a,20
                        000025   2-153  	equ	mc.q,21
                                 2-154  
                        000026   2-155  	equ	mc.e_word,22
                        000034   2-156  	equ	mc.e_shift,28
                        000377   2-157  	bool	mc.e_mask,000377
                                 2-158  
                        000027   2-159  	equ	mc.t_word,23
                        000011   2-160  	equ	mc.t_shift,9
                        000027   2-161  	equ	mc.ralr_word,23
                        000000   2-162  	equ	mc.ralr_shift,0
                        000007   2-163  	bool	mc.ralr_mask,000007
                                 2-164  
                        000030   2-165  	equ	mc.scu,24
                        000040   2-166  	equ	mc.mask,32		" DOUBLE
                        000042   2-167  	equ	mc.ips_temp,34
                                 2-168  
                        000043   2-169  	equ	mc.errcode_word,35
                        000000   2-170  	equ	mc.errcode_shift,0
                                 2-171  
                        000044   2-172  	equ	mc.fim_temp_word,36
                        000000   2-173  	equ	mc.fim_temp_shift,0
                        000044   2-174  	equ	mc.unique_index,36		" UPPER
                        000044   2-175  	equ	mc.resignal_word,36
                        400000   2-176  	bool	mc.resignal,400000		" DL
                        000044   2-177  	equ	mc.fcode_word,36
                        000000   2-178  	equ	mc.fcode_shift,0
                        377777   2-179  	bool	mc.fcode_mask,377777
                                 2-180  
                        000045   2-181  	equ	mc.fault_reg,37
                                 2-182  
                        000046   2-183  	equ	mc.cpu_type_word,38
                        000041   2-184  	equ	mc.cpu_type_shift,33
                        000003   2-185  	bool	mc.cpu_type_mask,000003
                        000046   2-186  	equ	mc.ext_fault_reg_word,38
                        000022   2-187  	equ	mc.ext_fault_reg_shift,18
                        077777   2-188  	bool	mc.ext_fault_reg_mask,077777
                                 2-189  
                        000046   2-190  	equ	mc.fault_time,38		" DOUBLE
                        000050   2-191  	equ	mc.eis_info,40
                                 2-192  
                        000000   2-193  	equ	apx,0			" MANIFEST
                        000001   2-194  	equ	abx,1			" MANIFEST
                        000002   2-195  	equ	bpx,2			" MANIFEST
                        000003   2-196  	equ	bbx,3			" MANIFEST
                        000004   2-197  	equ	lpx,4			" MANIFEST
                        000005   2-198  	equ	lbx,5			" MANIFEST
                        000006   2-199  	equ	spx,6			" MANIFEST
                        000007   2-200  	equ	sbx,7			" MANIFEST
                                 2-201  
                                 2-202  "
                                 2-203  "	Structure scu
                                 2-204  "
                        000010   2-205  	equ	scu_size,8
                                 2-206  
                        000000   2-207  	equ	scu.ppr_word,0
                        000021   2-208  	equ	scu.ppr_shift,17
                        000041   2-209  	equ	scu.prr_shift,33
                        000007   2-210  	bool	scu.prr_mask,000007
                        000022   2-211  	equ	scu.psr_shift,18
                        077777   2-212  	bool	scu.psr_mask,077777
                        400000   2-213  	bool	scu.p,400000		" DL
                        000000   2-214  	equ	scu.apu_word,0
                        000003   2-215  	equ	scu.apu_shift,3
                        037777   2-216  	bool	scu.apu_mask,037777
                        200000   2-217  	bool	scu.xsf,200000		" DL
                        100000   2-218  	bool	scu.sdwm,100000		" DL
                        040000   2-219  	bool	scu.sd_on,040000		" DL
                        020000   2-220  	bool	scu.ptwm,020000		" DL
                        010000   2-221  	bool	scu.pt_on,010000		" DL
                        004000   2-222  	bool	scu.pi_ap,004000		" DL
                        002000   2-223  	bool	scu.dsptw,002000		" DL
                        001000   2-224  	bool	scu.sdwnp,001000		" DL
                        000400   2-225  	bool	scu.sdwp,000400		" DL
                        000200   2-226  	bool	scu.ptw,000200		" DL
                        000100   2-227  	bool	scu.ptw2,000100		" DL
                        000040   2-228  	bool	scu.fap,000040		" DL
                        000020   2-229  	bool	scu.fanp,000020		" DL
                        000010   2-230  	bool	scu.fabs,000010		" DL
                        000000   2-231  	equ	scu.fault_cntr_word,0
                        000000   2-232  	equ	scu.fault_cntr_shift,0
                        000007   2-233  	bool	scu.fault_cntr_mask,000007
                                 2-234  
                        000001   2-235  	equ	scu.fd_word,1
                        000020   2-236  	equ	scu.fd_shift,16
                        000001   2-237  	equ	scu.iro_word,1
                        400000   2-238  	bool	scu.iro,400000		" DU
                        000001   2-239  	equ	scu.oeb_word,1
                        200000   2-240  	bool	scu.oeb,200000		" DU
                        000001   2-241  	equ	scu.e_off_word,1
                        100000   2-242  	bool	scu.e_off,100000		" DU
                        000001   2-243  	equ	scu.orb_word,1
                        040000   2-244  	bool	scu.orb,040000		" DU
                        000001   2-245  	equ	scu.r_off_word,1
                        020000   2-246  	bool	scu.r_off,020000		" DU
                        000001   2-247  	equ	scu.owb_word,1
                        010000   2-248  	bool	scu.owb,010000		" DU
                        000001   2-249  	equ	scu.w_off_word,1
                        004000   2-250  	bool	scu.w_off,004000		" DU
                        000001   2-251  	equ	scu.no_ga_word,1
                        002000   2-252  	bool	scu.no_ga,002000		" DU
                        000001   2-253  	equ	scu.ocb_word,1
                        001000   2-254  	bool	scu.ocb,001000		" DU
                        000001   2-255  	equ	scu.ocall_word,1
                        000400   2-256  	bool	scu.ocall,000400		" DU
                        000001   2-257  	equ	scu.boc_word,1
                        000200   2-258  	bool	scu.boc,000200		" DU
                        000001   2-259  	equ	scu.inret_word,1
                        000100   2-260  	bool	scu.inret,000100		" DU
                        000001   2-261  	equ	scu.crt_word,1
                        000040   2-262  	bool	scu.crt,000040		" DU
                        000001   2-263  	equ	scu.ralr_word,1
                        000020   2-264  	bool	scu.ralr,000020		" DU
                        000001   2-265  	equ	scu.am_er_word,1
                        000010   2-266  	bool	scu.am_er,000010		" DU
                        000001   2-267  	equ	scu.oosb_word,1
                        000004   2-268  	bool	scu.oosb,000004		" DU
                        000001   2-269  	equ	scu.paru_word,1
                        000002   2-270  	bool	scu.paru,000002		" DU
                        000001   2-271  	equ	scu.parl_word,1
                        000001   2-272  	bool	scu.parl,000001		" DU
                        000001   2-273  	equ	scu.onc_1_word,1
                        400000   2-274  	bool	scu.onc_1,400000		" DL
                        000001   2-275  	equ	scu.onc_2_word,1
                        200000   2-276  	bool	scu.onc_2,200000		" DL
                        000001   2-277  	equ	scu.port_stat_word,1
                        000006   2-278  	equ	scu.port_stat_shift,6
                        001777   2-279  	bool	scu.port_stat_mask,001777
                        000001   2-280  	equ	scu.ial_word,1
                        000014   2-281  	equ	scu.ial_shift,12
                        000017   2-282  	bool	scu.ial_mask,000017
                        000001   2-283  	equ	scu.iac_word,1
                        000011   2-284  	equ	scu.iac_shift,9
                        000007   2-285  	bool	scu.iac_mask,000007
                        000001   2-286  	equ	scu.con_chan_word,1
                        000006   2-287  	equ	scu.con_chan_shift,6
                        000007   2-288  	bool	scu.con_chan_mask,000007
                        000001   2-289  	equ	scu.fi_num_word,1
                        000001   2-290  	equ	scu.fi_num_shift,1
                        000037   2-291  	bool	scu.fi_num_mask,000037
                        000001   2-292  	equ	scu.fi_flag_word,1
                        000001   2-293  	bool	scu.fi_flag,000001		" DL
                                 2-294  
                        000002   2-295  	equ	scu.tpr,2			" UPPER
                        000002   2-296  	equ	scu.trr_word,2
                        000041   2-297  	equ	scu.trr_shift,33
                        000007   2-298  	bool	scu.trr_mask,000007
                        000002   2-299  	equ	scu.tsr_word,2
                        000022   2-300  	equ	scu.tsr_shift,18
                        077777   2-301  	bool	scu.tsr_mask,077777
                        000002   2-302  	equ	scu.cpu_no_word,2
                        000006   2-303  	equ	scu.cpu_no_shift,6
                        000007   2-304  	bool	scu.cpu_no_mask,000007
                        000002   2-305  	equ	scu.delta_word,2
                        000000   2-306  	equ	scu.delta_shift,0
                        000077   2-307  	bool	scu.delta_mask,000077
                                 2-308  
                        000003   2-309  	equ	scu.word3,3		" UPPER
                        000003   2-310  	equ	scu.tsr_stat_word,3
                        000006   2-311  	equ	scu.tsr_stat_shift,6
                        007777   2-312  	bool	scu.tsr_stat_mask,007777
                        000003   2-313  	equ	scu.tsna_word,3
                        000016   2-314  	equ	scu.tsna_shift,14
                        000017   2-315  	bool	scu.tsna_mask,000017
                        000003   2-316  	equ	scu.tsnb_word,3
                        000012   2-317  	equ	scu.tsnb_shift,10
                        000017   2-318  	bool	scu.tsnb_mask,000017
                        000003   2-319  	equ	scu.tsnc_word,3
                        000006   2-320  	equ	scu.tsnc_shift,6
                        000017   2-321  	bool	scu.tsnc_mask,000017
                        000003   2-322  	equ	scu.tpr_tbr_word,3
                        000000   2-323  	equ	scu.tpr_tbr_shift,0
                        000077   2-324  	bool	scu.tpr_tbr_mask,000077
                                 2-325  
                        000004   2-326  	equ	scu.ilc,4			" UPPER
                        000004   2-327  	equ	scu.ir,4			" LOWER
                        000004   2-328  	equ	scu.zero_word,4
                        400000   2-329  	bool	scu.zero,400000		" DL
                        000004   2-330  	equ	scu.neg_word,4
                        200000   2-331  	bool	scu.neg,200000		" DL
                        000004   2-332  	equ	scu.carry_word,4
                        100000   2-333  	bool	scu.carry,100000		" DL
                        000004   2-334  	equ	scu.ovfl_word,4
                        040000   2-335  	bool	scu.ovfl,040000		" DL
                        000004   2-336  	equ	scu.eovf_word,4
                        020000   2-337  	bool	scu.eovf,020000		" DL
                        000004   2-338  	equ	scu.eufl_word,4
                        010000   2-339  	bool	scu.eufl,010000		" DL
                        000004   2-340  	equ	scu.oflm_word,4
                        004000   2-341  	bool	scu.oflm,004000		" DL
                        000004   2-342  	equ	scu.tro_word,4
                        002000   2-343  	bool	scu.tro,002000		" DL
                        000004   2-344  	equ	scu.par_word,4
                        001000   2-345  	bool	scu.par,001000		" DL
                        000004   2-346  	equ	scu.parm_word,4
                        000400   2-347  	bool	scu.parm,000400		" DL
                        000004   2-348  	equ	scu.bm_word,4
                        000200   2-349  	bool	scu.bm,000200		" DL
                        000004   2-350  	equ	scu.tru_word,4
                        000100   2-351  	bool	scu.tru,000100		" DL
                        000004   2-352  	equ	scu.mif_word,4
                        000040   2-353  	bool	scu.mif,000040		" DL
                        000004   2-354  	equ	scu.abs_word,4
                        000020   2-355  	bool	scu.abs,000020		" DL
                        000004   2-356  	equ	scu.hex_word,4
                        000010   2-357  	bool	scu.hex,000010		" DL
                                 2-358  
                        000005   2-359  	equ	scu.ca,5			" UPPER
                        000005   2-360  	equ	scu.cu_word,5
                        000006   2-361  	equ	scu.cu_shift,6
                        007777   2-362  	bool	scu.cu_mask,007777
                        000005   2-363  	equ	scu.rf_word,5
                        400000   2-364  	bool	scu.rf,400000		" DL
                        000005   2-365  	equ	scu.rpt_word,5
                        200000   2-366  	bool	scu.rpt,200000		" DL
                        000005   2-367  	equ	scu.rd_word,5
                        100000   2-368  	bool	scu.rd,100000		" DL
                        000005   2-369  	equ	scu.rl_word,5
                        040000   2-370  	bool	scu.rl,040000		" DL
                        000005   2-371  	equ	scu.pot_word,5
                        020000   2-372  	bool	scu.pot,020000		" DL
                        000005   2-373  	equ	scu.pon_word,5
                        010000   2-374  	bool	scu.pon,010000		" DL
                        000005   2-375  	equ	scu.xde_word,5
                        004000   2-376  	bool	scu.xde,004000		" DL
                        000005   2-377  	equ	scu.xdo_word,5
                        002000   2-378  	bool	scu.xdo,002000		" DL
                        000005   2-379  	equ	scu.poa_word,5
                        001000   2-380  	bool	scu.poa,001000		" DL
                        000005   2-381  	equ	scu.rfi_word,5
                        000400   2-382  	bool	scu.rfi,000400		" DL
                        000005   2-383  	equ	scu.its_word,5
                        000200   2-384  	bool	scu.its,000200		" DL
                        000005   2-385  	equ	scu.if_word,5
                        000100   2-386  	bool	scu.if,000100		" DL
                        000005   2-387  	equ	scu.cpu_tag_word,5
                        000000   2-388  	equ	scu.cpu_tag_shift,0
                        000077   2-389  	bool	scu.cpu_tag_mask,000077
                                 2-390  
                        000006   2-391  	equ	scu.even_inst,6
                        000007   2-392  	equ	scu.odd_inst,7
                                 2-393  
                                 2-394  "
                                 2-395  "	Structure scux
                                 2-396  "
                        000010   2-397  	equ	scux_size,8
                                 2-398  
                                 2-399  
                        000001   2-400  	equ	scux.fd_word,1
                        000000   2-401  	equ	scux.fd_shift,0
                        000001   2-402  	equ	scux.isn_word,1
                        400000   2-403  	bool	scux.isn,400000		" DU
                        000001   2-404  	equ	scux.ioc_word,1
                        200000   2-405  	bool	scux.ioc,200000		" DU
                        000001   2-406  	equ	scux.ia_am_word,1
                        100000   2-407  	bool	scux.ia_am,100000		" DU
                        000001   2-408  	equ	scux.isp_word,1
                        040000   2-409  	bool	scux.isp,040000		" DU
                        000001   2-410  	equ	scux.ipr_word,1
                        020000   2-411  	bool	scux.ipr,020000		" DU
                        000001   2-412  	equ	scux.nea_word,1
                        010000   2-413  	bool	scux.nea,010000		" DU
                        000001   2-414  	equ	scux.oobb_word,1
                        004000   2-415  	bool	scux.oobb,004000		" DU
                                 2-416  
                        000003   2-417  	equ	scux.tsr_stat_word,3
                        000006   2-418  	equ	scux.tsr_stat_shift,6
                        007777   2-419  	bool	scux.tsr_stat_mask,007777
                                 2-420  
                        000006   2-421  	equ	scux.instr,6
                                 2-422  
                                 2-423       "END INCLUDE FILE toehold_save_dcls_.incl.alm
                                    41  "
    000000                          42  save_handler_mc:
    000000  aa  0 00002 3515 20     43  	epp1	pr0|2,*			" to toehold$
    000001  aa  1 00000 3515 20     44  	epp1	pr1|0,*
    000002  aa  6 00024 2371 00     45  	ldaq	pr6|stack_frame.return_ptr	" we must save these
                                    46  					" pointers since they were
                                    47  					" stored into the stack after
                                    48  					" it was written to disk
    000003  aa  1 00174 7571 00     49  	staq	pr1|toehold.handler_mc+mc.scu+4
    000004  aa  6 00030 2371 00     50  	ldaq	pr6|stack_frame.operator_ptr
    000005  aa  1 00176 7571 00     51  	staq	pr1|toehold.handler_mc+mc.scu+6
    000006  aa  1 00140 2541 00     52  	spri	pr1|toehold.handler_mc+mc.prs
    000007  aa  1 00160 7531 00     53  	sreg	pr1|toehold.handler_mc+mc.regs_word
    000010  aa  1 00210 4475 00     54  	spl	pr1|toehold.handler_mc+mc.eis_info
    000011  aa  1 00242 1541 00     55  	sdbr	pr1|toehold.bce_dbr
    000012  aa  1 00244 4521 06     56  	scpr	pr1|toehold.bce_mode_reg,06	" mode and cache mode reg
    000013  aa  1 00172 7541 00     57  	sti	pr1|toehold.handler_mc+mc.scu+2
    000014  0a   000015 2700 00     58  	tsp0	*+1				" get return addr
    000015  aa  1 00170 2501 00     59  	spri0	pr1|toehold.handler_mc+mc.scu+0
    000016  aa  7 00044 7101 20     60  	short_return
                                    61  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000020  5a   000003 000000 
    000021  5a   000030 600000 
    000022  aa   000000 000000 
    000023  55   000012 000002 
    000024  5a   000002 400003 
    000025  55   000006 000012 
    000026  aa  017 163 141 166
    000027  aa  145 137 150 141
    000030  aa  156 144 154 145
    000031  aa  162 137 155 143
    000032  55   000021 000003 
    000033  0a   000000 400000 
    000034  55   000015 000003 
    000035  aa  017 163 141 166         save_handler_mc
    000036  aa  145 137 150 141
    000037  aa  156 144 154 145
    000040  aa  162 137 155 143
    000041  55   000002 000012 
    000042  6a   000000 400002 
    000043  55   000024 000003 
    000044  aa  014 163 171 155         symbol_table
    000045  aa  142 157 154 137
    000046  aa  164 141 142 154
    000047  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000050  aa   000000 000015 
    000051  aa   000000 000000 
    000052  aa   000000 000000 
    000053  aa   000000 000000 
    000054  aa   000000 000000 
    000055  aa   000000 000000 
    000056  aa   000000 000000 
    000057  5a   000021 000000 
    000060  aa   000000 000000 
    000061  aa   000000 000000 
    000062  aa   000000 000000 
    000063  5a   000012 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000066  aa   000001 000000 
    000067  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000020 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   242636 444374 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000164 
    000020  aa   000000 000137 
    000021  aa   000145 000142 
    000022  aa   000154 000137 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000046 
    000067  aa   175453 020566 
    000070  aa   000000 117547 
    000071  aa   203602 200000 
    000072  aa   000114 000041 
    000073  aa   052721 247134 
    000074  aa   000000 105272 
    000075  aa   317215 400000 
    000076  aa   000125 000050 
    000077  aa   143401 276640 
    000100  aa   000000 114345 
    000101  aa   407367 200000 
    000102  aa   076163 160145          >spec>install>1112>save_handler_mc.alm
    000103  aa   143076 151156 
    000104  aa   163164 141154 
    000105  aa   154076 061061 
    000106  aa   061062 076163 
    000107  aa   141166 145137 
    000110  aa   150141 156144 
    000111  aa   154145 162137 
    000112  aa   155143 056141 
    000113  aa   154155 040040 
    000114  aa   076154 144144          >ldd>include>stack_frame.incl.alm
    000115  aa   076151 156143 
    000116  aa   154165 144145 
    000117  aa   076163 164141 
    000120  aa   143153 137146 
    000121  aa   162141 155145 
    000122  aa   056151 156143 
    000123  aa   154056 141154 
    000124  aa   155040 040040 
    000125  aa   076154 144144          >ldd>include>toehold_save_dcls_.incl.alm
    000126  aa   076151 156143 
    000127  aa   154165 144145 
    000130  aa   076164 157145 
    000131  aa   150157 154144 
    000132  aa   137163 141166 
    000133  aa   145137 144143 
    000134  aa   154163 137056 
    000135  aa   151156 143154 
    000136  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           1    abx                      toehold_save_dcls_:       194.
           0    apx                      toehold_save_dcls_:       193.
           2    At_bce__boot             toehold_save_dcls_:       132.
           6    At_bce__crash            toehold_save_dcls_:       136.
           1    At_bce__early            toehold_save_dcls_:       131.
           7    At_bce__shutdown         toehold_save_dcls_:       137.
           3    bbx                      toehold_save_dcls_:       196.
         200    BCE_PAGING_AREA_LTH      toehold_save_dcls_:        63.
        2000    BCE_PAGING_AREA_RECORDX  toehold_save_dcls_:        62.
        4230    BCE_PART_LTH             toehold_save_dcls_:        59.
           2    bpx                      toehold_save_dcls_:       195.
        1000    CRASH_HANDLER_RECORDX    toehold_save_dcls_:        61.
           4    dcw_list.data_dcws       toehold_save_dcls_:        57.
           3    dcw_list.data_idcw       toehold_save_dcls_:        56.
           0    dcw_list.seek_addresses  toehold_save_dcls_:        53.
           2    dcw_list.seek_dcw        toehold_save_dcls_:        55.
           1    dcw_list.seek_idcw       toehold_save_dcls_:        54.
           0    Initial_undefined        toehold_save_dcls_:       130.
           2    io_path.channel_number   toehold_save_dcls_:        94.
       77777    io_path.iom_number_mask  toehold_save_dcls_:        93.
          22    io_path.iom_number_shift       toehold_save_dcls_:        92.
           2    io_path.iom_number_word  toehold_save_dcls_:        91.
           0    io_path.pcw              toehold_save_dcls_:        86.
           7    io_path.port_number_mask       toehold_save_dcls_:        90.
          41    io_path.port_number_shift      toehold_save_dcls_:        89.
           2    io_path.port_number_word       toehold_save_dcls_:        88.
           4    io_path_size             toehold_save_dcls_:        84.
           5    lbx                      toehold_save_dcls_:       198.
           4    lpx                      toehold_save_dcls_:       197.
          24    mc.a                     toehold_save_dcls_:       152.
           3    mc.cpu_type_mask         toehold_save_dcls_:       185.
          41    mc.cpu_type_shift        toehold_save_dcls_:       184.
          46    mc.cpu_type_word         toehold_save_dcls_:       183.
          50    mc.eis_info              save_handler_mc:     54,
                                         toehold_save_dcls_:       191.
           0    mc.errcode_shift         toehold_save_dcls_:       170.
          43    mc.errcode_word          toehold_save_dcls_:       169.
       77777    mc.ext_fault_reg_mask    toehold_save_dcls_:       188.
          22    mc.ext_fault_reg_shift   toehold_save_dcls_:       187.
          46    mc.ext_fault_reg_word    toehold_save_dcls_:       186.
         377    mc.e_mask                toehold_save_dcls_:       157.
          34    mc.e_shift               toehold_save_dcls_:       156.
          26    mc.e_word                toehold_save_dcls_:       155.
          45    mc.fault_reg             toehold_save_dcls_:       181.
          46    mc.fault_time            toehold_save_dcls_:       190.
      377777    mc.fcode_mask            toehold_save_dcls_:       179.
           0    mc.fcode_shift           toehold_save_dcls_:       178.
          44    mc.fcode_word            toehold_save_dcls_:       177.
           0    mc.fim_temp_shift        toehold_save_dcls_:       173.
          44    mc.fim_temp_word         toehold_save_dcls_:       172.
          42    mc.ips_temp              toehold_save_dcls_:       167.
          40    mc.mask                  toehold_save_dcls_:       166.
           0    mc.prs                   save_handler_mc:     52,
                                         toehold_save_dcls_:       146.
          25    mc.q                     toehold_save_dcls_:       153.
           7    mc.ralr_mask             toehold_save_dcls_:       163.
           0    mc.ralr_shift            toehold_save_dcls_:       162.
          27    mc.ralr_word             toehold_save_dcls_:       161.
        1532    mc.regs_shift            toehold_save_dcls_:       149.
          20    mc.regs_word             save_handler_mc:     53,
                                         toehold_save_dcls_:       148.
      400000    mc.resignal              toehold_save_dcls_:       176.
          44    mc.resignal_word         toehold_save_dcls_:       175.
          30    mc.scu                   save_handler_mc:     49,   51,   57,   59,
                                         toehold_save_dcls_:       165.
          11    mc.t_shift               toehold_save_dcls_:       160.
          27    mc.t_word                toehold_save_dcls_:       159.
          44    mc.unique_index          toehold_save_dcls_:       174.
          20    mc.x                     toehold_save_dcls_:       150.
          60    mc_size                  toehold_save_dcls_:       144.
         260    mc_state.apu_history_registers       toehold_save_dcls_:       124.
         110    mc_state.bar             toehold_save_dcls_:       119.
         103    mc_state.cache_mode_reg  toehold_save_dcls_:       116.
         106    mc_state.cfg             toehold_save_dcls_:       118.
         160    mc_state.cu_history_registers  toehold_save_dcls_:       122.
         104    mc_state.dbr             toehold_save_dcls_:       117.
         220    mc_state.du_history_registers  toehold_save_dcls_:       123.
         100    mc_state.interrupt       toehold_save_dcls_:       114.
          60    mc_state.masks           toehold_save_dcls_:       113.
           0    mc_state.mc_             toehold_save_dcls_:       111.
         102    mc_state.mode_reg        toehold_save_dcls_:       115.
         111    mc_state.old_memory_state      toehold_save_dcls_:       120.
         120    mc_state.ou_history_registers  toehold_save_dcls_:       121.
         320    mc_state.ptwam_ptrs      toehold_save_dcls_:       125.
         420    mc_state.ptwam_regs      toehold_save_dcls_:       126.
         520    mc_state.sdwam_ptrs      toehold_save_dcls_:       127.
         620    mc_state.sdwam_regs      toehold_save_dcls_:       128.
        1020    mc_state_size            toehold_save_dcls_:       109.
        2200    MST_AREA_RECORDX         toehold_save_dcls_:        64.
           3    Multics                  toehold_save_dcls_:       133.
           0    SAVED_IMAGE_RECORDX      toehold_save_dcls_:        60.
           0    save_handler_mc          save_handler_mc:      8,   42.
           7    sbx                      toehold_save_dcls_:       200.
          20    scu.abs                  toehold_save_dcls_:       355.
           4    scu.abs_word             toehold_save_dcls_:       354.
          10    scu.am_er                toehold_save_dcls_:       266.
           1    scu.am_er_word           toehold_save_dcls_:       265.
       37777    scu.apu_mask             toehold_save_dcls_:       216.
           3    scu.apu_shift            toehold_save_dcls_:       215.
           0    scu.apu_word             toehold_save_dcls_:       214.
         200    scu.bm                   toehold_save_dcls_:       349.
           4    scu.bm_word              toehold_save_dcls_:       348.
         200    scu.boc                  toehold_save_dcls_:       258.
           1    scu.boc_word             toehold_save_dcls_:       257.
           5    scu.ca                   toehold_save_dcls_:       359.
      100000    scu.carry                toehold_save_dcls_:       333.
           4    scu.carry_word           toehold_save_dcls_:       332.
           7    scu.con_chan_mask        toehold_save_dcls_:       288.
           6    scu.con_chan_shift       toehold_save_dcls_:       287.
           1    scu.con_chan_word        toehold_save_dcls_:       286.
           7    scu.cpu_no_mask          toehold_save_dcls_:       304.
           6    scu.cpu_no_shift         toehold_save_dcls_:       303.
           2    scu.cpu_no_word          toehold_save_dcls_:       302.
          77    scu.cpu_tag_mask         toehold_save_dcls_:       389.
           0    scu.cpu_tag_shift        toehold_save_dcls_:       388.
           5    scu.cpu_tag_word         toehold_save_dcls_:       387.
          40    scu.crt                  toehold_save_dcls_:       262.
           1    scu.crt_word             toehold_save_dcls_:       261.
        7777    scu.cu_mask              toehold_save_dcls_:       362.
           6    scu.cu_shift             toehold_save_dcls_:       361.
           5    scu.cu_word              toehold_save_dcls_:       360.
          77    scu.delta_mask           toehold_save_dcls_:       307.
           0    scu.delta_shift          toehold_save_dcls_:       306.
           2    scu.delta_word           toehold_save_dcls_:       305.
        2000    scu.dsptw                toehold_save_dcls_:       223.
       20000    scu.eovf                 toehold_save_dcls_:       337.
           4    scu.eovf_word            toehold_save_dcls_:       336.
       10000    scu.eufl                 toehold_save_dcls_:       339.
           4    scu.eufl_word            toehold_save_dcls_:       338.
           6    scu.even_inst            toehold_save_dcls_:       391.
      100000    scu.e_off                toehold_save_dcls_:       242.
           1    scu.e_off_word           toehold_save_dcls_:       241.
          10    scu.fabs                 toehold_save_dcls_:       230.
          20    scu.fanp                 toehold_save_dcls_:       229.
          40    scu.fap                  toehold_save_dcls_:       228.
           7    scu.fault_cntr_mask      toehold_save_dcls_:       233.
           0    scu.fault_cntr_shift     toehold_save_dcls_:       232.
           0    scu.fault_cntr_word      toehold_save_dcls_:       231.
          20    scu.fd_shift             toehold_save_dcls_:       236.
           1    scu.fd_word              toehold_save_dcls_:       235.
           1    scu.fi_flag              toehold_save_dcls_:       293.
           1    scu.fi_flag_word         toehold_save_dcls_:       292.
          37    scu.fi_num_mask          toehold_save_dcls_:       291.
           1    scu.fi_num_shift         toehold_save_dcls_:       290.
           1    scu.fi_num_word          toehold_save_dcls_:       289.
          10    scu.hex                  toehold_save_dcls_:       357.
           4    scu.hex_word             toehold_save_dcls_:       356.
           7    scu.iac_mask             toehold_save_dcls_:       285.
          11    scu.iac_shift            toehold_save_dcls_:       284.
           1    scu.iac_word             toehold_save_dcls_:       283.
          17    scu.ial_mask             toehold_save_dcls_:       282.
          14    scu.ial_shift            toehold_save_dcls_:       281.
           1    scu.ial_word             toehold_save_dcls_:       280.
         100    scu.if                   toehold_save_dcls_:       386.
           5    scu.if_word              toehold_save_dcls_:       385.
           4    scu.ilc                  toehold_save_dcls_:       326.
         100    scu.inret                toehold_save_dcls_:       260.
           1    scu.inret_word           toehold_save_dcls_:       259.
           4    scu.ir                   toehold_save_dcls_:       327.
      400000    scu.iro                  toehold_save_dcls_:       238.
           1    scu.iro_word             toehold_save_dcls_:       237.
         200    scu.its                  toehold_save_dcls_:       384.
           5    scu.its_word             toehold_save_dcls_:       383.
          40    scu.mif                  toehold_save_dcls_:       353.
           4    scu.mif_word             toehold_save_dcls_:       352.
      200000    scu.neg                  toehold_save_dcls_:       331.
           4    scu.neg_word             toehold_save_dcls_:       330.
        2000    scu.no_ga                toehold_save_dcls_:       252.
           1    scu.no_ga_word           toehold_save_dcls_:       251.
         400    scu.ocall                toehold_save_dcls_:       256.
           1    scu.ocall_word           toehold_save_dcls_:       255.
        1000    scu.ocb                  toehold_save_dcls_:       254.
           1    scu.ocb_word             toehold_save_dcls_:       253.
           7    scu.odd_inst             toehold_save_dcls_:       392.
      200000    scu.oeb                  toehold_save_dcls_:       240.
           1    scu.oeb_word             toehold_save_dcls_:       239.
        4000    scu.oflm                 toehold_save_dcls_:       341.
           4    scu.oflm_word            toehold_save_dcls_:       340.
      400000    scu.onc_1                toehold_save_dcls_:       274.
           1    scu.onc_1_word           toehold_save_dcls_:       273.
      200000    scu.onc_2                toehold_save_dcls_:       276.
           1    scu.onc_2_word           toehold_save_dcls_:       275.
           4    scu.oosb                 toehold_save_dcls_:       268.
           1    scu.oosb_word            toehold_save_dcls_:       267.
       40000    scu.orb                  toehold_save_dcls_:       244.
           1    scu.orb_word             toehold_save_dcls_:       243.
       40000    scu.ovfl                 toehold_save_dcls_:       335.
           4    scu.ovfl_word            toehold_save_dcls_:       334.
       10000    scu.owb                  toehold_save_dcls_:       248.
           1    scu.owb_word             toehold_save_dcls_:       247.
      400000    scu.p                    toehold_save_dcls_:       213.
        1000    scu.par                  toehold_save_dcls_:       345.
           1    scu.parl                 toehold_save_dcls_:       272.
           1    scu.parl_word            toehold_save_dcls_:       271.
         400    scu.parm                 toehold_save_dcls_:       347.
           4    scu.parm_word            toehold_save_dcls_:       346.
           2    scu.paru                 toehold_save_dcls_:       270.
           1    scu.paru_word            toehold_save_dcls_:       269.
           4    scu.par_word             toehold_save_dcls_:       344.
        4000    scu.pi_ap                toehold_save_dcls_:       222.
        1000    scu.poa                  toehold_save_dcls_:       380.
           5    scu.poa_word             toehold_save_dcls_:       379.
       10000    scu.pon                  toehold_save_dcls_:       374.
           5    scu.pon_word             toehold_save_dcls_:       373.
        1777    scu.port_stat_mask       toehold_save_dcls_:       279.
           6    scu.port_stat_shift      toehold_save_dcls_:       278.
           1    scu.port_stat_word       toehold_save_dcls_:       277.
       20000    scu.pot                  toehold_save_dcls_:       372.
           5    scu.pot_word             toehold_save_dcls_:       371.
          21    scu.ppr_shift            toehold_save_dcls_:       208.
           0    scu.ppr_word             toehold_save_dcls_:       207.
           7    scu.prr_mask             toehold_save_dcls_:       210.
          41    scu.prr_shift            toehold_save_dcls_:       209.
       77777    scu.psr_mask             toehold_save_dcls_:       212.
          22    scu.psr_shift            toehold_save_dcls_:       211.
         200    scu.ptw                  toehold_save_dcls_:       226.
         100    scu.ptw2                 toehold_save_dcls_:       227.
       20000    scu.ptwm                 toehold_save_dcls_:       220.
       10000    scu.pt_on                toehold_save_dcls_:       221.
          20    scu.ralr                 toehold_save_dcls_:       264.
           1    scu.ralr_word            toehold_save_dcls_:       263.
      100000    scu.rd                   toehold_save_dcls_:       368.
           5    scu.rd_word              toehold_save_dcls_:       367.
      400000    scu.rf                   toehold_save_dcls_:       364.
         400    scu.rfi                  toehold_save_dcls_:       382.
           5    scu.rfi_word             toehold_save_dcls_:       381.
           5    scu.rf_word              toehold_save_dcls_:       363.
       40000    scu.rl                   toehold_save_dcls_:       370.
           5    scu.rl_word              toehold_save_dcls_:       369.
      200000    scu.rpt                  toehold_save_dcls_:       366.
           5    scu.rpt_word             toehold_save_dcls_:       365.
       20000    scu.r_off                toehold_save_dcls_:       246.
           1    scu.r_off_word           toehold_save_dcls_:       245.
      100000    scu.sdwm                 toehold_save_dcls_:       218.
        1000    scu.sdwnp                toehold_save_dcls_:       224.
         400    scu.sdwp                 toehold_save_dcls_:       225.
       40000    scu.sd_on                toehold_save_dcls_:       219.
           2    scu.tpr                  toehold_save_dcls_:       295.
          77    scu.tpr_tbr_mask         toehold_save_dcls_:       324.
           0    scu.tpr_tbr_shift        toehold_save_dcls_:       323.
           3    scu.tpr_tbr_word         toehold_save_dcls_:       322.
        2000    scu.tro                  toehold_save_dcls_:       343.
           4    scu.tro_word             toehold_save_dcls_:       342.
           7    scu.trr_mask             toehold_save_dcls_:       298.
          41    scu.trr_shift            toehold_save_dcls_:       297.
           2    scu.trr_word             toehold_save_dcls_:       296.
         100    scu.tru                  toehold_save_dcls_:       351.
           4    scu.tru_word             toehold_save_dcls_:       350.
          17    scu.tsna_mask            toehold_save_dcls_:       315.
          16    scu.tsna_shift           toehold_save_dcls_:       314.
           3    scu.tsna_word            toehold_save_dcls_:       313.
          17    scu.tsnb_mask            toehold_save_dcls_:       318.
          12    scu.tsnb_shift           toehold_save_dcls_:       317.
           3    scu.tsnb_word            toehold_save_dcls_:       316.
          17    scu.tsnc_mask            toehold_save_dcls_:       321.
           6    scu.tsnc_shift           toehold_save_dcls_:       320.
           3    scu.tsnc_word            toehold_save_dcls_:       319.
       77777    scu.tsr_mask             toehold_save_dcls_:       301.
          22    scu.tsr_shift            toehold_save_dcls_:       300.
        7777    scu.tsr_stat_mask        toehold_save_dcls_:       312.
           6    scu.tsr_stat_shift       toehold_save_dcls_:       311.
           3    scu.tsr_stat_word        toehold_save_dcls_:       310.
           2    scu.tsr_word             toehold_save_dcls_:       299.
           3    scu.word3                toehold_save_dcls_:       309.
        4000    scu.w_off                toehold_save_dcls_:       250.
           1    scu.w_off_word           toehold_save_dcls_:       249.
        4000    scu.xde                  toehold_save_dcls_:       376.
           5    scu.xde_word             toehold_save_dcls_:       375.
        2000    scu.xdo                  toehold_save_dcls_:       378.
           5    scu.xdo_word             toehold_save_dcls_:       377.
      200000    scu.xsf                  toehold_save_dcls_:       217.
      400000    scu.zero                 toehold_save_dcls_:       329.
           4    scu.zero_word            toehold_save_dcls_:       328.
           0    scux.fd_shift            toehold_save_dcls_:       401.
           1    scux.fd_word             toehold_save_dcls_:       400.
      100000    scux.ia_am               toehold_save_dcls_:       407.
           1    scux.ia_am_word          toehold_save_dcls_:       406.
           6    scux.instr               toehold_save_dcls_:       421.
      200000    scux.ioc                 toehold_save_dcls_:       405.
           1    scux.ioc_word            toehold_save_dcls_:       404.
       20000    scux.ipr                 toehold_save_dcls_:       411.
           1    scux.ipr_word            toehold_save_dcls_:       410.
      400000    scux.isn                 toehold_save_dcls_:       403.
           1    scux.isn_word            toehold_save_dcls_:       402.
       40000    scux.isp                 toehold_save_dcls_:       409.
           1    scux.isp_word            toehold_save_dcls_:       408.
       10000    scux.nea                 toehold_save_dcls_:       413.
           1    scux.nea_word            toehold_save_dcls_:       412.
        4000    scux.oobb                toehold_save_dcls_:       415.
           1    scux.oobb_word           toehold_save_dcls_:       414.
        7777    scux.tsr_stat_mask       toehold_save_dcls_:       419.
           6    scux.tsr_stat_shift      toehold_save_dcls_:       418.
           3    scux.tsr_stat_word       toehold_save_dcls_:       417.
          10    scux_size                toehold_save_dcls_:       397.
          10    scu_size                 toehold_save_dcls_:       205.
           6    spx                      toehold_save_dcls_:       199.
          32    stack_frame.arg_ptr      stack_frame:   16.
         100    stack_frame.condition_bit      stack_frame:   32.
          20    stack_frame.condition_word     stack_frame:    9.
        2000    stack_frame.crawl_out_bit      stack_frame:   28.
          26    stack_frame.entry_ptr    stack_frame:   13.
          20    stack_frame.flag_word    stack_frame:   24.
         400    stack_frame.link_trap_bit      stack_frame:   30.
          30    stack_frame.lp_ptr       stack_frame:   15.
       20000    stack_frame.main_proc_bit      stack_frame:   25.
          60    stack_frame.min_length   stack_frame:   23.
          22    stack_frame.next_sp      stack_frame:   10.
          36    stack_frame.on_unit_rel_ptrs   stack_frame:   19.
          30    stack_frame.operator_ptr       save_handler_mc:     50,
                                               stack_frame:   14.
          37    stack_frame.operator_ret_ptr   stack_frame:   20.
          20    stack_frame.prev_sp      stack_frame:    8.
          40    stack_frame.regs         stack_frame:   22.
          24    stack_frame.return_ptr   save_handler_mc:     45,
                                         stack_frame:   12.
       10000    stack_frame.run_unit_manager   stack_frame:   26.
        1000    stack_frame.signaller_bit      stack_frame:   29.
          22    stack_frame.signaller_word     stack_frame:   11.
        4000    stack_frame.signal_bit   stack_frame:   27.
          34    stack_frame.static_ptr   stack_frame:   17.
         200    stack_frame.support_bit  stack_frame:   31.
          35    stack_frame.support_ptr  stack_frame:   18.
          37    stack_frame.translator_id      stack_frame:   21.
         245    toehold.bce_cache_mode_reg     toehold_save_dcls_:        37.
         242    toehold.bce_dbr          save_handler_mc:     55,
                                         toehold_save_dcls_:        35.
         244    toehold.bce_mode_reg     save_handler_mc:     56,
                                         toehold_save_dcls_:        36.
         247    toehold.dcws_per_cyl     toehold_save_dcls_:        41.
         247    toehold.dcw_list_size    toehold_save_dcls_:        40.
           0    toehold.entry_sequences  toehold_save_dcls_:        27.
         246    toehold.esd_segnum       toehold_save_dcls_:        38.
          40    toehold.flagbox          toehold_save_dcls_:        28.
        1660    toehold.handler_code     toehold_save_dcls_:        46.
         655    toehold.handler_dcws     toehold_save_dcls_:        45.
         140    toehold.handler_mc       save_handler_mc:     49,   51,   52,   53,   54,   57,   59,
                                         toehold_save_dcls_:        29.
         241    toehold.memory_state     toehold_save_dcls_:        34.
        2760    toehold.multics_state    toehold_save_dcls_:        47.
         240    toehold.n_paths_used     toehold_save_dcls_:        33.
         220    toehold.paths            toehold_save_dcls_:        31.
         251    toehold.save_dcws        toehold_save_dcls_:        44.
         250    toehold.seeks_used       toehold_save_dcls_:        43.
        4000    toehold_size             toehold_save_dcls_:        24.
         242    toe_hold.bce_dbr         toehold_save_dcls_:        77.
           0    toe_hold.entry_sequences       toehold_save_dcls_:        71.
          40    toe_hold.flagbox         toehold_save_dcls_:        72.
         241    toe_hold.memory_state    toehold_save_dcls_:        76.
        2760    toe_hold.multics_state   toehold_save_dcls_:        78.
         240    toe_hold.n_paths_used    toehold_save_dcls_:        75.
         220    toe_hold.paths           toehold_save_dcls_:        73.
           5    TOE_HOLD_BOOT_ENTRY      toehold_save_dcls_:       101.
          14    TOE_HOLD_BOS_ENTRY       toehold_save_dcls_:       102.
          16    TOE_HOLD_BOS_MULTICS_ENTRY     toehold_save_dcls_:       104.
          15    TOE_HOLD_BOS_NO_SAVE_ENTRY     toehold_save_dcls_:       103.
           0    TOE_HOLD_CRASH_ENTRY     toehold_save_dcls_:        96.
           2    TOE_HOLD_DUMP_ENTRY      toehold_save_dcls_:        98.
           1    TOE_HOLD_ESD_ENTRY       toehold_save_dcls_:        97.
           3    TOE_HOLD_MULTICS_ENTRY   toehold_save_dcls_:        99.
           4    TOE_HOLD_RESTART_ENTRY   toehold_save_dcls_:       100.
        4000    toe_hold_size            toehold_save_dcls_:        69.
          10    Undefined_continue       toehold_save_dcls_:       138.
           5    Undefined_reading_bce    toehold_save_dcls_:       135.
          11    Undefined_saving_mem     toehold_save_dcls_:       139.
           4    Undefined_saving_state   toehold_save_dcls_:       134.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
