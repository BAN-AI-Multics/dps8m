	COMPILATION LISTING OF SEGMENT unique_chars_
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  0955.1 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 unique_chars_:
       14 	proc(in_bits, out_chars);
       15 
       16 /* function to return a unique character string as in BY.15.01.
       17*The character string is 15 characters long.
       18*The given bit string is either a unique string or null in which
       19* case the function unique_bits_ is used to obtain the bit string.
       20*
       21*Last modified: (Date and reason)
       22*84-08-10 by E. A. Ranzenbach to remove "unique_chars" entry per MCR6634.
       23*11/12/73 by RE Mullen, converted to v2pl1
       24*08/08/72 by C Garman to use explicit assignment to output parameter, instead of "return(...);"
       25*06/26/72 by D. M. Wells to get rid of "aligned"ness of strings to conform with documentation
       26*07/17/71 by Richard H. Gumpertz to make "charsi" automatic
       27*Coded 1/15/70			JW Gintell
       28**/
       29 
       30 dcl	in_bits bit(*),
       31 	out_chars char(15),
       32 
       33 	table char(32) static init("BCDFGHJKLMNPQWXZbcdfghjklmnpqwxz"),
       34 
       35 	charsi char(15),
       36 	bit70 bit(70),
       37 
       38 	unique_bits_ entry returns(bit(70)),
       39 	i fixed bin(17);
       40 
       41 dcl	(bin, bit, fixed, index, substr) builtin;
       42 
       43 	bit70 = in_bits;		/* copy argument */
       44 
       45 	if bit70 = (70)"0"b then bit70 = unique_bits_();
       46 
       47 	substr(charsi, 1, 1) = "!";
       48 
       49 	do i = 1 to 14;
       50 
       51 	  substr(charsi,i+1,1) = substr(table,fixed(substr(bit70,i*5-4,5),5)+1,1);
       52 	end;
       53 
       54 	out_chars = charsi;
       55 	return;
       56 
       57 /* 
       58*   entry to convert unique_character string back to bit string */
       59 
       60 bits:
       61 	entry(in_chars, out_bits);
       62 
       63 dcl	in_chars char(15),
       64 	out_bits bit(70),
       65 	j fixed bin(5);
       66 
       67 	out_bits = (70)"0"b;
       68 	charsi = in_chars;
       69 
       70 	if substr(charsi,1,1) ^= "!" then return;
       71 
       72 	do i = 1 to 14;
       73 
       74 	  j = index(table,substr(charsi,i+1,1));
       75 	  if j = 0 then return;
       76 	  else substr(bit70,i*5-4,5) = bit(bin(j-1,5),5);
       77 
       78 	end;
       79 
       80 	out_bits = bit70;
       81 
       82 end unique_chars_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0804.2  unique_chars_.pl1                 >spec>install>1110>unique_chars_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
bin                                                    builtin function         dcl 41 ref 76
bit                                                    builtin function         dcl 41 ref 76
bit70                           000104 automatic       bit(70)                  packed unaligned dcl 30 set ref 43* 45 45* 51 76* 80
charsi                          000100 automatic       char(15)                 packed unaligned dcl 30 set ref 47* 51* 54 68* 70 74
fixed                                                  builtin function         dcl 41 ref 51
i                               000106 automatic       fixed bin(17,0)          dcl 30 set ref 49* 51 51* 72* 74 76*
in_bits                                parameter       bit                      packed unaligned dcl 30 ref 13 43
in_chars                               parameter       char(15)                 packed unaligned dcl 63 ref 60 68
index                                                  builtin function         dcl 41 ref 74
j                               000107 automatic       fixed bin(5,0)           dcl 63 set ref 74* 75 76
out_bits                               parameter       bit(70)                  packed unaligned dcl 63 set ref 60 67* 80*
out_chars                              parameter       char(15)                 packed unaligned dcl 30 set ref 13 54*
substr                                                 builtin function         dcl 41 set ref 47* 51* 51 51 70 74 76*
table                           000000 constant        char(32)                 initial packed unaligned dcl 30 ref 51 74
unique_bits_                    000010 constant        entry                    external dcl 30 ref 45

NAMES DECLARED BY EXPLICIT CONTEXT.
bits                            000111 constant        entry                    external dcl 60
unique_chars_                   000022 constant        entry                    external dcl 13

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       244         256     202         254
Length       422     202        12         130      41           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
unique_chars_                        78 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
unique_chars_            000100 charsi                      unique_chars_
                         000104 bit70                       unique_chars_
                         000106 i                           unique_chars_
                         000107 j                           unique_chars_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
unique_bits_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000016        43 000035        45 000043        47 000054        49 000056        51 000063        52 000075
     54 000077        55 000104        60 000105        67 000116        68 000123        70 000127        72 000133
     74 000141        75 000152        76 000153        78 000170        80 000172        82 000177


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
