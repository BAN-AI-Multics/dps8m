ASSEMBLY LISTING OF SEGMENT >spec>install>1111>post_purge.alm                                                                                                                                       
ASSEMBLED ON:	11/11/89  0924.2 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " HISTORY COMMENTS:
                                    13  "  1) change(85-10-28,Fawcett), approve(86-04-03,MCR7277),
                                    14  "     audit(86-04-03,Farley), install(86-04-07,MR12.0-1036):
                                    15  "      Fix a looping problem that caused the system to hang
                                    16  "                                                      END HISTORY COMMENTS
                                    17  
                                    18  
                                    19  " " " " " " " " " " " " " " " " " " " " " " " " "
                                    20  "
                                    21  "	post_purge -- This entry contains the code to post purge a process.
                                    22  "
                                    23  "	Last Modified (Date and Reason)
                                    24  "	4/8/74 by S.H.Webber to change decision tree and add scheduling trace
                                    25  "	03/18/81, W. Olin Sibert, for ADP conversion
                                    26  "	06/21/82, E. N. Kittlitz, to move core map.
                                    27  "         83-12-03 BIM to sys_trace.incl.alm
                                    28  "
                                    29  "	This program was originally part of pre_page but has since been renamed
                                    30  "	as we no longer do anything about pre_paging.
                                    31  "
                                    32  " " " " " " " " " " " " " " " " " " " " " " " " "
                                    33  
    000000                          34  	name	post_purge
                        000010      35  	segdef	post_purge
                                    36  
                                    37  	include	pxss_page_stack
                                   1-1  "
                                   1-2  "	BEGIN INCLUDE FILE  pxss_page_stack.incl.alm     July 1982
                                   1-3  "
                                   1-4  
                        000006     1-5  	equ	pxss_stack_size,6	" size of x7 save stack used by pxss
                        000015     1-6  	equ	stack_size,13	" size of x7 save stack used by page control
                                   1-7  
                                   1-8  	temp8	notify_regs
                                   1-9  	temp	save_stack(stack_size),stackp
                                  1-10  	tempd	pre_time,pre_temp(3)
                                  1-11  	tempd	arg(11),temp
                                  1-12  	tempd	stock_temp,volmap_temp,volmap_save_ptr
                                  1-13  	tempd	tmp_ev_channel,tmp_ev_message,apt_ptr,getwork_temp,delta_t
                                  1-14  	tempd	lock_volmap_temp_1,free_store_temp_1,volmap_save_sdw
                                  1-15  	temp	cmep,total_steps,temp1,temp2,volmap_temp_1,volmap_temp_2
                                  1-16  	temp	pvtx,core_add,count,entry_sw,ptp_astep,inter,devadd,errcode
                                  1-17  	temp	tmp_ring,dev_signal,before,depth,x5
                                  1-18  	temp	tmp_event,pxss_save_stack(pxss_stack_size),pxss_stackp
                                  1-19  	temp	stock_temp_1,stock_temp_2,free_store_temp,savx2_3
                                  1-20  	temp	lock_volmap_temp
                                  1-21  	temp	volmap_page_temp
                                  1-22  	tempd	free_store_start_time,post_io_start_time
                                  1-23  
                                  1-24  	temp	done_astep,volmap_page_temp_1
                                  1-25  	temp	vtocx,pageno
                                  1-26  
                                  1-27  	tempd	page_synch_temp,page_synch_time
                                  1-28  	temp	page_synch_index
                                  1-29  
                                  1-30  	temp	pc_err_type,pc_err_ptwp,pc_err_astep
                                  1-31  	tempd	pf_sdw
                                  1-32  
                                  1-33  	temp	pad(22)		" to grow compatibly
                                  1-34  "
                                  1-35  "	END INCLUDE FILE  pxss_page_stack.incl.alm
                                  1-36  "
                                    38  	include	add_type
                                   2-1  "
                                   2-2  "	BEGIN INCLUDE FILE add_type.incl.alm 02/14/75
                                   2-3  "
                                   2-4  
                                   2-5  "	This file defines the interpretation of the add_type
                                   2-6  "	field of a ptw or cme.
                                   2-7  
                        400000     2-8  	bool	add_type.core,400000   "DL core address - S/B only in PTW
                        200000     2-9  	bool	add_type.disk,200000   "DL disk address
                        100000    2-10  	bool	add_type.pd,100000	   "DL paging device record number
                        040000    2-11  	bool	add_type.reserved,040000 "DL reserved for future use
                                  2-12  
                        740000    2-13  	bool	add_type.non_null,740000 "DL not a null address
                                  2-14  
                                  2-15  "
                                  2-16  "	END INCLUDE FILE add_type.incl.alm
                                  2-17  "
                                    39  	include	page_info
                                   3-1  "	BEGIN INCLUDE FILE page_info.incl.alm  --  6/72
                                   3-2  "
                                   3-3  " Modified 02/22/81, W. Olin Sibert, for ADP conversion
                                   3-4  " Modified 06/23/82, E. N. Kittlitz, to move core map.
                                   3-5  "
                        000012     3-6  	equ	page_power,10		" 2**10 = size of page
                        000001     3-7  	bool	df1,000001		" directed fault 1 on page fault
                                   3-8  
                 777777 740000     3-9  	bool	address_mask,777777740000	" Mask for PTW add, add_type compares
                                  3-10  					" Use as =v36/address_mask
                                  3-11  
                        400000    3-12  	bool	ptw.nulled,400000		" flag for testing addresses
                                  3-13  
                        100000    3-14  	bool	int,100000		" Disk dim flags
                        000020    3-15  	bool	pri,000020
                        000004    3-16  	bool	no_post,000004
                                  3-17  
                        000003    3-18  	equ	sst,3			" Standard pointer and index
                        000003    3-19  	equ	pdm,sst			" register usage
                        000003    3-20  	equ	ast,sst
                        000002    3-21  	equ	ptw,2
                                  3-22  
                                  3-23  "	Various AST masks which are not
                                  3-24  "	expressible in standard notation
                                  3-25  "
                        777000    3-26  	bool	aste.csl_mask_inner,777000
                        777000    3-27  	bool	aste.records_mask_inner,777000
                                  3-28  
                        000000    3-29  	equ	fault_entry,0		" Flags indicating how we
                        000001    3-30  	equ	read_entry,1		" were entered
                        000002    3-31  	equ	write_entry,2
                        000003    3-32  	equ	pre_page_entry,3
                        000004    3-33  	equ	post_purge_entry,4
                        000005    3-34  	equ	pd_flush_entry,5
                        000006    3-35  	equ	evict_entry,6
                        000007    3-36  	equ	abs_wire_entry,7
                        000010    3-37  	equ	cleanup_entry,8
                                  3-38  
                                  3-39  " Constants for manipulating core addresses and PTWs. The core address
                                  3-40  " is a fixed bin (35) aligned, and must be moved to/from the appropriate
                                  3-41  " field in the SDW or PTW.
                                  3-42  "
                                  3-43  	iftarget	l68
                        777760          	   bool	ptw_add_mask,777760 " Page number
                        777760          	   bool	sdw_add_mask,777760 " Page number
                 000077 777777          	   bool	coreadd_mask,000077777777 " Mask for coreadd in AL
                                        
                        000014          	   equ	coreadd_to_ptw.ls,12
                        000014          	   equ	coreadd_to_sdw.ls,12
                        000014          	   equ	ptw_to_coreadd.rl,12
                        000014          	   equ	sdw_to_coreadd.rl,12
                        000002          	   equ	cmep_to_ptw.ls,2
                        000002          	   equ	cmep_to_sdw.ls,2
                        000002          	   equ	ptw_to_cmep.rl,2
                        000024          	   equ	ptw_to_cmep_lower.rl,20
                        000002          	   equ	sdw_to_cmep.rl,2
                                        "	ifend
                                  3-58  
                                  3-59  	iftarget	adp
                                        "	   bool	ptw_add_mask,177777 " Page number
                                        "	   bool	sdw_add_mask,777774 " Page number
                                        "	   bool	coreadd_mask,000377777777 " Mask for coreadd in AL
                                        "
                                        "	   equ	coreadd_to_ptw.ls,8
                                        "	   equ	coreadd_to_sdw.ls,10
                                        "	   equ	ptw_to_coreadd.rl,8
                                        "	   equ	sdw_to_coreadd.rl,10
                                        "	   equ	cmep_to_ptw.rl,2	" Must shift backwards
                                        "	   equ	cmep_to_sdw.ls,0
                                        "	   equ	ptw_to_cmep.ls,2	" Must shift backwards
                                        "	   equ	ptw_to_cmep_lower.rl,16
                                        "	   equ	sdw_to_cmep.rl,0
                                        "	ifend
                                  3-74  
                        000012    3-75  	equ	cmep_to_coreadd.rl,10	.cmep to coreadd
                        000012    3-76  	equ	coreadd_to_cmep.ls,10	coreadd to .cmep
                                  3-77  
                                  3-78  " 
                                  3-79  "
                                  3-80  " Assorted general purpose macros used in PC. These will be changed
                                  3-81  " when address types are changed for 20 bit addresses. Additionally,
                                  3-82  " for more accurate metering on the ADP, the metering macros should
                                  3-83  " modified to update the metering cells uninterruptably.
                                  3-84  "
                                  3-85  
                                  3-86  	macro	missing
                              1   3-87  	ife	&2,()
                              2   3-88  	  warn	(&1: Argument missing.)
                              3   3-89  	ifend
                              4   3-90  	&end
                                  3-91  "
                                  3-92  " staddra and staddrq store the address portion (upper 22 bits) of the A or Q
                                  3-93  " into the specified location.
                                  3-94  "
                                  3-95  	macro	staddra
                              1   3-96  	missing	staddra,&1
                              2   3-97  	era	&F1
                              3   3-98  	ana	=v36/address_mask
                              4   3-99  	ersa	&F1
                              5  3-100  	&end
                                 3-101  
                                 3-102  	macro	staddrq
                              1  3-103  	missing	staddrq,&1
                              2  3-104  	erq	&F1
                              3  3-105  	anq	=v36/address_mask
                              4  3-106  	ersq	&F1
                              5  3-107  	&end
                                 3-108  
                                 3-109  "	Macros for metering 6/23/80
                                 3-110  
                                 3-111  	macro	read_clock
                              1  3-112  	iftarget	l68
                              2  3-113  	  rccl	sys_info$clock_,*
                              3  3-114  	ifend
                              4  3-115  	iftarget adp
                              5  3-116  	  rccl	0
                              6  3-117  	ifend
                              7  3-118  	&end
                                 3-119  
                                 3-120  	macro	increment
                              1  3-121  	missing	increment,&1
                              2  3-122  	aos	&1
                              3  3-123  	&end
                                 3-124  
                                 3-125  	macro	store_clock
                              1  3-126  	missing	store_clock,&1
                              2  3-127  	read_clock
                              3  3-128  	staq	&1
                              4  3-129  	&end
                                 3-130  
                                 3-131  	macro	meter_time
                              1  3-132  	missing	meter_time,&3
                              2  3-133  	increment &3
                              3  3-134  	read_clock
                              4  3-135  	sbaq	&1
                              5  3-136  	adaq	&2
                              6  3-137  	staq	&2
                              7  3-138  	&end
                                 3-139  
                                 3-140  "	END INCLUDE FILE  page_info.incl.alm
                                    40  	include	sst
                                   4-1  
                                   4-2  
                                   4-3       "BEGIN INCLUDE FILE sst.incl.alm
                                   4-4  
                                   4-5  
                                   4-6  	"Created 01/14/85  1523.7 est Mon by convert_include_file,
                                   4-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   4-8  
                                   4-9  	"Made from >Pool>m>loe>incl>sst.incl.pl1,
                                  4-10  	"   modified 01/09/85  1148.3 est Wed
                                  4-11  
                                  4-12  "
                                  4-13  "	Structure sst
                                  4-14  "
                        001000    4-15  	equ	sst_size,512
                                  4-16  
                                  4-17  
                        000000    4-18  	equ	sst.space,0
                        000010    4-19  	equ	sst.pre_page_time,8		" DOUBLE
                        000012    4-20  	equ	sst.post_purge_time,10	" DOUBLE
                        000014    4-21  	equ	sst.post_in_core,12
                        000015    4-22  	equ	sst.thrashing,13
                        000016    4-23  	equ	sst.npfs_misses,14
                        000017    4-24  	equ	sst.salv,15
                        000020    4-25  	equ	sst.ptl,16
                        000021    4-26  	equ	sst.astl,17
                        000022    4-27  	equ	sst.astl_event,18
                                  4-28  
                        000023    4-29  	equ	sst.astl_notify_requested_word,19
                        400000    4-30  	bool	sst.astl_notify_requested,400000 " DU
                                  4-31  
                        000024    4-32  	equ	sst.nused,20
                        000025    4-33  	equ	sst.ptwbase,21
                        000026    4-34  	equ	sst.tfreep,22
                        000030    4-35  	equ	sst.astap,24
                        000032    4-36  	equ	sst.ptl_wait_ct,26
                        000033    4-37  	equ	sst.astsize,27
                        000034    4-38  	equ	sst.cmesize,28
                        000036    4-39  	equ	sst.root_astep,30
                        000040    4-40  	equ	sst.pts,32
                        000044    4-41  	equ	sst.level,36		" LEVEL 2
                                  4-42  
                        000044    4-43  	equ	sst.ausedp,36		" UPPER
                        000044    4-44  	equ	sst.no_aste,36		" LOWER
                                  4-45  
                        000050    4-46  	equ	sst.atempp,40		" UPPER
                        000050    4-47  	equ	sst.atempp1,40		" LOWER
                                  4-48  
                        000051    4-49  	equ	sst.dm_enabled_word,41
                        400000    4-50  	bool	sst.dm_enabled,400000	" DU
                                  4-51  
                        000052    4-52  	equ	sst.ainitp,42		" UPPER
                        000052    4-53  	equ	sst.ainitp1,42		" LOWER
                                  4-54  
                        000053    4-55  	equ	sst.strsize,43
                        000054    4-56  	equ	sst.cmp,44
                                  4-57  
                        000056    4-58  	equ	sst.usedp,46		" UPPER
                                  4-59  
                        000057    4-60  	equ	sst.wtct,47
                                  4-61  
                        000060    4-62  	equ	sst.startp,48		" UPPER
                                  4-63  
                        000061    4-64  	equ	sst.removep,49		" UPPER
                                  4-65  
                        000062    4-66  	equ	sst.double_write,50
                        000063    4-67  	equ	sst.temp_w_event,51
                        000064    4-68  	equ	sst.root_pvtx,52
                                  4-69  
                        000065    4-70  	equ	sst.nolock_word,53
                        400000    4-71  	bool	sst.nolock,400000		" DU
                                  4-72  
                        000066    4-73  	equ	sst.fc_skips_pinned,54
                        000067    4-74  	equ	sst.cl_skips_pinned,55
                        000070    4-75  	equ	sst.ast_ht_ptr,56
                        000072    4-76  	equ	sst.ast_ht_n_buckets,58
                        000073    4-77  	equ	sst.ast_ht_uid_mask,59
                        000074    4-78  	equ	sst.meter_ast_locking,60
                        000075    4-79  	equ	sst.checksum_filemap,61
                        000076    4-80  	equ	sst.page_read_errors,62
                        000077    4-81  	equ	sst.page_write_errors,63
                        000100    4-82  	equ	sst.cycle_pv_allocation,64
                        000101    4-83  	equ	sst.n_trailers,65
                        000102    4-84  	equ	sst.synch_activations,66
                        000103    4-85  	equ	sst.synch_skips,67
                        000104    4-86  	equ	sst.lock_waits,68
                        000105    4-87  	equ	sst.total_locks_set,69
                        000106    4-88  	equ	sst.pdir_page_faults,70
                        000107    4-89  	equ	sst.level_1_page_faults,71
                        000110    4-90  	equ	sst.dir_page_faults,72
                        000111    4-91  	equ	sst.ring_0_page_faults,73
                        000112    4-92  	equ	sst.rqover,74
                        000113    4-93  	equ	sst.pc_io_waits,75
                        000114    4-94  	equ	sst.steps,76
                        000115    4-95  	equ	sst.needc,77
                        000116    4-96  	equ	sst.ceiling,78
                        000117    4-97  	equ	sst.ctwait,79
                        000120    4-98  	equ	sst.wired,80
                        000121    4-99  	equ	sst.laps,81
                        000122   4-100  	equ	sst.skipw,82
                        000123   4-101  	equ	sst.skipu,83
                        000124   4-102  	equ	sst.skipm,84
                        000125   4-103  	equ	sst.skipos,85
                        000126   4-104  	equ	sst.aused,86
                        000127   4-105  	equ	sst.damaged_ct,87
                        000130   4-106  	equ	sst.deact_count,88
                        000131   4-107  	equ	sst.demand_deact_attempts,89
                        000132   4-108  	equ	sst.demand_deactivations,90
                        000133   4-109  	equ	sst.reads,91
                        000143   4-110  	equ	sst.writes,99
                        000153   4-111  	equ	sst.short_pf_count,107
                        000154   4-112  	equ	sst.loop_locks,108
                        000156   4-113  	equ	sst.loop_lock_time,110	" DOUBLE
                        000160   4-114  	equ	sst.cpu_sf_time,112		" DOUBLE
                        000162   4-115  	equ	sst.total_sf_pf,114
                        000163   4-116  	equ	sst.total_sf,115
                        000164   4-117  	equ	sst.pre_page_size,116
                        000165   4-118  	equ	sst.post_list_size,117
                        000166   4-119  	equ	sst.post_purgings,118
                        000167   4-120  	equ	sst.post_purge_calls,119
                        000170   4-121  	equ	sst.pre_page_calls,120
                        000171   4-122  	equ	sst.pre_page_list_size,121
                        000172   4-123  	equ	sst.pre_page_misses,122
                        000173   4-124  	equ	sst.pre_pagings,123
                        000174   4-125  	equ	sst.wire_proc_data,124	" DOUBLE
                        000214   4-126  	equ	sst.abs_wired_count,140
                        000215   4-127  	equ	sst.system_type,141
                        000216   4-128  	equ	sst.wired_copies,142
                        000217   4-129  	equ	sst.recopies,143
                        000220   4-130  	equ	sst.first_core_block,144
                        000221   4-131  	equ	sst.last_core_block,145
                        000222   4-132  	equ	sst.fw_retries,146
                        000223   4-133  	equ	sst.pvhtp,147
                        000224   4-134  	equ	sst.askipsize,148
                        000230   4-135  	equ	sst.aneedsize,152
                        000234   4-136  	equ	sst.stepsa,156
                        000235   4-137  	equ	sst.askipsehs,157
                        000236   4-138  	equ	sst.asearches,158
                        000237   4-139  	equ	sst.askipslevel,159
                        000240   4-140  	equ	sst.askipsinit,160
                        000241   4-141  	equ	sst.acost,161
                        000242   4-142  	equ	sst.askipslock,162
                        000243   4-143  	equ	sst.askipdius,163
                        000244   4-144  	equ	sst.alaps,164
                        000245   4-145  	equ	sst.updates,165
                        000246   4-146  	equ	sst.setfaults_all,166
                        000247   4-147  	equ	sst.setfaults_acc,167
                        000250   4-148  	equ	sst.total_bf,168
                        000251   4-149  	equ	sst.total_bf_pf,169
                        000252   4-150  	equ	sst.cpu_bf_time,170		" DOUBLE
                        000254   4-151  	equ	sst.asteps,172
                        000260   4-152  	equ	sst.ast_locked_at_time,176	" DOUBLE
                        000262   4-153  	equ	sst.ast_locked_total_time,178	" DOUBLE
                        000264   4-154  	equ	sst.ast_lock_wait_time,180	" DOUBLE
                        000266   4-155  	equ	sst.ast_locking_count,182
                        000267   4-156  	equ	sst.cleanup_count,183
                        000270   4-157  	equ	sst.cleanup_real_time,184	" DOUBLE
                        000272   4-158  	equ	sst.tree_count,186
                        000372   4-159  	equ	sst.pp_meters,250
                                 4-160  
                        000472   4-161  	equ	sst.wusedp,314		" UPPER
                                 4-162  
                        000473   4-163  	equ	sst.write_hunts,315
                        000474   4-164  	equ	sst.claim_skip_cme,316
                        000475   4-165  	equ	sst.claim_skip_free,317
                        000476   4-166  	equ	sst.claim_notmod,318
                        000477   4-167  	equ	sst.claim_passed_used,319
                        000500   4-168  	equ	sst.claim_skip_ptw,320
                        000501   4-169  	equ	sst.claim_writes,321
                        000502   4-170  	equ	sst.claim_steps,322
                        000503   4-171  	equ	sst.pre_seeks_failed,323
                        000504   4-172  	equ	sst.resurrections,324
                        000505   4-173  	equ	sst.volmap_seg_page_faults,325
                        000506   4-174  	equ	sst.oopv,326
                        000507   4-175  	equ	sst.dblw_resurrections,327
                        000510   4-176  	equ	sst.sgm_time,328		" DOUBLE
                        000512   4-177  	equ	sst.sgm_pf,330
                        000513   4-178  	equ	sst.bad_sgms,331
                        000514   4-179  	equ	sst.sgm_sgft,332
                        000515   4-180  	equ	sst.good_sgms,333
                        000516   4-181  	equ	sst.claim_runs,334
                        000517   4-182  	equ	sst.activations,335
                        000520   4-183  	equ	sst.dir_activations,336
                        000521   4-184  	equ	sst.hedge_updatevs,337
                        000522   4-185  	equ	sst.hedge_writes,338
                        000523   4-186  	equ	sst.evict_recover_data,339	" LEVEL 2
                                 4-187  
                        000523   4-188  	equ	sst.evict_ptp,339		" UPPER
                        000523   4-189  	equ	sst.evict_phmbit,339	" LOWER
                                 4-190  
                        000524   4-191  	equ	sst.force_swrites,340
                        000525   4-192  	equ	sst.force_pwrites,341
                        000526   4-193  	equ	sst.fw_none,342
                        000527   4-194  	equ	sst.force_updatevs,343
                        000530   4-195  	equ	sst.pf_unlock_ptl_time,344	" DOUBLE
                        000532   4-196  	equ	sst.pf_unlock_ptl_meterings,346
                        000533   4-197  	equ	sst.makeknown_activations,347
                        000534   4-198  	equ	sst.backup_activations,348
                        000535   4-199  	equ	sst.metering_flags,349	" LEVEL 2
                                 4-200  
                        400000   4-201  	bool	sst.activate_activated,400000	" DU
                                 4-202  
                        000536   4-203  	equ	sst.seg_fault_calls,350
                        000537   4-204  	equ	sst.stk_truncate_should_didnt,351
                        000540   4-205  	equ	sst.stk_truncate_should_did,352
                        000541   4-206  	equ	sst.stk_truncate_shouldnt_didnt,353
                        000542   4-207  	equ	sst.stk_truncate_shouldnt_did,354
                        000543   4-208  	equ	sst.stk_pages_truncated,355
                        000544   4-209  	equ	sst.stk_pages_truncated_in_core,356
                        000545   4-210  	equ	sst.segmove_lock,357	" LEVEL 2
                                 4-211  
                        000545   4-212  	equ	sst.pid,357
                        000546   4-213  	equ	sst.event,358
                                 4-214  
                        000547   4-215  	equ	sst.notify_word,359
                        400000   4-216  	bool	sst.notify,400000		" DU
                                 4-217  
                        000550   4-218  	equ	sst.segmove_io_limit,360
                        000551   4-219  	equ	sst.segmove_found_synch,361
                        000552   4-220  	equ	sst.segmove_synch_disappeared,362
                        000553   4-221  	equ	sst.segmove_n_reads,363
                        000554   4-222  	equ	sst.segmove_max_tries,364
                        000555   4-223  	equ	sst.segmove_astep,365
                        000556   4-224  	equ	sst.segmove_pvtx,366
                        000557   4-225  	equ	sst.segmove_vtocx,367
                        000560   4-226  	equ	sst.segmove_old_addr_astep,368
                        000561   4-227  	equ	sst.segmove_new_addr_astep,369
                        000562   4-228  	equ	sst.mod_during_write,370
                        000563   4-229  	equ	sst.zero_pages,371
                        000564   4-230  	equ	sst.trace_sw,372		" LEVEL 2
                                 4-231  
                        000010   4-232  	bool	sst.pc_trace_pf,000010	" DL
                        000004   4-233  	bool	sst.tty_trace,000004	" DL
                        000002   4-234  	bool	sst.pc_trace,000002		" DL
                        000001   4-235  	bool	sst.sc_trace,000001		" DL
                                 4-236  
                        000565   4-237  	equ	sst.new_pages,373
                                 4-238  
                        000566   4-239  	equ	sst.ast_track_word,374
                        400000   4-240  	bool	sst.ast_track,400000	" DU
                                 4-241  
                        000567   4-242  	equ	sst.dirlock_writebehind,375
                        000570   4-243  	equ	sst.write_limit,376
                                 4-244  
                        000571   4-245  	equ	sst.crash_test_segmove_word,377
                        400000   4-246  	bool	sst.crash_test_segmove,400000	" DU
                                 4-247  
                        000572   4-248  	equ	sst.delayed_seg_state_chg,378
                        000573   4-249  	equ	sst.audit_seg_state_chg,379
                        000574   4-250  	equ	sst.seg_state_chg_delay,380	" DOUBLE
                        000576   4-251  	equ	sst.seg_state_change_limit,382
                        000577   4-252  	equ	sst.max_seg_state_change_bw,383
                        000600   4-253  	equ	sst.audit_seg_state_change_bw,384
                        000601   4-254  	equ	sst.seg_state_chg_operation,385
                                 4-255  
                                 4-256       "END INCLUDE FILE sst.incl.alm
                                    41  	include	sys_trace
                                   5-1  
                                   5-2  
                                   5-3       "BEGIN INCLUDE FILE sys_trace.incl.alm
                                   5-4  
                                   5-5  
                                   5-6  	"Created 12/03/83  1314.8 est Sat by convert_include_file,
                                   5-7  	"   Version of 11/07/82  1445.1 est Sun.
                                   5-8  
                                   5-9  	"Made from >udd>m>bim>w>cpt>sys_trace.incl.pl1,
                                  5-10  	"   modified 12/03/83  1314.1 est Sat
                                  5-11  
                                  5-12  "         all structures except trace removed by hand -- BIM
                                  5-13  
                                  5-14  "
                                  5-15  "	Structure trace
                                  5-16  "
                        004010    5-17  	equ	trace_size,2056
                                  5-18  
                        000000    5-19  	equ	trace.next_free_word,0
                        000023    5-20  	equ	trace.next_free_shift,19
                        377777    5-21  	bool	trace.next_free_mask,377777
                                  5-22  
                        000001    5-23  	equ	trace.last_available_word,1
                        000023    5-24  	equ	trace.last_available_shift,19
                        377777    5-25  	bool	trace.last_available_mask,377777
                                  5-26  
                        000002    5-27  	equ	trace.ttime,2		" DOUBLE
                        000004    5-28  	equ	trace.temp,4
                                  5-29  
                        000005    5-30  	equ	trace.index_word,5
                        000023    5-31  	equ	trace.index_shift,19
                        377777    5-32  	bool	trace.index_mask,377777
                                  5-33  
                        000006    5-34  	equ	trace.threshold_word,6
                        000023    5-35  	equ	trace.threshold_shift,19
                        377777    5-36  	bool	trace.threshold_mask,377777
                        000006    5-37  	equ	trace.flags,6		" LOWER
                        000006    5-38  	equ	trace.send_ips_word,6
                        400000    5-39  	bool	trace.send_ips,400000	" DL
                                  5-40  
                        000010    5-41  	equ	trace.data,8		" LEVEL 2
                                  5-42  
                        000010    5-43  	equ	trace.data_word,8
                                  5-44  
                                  5-45       "END INCLUDE FILE sys_trace.incl.alm
                                    42  	include	aste
                                   6-1  
                                   6-2  
                                   6-3       "BEGIN INCLUDE FILE aste.incl.alm
                                   6-4  
                                   6-5  
                                   6-6  	"Created 01/14/85  1523.3 est Mon by convert_include_file,
                                   6-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   6-8  
                                   6-9  	"Made from >Pool>m>loe>incl>aste.incl.pl1,
                                  6-10  	"   modified 01/08/85  1115.0 est Tue
                                  6-11  
                                  6-12  "
                                  6-13  "	Structure aste
                                  6-14  "
                        000014    6-15  	equ	aste_size,12
                                  6-16  
                        000000    6-17  	equ	aste.fp,0			" UPPER
                        000000    6-18  	equ	aste.bp,0			" LOWER
                                  6-19  
                        000001    6-20  	equ	aste.infl,1		" UPPER
                        000001    6-21  	equ	aste.infp,1		" LOWER
                                  6-22  
                        000002    6-23  	equ	aste.strp,2		" UPPER
                        000002    6-24  	equ	aste.par_astep,2		" LOWER
                                  6-25  
                        000003    6-26  	equ	aste.uid,3
                                  6-27  
                        000004    6-28  	equ	aste.msl_word,4
                        000033    6-29  	equ	aste.msl_shift,27
                        000777    6-30  	bool	aste.msl_mask,000777
                        000004    6-31  	equ	aste.pvtx_word,4
                        000022    6-32  	equ	aste.pvtx_shift,18
                        000777    6-33  	bool	aste.pvtx_mask,000777
                        000004    6-34  	equ	aste.vtocx,4		" LOWER
                                  6-35  
                        000005    6-36  	equ	aste.usedf_word,5
                        400000    6-37  	bool	aste.usedf,400000		" DU
                        000005    6-38  	equ	aste.init_word,5
                        200000    6-39  	bool	aste.init,200000		" DU
                        000005    6-40  	equ	aste.gtus_word,5
                        100000    6-41  	bool	aste.gtus,100000		" DU
                        000005    6-42  	equ	aste.gtms_word,5
                        040000    6-43  	bool	aste.gtms,040000		" DU
                        000005    6-44  	equ	aste.hc_word,5
                        020000    6-45  	bool	aste.hc,020000		" DU
                        000005    6-46  	equ	aste.hc_sdw_word,5
                        010000    6-47  	bool	aste.hc_sdw,010000		" DU
                        000005    6-48  	equ	aste.any_access_on_word,5
                        004000    6-49  	bool	aste.any_access_on,004000	" DU
                        000005    6-50  	equ	aste.write_access_on_word,5
                        002000    6-51  	bool	aste.write_access_on,002000	" DU
                        000005    6-52  	equ	aste.inhibit_cache_word,5
                        001000    6-53  	bool	aste.inhibit_cache,001000	" DU
                        000005    6-54  	equ	aste.explicit_deact_ok_word,5
                        000400    6-55  	bool	aste.explicit_deact_ok,000400	" DU
                        000005    6-56  	equ	aste.deact_error_word,5
                        000200    6-57  	bool	aste.deact_error,000200	" DU
                        000005    6-58  	equ	aste.hc_part_word,5
                        000100    6-59  	bool	aste.hc_part,000100		" DU
                        000005    6-60  	equ	aste.fm_damaged_word,5
                        000040    6-61  	bool	aste.fm_damaged,000040	" DU
                        000005    6-62  	equ	aste.multi_class_word,5
                        000020    6-63  	bool	aste.multi_class,000020	" DU
                        000005    6-64  	equ	aste.dius_word,5
                        000002    6-65  	bool	aste.dius,000002		" DU
                        000005    6-66  	equ	aste.nid_word,5
                        000001    6-67  	bool	aste.nid,000001		" DU
                        000005    6-68  	equ	aste.dmpr_pad_word,5
                        400000    6-69  	bool	aste.dmpr_pad,400000	" DL
                        000005    6-70  	equ	aste.ehs_word,5
                        200000    6-71  	bool	aste.ehs,200000		" DL
                        000005    6-72  	equ	aste.nqsw_word,5
                        100000    6-73  	bool	aste.nqsw,100000		" DL
                        000005    6-74  	equ	aste.dirsw_word,5
                        040000    6-75  	bool	aste.dirsw,040000		" DL
                        000005    6-76  	equ	aste.master_dir_word,5
                        020000    6-77  	bool	aste.master_dir,020000	" DL
                        000005    6-78  	equ	aste.volmap_seg_word,5
                        010000    6-79  	bool	aste.volmap_seg,010000	" DL
                        000005    6-80  	equ	aste.tqsw_word,5
                        004000    6-81  	bool	aste.tqsw,004000		" DL
                                  6-82  
                        000006    6-83  	equ	aste.dtu,6
                        000007    6-84  	equ	aste.dtm,7
                                  6-85  
                        000010    6-86  	equ	aste.quota,8		" UPPER
                                  6-87  
                        000011    6-88  	equ	aste.used,9		" UPPER
                                  6-89  
                        000012    6-90  	equ	aste.csl_word,10
                        000033    6-91  	equ	aste.csl_shift,27
                        000777    6-92  	bool	aste.csl_mask,000777
                        000012    6-93  	equ	aste.fmchanged_word,10
                        000400    6-94  	bool	aste.fmchanged,000400	" DU
                        000012    6-95  	equ	aste.fms_word,10
                        000200    6-96  	bool	aste.fms,000200		" DU
                        000012    6-97  	equ	aste.npfs_word,10
                        000100    6-98  	bool	aste.npfs,000100		" DU
                        000012    6-99  	equ	aste.gtpd_word,10
                        000040   6-100  	bool	aste.gtpd,000040		" DU
                        000012   6-101  	equ	aste.dnzp_word,10
                        000020   6-102  	bool	aste.dnzp,000020		" DU
                        000012   6-103  	equ	aste.per_process_word,10
                        000010   6-104  	bool	aste.per_process,000010	" DU
                        000012   6-105  	equ	aste.ddnp_word,10
                        000004   6-106  	bool	aste.ddnp,000004		" DU
                        000012   6-107  	equ	aste.records_word,10
                        000011   6-108  	equ	aste.records_shift,9
                        000777   6-109  	bool	aste.records_mask,000777
                        000012   6-110  	equ	aste.np_word,10
                        000000   6-111  	equ	aste.np_shift,0
                        000777   6-112  	bool	aste.np_mask,000777
                                 6-113  
                        000013   6-114  	equ	aste.ht_fp,11		" UPPER
                        000013   6-115  	equ	aste.fmchanged1_word,11
                        400000   6-116  	bool	aste.fmchanged1,400000	" DL
                        000013   6-117  	equ	aste.damaged_word,11
                        200000   6-118  	bool	aste.damaged,200000		" DL
                        000013   6-119  	equ	aste.pack_ovfl_word,11
                        100000   6-120  	bool	aste.pack_ovfl,100000	" DL
                        000013   6-121  	equ	aste.synchronized_word,11
                        040000   6-122  	bool	aste.synchronized,040000	" DL
                        000013   6-123  	equ	aste.ptsi_word,11
                        000006   6-124  	equ	aste.ptsi_shift,6
                        000003   6-125  	bool	aste.ptsi_mask,000003
                        000013   6-126  	equ	aste.marker_word,11
                        000000   6-127  	equ	aste.marker_shift,0
                        000077   6-128  	bool	aste.marker_mask,000077
                                 6-129  
                                 6-130  "
                                 6-131  "	Structure aste_part
                                 6-132  "
                        000014   6-133  	equ	aste_part_size,12
                                 6-134  
                                 6-135  
                        000000   6-136  	equ	aste_part.one,0
                        000001   6-137  	equ	aste_part.two,1		" DOUBLE
                                 6-138  
                        000013   6-139  	equ	aste_part.three_word,11
                        000000   6-140  	equ	aste_part.three_shift,0
                        000377   6-141  	bool	aste_part.three_mask,000377
                                 6-142  
                                 6-143  "
                                 6-144  "	Structure seg_aste
                                 6-145  "
                        000014   6-146  	equ	seg_aste_size,12
                                 6-147  
                                 6-148  
                        000010   6-149  	equ	seg_aste.usage,8
                                 6-150  
                                 6-151       "END INCLUDE FILE aste.incl.alm
                                    43  	include	sdw
                                   7-1  " BEGIN INCLUDE FILE ... sdw.incl.alm ... 03/01/81, for ADP conversion
                                   7-2  
                                   7-3  	iftarget	l68	" Include whichever seems appropriate
                                        	 include	sdw.l68
                                   8-1  
                                   8-2  
                                   8-3       "BEGIN INCLUDE FILE sdw.l68.incl.alm
                                   8-4  
                                   8-5  
                                   8-6  	"Created 04/05/81  1616.1 est Sun by convert_include_file,
                                   8-7  	"   Version of 04/05/81  1606.8 est Sun.
                                   8-8  
                                   8-9  	"Made from >udd>Multics>hardcore_pool>new_pc>include>sdw.l68.incl.pl1,
                                  8-10  	"   modified 03/20/81  2215.5 est Fri
                                  8-11  
                                  8-12  "
                                  8-13  "	Structure sdw
                                  8-14  "
                        000002    8-15  	equ	sdw_size,2
                                  8-16  
                        000000    8-17  	equ	sdw.add_word,0
                        000014    8-18  	equ	sdw.add_shift,12
                        000000    8-19  	equ	sdw.rings_word,0
                        000003    8-20  	equ	sdw.rings_shift,3
                        000777    8-21  	bool	sdw.rings_mask,000777
                        000000    8-22  	equ	sdw.r1_word,0
                        000011    8-23  	equ	sdw.r1_shift,9
                        000007    8-24  	bool	sdw.r1_mask,000007
                        000000    8-25  	equ	sdw.r2_word,0
                        000006    8-26  	equ	sdw.r2_shift,6
                        000007    8-27  	bool	sdw.r2_mask,000007
                        000000    8-28  	equ	sdw.r3_word,0
                        000003    8-29  	equ	sdw.r3_shift,3
                        000007    8-30  	bool	sdw.r3_mask,000007
                        000000    8-31  	equ	sdw.valid_word,0
                        000004    8-32  	bool	sdw.valid,000004	" DL
                        000000    8-33  	equ	sdw.df_no_word,0
                        000000    8-34  	equ	sdw.df_no_shift,0
                        000003    8-35  	bool	sdw.df_no_mask,000003
                                  8-36  
                        000001    8-37  	equ	sdw.bound_word,1
                        000025    8-38  	equ	sdw.bound_shift,21
                        037777    8-39  	bool	sdw.bound_mask,037777
                        000001    8-40  	equ	sdw.access_word,1
                        000021    8-41  	equ	sdw.access_shift,17
                        000017    8-42  	bool	sdw.access_mask,000017
                        000001    8-43  	equ	sdw.read_word,1
                        000004    8-44  	bool	sdw.read,000004		" DU
                        000001    8-45  	equ	sdw.execute_word,1
                        000002    8-46  	bool	sdw.execute,000002	" DU
                        000001    8-47  	equ	sdw.write_word,1
                        000001    8-48  	bool	sdw.write,000001	" DU
                        000001    8-49  	equ	sdw.privileged_word,1
                        400000    8-50  	bool	sdw.privileged,400000	" DL
                        000001    8-51  	equ	sdw.unpaged_word,1
                        200000    8-52  	bool	sdw.unpaged,200000	" DL
                        000001    8-53  	equ	sdw.not_a_gate_word,1
                        100000    8-54  	bool	sdw.not_a_gate,100000	" DL
                        000001    8-55  	equ	sdw.cache_word,1
                        040000    8-56  	bool	sdw.cache,040000	" DL
                        000001    8-57  	equ	sdw.entry_bound_word,1
                        000000    8-58  	equ	sdw.entry_bound_shift,0
                        037777    8-59  	bool	sdw.entry_bound_mask,037777
                                  8-60  
                                  8-61       "END INCLUDE FILE sdw.l68.incl.alm
                                        "	ifend
                                   7-6  
                                   7-7  	iftarget	adp
                                        "	 include	sdw.adp
                                        "	ifend
                                  7-10  
                                  7-11  " END INCLUDE FILE ... sdw.incl.alm
                                    44  	include	ptw
                                   9-1  " BEGIN INCLUDE FILE ... ptw.incl.alm ... 03/01/81, for ADP conversion
                                   9-2  
                                   9-3  	iftarget	l68	" Include whichever seems appropriate
                                        	 include	ptw.l68
                                  10-1  
                                  10-2  
                                  10-3       "BEGIN INCLUDE FILE ptw.l68.incl.alm
                                  10-4  
                                  10-5  
                                  10-6  	"Created 04/05/81  1616.0 est Sun by convert_include_file,
                                  10-7  	"   Version of 04/05/81  1606.8 est Sun.
                                  10-8  
                                  10-9  	"Made from >udd>Multics>hardcore_pool>new_pc>include>ptw.l68.incl.pl1,
                                 10-10  	"   modified 03/20/81  1815.9 est Fri
                                 10-11  
                                 10-12  "
                                 10-13  "	Structure core_ptw
                                 10-14  "
                        000026   10-15  	equ	core_ptw.frame_shift,22
                        037777   10-16  	bool	core_ptw.frame_mask,037777
                        000000   10-17  	equ	core_ptw.flags,0	" LOWER
                        000016   10-18  	equ	core_ptw.add_type_shift,14
                        000017   10-19  	bool	core_ptw.add_type_mask,000017
                        020000   10-20  	bool	core_ptw.first,020000	" DL
                        010000   10-21  	bool	core_ptw.er,010000	" DL
                        002000   10-22  	bool	core_ptw.unusable1,002000	" DL
                        001000   10-23  	bool	core_ptw.phu,001000	" DL
                        000400   10-24  	bool	core_ptw.phm1,000400	" DL
                        000200   10-25  	bool	core_ptw.nypd,000200	" DL
                        000100   10-26  	bool	core_ptw.phm,000100	" DL
                        000040   10-27  	bool	core_ptw.phu1,000040	" DL
                        000020   10-28  	bool	core_ptw.wired,000020	" DL
                        000010   10-29  	bool	core_ptw.os,000010	" DL
                        000004   10-30  	bool	core_ptw.valid,000004	" DL
                        000000   10-31  	equ	core_ptw.df_no_shift,0
                        000003   10-32  	bool	core_ptw.df_no_mask,000003
                                 10-33  
                                 10-34  "
                                 10-35  "	Structure ptw
                                 10-36  "
                        000000   10-37  	equ	ptw.add,0		" UPPER
                        000000   10-38  	equ	ptw.flags,0		" LOWER
                        000016   10-39  	equ	ptw.add_type_shift,14
                        000017   10-40  	bool	ptw.add_type_mask,000017
                        020000   10-41  	bool	ptw.first,020000	" DL
                        010000   10-42  	bool	ptw.er,010000		" DL
                        002000   10-43  	bool	ptw.unusable1,002000	" DL
                        001000   10-44  	bool	ptw.phu,001000		" DL
                        000400   10-45  	bool	ptw.phm1,000400		" DL
                        000200   10-46  	bool	ptw.nypd,000200		" DL
                        000100   10-47  	bool	ptw.phm,000100		" DL
                        000040   10-48  	bool	ptw.phu1,000040		" DL
                        000020   10-49  	bool	ptw.wired,000020	" DL
                        000010   10-50  	bool	ptw.os,000010		" DL
                        000004   10-51  	bool	ptw.valid,000004	" DL
                        000000   10-52  	equ	ptw.df_no_shift,0
                        000003   10-53  	bool	ptw.df_no_mask,000003
                                 10-54  
                                 10-55       "END INCLUDE FILE ptw.l68.incl.alm
                                        "	ifend
                                   9-6  
                                   9-7  	iftarget	adp
                                        "	 include	ptw.adp
                                        "	ifend
                                  9-10  
                                  9-11  " END INCLUDE FILE ... ptw.incl.alm
                                    45  	include	cmp
                                  11-1  "
                                  11-2  "	BEGIN INCLUDE FILE	cmp.incl.alm	October 1982
                                  11-3  "
                        000004    11-4  	equ	cme_size,4	Size of a CME
                                  11-5  
                        000000    11-6  	equ	cme.fp,0		forward pointer to next core map entry (DU)
                        000000    11-7  	equ	cme.bp,0		backward pointer to previous core map entry (DL)
                                  11-8  
                        000001    11-9  	equ	cme.devadd,1	device address of page in the core block
                        000001   11-10  	equ	cme.flags,1	word containing various flags
                        740000   11-11  	bool	cme.did_mask,740000	mask for extracting device ID from core map entry
                        010000   11-12  	bool	cme.synch_held,010000 page of synch seg held in mem (DL)
                        004000   11-13  	bool	cme.io,004000	read/write bit (DL)
                        001000   11-14  	bool	cme.er,001000	error on previous I/O
                        000400   11-15  	bool	cme.removing,000400	page is being removed
                        000200   11-16  	bool	cme.abs_w,000200	page may not be moved
                        000100   11-17  	bool	cme.abs_usable,000100 page may be assigned with fixed abs addr
                        000040   11-18  	bool	cme.notify_requested,000040 ptw event must be notified on completion
                        000010   11-19  	bool	cme.phm_hedge,000010 periodic write scheduler
                        000007   11-20  	bool	cme.contr,000007	port number of controller in which core block is located
                                 11-21  
                        000002   11-22  	equ	cme.ptwp,2	page table word pointer (DU)
                        000002   11-23  	equ	cme.astep,2	AST entry ptr (DL)
                                 11-24  
                        000003   11-25  	equ	cme.pin_counter,3	number times to skip eviction (DU)
                        000003   11-26  	equ	cme.synch_page_entryp,3 rel ptr to synch page entry
                                 11-27  	
                                 11-28  "	END INCLUDE FILE cmp.incl.alm
                                    46  	include	apte
                                  12-1  "	BEGIN INCLUDE FILE apte.incl.alm
                                  12-2  "
                                  12-3  "
                                  12-4  " HISTORY COMMENTS:
                                  12-5  "  1) change(86-08-09,Kissel), approve(86-08-12,MCR7479),
                                  12-6  "     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
                                  12-7  "     Added the ipc_r_offset, ipc_r_factor, and apad fields from the pl1
                                  12-8  "     include file to support async event channel wakeups.
                                  12-9  "                                                      END HISTORY COMMENTS
                                 12-10  
                        000000   12-11  	equ	apte.thread,0
                        000000   12-12  	equ	apte.fp,0			"UPPER
                        000000   12-13  	equ	apte.bp,0			"LOWER
                                 12-14  
                        000001   12-15  	equ	apte.flags,1
                        000001   12-16  	equ	apte.sentinel,1
                        400000   12-17  	bool	apte.mbz,400000		"DU
                        200000   12-18  	bool	apte.wakeup_waiting,200000	"DU
                        100000   12-19  	bool	apte.stop_pending,100000	"DU
                        040000   12-20  	bool	apte.pre_empted,040000	"DU
                        020000   12-21  	bool	apte.hproc,020000		"DU
                        010000   12-22  	bool	apte.loaded,010000		"DU
                        004000   12-23  	bool	apte.eligible,004000	"DU
                        002000   12-24  	bool	apte.idle,002000		"DU
                        001000   12-25  	bool	apte.interaction,001000	"DU
                        000400   12-26  	bool	apte.pre_empt_pending,000400	"DU
                        000200   12-27  	bool	apte.default_procs_required,000200 "DU
                        000100   12-28  	bool	apte.realtime_burst,000100	"DU
                        000040   12-29  	bool	apte.always_loaded,000040	"DU
                        000020   12-30  	bool	apte.dbr_loaded,000020	"DU
                        000010   12-31  	bool	apte.being_loaded,000010	"DU
                        000004   12-32  	bool	apte.shared_stack_0,000004	"DU
                        000002   12-33  	bool	apte.page_wait_flag,000002	"DU
                        000001   12-34  	bool	apte.firstsw,000001		"DU
                        000001   12-35  	equ	apte.state,1		"LOWER
                                 12-36  
                        000002   12-37  	equ	apte.page_faults,2
                                 12-38  
                        000003   12-39  	equ	apte.processid,3
                                 12-40  
                        000004   12-41  	equ	apte.te,4
                                 12-42  
                        000005   12-43  	equ	apte.ts,5
                                 12-44  
                        000006   12-45  	equ	apte.ti,6
                                 12-46  
                        000007   12-47  	equ	apte.timax,7
                                 12-48  
                        000010   12-49  	equ	apte.ipc_pointers,8
                        000010   12-50  	equ	apte.event_thread,8		"UPPER
                                 12-51  
                        000011   12-52  	equ	apte.ips_message,9
                                 12-53  
                        000012   12-54  	equ	apte.asteps,10
                        000012   12-55  	equ	apte.pds,10		"UPPER
                        000012   12-56  	equ	apte.dseg,10		"LOWER
                                 12-57  
                        000013   12-58  	equ	apte.prds,11		"UPPER
                        000013   12-59  	equ	apte.savex7,11		"LOWER
                                 12-60  
                        000014   12-61  	equ	apte.term_processid,12
                                 12-62  
                        000015   12-63  	equ	apte.lock_id,13
                        000016   12-64  	equ	apte.time_used_clock,14
                                 12-65  
                        000020   12-66  	equ	apte.wait_event,16
                                 12-67  
                        000021   12-68  	equ	apte.wct_index,17		"UPPER
                        000021   12-69  	equ	apte.flags2,17		"LOWER
                        400000   12-70  	bool	apte.prior_sched,400000	"DL
                        000023   12-71  	equ	apte.chans_offset,19
                        374000   12-72  	bool	apte.special_chans,374000	"DL
                        000021   12-73  	equ	apte.batch_word,17
                        000010   12-74  	bool	apte.batch,000010		"DL
                        000007   12-75  	bool	apte.pr_tag_mask,000007
                                 12-76  
                        000022   12-77  	equ	apte.state_change_time,18
                                 12-78  
                        000024   12-79  	equ	apte.alarm_event,20
                                 12-80  
                        000026   12-81  	equ	apte.alarm_time_thread,22	"UPPER
                        000026   12-82  	equ	apte.alarm_time,22
                                 12-83  
                        000030   12-84  	equ	apte.term_channel,24
                                 12-85  
                        000032   12-86  	equ	apte.ws_size,26
                                 12-87  
                        000033   12-88  	equ	apte.temax,27
                                 12-89  
                        000034   12-90  	equ	apte.deadline,28
                                 12-91  
                        000036   12-92  	equ	apte.lock,30
                                 12-93  
                        000037   12-94  	equ	apte.cpu_monitor,31		units = 1/1024 sec
                                 12-95  
                        000040   12-96  	equ	apte.paging_measure,32
                                 12-97  
                        000042   12-98  	equ	apte.access_authorization,34 	"DOUBLE WORD
                        400000   12-99  	bool	apte.no_ipc_check,400000	"DL
                                12-100  
                        000044  12-101  	equ	apte.dbr,36
                                12-102  
                        000046  12-103  	equ	apte.virtual_cpu_time,38
                                12-104  
                        000050  12-105  	equ	apte.ittes_sent,40
                        000051  12-106  	equ	apte.ittes_got,41
                                12-107  
                        000052  12-108  	equ	apte.current_response_state,42	" DU
                        000053  12-109  	equ	apte.number_processing,43
                        000054  12-110  	equ	apte.last_response_state_time,44
                        000056  12-111  	equ	apte.total_processing_time,46
                        000060  12-112  	equ	apte.begin_interaction_vcpu,48
                                12-113  
                        000062  12-114  	equ	apte.saved_temax,50
                        000063  12-115  	equ	apte.procs_required,51
                        776000  12-116  	bool	apte.procs_required_mask,776000	" DU
                                12-117  
                        000064  12-118  	equ	apte.ipc_r_offset,52
                        000065  12-119  	equ	apte.ipc_r_factor,53
                        000066  12-120  	equ	apte.apad,54
                                12-121  
                        000100  12-122  	equ	size_of_apt_entry,64
                                12-123  
                                12-124  "	MISC OLD DCLS.
                                12-125  
                        000013  12-126  	equ	apte.le_shift,11
                        000175  12-127  	bool	apte.timer_factor,175
                                12-128  
                                12-129  
                                12-130  "
                                12-131  "	END INCLUDE FILE apte.incl.alm
                                12-132  "
                                    47  
                                    48  " 
                                    49  
                                    50  "	The following is the decision tree used
                                    51  "	at post-purge time.
                                    52  "
                                    53  "	The current algorithm is as follows:
                                    54  "
                                    55  "	post_purge		never
                                    56  "	move			if per-process and in core
                                    57  "	used bit off		never
                                    58  "	working set		if used in quantum by some process
                                    59  "
                                    60  "
                        000010      61  	bool	working_set,000010	" How to interpret the bits
                        000004      62  	bool	used_bit_off,000004
                        000002      63  	bool	post_purge_bit,000002
                        000001      64  	bool	moved_bit,000001
                                    65  
                        010000      66  	equ	ptw.pre_paged,ptw.er " Special use for this bit here
                                    67  
    000000                          68  code_tree:
    000000  aa   020042 104200      69  	oct	020042104200
    000001  aa   020042 104200      70  	oct	020042104200
    000002  aa   020042 104200      71  	oct	020042104200
    000003  aa   020042 104200      72  	oct	020042104200
    000004  aa   020042 104200      73  	oct	020042104200
    000005  aa   062146 314620      74  	oct	062146314620
    000006  aa   020042 104200      75  	oct	020042104200
    000007  aa   062146 314620      76  	oct	062146314620
                                    77  
    000010                          78  post_purge:
    000010  aa   000300 6270 00     79  	push
    000011  aa  7 00040 2721 20
    000012  4a  4 00010 7061 20     80  	tsx6	page_fault$init_savex initialize x7 save stack
    000013  aa   000004 2350 07     81  	lda	post_purge_entry,dl set entry switch
    000014  aa  6 00175 7551 00     82  	sta	entry_sw
    000015  4a  4 00012 7071 20     83  	tsx7	page_fault$lock_ptl lock the page table lock
                                    84  
                                    85  	read_clock		meter post-purge time
    000016  4a  4 00014 6331 20         	  rccl	sys_info$clock_,*
                                        "	ifend
                                        "	  rccl	0
                                        "	ifend
    000017  aa  6 00076 7571 00     86  	staq	pre_time		save start time in stack
                                    87  
    000020  aa   000000 4310 07     88  	fld	0,dl		initialize counters
    000021  aa  6 00100 7571 00     89  	staq	pre_temp
    000022  aa  6 00102 7571 00     90  	staq	pre_temp+2
    000023  aa  6 00104 7571 00     91  	staq	pre_temp+4
                                    92  
                                    93  "
                                    94  "	The post purge code starts searching the post purge trace list from "trace_index"
                                    95  "	to "trace_size" -- watching out for possible wrap-around.
                                    96  "
    000024  4a  4 00016 3501 20     97  	eppap	pds$trace 	get pointer to trace data
    000025  aa  0 00005 2201 00     98  	ldx0	ap|trace.index_word	get starting index
    000026                          99  post_loop:
    000026  aa  0 00000 1001 00    100  	cmpx0	ap|trace.next_free_word	are we done?
    000027  0a   000156 6000 00    101  	tze	done_post 	yes, finish up
                                   102  	increment sst|sst.post_list_size count number of pages in core at purge
                                        	missing	increment,sst|sst.post_list_size
    000030  aa  3 00165 0541 00         	aos	sst|sst.post_list_size
    000031  aa  6 00101 4401 00    103  	sxl0	pre_temp+1	save current index
    000032  aa  0 00011 2351 10    104  	lda	ap|trace.data+1,0	get page number from entry
    000033  aa   770000 3150 03    105  	cana	=o770000,du	this better be a page fault list entry
    000034  0a   000150 6010 00    106  	tnz	next_entry	it isn't, skip it
    000035  aa  6 00134 7551 00    107  	sta	temp		save it for a second
    000036  aa  0 00010 2231 10    108  	ldx3	ap|trace.data,0	get current AST entry pointer
    000037  aa   000014 6220 13    109  	eax2	aste_size,3	fabricate page table pointer
    000040  aa  6 00134 0221 00    110  	adlx2	temp		add in word number to get ptwp
    000041  aa  3 00000 3521 12    111  	eppbp	sst|0,2		get a pointer to the PTW
    000042  aa   010000 2350 07    112  	lda	ptw.pre_paged,dl	check if we've already looked at this ptw
    000043  aa  2 00000 3151 00    113  	cana	ptw|0		..
    000044  0a   000047 6000 00    114  	tze	looked		we haven't, continue
                                   115  	increment sst|sst.thrashing	count thrashing
                                        	missing	increment,sst|sst.thrashing
    000045  aa  3 00015 0541 00         	aos	sst|sst.thrashing
    000046  0a   000150 7100 00    116  	tra	next_entry	and skip this one
    000047                         117  looked:
    000047  aa  2 00000 2551 00    118  	orsa	ptw|0		turn on pre_paged bit (already looked)
    000050  aa  2 00000 2351 00    119  	lda	ptw|0		refetch the ptw
                                   120  "
                                   121  "	Now get decision index
                                   122  "
    000051  aa   000000 2360 07    123  	ldq	0,dl		The object of this game is to make Q1, Q2,
    000052  aa   000040 3150 07    124  	cana	ptw.phu1,dl	and Q3 contain PHU, PHM, and PHU1, resp.
    000053  0a   000055 6000 00    125  	tze	*+2		We accomplish this by inspecting each PTW bit
    000054  aa   040000 2760 03    126  	orq	=o040000,du	and setting the appropriate bit in Q.
    000055  aa   000500 3150 07    127  	cana	ptw.phm+ptw.phm1,dl
    000056  0a   000060 6000 00    128  	tze	*+2
    000057  aa   100000 2760 03    129  	orq	=o100000,du
    000060  aa   001000 3150 07    130  	cana	ptw.phu,dl
    000061  0a   000063 6000 00    131  	tze	*+2
    000062  aa   200000 2760 03    132  	orq	=o200000,du
                                   133  
    000063  aa   400000 3150 07    134  	cana	add_type.core,dl	check if core address
    000064  0a   000072 6000 00    135  	tze	not_in_core	if not skip cme stuff
                                   136  "
                                   137  "	It's in core, get CMEP
                                   138  "
    000065  aa   400000 2760 03    139  	orq	=o400000,du	turn on the in core bit for decision
    000066  aa   000002 7710 00    140  	arl	3-1		compute core map entry pointer
    000067  aa  3 00054 6241 61    141  	eax4	sst|sst.cmp,*au
                                   142  	increment sst|sst.post_in_core meter
                                        	missing	increment,sst|sst.post_in_core
    000070  aa  3 00014 0541 00         	aos	sst|sst.post_in_core
    000071  4a  4 00020 2351 20    143  	lda	page_fault$cme_devadd,*4 extract device ID from core map entry
    000072                         144  not_in_core:
    000072  aa   100000 3150 07    145  	cana	add_type.pd,dl	is this on pd?
    000073  0a   000076 6010 00    146  	tnz	pp.yes_pd
    000074  aa   000000 6350 00    147  	eaa	0
    000075  0a   000077 7100 00    148  	tra	*+2
    000076                         149  pp.yes_pd:
    000076  aa   000001 2350 07    150  	lda	1,dl
    000077  aa   000001 7730 00    151  	lrl	1
    000100  aa  3 00012 2351 13    152  	lda	ast|aste.per_process_word,3	get aste word
    000101  aa   000010 3150 03    153  	cana	aste.per_process,du 	is it p/p?
    000102  0a   000105 6010 00    154  	tnz	pp.yes_pp
    000103  aa   000000 6350 00    155  	eaa	0
    000104  0a   000106 7100 00    156  	tra	*+2
    000105                         157  pp.yes_pp:
    000105  aa   000001 2350 07    158  	lda	1,dl
    000106  aa   000001 7730 00    159  	lrl	1		shift in mlsw bit to complete index
    000107  aa   000036 7720 00    160  	qrl	30		right justify the decision index
                                   161  	increment sst|sst.tree_count,ql meter the decision
                                        	missing	increment,sst|sst.tree_count
    000110  aa  3 00272 0541 00         	aos	sst|sst.tree_count
    000111  aa  6 00105 7561 00    162  	stq	pre_temp+5	save index in stack
                                   163  
    000112  aa   000041 7370 00    164  	lls	33		split the index into wordno and shift value
    000113  aa   000017 7720 00    165  	qrl	15
    000114  aa   000003 7730 00    166  	lrl	3
    000115  aa   000017 7720 00    167  	qrl	15
                                   168  "
                                   169  "	QU now contains the word offset
                                   170  "	QL contains the shift index
                                   171  "
    000116  0a   000000 2350 02    172  	lda	code_tree,qu	get code word in a
    000117  0a   000220 7710 26    173  	arl	code_shift,ql*	shift to lower a
    000120  aa   000017 3750 07    174  	ana	=o17,dl		leave only decision bits
    000121  aa  6 00100 7551 00    175  	sta	pre_temp
                                   176  
    000122  aa   000010 3150 07    177  	cana	working_set,dl	should we count this page in working set ?
    000123  0a   000125 6000 00    178  	tze	*+2		no, skip count instruction
    000124  aa  6 00104 0541 00    179  	aos	pre_temp+4	yes, count it
                                   180  
    000125  aa   000002 3150 07    181  	cana	post_purge_bit,dl	should we purge the page?
    000126  0a   000137 6000 00    182  	tze	check_move	no, go check if we should move the core map entry
                                   183  
    000127  aa  2 00000 7201 00    184  	lxl0	ptw|0		see if page is out of service
    000130  aa   000010 3000 03    185  	canx0	ptw.os,du 	..
    000131  0a   000137 6010 00    186  	tnz	check_move	yes, skip write request
    000132  aa   000004 3000 03    187  	canx0	ptw.valid,du	see if page not in core
    000133  0a   000137 6000 00    188  	tze	check_move	yes, skip write request
                                   189  	increment sst|sst.post_purgings
                                        	missing	increment,sst|sst.post_purgings
    000134  aa  3 00166 0541 00         	aos	sst|sst.post_purgings
    000135  4a  4 00022 7071 20    190  	tsx7	page_fault$write_page see if must write the page and do so if must
    000136  4a  4 00016 3501 20    191  	eppap	pds$trace get pointer to array again
    000137                         192  check_move:
    000137  aa  6 00100 2351 00    193  	lda	pre_temp		see if we should move in list
    000140  aa   000001 3150 07    194  	cana	moved_bit,dl
    000141  0a   000143 6000 00    195  	tze	check_used	no, look at next entry
    000142  4a  4 00024 7071 20    196  	tsx7	page_fault$thread_to_lru yes, move in core map
    000143                         197  check_used:
    000143  aa  6 00100 2351 00    198  	lda	pre_temp		retrieve coded value again
    000144  aa   000004 3150 07    199  	cana	used_bit_off,dl
    000145  0a   000150 6000 00    200  	tze	next_entry
    000146  aa   001041 3360 07    201  	lcq	ptw.phu+ptw.phu1+1,dl	turn OFF used bit in PTW
    000147  aa  2 00000 3561 00    202  	ansq	ptw|0
                                   203  
    000150                         204  next_entry:
    000150  aa  6 00101 7201 00    205  	lxl0	pre_temp+1	get next free slot in pre-page list
    000151  aa   000002 6200 10    206  	eax0	2,0		increment to next entry
    000152  aa  0 00001 1001 00    207  	cmpx0	ap|trace.last_available_word
    000153  0a   000155 6040 00    208  	tmi	*+2
    000154  aa   000000 6200 00    209  	eax0	0		yes, reset index
    000155  0a   000026 7100 00    210  	tra	post_loop 	loop back for another entry
                                   211  
    000156                         212  done_post:
                                   213  "
                                   214  "	Now reset all pre-paged flags
                                   215  "
    000156  aa   010001 3350 07    216  	lca	ptw.pre_paged+1,dl	get mask to turn off flag
    000157  aa  0 00005 2201 00    217  	ldx0	ap|trace.index_word	start at beginning of list again
    000160  aa  0 00000 1001 00    218  turn_off: cmpx0	ap|trace.next_free_word are we done?
    000161  0a   000177 6000 00    219  	tze	mtime		yes, abort loop
    000162  aa  0 00011 2361 10    220  	ldq	ap|trace.data+1,0	get word 1 for page number
    000163  aa   770000 3160 03    221  	canq	=o770000,du	see if page fault entry
    000164  0a   000172 6010 00    222  	tnz	next_turn_off	no, skip the entry
    000165  aa  6 00134 7561 00    223  	stq	temp		save for subtract
    000166  aa  0 00010 2231 10    224  	ldx3	ap|trace.data,0	get astep
    000167  aa   000014 6220 13    225  	eax2	aste_size,3	fabricate ptp
    000170  aa  6 00134 0221 00    226  	adlx2	temp		..
    000171  aa  3 00000 3551 12    227  	ansa	sst|0,2		turn off pre-paged bit
    000172                         228  next_turn_off:
    000172  aa   000002 6200 10    229  	eax0	2,0		go to next entry
    000173  aa  0 00001 1001 00    230  	cmpx0	ap|trace.last_available_word wrap-around?
    000174  0a   000176 6040 00    231  	tmi	*+2		no,
    000175  aa   000000 6200 00    232  	eax0	0		yes
    000176  0a   000160 7100 00    233  	tra	turn_off		loop back
                                   234  
    000177                         235  mtime:
    000177  aa  0 00000 2201 00    236  	ldx0	ap|trace.next_free_word reset pointer to start of active list
    000200  aa  0 00005 7401 00    237  	stx0	ap|trace.index_word
                                   238  
    000201  4a  4 00026 3501 20    239  	eppap	pds$apt_ptr,*	set pre-page-size in APT entry
    000202  aa  6 00104 2361 00    240  	ldq	pre_temp+4
    000203  4a  4 00030 4021 20    241  	mpy	tc_data$working_set_factor
    000204  aa   000022 7720 00    242  	qrl	18
    000205  4a  4 00032 0761 20    243  	adq	tc_data$working_set_addend
    000206  aa  0 00032 7561 00    244  	stq	ap|apte.ws_size
    000207  aa  3 00164 0561 00    245  	asq	sst|sst.pre_page_size
                                   246  
                                   247  	read_clock		meter time
    000210  4a  4 00014 6331 20         	  rccl	sys_info$clock_,*
                                        "	ifend
                                        "	  rccl	0
                                        "	ifend
    000211  aa  6 00076 1771 00    248  	sbaq	pre_time
    000212  aa  3 00012 0771 00    249  	adaq	sst|sst.post_purge_time
    000213  aa  3 00012 7571 00    250  	staq	sst|sst.post_purge_time
                                   251  	increment sst|sst.post_purge_calls
                                        	missing	increment,sst|sst.post_purge_calls
    000214  aa  3 00167 0541 00         	aos	sst|sst.post_purge_calls
                                   252  
    000215  4a  4 00034 7071 20    253  	tsx7	page_fault$trace_scheduling
    000216  4a  4 00036 7071 20    254  	tsx7	page_fault$unlock_ptl
    000217  aa  7 00042 7101 20    255  	return
                                   256  
    000220                         257  code_shift:
    000220  aa   000040 0000 00    258  	arg	32
    000221  aa   000034 0000 00    259  	arg	28
    000222  aa   000030 0000 00    260  	arg	24
    000223  aa   000024 0000 00    261  	arg	20
    000224  aa   000020 0000 00    262  	arg	16
    000225  aa   000014 0000 00    263  	arg	12
    000226  aa   000010 0000 00    264  	arg	8
    000227  aa   000004 0000 00    265  	arg	4
                                   266  
                                   267  
                                   268  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000230  5a   000003 000000 
    000231  5a   000026 600000 
    000232  aa   000000 000000 
    000233  55   000011 000002 
    000234  5a   000002 400003 
    000235  55   000006 000011 
    000236  aa  012 160 157 163
    000237  aa  164 137 160 165
    000240  aa  162 147 145 000
    000241  55   000017 000003 
    000242  0a   000010 400000 
    000243  55   000014 000003 
    000244  aa  012 160 157 163         post_purge
    000245  aa  164 137 160 165
    000246  aa  162 147 145 000
    000247  55   000002 000011 
    000250  6a   000000 400002 
    000251  55   000022 000003 
    000252  aa  014 163 171 155         symbol_table
    000253  aa  142 157 154 137
    000254  aa  164 141 142 154
    000255  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000256  aa   000000 000015 
    000257  aa   000000 000000 
    000260  5a   000011 000000 
    000261  aa   000000 000000 
    000262  aa   000000 000000 
    000263  aa   000000 000000 
    000264  aa   000000 000000 
    000265  5a   000017 000000 
    000266  aa   000000 000000 
    000267  aa   000000 000000 
    000270  aa   000000 000000 
    000271  aa   000000 000000 
    000272  aa   000000 000000 
    000273  aa   000000 000000 

EXTERNAL NAMES

    000274  aa  012 165 156 154         unlock_ptl
    000275  aa  157 143 153 137
    000276  aa  160 164 154 000
    000277  aa  020 164 162 141         trace_scheduling
    000300  aa  143 145 137 163
    000301  aa  143 150 145 144
    000302  aa  165 154 151 156
    000303  aa  147 000 000 000
    000304  aa  022 167 157 162         working_set_addend
    000305  aa  153 151 156 147
    000306  aa  137 163 145 164
    000307  aa  137 141 144 144
    000310  aa  145 156 144 000
    000311  aa  022 167 157 162         working_set_factor
    000312  aa  153 151 156 147
    000313  aa  137 163 145 164
    000314  aa  137 146 141 143
    000315  aa  164 157 162 000
    000316  aa  007 164 143 137         tc_data
    000317  aa  144 141 164 141
    000320  aa  007 141 160 164         apt_ptr
    000321  aa  137 160 164 162
    000322  aa  015 164 150 162         thread_to_lru
    000323  aa  145 141 144 137
    000324  aa  164 157 137 154
    000325  aa  162 165 000 000
    000326  aa  012 167 162 151         write_page
    000327  aa  164 145 137 160
    000330  aa  141 147 145 000
    000331  aa  012 143 155 145         cme_devadd
    000332  aa  137 144 145 166
    000333  aa  141 144 144 000
    000334  aa  005 164 162 141         trace
    000335  aa  143 145 000 000
    000336  aa  003 160 144 163         pds
    000337  aa  006 143 154 157         clock_
    000340  aa  143 153 137 000
    000341  aa  010 163 171 163         sys_info
    000342  aa  137 151 156 146
    000343  aa  157 000 000 000
    000344  aa  010 154 157 143         lock_ptl
    000345  aa  153 137 160 164
    000346  aa  154 000 000 000
    000347  aa  012 151 156 151         init_savex
    000350  aa  164 137 163 141
    000351  aa  166 145 170 000
    000352  aa  012 160 141 147         page_fault
    000353  aa  145 137 146 141
    000354  aa  165 154 164 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000355  aa   000004 000000 
    000356  55   000122 000044 
    000357  aa   000004 000000 
    000360  55   000122 000047 
    000361  aa   000004 000000 
    000362  55   000066 000054 
    000363  aa   000004 000000 
    000364  55   000066 000061 
    000365  aa   000004 000000 
    000366  55   000106 000070 
    000367  aa   000004 000000 
    000370  55   000122 000072 
    000371  aa   000004 000000 
    000372  55   000122 000076 
    000373  aa   000004 000000 
    000374  55   000122 000101 
    000375  aa   000004 000000 
    000376  55   000106 000104 
    000377  aa   000004 000000 
    000400  55   000111 000107 
    000401  aa   000004 000000 
    000402  55   000122 000114 
    000403  aa   000004 000000 
    000404  55   000122 000117 
    000405  aa   000001 000000 
    000406  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000407  5a   000125 000000 
    000410  5a   000127 000000 
    000411  5a   000131 000000 
    000412  5a   000133 000000 
    000413  5a   000135 000000 
    000414  5a   000137 000000 
    000415  5a   000141 000000 
    000416  5a   000143 000000 
    000417  5a   000145 000000 
    000420  5a   000147 000000 
    000421  5a   000151 000000 
    000422  5a   000153 000000 
    000423  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000230 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000040 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         page_fault|init_savex
    000011  5a   000172 0000 00
    000012  9a   777766 0000 46         page_fault|lock_ptl
    000013  5a   000171 0000 00
    000014  9a   777764 0000 46         sys_info|clock_
    000015  5a   000170 0000 20
    000016  9a   777762 0000 46         pds|trace
    000017  5a   000167 0000 00
    000020  9a   777760 0000 46         page_fault|cme_devadd
    000021  5a   000166 0000 74
    000022  9a   777756 0000 46         page_fault|write_page
    000023  5a   000165 0000 00
    000024  9a   777754 0000 46         page_fault|thread_to_lru
    000025  5a   000164 0000 00
    000026  9a   777752 0000 46         pds|apt_ptr
    000027  5a   000163 0000 20
    000030  9a   777750 0000 46         tc_data|working_set_factor
    000031  5a   000162 0000 00
    000032  9a   777746 0000 46         tc_data|working_set_addend
    000033  5a   000161 0000 00
    000034  9a   777744 0000 46         page_fault|trace_scheduling
    000035  5a   000160 0000 00
    000036  9a   777742 0000 46         page_fault|unlock_ptl
    000037  5a   000157 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   242146 720022 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000402 
    000020  aa   000000 000317 
    000021  aa   000345 000336 
    000022  aa   000364 000317 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000015 
    000066  aa   000152 000041 
    000067  aa   175453 017654 
    000070  aa   000000 117547 
    000071  aa   176204 200000 
    000072  aa   000163 000045 
    000073  aa   133234 136230 
    000074  aa   000000 113324 
    000075  aa   322064 400000 
    000076  aa   000175 000036 
    000077  aa   043243 127123 
    000100  aa   000000 103437 
    000101  aa   275656 200000 
    000102  aa   000205 000037 
    000103  aa   112456 132235 
    000104  aa   000000 111250 
    000105  aa   530556 400000 
    000106  aa   000215 000031 
    000107  aa   133234 136144 
    000110  aa   000000 113324 
    000111  aa   322064 400000 
    000112  aa   000224 000037 
    000113  aa   127236 043564 
    000114  aa   000000 112724 
    000115  aa   701750 400000 
    000116  aa   000234 000032 
    000117  aa   133234 136212 
    000120  aa   000000 113324 
    000121  aa   322064 200000 
    000122  aa   000243 000031 
    000123  aa   102456 350277 
    000124  aa   000000 110246 
    000125  aa   520732 400000 
    000126  aa   000252 000035 
    000127  aa   106701 740565 
    000130  aa   000000 110670 
    000131  aa   206245 200000 
    000132  aa   000262 000031 
    000133  aa   102456 350276 
    000134  aa   000000 110246 
    000135  aa   520730 400000 
    000136  aa   000271 000035 
    000137  aa   106701 740574 
    000140  aa   000000 110670 
    000141  aa   206425 200000 
    000142  aa   000301 000031 
    000143  aa   113434 242275 
    000144  aa   000000 111347 
    000145  aa   432071 000000 
    000146  aa   000310 000032 
    000147  aa   147777 464062 
    000150  aa   000000 115000 
    000151  aa   507456 000000 
    000152  aa   076163 160145          >spec>install>1111>post_purge.alm
    000153  aa   143076 151156 
    000154  aa   163164 141154 
    000155  aa   154076 061061 
    000156  aa   061061 076160 
    000157  aa   157163 164137 
    000160  aa   160165 162147 
    000161  aa   145056 141154 
    000162  aa   155040 040040 
    000163  aa   076154 144144          >ldd>include>pxss_page_stack.incl.alm
    000164  aa   076151 156143 
    000165  aa   154165 144145 
    000166  aa   076160 170163 
    000167  aa   163137 160141 
    000170  aa   147145 137163 
    000171  aa   164141 143153 
    000172  aa   056151 156143 
    000173  aa   154056 141154 
    000174  aa   155040 040040 
    000175  aa   076154 144144          >ldd>include>add_type.incl.alm
    000176  aa   076151 156143 
    000177  aa   154165 144145 
    000200  aa   076141 144144 
    000201  aa   137164 171160 
    000202  aa   145056 151156 
    000203  aa   143154 056141 
    000204  aa   154155 040040 
    000205  aa   076154 144144          >ldd>include>page_info.incl.alm
    000206  aa   076151 156143 
    000207  aa   154165 144145 
    000210  aa   076160 141147 
    000211  aa   145137 151156 
    000212  aa   146157 056151 
    000213  aa   156143 154056 
    000214  aa   141154 155040 
    000215  aa   076154 144144          >ldd>include>sst.incl.alm
    000216  aa   076151 156143 
    000217  aa   154165 144145 
    000220  aa   076163 163164 
    000221  aa   056151 156143 
    000222  aa   154056 141154 
    000223  aa   155040 040040 
    000224  aa   076154 144144          >ldd>include>sys_trace.incl.alm
    000225  aa   076151 156143 
    000226  aa   154165 144145 
    000227  aa   076163 171163 
    000230  aa   137164 162141 
    000231  aa   143145 056151 
    000232  aa   156143 154056 
    000233  aa   141154 155040 
    000234  aa   076154 144144          >ldd>include>aste.incl.alm
    000235  aa   076151 156143 
    000236  aa   154165 144145 
    000237  aa   076141 163164 
    000240  aa   145056 151156 
    000241  aa   143154 056141 
    000242  aa   154155 040040 
    000243  aa   076154 144144          >ldd>include>sdw.incl.alm
    000244  aa   076151 156143 
    000245  aa   154165 144145 
    000246  aa   076163 144167 
    000247  aa   056151 156143 
    000250  aa   154056 141154 
    000251  aa   155040 040040 
    000252  aa   076154 144144          >ldd>include>sdw.l68.incl.alm
    000253  aa   076151 156143 
    000254  aa   154165 144145 
    000255  aa   076163 144167 
    000256  aa   056154 066070 
    000257  aa   056151 156143 
    000260  aa   154056 141154 
    000261  aa   155040 040040 
    000262  aa   076154 144144          >ldd>include>ptw.incl.alm
    000263  aa   076151 156143 
    000264  aa   154165 144145 
    000265  aa   076160 164167 
    000266  aa   056151 156143 
    000267  aa   154056 141154 
    000270  aa   155040 040040 
    000271  aa   076154 144144          >ldd>include>ptw.l68.incl.alm
    000272  aa   076151 156143 
    000273  aa   154165 144145 
    000274  aa   076160 164167 
    000275  aa   056154 066070 
    000276  aa   056151 156143 
    000277  aa   154056 141154 
    000300  aa   155040 040040 
    000301  aa   076154 144144          >ldd>include>cmp.incl.alm
    000302  aa   076151 156143 
    000303  aa   154165 144145 
    000304  aa   076143 155160 
    000305  aa   056151 156143 
    000306  aa   154056 141154 
    000307  aa   155040 040040 
    000310  aa   076154 144144          >ldd>include>apte.incl.alm
    000311  aa   076151 156143 
    000312  aa   154165 144145 
    000313  aa   076141 160164 
    000314  aa   145056 151156 
    000315  aa   143154 056141 
    000316  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           7    abs_wire_entry           page_info:     36.
      740000    address_mask             page_info:      9.
      400000    add_type.core            post_purge:   134,
                                         add_type:       8.
      200000    add_type.disk            add_type:       9.
      740000    add_type.non_null        add_type:      13.
      100000    add_type.pd              post_purge:   145,
                                         add_type:      10.
       40000    add_type.reserved        add_type:      11.
          42    apte.access_authorization      apte:          98.
          24    apte.alarm_event         apte:          79.
          26    apte.alarm_time          apte:          82.
          26    apte.alarm_time_thread   apte:          81.
          40    apte.always_loaded       apte:          29.
          66    apte.apad                apte:         120.
          12    apte.asteps              apte:          54.
          10    apte.batch               apte:          74.
          21    apte.batch_word          apte:          73.
          60    apte.begin_interaction_vcpu    apte:         112.
          10    apte.being_loaded        apte:          31.
           0    apte.bp                  apte:          13.
          23    apte.chans_offset        apte:          71.
          37    apte.cpu_monitor         apte:          94.
          52    apte.current_response_state    apte:         108.
          44    apte.dbr                 apte:         101.
          20    apte.dbr_loaded          apte:          30.
          34    apte.deadline            apte:          90.
         200    apte.default_procs_required    apte:          27.
          12    apte.dseg                apte:          56.
        4000    apte.eligible            apte:          23.
          10    apte.event_thread        apte:          50.
           1    apte.firstsw             apte:          34.
           1    apte.flags               apte:          15.
          21    apte.flags2              apte:          69.
           0    apte.fp                  apte:          12.
       20000    apte.hproc               apte:          21.
        2000    apte.idle                apte:          24.
        1000    apte.interaction         apte:          25.
          10    apte.ipc_pointers        apte:          49.
          65    apte.ipc_r_factor        apte:         119.
          64    apte.ipc_r_offset        apte:         118.
          11    apte.ips_message         apte:          52.
          51    apte.ittes_got           apte:         106.
          50    apte.ittes_sent          apte:         105.
          54    apte.last_response_state_time  apte:         110.
          13    apte.le_shift            apte:         126.
       10000    apte.loaded              apte:          22.
          36    apte.lock                apte:          92.
          15    apte.lock_id             apte:          63.
      400000    apte.mbz                 apte:          17.
      400000    apte.no_ipc_check        apte:          99.
          53    apte.number_processing   apte:         109.
           2    apte.page_faults         apte:          37.
           2    apte.page_wait_flag      apte:          33.
          40    apte.paging_measure      apte:          96.
          12    apte.pds                 apte:          55.
          13    apte.prds                apte:          58.
       40000    apte.pre_empted          apte:          20.
         400    apte.pre_empt_pending    apte:          26.
      400000    apte.prior_sched         apte:          70.
           3    apte.processid           apte:          39.
          63    apte.procs_required      apte:         115.
      776000    apte.procs_required_mask       apte:         116.
           7    apte.pr_tag_mask         apte:          75.
         100    apte.realtime_burst      apte:          28.
          62    apte.saved_temax         apte:         114.
          13    apte.savex7              apte:          59.
           1    apte.sentinel            apte:          16.
           4    apte.shared_stack_0      apte:          32.
      374000    apte.special_chans       apte:          72.
           1    apte.state               apte:          35.
          22    apte.state_change_time   apte:          77.
      100000    apte.stop_pending        apte:          19.
           4    apte.te                  apte:          41.
          33    apte.temax               apte:          88.
          30    apte.term_channel        apte:          84.
          14    apte.term_processid      apte:          61.
           0    apte.thread              apte:          11.
           6    apte.ti                  apte:          45.
           7    apte.timax               apte:          47.
         175    apte.timer_factor        apte:         127.
          16    apte.time_used_clock     apte:          64.
          56    apte.total_processing_time     apte:         111.
           5    apte.ts                  apte:          43.
          46    apte.virtual_cpu_time    apte:         103.
          20    apte.wait_event          apte:          66.
      200000    apte.wakeup_waiting      apte:          18.
          21    apte.wct_index           apte:          68.
          32    apte.ws_size             post_purge:   244,
                                         apte:          86.
         150    apt_ptr                  post_purge:   239,
                                         pxss_page_stack:     13.
         106    arg                      pxss_page_stack:     11.
           3    ast                      post_purge:   152,
                                         page_info:     20.
        4000    aste.any_access_on       aste:          49.
           5    aste.any_access_on_word  aste:          48.
           0    aste.bp                  aste:          18.
         777    aste.csl_mask            aste:          92.
      777000    aste.csl_mask_inner      page_info:     26.
          33    aste.csl_shift           aste:          91.
          12    aste.csl_word            aste:          90.
      200000    aste.damaged             aste:         118.
          13    aste.damaged_word        aste:         117.
           4    aste.ddnp                aste:         106.
          12    aste.ddnp_word           aste:         105.
         200    aste.deact_error         aste:          57.
           5    aste.deact_error_word    aste:          56.
       40000    aste.dirsw               aste:          75.
           5    aste.dirsw_word          aste:          74.
           2    aste.dius                aste:          65.
           5    aste.dius_word           aste:          64.
      400000    aste.dmpr_pad            aste:          69.
           5    aste.dmpr_pad_word       aste:          68.
          20    aste.dnzp                aste:         102.
          12    aste.dnzp_word           aste:         101.
           7    aste.dtm                 aste:          84.
           6    aste.dtu                 aste:          83.
      200000    aste.ehs                 aste:          71.
           5    aste.ehs_word            aste:          70.
         400    aste.explicit_deact_ok   aste:          55.
           5    aste.explicit_deact_ok_word    aste:          54.
         400    aste.fmchanged           aste:          94.
      400000    aste.fmchanged1          aste:         116.
          13    aste.fmchanged1_word     aste:         115.
          12    aste.fmchanged_word      aste:          93.
         200    aste.fms                 aste:          96.
          12    aste.fms_word            aste:          95.
          40    aste.fm_damaged          aste:          61.
           5    aste.fm_damaged_word     aste:          60.
           0    aste.fp                  aste:          17.
       40000    aste.gtms                aste:          43.
           5    aste.gtms_word           aste:          42.
          40    aste.gtpd                aste:         100.
          12    aste.gtpd_word           aste:          99.
      100000    aste.gtus                aste:          41.
           5    aste.gtus_word           aste:          40.
       20000    aste.hc                  aste:          45.
         100    aste.hc_part             aste:          59.
           5    aste.hc_part_word        aste:          58.
       10000    aste.hc_sdw              aste:          47.
           5    aste.hc_sdw_word         aste:          46.
           5    aste.hc_word             aste:          44.
          13    aste.ht_fp               aste:         114.
           1    aste.infl                aste:          20.
           1    aste.infp                aste:          21.
        1000    aste.inhibit_cache       aste:          53.
           5    aste.inhibit_cache_word  aste:          52.
      200000    aste.init                aste:          39.
           5    aste.init_word           aste:          38.
          77    aste.marker_mask         aste:         128.
           0    aste.marker_shift        aste:         127.
          13    aste.marker_word         aste:         126.
       20000    aste.master_dir          aste:          77.
           5    aste.master_dir_word     aste:          76.
         777    aste.msl_mask            aste:          30.
          33    aste.msl_shift           aste:          29.
           4    aste.msl_word            aste:          28.
          20    aste.multi_class         aste:          63.
           5    aste.multi_class_word    aste:          62.
           1    aste.nid                 aste:          67.
           5    aste.nid_word            aste:          66.
         100    aste.npfs                aste:          98.
          12    aste.npfs_word           aste:          97.
         777    aste.np_mask             aste:         112.
           0    aste.np_shift            aste:         111.
          12    aste.np_word             aste:         110.
      100000    aste.nqsw                aste:          73.
           5    aste.nqsw_word           aste:          72.
      100000    aste.pack_ovfl           aste:         120.
          13    aste.pack_ovfl_word      aste:         119.
           2    aste.par_astep           aste:          24.
          10    aste.per_process         post_purge:   153,
                                         aste:         104.
          12    aste.per_process_word    post_purge:   152,
                                         aste:         103.
           3    aste.ptsi_mask           aste:         125.
           6    aste.ptsi_shift          aste:         124.
          13    aste.ptsi_word           aste:         123.
         777    aste.pvtx_mask           aste:          33.
          22    aste.pvtx_shift          aste:          32.
           4    aste.pvtx_word           aste:          31.
          10    aste.quota               aste:          86.
         777    aste.records_mask        aste:         109.
      777000    aste.records_mask_inner  page_info:     27.
          11    aste.records_shift       aste:         108.
          12    aste.records_word        aste:         107.
           2    aste.strp                aste:          23.
       40000    aste.synchronized        aste:         122.
          13    aste.synchronized_word   aste:         121.
        4000    aste.tqsw                aste:          81.
           5    aste.tqsw_word           aste:          80.
           3    aste.uid                 aste:          26.
          11    aste.used                aste:          88.
      400000    aste.usedf               aste:          37.
           5    aste.usedf_word          aste:          36.
       10000    aste.volmap_seg          aste:          79.
           5    aste.volmap_seg_word     aste:          78.
           4    aste.vtocx               aste:          34.
        2000    aste.write_access_on     aste:          51.
           5    aste.write_access_on_word      aste:          50.
           0    aste_part.one            aste:         136.
         377    aste_part.three_mask     aste:         141.
           0    aste_part.three_shift    aste:         140.
          13    aste_part.three_word     aste:         139.
           1    aste_part.two            aste:         137.
          14    aste_part_size           aste:         133.
          14    aste_size                post_purge:   109,  225,
                                         aste:          15.
         204    before                   pxss_page_stack:     17.
         137    check_move               post_purge:   182,  186,  188,  192.
         143    check_used               post_purge:   195,  197.
          10    cleanup_entry            page_info:     37.
                clock_                   post_purge:    85,  247.
         100    cme.abs_usable           cmp:           17.
         200    cme.abs_w                cmp:           16.
           2    cme.astep                cmp:           23.
           0    cme.bp                   cmp:            7.
           7    cme.contr                cmp:           20.
           1    cme.devadd               cmp:            9.
      740000    cme.did_mask             cmp:           11.
        1000    cme.er                   cmp:           14.
           1    cme.flags                cmp:           10.
           0    cme.fp                   cmp:            6.
        4000    cme.io                   cmp:           13.
          40    cme.notify_requested     cmp:           18.
          10    cme.phm_hedge            cmp:           19.
           3    cme.pin_counter          cmp:           25.
           2    cme.ptwp                 cmp:           22.
         400    cme.removing             cmp:           15.
       10000    cme.synch_held           cmp:           12.
           3    cme.synch_page_entryp    cmp:           26.
         164    cmep                     pxss_page_stack:     15.
          12    cmep_to_coreadd.rl       page_info:     75.
           2    cmep_to_ptw.ls           page_info:     57.
           2    cmep_to_sdw.ls           page_info:     57.
                cme_devadd               post_purge:   143.
           4    cme_size                 cmp:            4.
         220    code_shift               post_purge:   173,  257.
           0    code_tree                post_purge:    68,  172.
      777777    coreadd_mask             page_info:     57.
          12    coreadd_to_cmep.ls       page_info:     76.
          14    coreadd_to_ptw.ls        page_info:     57.
          14    coreadd_to_sdw.ls        page_info:     57.
         173    core_add                 pxss_page_stack:     16.
          17    core_ptw.add_type_mask   ptw.l68:       19.
          16    core_ptw.add_type_shift  ptw.l68:       18.
           3    core_ptw.df_no_mask      ptw.l68:       32.
           0    core_ptw.df_no_shift     ptw.l68:       31.
       10000    core_ptw.er              ptw.l68:       21.
       20000    core_ptw.first           ptw.l68:       20.
           0    core_ptw.flags           ptw.l68:       17.
       37777    core_ptw.frame_mask      ptw.l68:       16.
          26    core_ptw.frame_shift     ptw.l68:       15.
         200    core_ptw.nypd            ptw.l68:       25.
          10    core_ptw.os              ptw.l68:       29.
         100    core_ptw.phm             ptw.l68:       26.
         400    core_ptw.phm1            ptw.l68:       24.
        1000    core_ptw.phu             ptw.l68:       23.
          40    core_ptw.phu1            ptw.l68:       27.
        2000    core_ptw.unusable1       ptw.l68:       22.
           4    core_ptw.valid           ptw.l68:       30.
          20    core_ptw.wired           ptw.l68:       28.
         174    count                    pxss_page_stack:     16.
         154    delta_t                  pxss_page_stack:     13.
         205    depth                    pxss_page_stack:     17.
         200    devadd                   pxss_page_stack:     16.
         203    dev_signal               pxss_page_stack:     17.
           1    df1                      page_info:      7.
         232    done_astep               pxss_page_stack:     24.
         156    done_post                post_purge:   101,  212.
         175    entry_sw                 post_purge:    82,
                                         pxss_page_stack:     16.
         201    errcode                  pxss_page_stack:     16.
           6    evict_entry              page_info:     35.
           0    fault_entry              page_info:     29.
         226    free_store_start_time    pxss_page_stack:     22.
         221    free_store_temp          pxss_page_stack:     19.
         160    free_store_temp_1        pxss_page_stack:     14.
         152    getwork_temp             pxss_page_stack:     13.
                init_savex               post_purge:    80.
      100000    int                      page_info:     14.
         177    inter                    pxss_page_stack:     16.
                lock_ptl                 post_purge:    83.
         223    lock_volmap_temp         pxss_page_stack:     20.
         156    lock_volmap_temp_1       pxss_page_stack:     14.
          47    looked                   post_purge:   114,  117.
           1    moved_bit                post_purge:    64,  194.
         177    mtime                    post_purge:   219,  235.
         150    next_entry               post_purge:   106,  116,  200,  204.
         172    next_turn_off            post_purge:   222,  228.
          50    notify_regs              pxss_page_stack:      8.
          72    not_in_core              post_purge:   135,  144.
           4    no_post                  page_info:     16.
         250    pad                      pxss_page_stack:     33.
         235    pageno                   pxss_page_stack:     25.
                page_fault               post_purge:    80,   83,  143,  190,  196,  253,  254.
          12    page_power               page_info:      6.
         242    page_synch_index         pxss_page_stack:     28.
         236    page_synch_temp          pxss_page_stack:     27.
         240    page_synch_time          pxss_page_stack:     27.
         245    pc_err_astep             pxss_page_stack:     30.
         244    pc_err_ptwp              pxss_page_stack:     30.
         243    pc_err_type              pxss_page_stack:     30.
           3    pdm                      page_info:     19.
                pds                      post_purge:    97,  191,  239.
           5    pd_flush_entry           page_info:     34.
         246    pf_sdw                   pxss_page_stack:     31.
         230    post_io_start_time       pxss_page_stack:     22.
          26    post_loop                post_purge:    99,  210.
          10    post_purge               post_purge:    35,   78.
           2    post_purge_bit           post_purge:    63,  181.
           4    post_purge_entry         post_purge:    81,
                                         page_info:     33.
          76    pp.yes_pd                post_purge:   146,  149.
         105    pp.yes_pp                post_purge:   154,  157.
           3    pre_page_entry           page_info:     32.
         100    pre_temp                 post_purge:    89,   90,   91,  103,  162,  175,  179,  193,  198,  205,  240,
                                         pxss_page_stack:     10.
          76    pre_time                 post_purge:    86,  248,
                                         pxss_page_stack:     10.
          20    pri                      page_info:     15.
         176    ptp_astep                pxss_page_stack:     16.
           2    ptw                      post_purge:   113,  118,  119,  184,  202,
                                         page_info:     21.
           0    ptw.add                  ptw.l68:       37.
          17    ptw.add_type_mask        ptw.l68:       40.
          16    ptw.add_type_shift       ptw.l68:       39.
           3    ptw.df_no_mask           ptw.l68:       53.
           0    ptw.df_no_shift          ptw.l68:       52.
       10000    ptw.er                   post_purge:    66,
                                         ptw.l68:       42.
       20000    ptw.first                ptw.l68:       41.
           0    ptw.flags                ptw.l68:       38.
      400000    ptw.nulled               page_info:     12.
         200    ptw.nypd                 ptw.l68:       46.
          10    ptw.os                   post_purge:   185,
                                         ptw.l68:       50.
         100    ptw.phm                  post_purge:   127,
                                         ptw.l68:       47.
         400    ptw.phm1                 post_purge:   127,
                                         ptw.l68:       45.
        1000    ptw.phu                  post_purge:   130,  201,
                                         ptw.l68:       44.
          40    ptw.phu1                 post_purge:   124,  201,
                                         ptw.l68:       48.
       10000    ptw.pre_paged            post_purge:    66,  112,  216.
        2000    ptw.unusable1            ptw.l68:       43.
           4    ptw.valid                post_purge:   187,
                                         ptw.l68:       51.
          20    ptw.wired                ptw.l68:       49.
      777760    ptw_add_mask             page_info:     57.
           2    ptw_to_cmep.rl           page_info:     57.
          24    ptw_to_cmep_lower.rl     page_info:     57.
          14    ptw_to_coreadd.rl        page_info:     57.
         172    pvtx                     pxss_page_stack:     16.
         210    pxss_save_stack          pxss_page_stack:     18.
         216    pxss_stackp              pxss_page_stack:     18.
           6    pxss_stack_size          pxss_page_stack:      5,   18.
           1    read_entry               page_info:     30.
          60    save_stack               pxss_page_stack:      9.
         222    savx2_3                  pxss_page_stack:     19.
          17    sdw.access_mask          sdw.l68:       42.
          21    sdw.access_shift         sdw.l68:       41.
           1    sdw.access_word          sdw.l68:       40.
          14    sdw.add_shift            sdw.l68:       18.
           0    sdw.add_word             sdw.l68:       17.
       37777    sdw.bound_mask           sdw.l68:       39.
          25    sdw.bound_shift          sdw.l68:       38.
           1    sdw.bound_word           sdw.l68:       37.
       40000    sdw.cache                sdw.l68:       56.
           1    sdw.cache_word           sdw.l68:       55.
           3    sdw.df_no_mask           sdw.l68:       35.
           0    sdw.df_no_shift          sdw.l68:       34.
           0    sdw.df_no_word           sdw.l68:       33.
       37777    sdw.entry_bound_mask     sdw.l68:       59.
           0    sdw.entry_bound_shift    sdw.l68:       58.
           1    sdw.entry_bound_word     sdw.l68:       57.
           2    sdw.execute              sdw.l68:       46.
           1    sdw.execute_word         sdw.l68:       45.
      100000    sdw.not_a_gate           sdw.l68:       54.
           1    sdw.not_a_gate_word      sdw.l68:       53.
      400000    sdw.privileged           sdw.l68:       50.
           1    sdw.privileged_word      sdw.l68:       49.
           7    sdw.r1_mask              sdw.l68:       24.
          11    sdw.r1_shift             sdw.l68:       23.
           0    sdw.r1_word              sdw.l68:       22.
           7    sdw.r2_mask              sdw.l68:       27.
           6    sdw.r2_shift             sdw.l68:       26.
           0    sdw.r2_word              sdw.l68:       25.
           7    sdw.r3_mask              sdw.l68:       30.
           3    sdw.r3_shift             sdw.l68:       29.
           0    sdw.r3_word              sdw.l68:       28.
           4    sdw.read                 sdw.l68:       44.
           1    sdw.read_word            sdw.l68:       43.
         777    sdw.rings_mask           sdw.l68:       21.
           3    sdw.rings_shift          sdw.l68:       20.
           0    sdw.rings_word           sdw.l68:       19.
      200000    sdw.unpaged              sdw.l68:       52.
           1    sdw.unpaged_word         sdw.l68:       51.
           4    sdw.valid                sdw.l68:       32.
           0    sdw.valid_word           sdw.l68:       31.
           1    sdw.write                sdw.l68:       48.
           1    sdw.write_word           sdw.l68:       47.
      777760    sdw_add_mask             page_info:     57.
           2    sdw_size                 sdw.l68:       15.
           2    sdw_to_cmep.rl           page_info:     57.
          14    sdw_to_coreadd.rl        page_info:     57.
          10    seg_aste.usage           aste:         149.
          14    seg_aste_size            aste:         146.
         100    size_of_apt_entry        apte:         122.
           3    sst                      post_purge:   102,  111,  115,  141,  142,  161,  189,  227,  245,  249,  250,  251,
                                         page_info:     18,   19,   20.
         214    sst.abs_wired_count      sst:          126.
         241    sst.acost                sst:          141.
      400000    sst.activate_activated   sst:          201.
         517    sst.activations          sst:          182.
          52    sst.ainitp               sst:           52.
          52    sst.ainitp1              sst:           53.
         244    sst.alaps                sst:          144.
         230    sst.aneedsize            sst:          135.
         236    sst.asearches            sst:          138.
         243    sst.askipdius            sst:          143.
         235    sst.askipsehs            sst:          137.
         240    sst.askipsinit           sst:          140.
         224    sst.askipsize            sst:          134.
         237    sst.askipslevel          sst:          139.
         242    sst.askipslock           sst:          142.
          30    sst.astap                sst:           35.
         254    sst.asteps               sst:          151.
          21    sst.astl                 sst:           26.
          22    sst.astl_event           sst:           27.
      400000    sst.astl_notify_requested      sst:           30.
          23    sst.astl_notify_requested_word       sst:           29.
          33    sst.astsize              sst:           37.
          72    sst.ast_ht_n_buckets     sst:           76.
          70    sst.ast_ht_ptr           sst:           75.
          73    sst.ast_ht_uid_mask      sst:           77.
         260    sst.ast_locked_at_time   sst:          152.
         262    sst.ast_locked_total_time      sst:          153.
         266    sst.ast_locking_count    sst:          155.
         264    sst.ast_lock_wait_time   sst:          154.
      400000    sst.ast_track            sst:          240.
         566    sst.ast_track_word       sst:          239.
          50    sst.atempp               sst:           46.
          50    sst.atempp1              sst:           47.
         600    sst.audit_seg_state_change_bw  sst:          253.
         573    sst.audit_seg_state_chg  sst:          249.
         126    sst.aused                sst:          104.
          44    sst.ausedp               sst:           43.
         534    sst.backup_activations   sst:          198.
         513    sst.bad_sgms             sst:          178.
         116    sst.ceiling              sst:           96.
          75    sst.checksum_filemap     sst:           79.
         476    sst.claim_notmod         sst:          166.
         477    sst.claim_passed_used    sst:          167.
         516    sst.claim_runs           sst:          181.
         474    sst.claim_skip_cme       sst:          164.
         475    sst.claim_skip_free      sst:          165.
         500    sst.claim_skip_ptw       sst:          168.
         502    sst.claim_steps          sst:          170.
         501    sst.claim_writes         sst:          169.
         267    sst.cleanup_count        sst:          156.
         270    sst.cleanup_real_time    sst:          157.
          67    sst.cl_skips_pinned      sst:           74.
          34    sst.cmesize              sst:           38.
          54    sst.cmp                  post_purge:   141,
                                         sst:           56.
         252    sst.cpu_bf_time          sst:          150.
         160    sst.cpu_sf_time          sst:          114.
      400000    sst.crash_test_segmove   sst:          246.
         571    sst.crash_test_segmove_word    sst:          245.
         117    sst.ctwait               sst:           97.
         100    sst.cycle_pv_allocation  sst:           82.
         127    sst.damaged_ct           sst:          105.
         507    sst.dblw_resurrections   sst:          175.
         130    sst.deact_count          sst:          106.
         572    sst.delayed_seg_state_chg      sst:          248.
         132    sst.demand_deactivations       sst:          108.
         131    sst.demand_deact_attempts      sst:          107.
         567    sst.dirlock_writebehind  sst:          242.
         520    sst.dir_activations      sst:          183.
         110    sst.dir_page_faults      sst:           90.
      400000    sst.dm_enabled           sst:           50.
          51    sst.dm_enabled_word      sst:           49.
          62    sst.double_write         sst:           66.
         546    sst.event                sst:          213.
         523    sst.evict_phmbit         sst:          189.
         523    sst.evict_ptp            sst:          188.
         523    sst.evict_recover_data   sst:          186.
          66    sst.fc_skips_pinned      sst:           73.
         220    sst.first_core_block     sst:          130.
         525    sst.force_pwrites        sst:          192.
         524    sst.force_swrites        sst:          191.
         527    sst.force_updatevs       sst:          194.
         526    sst.fw_none              sst:          193.
         222    sst.fw_retries           sst:          132.
         515    sst.good_sgms            sst:          180.
         521    sst.hedge_updatevs       sst:          184.
         522    sst.hedge_writes         sst:          185.
         121    sst.laps                 sst:           99.
         221    sst.last_core_block      sst:          131.
          44    sst.level                sst:           41.
         107    sst.level_1_page_faults  sst:           89.
         104    sst.lock_waits           sst:           86.
         154    sst.loop_locks           sst:          112.
         156    sst.loop_lock_time       sst:          113.
         533    sst.makeknown_activations      sst:          197.
         577    sst.max_seg_state_change_bw    sst:          252.
         535    sst.metering_flags       sst:          199.
          74    sst.meter_ast_locking    sst:           78.
         562    sst.mod_during_write     sst:          228.
         115    sst.needc                sst:           95.
         565    sst.new_pages            sst:          237.
      400000    sst.nolock               sst:           71.
          65    sst.nolock_word          sst:           70.
      400000    sst.notify               sst:          216.
         547    sst.notify_word          sst:          215.
          44    sst.no_aste              sst:           44.
          16    sst.npfs_misses          sst:           23.
          24    sst.nused                sst:           32.
         101    sst.n_trailers           sst:           83.
         506    sst.oopv                 sst:          174.
          76    sst.page_read_errors     sst:           80.
          77    sst.page_write_errors    sst:           81.
         113    sst.pc_io_waits          sst:           93.
           2    sst.pc_trace             sst:          234.
          10    sst.pc_trace_pf          sst:          232.
         106    sst.pdir_page_faults     sst:           88.
         532    sst.pf_unlock_ptl_meterings    sst:          196.
         530    sst.pf_unlock_ptl_time   sst:          195.
         545    sst.pid                  sst:          212.
          14    sst.post_in_core         post_purge:   142,
                                         sst:           21.
         165    sst.post_list_size       post_purge:   102,
                                         sst:          118.
         167    sst.post_purge_calls     post_purge:   251,
                                         sst:          120.
          12    sst.post_purge_time      post_purge:   249,  250,
                                         sst:           20.
         166    sst.post_purgings        post_purge:   189,
                                         sst:          119.
         372    sst.pp_meters            sst:          159.
         170    sst.pre_page_calls       sst:          121.
         171    sst.pre_page_list_size   sst:          122.
         172    sst.pre_page_misses      sst:          123.
         164    sst.pre_page_size        post_purge:   245,
                                         sst:          117.
          10    sst.pre_page_time        sst:           19.
         173    sst.pre_pagings          sst:          124.
         503    sst.pre_seeks_failed     sst:          171.
          20    sst.ptl                  sst:           25.
          32    sst.ptl_wait_ct          sst:           36.
          40    sst.pts                  sst:           40.
          25    sst.ptwbase              sst:           33.
         223    sst.pvhtp                sst:          133.
         133    sst.reads                sst:          109.
         217    sst.recopies             sst:          129.
          61    sst.removep              sst:           64.
         504    sst.resurrections        sst:          172.
         111    sst.ring_0_page_faults   sst:           91.
          36    sst.root_astep           sst:           39.
          64    sst.root_pvtx            sst:           68.
         112    sst.rqover               sst:           92.
          17    sst.salv                 sst:           24.
           1    sst.sc_trace             sst:          235.
         555    sst.segmove_astep        sst:          223.
         551    sst.segmove_found_synch  sst:          219.
         550    sst.segmove_io_limit     sst:          218.
         545    sst.segmove_lock         sst:          210.
         554    sst.segmove_max_tries    sst:          222.
         561    sst.segmove_new_addr_astep     sst:          227.
         553    sst.segmove_n_reads      sst:          221.
         560    sst.segmove_old_addr_astep     sst:          226.
         556    sst.segmove_pvtx         sst:          224.
         552    sst.segmove_synch_disappeared  sst:          220.
         557    sst.segmove_vtocx        sst:          225.
         536    sst.seg_fault_calls      sst:          203.
         576    sst.seg_state_change_limit     sst:          251.
         574    sst.seg_state_chg_delay  sst:          250.
         601    sst.seg_state_chg_operation    sst:          254.
         247    sst.setfaults_acc        sst:          147.
         246    sst.setfaults_all        sst:          146.
         512    sst.sgm_pf               sst:          177.
         514    sst.sgm_sgft             sst:          179.
         510    sst.sgm_time             sst:          176.
         153    sst.short_pf_count       sst:          111.
         124    sst.skipm                sst:          102.
         125    sst.skipos               sst:          103.
         123    sst.skipu                sst:          101.
         122    sst.skipw                sst:          100.
           0    sst.space                sst:           18.
          60    sst.startp               sst:           62.
         114    sst.steps                sst:           94.
         234    sst.stepsa               sst:          136.
         543    sst.stk_pages_truncated  sst:          208.
         544    sst.stk_pages_truncated_in_core      sst:          209.
         542    sst.stk_truncate_shouldnt_did  sst:          207.
         541    sst.stk_truncate_shouldnt_didnt      sst:          206.
         540    sst.stk_truncate_should_did    sst:          205.
         537    sst.stk_truncate_should_didnt  sst:          204.
          53    sst.strsize              sst:           55.
         102    sst.synch_activations    sst:           84.
         103    sst.synch_skips          sst:           85.
         215    sst.system_type          sst:          127.
          63    sst.temp_w_event         sst:           67.
          26    sst.tfreep               sst:           34.
          15    sst.thrashing            post_purge:   115,
                                         sst:           22.
         250    sst.total_bf             sst:          148.
         251    sst.total_bf_pf          sst:          149.
         105    sst.total_locks_set      sst:           87.
         163    sst.total_sf             sst:          116.
         162    sst.total_sf_pf          sst:          115.
         564    sst.trace_sw             sst:          230.
         272    sst.tree_count           post_purge:   161,
                                         sst:          158.
           4    sst.tty_trace            sst:          233.
         245    sst.updates              sst:          145.
          56    sst.usedp                sst:           58.
         505    sst.volmap_seg_page_faults     sst:          173.
         120    sst.wired                sst:           98.
         216    sst.wired_copies         sst:          128.
         174    sst.wire_proc_data       sst:          125.
         143    sst.writes               sst:          110.
         473    sst.write_hunts          sst:          163.
         570    sst.write_limit          sst:          243.
          57    sst.wtct                 sst:           60.
         472    sst.wusedp               sst:          161.
         563    sst.zero_pages           sst:          229.
        1000    sst_size                 sst:           15.
          75    stackp                   pxss_page_stack:      9.
          15    stack_size               pxss_page_stack:      6,    9.
         136    stock_temp               pxss_page_stack:     12.
         217    stock_temp_1             pxss_page_stack:     19.
         220    stock_temp_2             pxss_page_stack:     19.
                sys_info                 post_purge:    85,  247.
                tc_data                  post_purge:   241,  243.
         134    temp                     post_purge:   107,  110,  223,  226,
                                         pxss_page_stack:     11.
         166    temp1                    pxss_page_stack:     15.
         167    temp2                    pxss_page_stack:     15.
                thread_to_lru            post_purge:   196.
         207    tmp_event                pxss_page_stack:     18.
         144    tmp_ev_channel           pxss_page_stack:     13.
         146    tmp_ev_message           pxss_page_stack:     13.
         202    tmp_ring                 pxss_page_stack:     17.
         165    total_steps              pxss_page_stack:     15.
                trace                    post_purge:    97,  191.
          10    trace.data               post_purge:   104,  108,  220,  224,
                                         sys_trace:     41.
          10    trace.data_word          sys_trace:     43.
           6    trace.flags              sys_trace:     37.
      377777    trace.index_mask         sys_trace:     32.
          23    trace.index_shift        sys_trace:     31.
           5    trace.index_word         post_purge:    98,  217,  237,
                                         sys_trace:     30.
      377777    trace.last_available_mask      sys_trace:     25.
          23    trace.last_available_shift     sys_trace:     24.
           1    trace.last_available_word      post_purge:   207,  230,
                                               sys_trace:     23.
      377777    trace.next_free_mask     sys_trace:     21.
          23    trace.next_free_shift    sys_trace:     20.
           0    trace.next_free_word     post_purge:   100,  218,  236,
                                         sys_trace:     19.
      400000    trace.send_ips           sys_trace:     39.
           6    trace.send_ips_word      sys_trace:     38.
           4    trace.temp               sys_trace:     28.
      377777    trace.threshold_mask     sys_trace:     36.
          23    trace.threshold_shift    sys_trace:     35.
           6    trace.threshold_word     sys_trace:     34.
           2    trace.ttime              sys_trace:     27.
                trace_scheduling         post_purge:   253.
        4010    trace_size               sys_trace:     17.
         160    turn_off                 post_purge:   218,  233.
                unlock_ptl               post_purge:   254.
           4    used_bit_off             post_purge:    62,  199.
         224    volmap_page_temp         pxss_page_stack:     21.
         233    volmap_page_temp_1       pxss_page_stack:     24.
         142    volmap_save_ptr          pxss_page_stack:     12.
         162    volmap_save_sdw          pxss_page_stack:     14.
         140    volmap_temp              pxss_page_stack:     12.
         170    volmap_temp_1            pxss_page_stack:     15.
         171    volmap_temp_2            pxss_page_stack:     15.
         234    vtocx                    pxss_page_stack:     25.
          10    working_set              post_purge:    61,  177.
                working_set_addend       post_purge:   243.
                working_set_factor       post_purge:   241.
           2    write_entry              page_info:     31.
                write_page               post_purge:   190.
         206    x5                       pxss_page_stack:     17.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
