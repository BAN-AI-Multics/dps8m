ASSEMBLY LISTING OF SEGMENT >spec>install>1110>power_integer_.alm                                                                                                                                   
ASSEMBLED ON:	11/11/89  0941.1 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  "	evaluate a ** k for integer k
                                    13  "		fld	a	(or dfld)
                                    14  "		epp1	k
                                    15  "		epp2	work
                                    16  "		tsp3	entry
                                    17  "
                                    18  "	Modified 770412 by PG to fix 1602 (overflow indicator not reset before rpt)
                                    19  "	Modified 790904 by PES to fix fortran bug 231 (2**-127 takes overflow.
                                    20  "	Modified 831221 by HH to work in both BFP and HFP modes.
                                    21  "
                        000000      22  	segdef	single_power_integer_
                        000000      23  	segdef	double_power_integer_
                        000005      24  	segdef	power_integer_
                        000000      25  	segdef	hfp_single_power_integer_
                        000000      26  	segdef	hfp_double_power_integer_
                        000005      27  	segdef	hfp_power_integer_
                                    28  "
                        000000      29  	equ	a,0
                        000002      30  	equ	f,2
                        000004      31  	equ	k,4
                        000005      32  	equ	sign_k,5
                                    33  "
    000000                          34  single_power_integer_:
    000000                          35  double_power_integer_:
    000000                          36  hfp_single_power_integer_:
    000000                          37  hfp_double_power_integer_:
    000000  aa   400000 5150 03     38  	fcmp	=0.0,du		set indicators for a
    000001  aa  2 00000 4571 00     39  	dfst	2|a
    000002  0a   000063 6000 00     40  	tze	test		transfer if a = 0
    000003  aa  1 00000 2351 00     41  	lda	1|0		get k
    000004  0a   000060 6000 00     42  	tze	fequ1		f = 1.0 if k = 0
                                    43  "
                                    44  "	power_ comes here when exponent is found to be integral
                                    45  "	if entered here, k is in the a register--the value of k
                                    46  "	is NOT valid at 1|0, and the work area at 2|<n> has been
                                    47  "	set up.
                                    48  "
    000005                          49  power_integer_:
    000005                          50  hfp_power_integer_:
    000005  aa  2 00005 7551 00     51  	sta	2|sign_k		save k (not necessarily found at 1|0)
    000006  0a   000014 6050 00     52  	tpl	invert_a		if k negative, invert a, get abs(k)
    000007  aa   000400 4310 03     53  	fld	=0.5,du
    000010  aa   000400 4750 03     54  	fad	=0.5,du
    000011  aa  2 00000 5671 00     55  	dfdv	2|a		if this over-/under-flows, would have anyhow
    000012  aa  2 00000 4571 00     56  	dfst	2|a
    000013  aa  2 00005 3351 00     57  	lca	2|sign_k		this is abs(k)
    000014                          58  invert_a:
    000014  aa   000024 1150 07     59  	cmpa	20,dl
    000015  0a   000032 6030 00     60  	trc	patha
    000016  aa   000001 1750 07     61  	sba	1,dl
    000017  0a   000056 6000 00     62  	tze	pathd		answer = a
    000020  aa   000012 7350 00     63  	als	10		shift tally into position for rptx: C(X0)0,7
    000021  aa   000001 6200 05     64  	eax0	1,al		set rptx to terminate on all overflows
    000022  aa   000000 6210 00     65  	eax1	0		index 1 is a placeholder for RPT...make it zero
    000023  aa  2 00000 4331 00     66  	dfld	2|a		initialize C(EAQ) to a
    000024  aa   000001 6140 04     67  	teo	1,ic		clear exponent overflow indicator
    000025  aa   000001 6170 04     68  	tov	1,ic		clear overflow indicator
    000026  aa   000000 5202 00     69  	rptx	0,0		repeat dfmp until overflow or tally runout
    000027  aa  2 00000 4631 11     70  	dfmp	2|a,1		multiply C(EAQ) by a
    000030  aa   400000 4750 03     71  done:	fad	=0.0,du		set indicators
    000031  aa  3 00000 7101 00     72  	tra	3|0
                                    73  "
    000032  aa  2 00004 7551 00     74  patha:	sta	2|k
    000033  aa   000400 4310 03     75  	fld	=0.5,du
    000034  aa   000400 4750 03     76  	fad	=0.5,du
    000035  aa  2 00002 4571 00     77  	dfst	2|f
    000036  aa  2 00004 2351 00     78  pathc:	lda	2|k
    000037  aa   000001 3150 07     79  	cana	1,dl		is k even
    000040  0a   000044 6000 00     80  	tze	even
    000041  aa  2 00000 4331 00     81  	dfld	2|a
    000042  aa  2 00002 4631 00     82  	dfmp	2|f
    000043  aa  2 00002 4571 00     83  	dfst	2|f
    000044  aa  2 00004 2351 00     84  even:	lda	2|k
    000045  aa   000001 7710 00     85  	arl	1		k = k / 2
    000046  0a   000054 6000 00     86  	tze	pathb
    000047  aa  2 00004 7551 00     87  	sta	2|k
    000050  aa  2 00000 4331 00     88  	dfld	2|a
    000051  aa  2 00000 4631 00     89  	dfmp	2|a
    000052  aa  2 00000 4571 00     90  	dfst	2|a		a = a * a
    000053  0a   000036 7100 00     91  	tra	pathc
    000054  aa  2 00002 4331 00     92  pathb:	dfld	2|f
    000055  0a   000030 7100 00     93  	tra	done
    000056  aa  2 00000 4331 00     94  pathd:	dfld	2|a
    000057  0a   000030 7100 00     95  	tra	done
                                    96  "
    000060  aa   000400 4310 03     97  fequ1:	fld	=0.5,du
    000061  aa   000400 4750 03     98  	fad	=0.5,du
    000062  aa  3 00000 7101 00     99  	tra	3|0
                                   100  "
    000063  aa  1 00000 2341 00    101  test:	szn	1|0		special case if a = 0
    000064  0a   000072 6000 00    102  	tze	err1
    000065  aa  3 00000 6051 00    103  	tpl	3|0		0 ** k = 0
    000066  aa   000004 2360 07    104  	ldq	4,dl		0 ** 0
    000067  4a  4 00010 7001 20    105  err:	tsx0	<call_math_error_>|[call_math_error_]
    000070  aa   400000 4310 03    106  	fld	=0.0,du
    000071  aa  3 00000 7101 00    107  	tra	3|0
                                   108  "
    000072  aa   000003 2360 07    109  err1:	ldq	3,dl
    000073  0a   000067 7100 00    110  	tra	err
                                   111  "
                                   112  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000074  5a   000003 000000 
    000075  5a   000106 600000 
    000076  aa   000000 000000 
    000077  55   000012 000002 
    000100  5a   000002 400003 
    000101  55   000006 000012 
    000102  aa  016 160 157 167
    000103  aa  145 162 137 151
    000104  aa  156 164 145 147
    000105  aa  145 162 137 000
    000106  55   000022 000003 
    000107  0a   000005 400000 
    000110  55   000015 000003 
    000111  aa  022 150 146 160         hfp_power_integer_
    000112  aa  137 160 157 167
    000113  aa  145 162 137 151
    000114  aa  156 164 145 147
    000115  aa  145 162 137 000
    000116  55   000034 000012 
    000117  0a   000000 400000 
    000120  55   000025 000003 
    000121  aa  031 150 146 160         hfp_double_power_integer_
    000122  aa  137 144 157 165
    000123  aa  142 154 145 137
    000124  aa  160 157 167 145
    000125  aa  162 137 151 156
    000126  aa  164 145 147 145
    000127  aa  162 137 000 000
    000130  55   000046 000022 
    000131  0a   000000 400000 
    000132  55   000037 000003 
    000133  aa  031 150 146 160         hfp_single_power_integer_
    000134  aa  137 163 151 156
    000135  aa  147 154 145 137
    000136  aa  160 157 167 145
    000137  aa  162 137 151 156
    000140  aa  164 145 147 145
    000141  aa  162 137 000 000
    000142  55   000055 000034 
    000143  0a   000005 400000 
    000144  55   000051 000003 
    000145  aa  016 160 157 167         power_integer_
    000146  aa  145 162 137 151
    000147  aa  156 164 145 147
    000150  aa  145 162 137 000
    000151  55   000066 000046 
    000152  0a   000000 400000 
    000153  55   000060 000003 
    000154  aa  025 144 157 165         double_power_integer_
    000155  aa  142 154 145 137
    000156  aa  160 157 167 145
    000157  aa  162 137 151 156
    000160  aa  164 145 147 145
    000161  aa  162 137 000 000
    000162  55   000077 000055 
    000163  0a   000000 400000 
    000164  55   000071 000003 
    000165  aa  025 163 151 156         single_power_integer_
    000166  aa  147 154 145 137
    000167  aa  160 157 167 145
    000170  aa  162 137 151 156
    000171  aa  164 145 147 145
    000172  aa  162 137 000 000
    000173  55   000002 000066 
    000174  6a   000000 400002 
    000175  55   000102 000003 
    000176  aa  014 163 171 155         symbol_table
    000177  aa  142 157 154 137
    000200  aa  164 141 142 154
    000201  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000202  aa   000000 000015 
    000203  5a   000055 000000 
    000204  5a   000066 000000 
    000205  aa   000000 000000 
    000206  5a   000022 000000 
    000207  5a   000034 000000 
    000210  aa   000000 000000 
    000211  5a   000077 000000 
    000212  aa   000000 000000 
    000213  aa   000000 000000 
    000214  aa   000000 000000 
    000215  aa   000000 000000 
    000216  5a   000046 000000 
    000217  5a   000012 000000 

EXTERNAL NAMES

    000220  aa  020 143 141 154         call_math_error_
    000221  aa  154 137 155 141
    000222  aa  164 150 137 145
    000223  aa  162 162 157 162
    000224  aa  137 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000225  aa   000004 000000 
    000226  55   000124 000124 
    000227  aa   000001 000000 
    000230  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000231  5a   000131 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000074 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000012 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         call_math_error_|call_math_error_
    000011  5a   000135 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   251601 542750 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000142 
    000020  aa   000000 000104 
    000021  aa   000117 000113 
    000022  aa   000134 000104 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000045 
    000067  aa   175453 020005 
    000070  aa   000000 117547 
    000071  aa   176456 400000 
    000072  aa   076163 160145          >spec>install>1110>power_integer_.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061061 
    000076  aa   061060 076160 
    000077  aa   157167 145162 
    000100  aa   137151 156164 
    000101  aa   145147 145162 
    000102  aa   137056 141154 
    000103  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           0    a                        power_integer_:      29,   39,   55,   56,   66,   70,   81,   88,   89,   90,   94.
                call_math_error_         power_integer_:     105.
          30    done                     power_integer_:      71,   93,   95.
           0    double_power_integer_    power_integer_:      23,   35.
          67    err                      power_integer_:     105,  110.
          72    err1                     power_integer_:     102,  109.
          44    even                     power_integer_:      80,   84.
           2    f                        power_integer_:      30,   77,   82,   83,   92.
          60    fequ1                    power_integer_:      42,   97.
           0    hfp_double_power_integer_      power_integer_:      26,   37.
           5    hfp_power_integer_       power_integer_:      27,   50.
           0    hfp_single_power_integer_      power_integer_:      25,   36.
          14    invert_a                 power_integer_:      52,   58.
           4    k                        power_integer_:      31,   74,   78,   84,   87.
          32    patha                    power_integer_:      60,   74.
          54    pathb                    power_integer_:      86,   92.
          36    pathc                    power_integer_:      78,   91.
          56    pathd                    power_integer_:      62,   94.
           5    power_integer_           power_integer_:      24,   49.
           5    sign_k                   power_integer_:      32,   51,   57.
           0    single_power_integer_    power_integer_:      22,   34.
          63    test                     power_integer_:      40,  101.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
