ASSEMBLY LISTING OF SEGMENT >spec>install>1111>device_control.alm                                                                                                                                   
ASSEMBLED ON:	11/11/89  0931.5 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " 
                                    13  "
                                    14  "	device_control 
                                    15  "
                                    16  "	Dispatcher to appropriate dim on device type.
                                    17  "	The entries read, write, and run are transfered to via
                                    18  "	a tsx7.
                                    19  "	Index registers x2,x3,x4,x7 must be preserved.
                                    20  "
                                    21  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    22  
                                    23  " Modified 2/6/74 by N. I. Morris
                                    24  " Modified 4/8/74 by S. H.Webber to meter reads and writes per device
                                    25  " Modified 6/6/74 by B. Greenberg for unified page_wait strategy.
                                    26  " Modified 12/11/74 by B. Greenberg for cme.notify_requested and new cme/ptw protocol
                                    27  " Modified 02/28/75 by BSG for NSS
                                    28  " Modified 06/21/79 by BSG for stack 0 sharing
                                    29  " Modified 1/80 by R.J.C. Kissel to eliminate a builtin constant
                                    30  " Modified 03/29/81, W. Olin Sibert, to conditionalize Page Multilevel
                                    31  " Modified 03/03/82 by J. Bongiovanni to remove Page Multilevel, and for new PVTE
                                    32  " Modified 6/21/82 by E. N. Kittlitz to move core map.
                                    33  
                                    34  	include	pxss_page_stack
                                   1-1  "
                                   1-2  "	BEGIN INCLUDE FILE  pxss_page_stack.incl.alm     July 1982
                                   1-3  "
                                   1-4  
                        000006     1-5  	equ	pxss_stack_size,6	" size of x7 save stack used by pxss
                        000015     1-6  	equ	stack_size,13	" size of x7 save stack used by page control
                                   1-7  
                                   1-8  	temp8	notify_regs
                                   1-9  	temp	save_stack(stack_size),stackp
                                  1-10  	tempd	pre_time,pre_temp(3)
                                  1-11  	tempd	arg(11),temp
                                  1-12  	tempd	stock_temp,volmap_temp,volmap_save_ptr
                                  1-13  	tempd	tmp_ev_channel,tmp_ev_message,apt_ptr,getwork_temp,delta_t
                                  1-14  	tempd	lock_volmap_temp_1,free_store_temp_1,volmap_save_sdw
                                  1-15  	temp	cmep,total_steps,temp1,temp2,volmap_temp_1,volmap_temp_2
                                  1-16  	temp	pvtx,core_add,count,entry_sw,ptp_astep,inter,devadd,errcode
                                  1-17  	temp	tmp_ring,dev_signal,before,depth,x5
                                  1-18  	temp	tmp_event,pxss_save_stack(pxss_stack_size),pxss_stackp
                                  1-19  	temp	stock_temp_1,stock_temp_2,free_store_temp,savx2_3
                                  1-20  	temp	lock_volmap_temp
                                  1-21  	temp	volmap_page_temp
                                  1-22  	tempd	free_store_start_time,post_io_start_time
                                  1-23  
                                  1-24  	temp	done_astep,volmap_page_temp_1
                                  1-25  	temp	vtocx,pageno
                                  1-26  
                                  1-27  	tempd	page_synch_temp,page_synch_time
                                  1-28  	temp	page_synch_index
                                  1-29  
                                  1-30  	temp	pc_err_type,pc_err_ptwp,pc_err_astep
                                  1-31  	tempd	pf_sdw
                                  1-32  
                                  1-33  	temp	pad(22)		" to grow compatibly
                                  1-34  "
                                  1-35  "	END INCLUDE FILE  pxss_page_stack.incl.alm
                                  1-36  "
                                    35  	include	aste
                                   2-1  
                                   2-2  
                                   2-3       "BEGIN INCLUDE FILE aste.incl.alm
                                   2-4  
                                   2-5  
                                   2-6  	"Created 01/14/85  1523.3 est Mon by convert_include_file,
                                   2-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   2-8  
                                   2-9  	"Made from >Pool>m>loe>incl>aste.incl.pl1,
                                  2-10  	"   modified 01/08/85  1115.0 est Tue
                                  2-11  
                                  2-12  "
                                  2-13  "	Structure aste
                                  2-14  "
                        000014    2-15  	equ	aste_size,12
                                  2-16  
                        000000    2-17  	equ	aste.fp,0			" UPPER
                        000000    2-18  	equ	aste.bp,0			" LOWER
                                  2-19  
                        000001    2-20  	equ	aste.infl,1		" UPPER
                        000001    2-21  	equ	aste.infp,1		" LOWER
                                  2-22  
                        000002    2-23  	equ	aste.strp,2		" UPPER
                        000002    2-24  	equ	aste.par_astep,2		" LOWER
                                  2-25  
                        000003    2-26  	equ	aste.uid,3
                                  2-27  
                        000004    2-28  	equ	aste.msl_word,4
                        000033    2-29  	equ	aste.msl_shift,27
                        000777    2-30  	bool	aste.msl_mask,000777
                        000004    2-31  	equ	aste.pvtx_word,4
                        000022    2-32  	equ	aste.pvtx_shift,18
                        000777    2-33  	bool	aste.pvtx_mask,000777
                        000004    2-34  	equ	aste.vtocx,4		" LOWER
                                  2-35  
                        000005    2-36  	equ	aste.usedf_word,5
                        400000    2-37  	bool	aste.usedf,400000		" DU
                        000005    2-38  	equ	aste.init_word,5
                        200000    2-39  	bool	aste.init,200000		" DU
                        000005    2-40  	equ	aste.gtus_word,5
                        100000    2-41  	bool	aste.gtus,100000		" DU
                        000005    2-42  	equ	aste.gtms_word,5
                        040000    2-43  	bool	aste.gtms,040000		" DU
                        000005    2-44  	equ	aste.hc_word,5
                        020000    2-45  	bool	aste.hc,020000		" DU
                        000005    2-46  	equ	aste.hc_sdw_word,5
                        010000    2-47  	bool	aste.hc_sdw,010000		" DU
                        000005    2-48  	equ	aste.any_access_on_word,5
                        004000    2-49  	bool	aste.any_access_on,004000	" DU
                        000005    2-50  	equ	aste.write_access_on_word,5
                        002000    2-51  	bool	aste.write_access_on,002000	" DU
                        000005    2-52  	equ	aste.inhibit_cache_word,5
                        001000    2-53  	bool	aste.inhibit_cache,001000	" DU
                        000005    2-54  	equ	aste.explicit_deact_ok_word,5
                        000400    2-55  	bool	aste.explicit_deact_ok,000400	" DU
                        000005    2-56  	equ	aste.deact_error_word,5
                        000200    2-57  	bool	aste.deact_error,000200	" DU
                        000005    2-58  	equ	aste.hc_part_word,5
                        000100    2-59  	bool	aste.hc_part,000100		" DU
                        000005    2-60  	equ	aste.fm_damaged_word,5
                        000040    2-61  	bool	aste.fm_damaged,000040	" DU
                        000005    2-62  	equ	aste.multi_class_word,5
                        000020    2-63  	bool	aste.multi_class,000020	" DU
                        000005    2-64  	equ	aste.dius_word,5
                        000002    2-65  	bool	aste.dius,000002		" DU
                        000005    2-66  	equ	aste.nid_word,5
                        000001    2-67  	bool	aste.nid,000001		" DU
                        000005    2-68  	equ	aste.dmpr_pad_word,5
                        400000    2-69  	bool	aste.dmpr_pad,400000	" DL
                        000005    2-70  	equ	aste.ehs_word,5
                        200000    2-71  	bool	aste.ehs,200000		" DL
                        000005    2-72  	equ	aste.nqsw_word,5
                        100000    2-73  	bool	aste.nqsw,100000		" DL
                        000005    2-74  	equ	aste.dirsw_word,5
                        040000    2-75  	bool	aste.dirsw,040000		" DL
                        000005    2-76  	equ	aste.master_dir_word,5
                        020000    2-77  	bool	aste.master_dir,020000	" DL
                        000005    2-78  	equ	aste.volmap_seg_word,5
                        010000    2-79  	bool	aste.volmap_seg,010000	" DL
                        000005    2-80  	equ	aste.tqsw_word,5
                        004000    2-81  	bool	aste.tqsw,004000		" DL
                                  2-82  
                        000006    2-83  	equ	aste.dtu,6
                        000007    2-84  	equ	aste.dtm,7
                                  2-85  
                        000010    2-86  	equ	aste.quota,8		" UPPER
                                  2-87  
                        000011    2-88  	equ	aste.used,9		" UPPER
                                  2-89  
                        000012    2-90  	equ	aste.csl_word,10
                        000033    2-91  	equ	aste.csl_shift,27
                        000777    2-92  	bool	aste.csl_mask,000777
                        000012    2-93  	equ	aste.fmchanged_word,10
                        000400    2-94  	bool	aste.fmchanged,000400	" DU
                        000012    2-95  	equ	aste.fms_word,10
                        000200    2-96  	bool	aste.fms,000200		" DU
                        000012    2-97  	equ	aste.npfs_word,10
                        000100    2-98  	bool	aste.npfs,000100		" DU
                        000012    2-99  	equ	aste.gtpd_word,10
                        000040   2-100  	bool	aste.gtpd,000040		" DU
                        000012   2-101  	equ	aste.dnzp_word,10
                        000020   2-102  	bool	aste.dnzp,000020		" DU
                        000012   2-103  	equ	aste.per_process_word,10
                        000010   2-104  	bool	aste.per_process,000010	" DU
                        000012   2-105  	equ	aste.ddnp_word,10
                        000004   2-106  	bool	aste.ddnp,000004		" DU
                        000012   2-107  	equ	aste.records_word,10
                        000011   2-108  	equ	aste.records_shift,9
                        000777   2-109  	bool	aste.records_mask,000777
                        000012   2-110  	equ	aste.np_word,10
                        000000   2-111  	equ	aste.np_shift,0
                        000777   2-112  	bool	aste.np_mask,000777
                                 2-113  
                        000013   2-114  	equ	aste.ht_fp,11		" UPPER
                        000013   2-115  	equ	aste.fmchanged1_word,11
                        400000   2-116  	bool	aste.fmchanged1,400000	" DL
                        000013   2-117  	equ	aste.damaged_word,11
                        200000   2-118  	bool	aste.damaged,200000		" DL
                        000013   2-119  	equ	aste.pack_ovfl_word,11
                        100000   2-120  	bool	aste.pack_ovfl,100000	" DL
                        000013   2-121  	equ	aste.synchronized_word,11
                        040000   2-122  	bool	aste.synchronized,040000	" DL
                        000013   2-123  	equ	aste.ptsi_word,11
                        000006   2-124  	equ	aste.ptsi_shift,6
                        000003   2-125  	bool	aste.ptsi_mask,000003
                        000013   2-126  	equ	aste.marker_word,11
                        000000   2-127  	equ	aste.marker_shift,0
                        000077   2-128  	bool	aste.marker_mask,000077
                                 2-129  
                                 2-130  "
                                 2-131  "	Structure aste_part
                                 2-132  "
                        000014   2-133  	equ	aste_part_size,12
                                 2-134  
                                 2-135  
                        000000   2-136  	equ	aste_part.one,0
                        000001   2-137  	equ	aste_part.two,1		" DOUBLE
                                 2-138  
                        000013   2-139  	equ	aste_part.three_word,11
                        000000   2-140  	equ	aste_part.three_shift,0
                        000377   2-141  	bool	aste_part.three_mask,000377
                                 2-142  
                                 2-143  "
                                 2-144  "	Structure seg_aste
                                 2-145  "
                        000014   2-146  	equ	seg_aste_size,12
                                 2-147  
                                 2-148  
                        000010   2-149  	equ	seg_aste.usage,8
                                 2-150  
                                 2-151       "END INCLUDE FILE aste.incl.alm
                                    36  	include	pvte
                                   3-1  
                                   3-2  
                                   3-3       "BEGIN INCLUDE FILE pvte.incl.alm
                                   3-4  
                                   3-5  
                                   3-6  	"Created 05/29/86  1617.9 mst Thu by convert_include_file,
                                   3-7  	"   Version of 04/10/86  1622.3 mst Thu.
                                   3-8  
                                   3-9  	"Made from >dumps>old>dipper>svs5>incl>pvte.incl.pl1,
                                  3-10  	"   modified 05/29/86  1617.8 mst Thu
                                  3-11  
                                  3-12  
                                  3-13  " HISTORY COMMENTS:
                                  3-14  "  1) change(86-04-11,Fawcett), approve(86-04-11,MCR7383),
                                  3-15  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  3-16  "        Add the support for subvolumes
                                  3-17  "  2) change(86-04-11,Lippard), approve(86-04-11,MCR7309),
                                  3-18  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  3-19  "        Add root_lv flag to mount RLVs that do not have hardcore partitions.
                                  3-20  "  3) change(88-05-27,GWMay), approve(88-05-27,MCR7883),
                                  3-21  "     audit(88-06-14,Beattie), install(88-07-19,MR12.2-1061):
                                  3-22  "        Added inconsistent_dbm bit for determining the status of volume
                                  3-23  "        dumper bit maps.
                                  3-24  "                                                      END HISTORY COMMENTS
                                  3-25  
                                  3-26  
                                  3-27  "
                                  3-28  "	Structure pvt_array
                                  3-29  "
                                  3-30  
                                  3-31  "
                                  3-32  "	Structure pvte
                                  3-33  "
                        000034    3-34  	equ	pvte_size,28
                                  3-35  
                                  3-36  
                        000000    3-37  	equ	pvte.pvid,0
                        000001    3-38  	equ	pvte.lvid,1
                                  3-39  
                        000002    3-40  	equ	pvte.dmpr_in_use_word,2
                        400000    3-41  	bool	pvte.dmpr_in_use,400000	" DU
                        000002    3-42  	equ	pvte.is_sv_word,2
                        040000    3-43  	bool	pvte.is_sv,040000		" DU
                        000002    3-44  	equ	pvte.root_lv_word,2
                        020000    3-45  	bool	pvte.root_lv,020000		" DU
                        000002    3-46  	equ	pvte.removable_pack_word,2
                        010000    3-47  	bool	pvte.removable_pack,010000	" DU
                        000002    3-48  	equ	pvte.inconsistent_dbm_word,2
                        004000    3-49  	bool	pvte.inconsistent_dbm,004000	" DU
                        000002    3-50  	equ	pvte.brother_pvtx_word,2
                        000022    3-51  	equ	pvte.brother_pvtx_shift,18
                        000777    3-52  	bool	pvte.brother_pvtx_mask,000777
                        000002    3-53  	equ	pvte.skip_queue_count,2	" LOWER
                                  3-54  
                        000003    3-55  	equ	pvte.devname,3
                                  3-56  
                        000004    3-57  	equ	pvte.device_type_word,4
                        000033    3-58  	equ	pvte.device_type_shift,27
                        000777    3-59  	bool	pvte.device_type_mask,000777
                        000004    3-60  	equ	pvte.logical_area_number_word,4
                        000022    3-61  	equ	pvte.logical_area_number_shift,18
                        000777    3-62  	bool	pvte.logical_area_number_mask,000777
                        000004    3-63  	equ	pvte.used_word,4
                        400000    3-64  	bool	pvte.used,400000		" DL
                        000004    3-65  	equ	pvte.storage_system_word,4
                        200000    3-66  	bool	pvte.storage_system,200000	" DL
                        000004    3-67  	equ	pvte.permanent_word,4
                        100000    3-68  	bool	pvte.permanent,100000	" DL
                        000004    3-69  	equ	pvte.testing_word,4
                        040000    3-70  	bool	pvte.testing,040000		" DL
                        000004    3-71  	equ	pvte.being_mounted_word,4
                        020000    3-72  	bool	pvte.being_mounted,020000	" DL
                        000004    3-73  	equ	pvte.being_demounted_word,4
                        010000    3-74  	bool	pvte.being_demounted,010000	" DL
                        000004    3-75  	equ	pvte.check_read_incomplete_word,4
                        004000    3-76  	bool	pvte.check_read_incomplete,004000 " DL
                        000004    3-77  	equ	pvte.device_inoperative_word,4
                        002000    3-78  	bool	pvte.device_inoperative,002000 " DL
                        000004    3-79  	equ	pvte.rpv_word,4
                        001000    3-80  	bool	pvte.rpv,001000		" DL
                        000004    3-81  	equ	pvte.scav_check_address_word,4
                        000400    3-82  	bool	pvte.scav_check_address,000400 " DL
                        000004    3-83  	equ	pvte.deposit_to_volmap_word,4
                        000200    3-84  	bool	pvte.deposit_to_volmap,000200	" DL
                        000004    3-85  	equ	pvte.being_demounted2_word,4
                        000100    3-86  	bool	pvte.being_demounted2,000100	" DL
                        000004    3-87  	equ	pvte.pc_vacating_word,4
                        000040    3-88  	bool	pvte.pc_vacating,000040	" DL
                        000004    3-89  	equ	pvte.vacating_word,4
                        000020    3-90  	bool	pvte.vacating,000020	" DL
                        000004    3-91  	equ	pvte.hc_part_used_word,4
                        000010    3-92  	bool	pvte.hc_part_used,000010	" DL
                        000004    3-93  	equ	pvte.volmap_lock_notify_word,4
                        000004    3-94  	bool	pvte.volmap_lock_notify,000004 " DL
                        000004    3-95  	equ	pvte.volmap_idle_notify_word,4
                        000002    3-96  	bool	pvte.volmap_idle_notify,000002 " DL
                        000004    3-97  	equ	pvte.vtoc_map_lock_notify_word,4
                        000001    3-98  	bool	pvte.vtoc_map_lock_notify,000001 " DL
                                  3-99  
                        000005   3-100  	equ	pvte.n_free_vtoce,5		" UPPER
                        000005   3-101  	equ	pvte.vtoc_size,5		" LOWER
                                 3-102  
                        000006   3-103  	equ	pvte.dbmrp,6		" UPPER
                                 3-104  
                        000007   3-105  	equ	pvte.nleft,7		" UPPER
                        000007   3-106  	equ	pvte.totrec,7		" LOWER
                                 3-107  
                        000010   3-108  	equ	pvte.dim_info,8
                        000011   3-109  	equ	pvte.sv_num,9
                        000012   3-110  	equ	pvte.num_of_svs,10
                        000013   3-111  	equ	pvte.records_per_cyl,11
                        000014   3-112  	equ	pvte.record_factor,12
                        000015   3-113  	equ	pvte.sv_name,13
                                 3-114  
                        000016   3-115  	equ	pvte.curn_dmpr_vtocx,14	" UPPER
                                 3-116  
                        000017   3-117  	equ	pvte.n_vtoce,15		" LOWER
                                 3-118  
                        000020   3-119  	equ	pvte.baseadd,16		" UPPER
                                 3-120  
                        000022   3-121  	equ	pvte.volmap_seg_sdw,18	" DOUBLE
                        000024   3-122  	equ	pvte.volmap_astep,20
                                 3-123  
                        000025   3-124  	equ	pvte.volmap_offset,21	" UPPER
                        000025   3-125  	equ	pvte.vtoc_map_offset,21	" LOWER
                                 3-126  
                        000026   3-127  	equ	pvte.volmap_lock,22
                        000027   3-128  	equ	pvte.vtoc_map_lock,23
                        000030   3-129  	equ	pvte.volmap_stock_ptr,24
                        000031   3-130  	equ	pvte.vtoc_map_stock_ptr,25
                                 3-131  
                        000032   3-132  	equ	pvte.volmap_async_state,26	" UPPER
                        000032   3-133  	equ	pvte.volmap_async_page,26	" LOWER
                                 3-134  
                        000033   3-135  	equ	pvte.vol_trouble_count,27	" UPPER
                        000033   3-136  	equ	pvte.scavenger_block_rel,27	" LOWER
                                 3-137  
                        000000   3-138  	equ	VOLMAP_ASYNC_IDLE,0		" MANIFEST
                        000001   3-139  	equ	VOLMAP_ASYNC_READ,1		" MANIFEST
                        000002   3-140  	equ	VOLMAP_ASYNC_WRITE,2	" MANIFEST
                                 3-141  
                                 3-142       "END INCLUDE FILE pvte.incl.alm
                                    37  	include	add_type
                                   4-1  "
                                   4-2  "	BEGIN INCLUDE FILE add_type.incl.alm 02/14/75
                                   4-3  "
                                   4-4  
                                   4-5  "	This file defines the interpretation of the add_type
                                   4-6  "	field of a ptw or cme.
                                   4-7  
                        400000     4-8  	bool	add_type.core,400000   "DL core address - S/B only in PTW
                        200000     4-9  	bool	add_type.disk,200000   "DL disk address
                        100000    4-10  	bool	add_type.pd,100000	   "DL paging device record number
                        040000    4-11  	bool	add_type.reserved,040000 "DL reserved for future use
                                  4-12  
                        740000    4-13  	bool	add_type.non_null,740000 "DL not a null address
                                  4-14  
                                  4-15  "
                                  4-16  "	END INCLUDE FILE add_type.incl.alm
                                  4-17  "
                                    38  	include	stack_frame
                                   5-1  "
                                   5-2  "	BEGIN INCLUDE FILE ... stack_frame.incl.alm   6/72 RBS
                                   5-3  "
                                   5-4  " Modified: 16 Dec 1977, D. Levin - to add fio_ps_ptr
                                   5-5  " Modified:  3 Feb 1978, P. Krupp - to add run_unit_manager_bit & main_proc_bit
                                   5-6  " Modified: 21 March 1978, D. Levin - change fio_ps_ptr to support_ptr
                                   5-7  "
                        000020     5-8  	equ	stack_frame.prev_sp,16
                        000020     5-9  	equ	stack_frame.condition_word,16
                        000022    5-10  	equ	stack_frame.next_sp,18
                        000022    5-11  	equ	stack_frame.signaller_word,18
                        000024    5-12  	equ	stack_frame.return_ptr,20
                        000026    5-13  	equ	stack_frame.entry_ptr,22
                        000030    5-14  	equ	stack_frame.operator_ptr,24
                        000030    5-15  	equ	stack_frame.lp_ptr,24
                        000032    5-16  	equ	stack_frame.arg_ptr,26
                        000034    5-17  	equ	stack_frame.static_ptr,28
                        000035    5-18  	equ	stack_frame.support_ptr,29	" only used by fortran I/O
                        000036    5-19  	equ	stack_frame.on_unit_rel_ptrs,30
                        000037    5-20  	equ	stack_frame.operator_ret_ptr,31
                        000037    5-21  	equ	stack_frame.translator_id,31
                        000040    5-22  	equ	stack_frame.regs,32
                        000060    5-23  	equ	stack_frame.min_length,48
                        000020    5-24  	equ	stack_frame.flag_word,16
                        020000    5-25  	bool	stack_frame.main_proc_bit,020000	(DL)
                        010000    5-26  	bool	stack_frame.run_unit_manager,010000	(DL)
                        004000    5-27  	bool	stack_frame.signal_bit,004000		(DL)
                        002000    5-28  	bool	stack_frame.crawl_out_bit,002000	(DL)
                        001000    5-29  	bool	stack_frame.signaller_bit,001000	(DL)
                        000400    5-30  	bool	stack_frame.link_trap_bit,000400	(DL)
                        000200    5-31  	bool	stack_frame.support_bit,000200	(DL)
                        000100    5-32  	bool	stack_frame.condition_bit,000100	(DL)
                                  5-33  
                                  5-34  "
                                  5-35  "	END INCLUDE FILE  ... stack_frame.incl.alm
                                  5-36  "
                                    39  	include	stack_header
                                   6-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   6-2  "
                                   6-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   6-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   6-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   6-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   6-7  
                                   6-8  " HISTORY COMMENTS:
                                   6-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  6-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  6-11  "     added the heap_header_ptr definition
                                  6-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  6-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  6-14  "     Modified to support control point management.  These changes were
                                  6-15  "     actually made in February 1985 by G. Palter.
                                  6-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  6-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  6-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  6-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  6-20  "     some space int the stack header and change the cpd_ptr unal to
                                  6-21  "     cpm_data_ptr (ITS pair).
                                  6-22  "                                                      END HISTORY COMMENTS
                                  6-23  
                        000004    6-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    6-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  6-26  
                        000010    6-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    6-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    6-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    6-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    6-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    6-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    6-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    6-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  6-35  
                        000020    6-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    6-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    6-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    6-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  6-40  
                        000030    6-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    6-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    6-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    6-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  6-45  
                        000040    6-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    6-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    6-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    6-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  6-50  
                        000050    6-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    6-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    6-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    6-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  6-55  
                        000060    6-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    6-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    6-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    6-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    6-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    6-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    6-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    6-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    6-64  	equ	stack_header_end,64			length of stack header
                                  6-65  
                                  6-66  
                                  6-67  
                                  6-68  
                        000000    6-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    6-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  6-71  
                                  6-72  "	The  following constant is an offset within the  pl1  operators table.
                                  6-73  "	It  references a  transfer vector table.
                                  6-74  
                        000551    6-75  	bool	tv_offset,551
                                  6-76  
                                  6-77  
                                  6-78  "	The  following constants are offsets within this transfer vector table.
                                  6-79  
                        001170    6-80  	equ	call_offset,tv_offset+271
                        001171    6-81  	equ	push_offset,tv_offset+272
                        001172    6-82  	equ	return_offset,tv_offset+273
                        001173    6-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    6-84  	equ	entry_offset,tv_offset+275
                                  6-85  
                                  6-86  
                                  6-87  " 	END INCLUDE FILE stack_header.incl.alm
                                    40  	include	page_info
                                   7-1  "	BEGIN INCLUDE FILE page_info.incl.alm  --  6/72
                                   7-2  "
                                   7-3  " Modified 02/22/81, W. Olin Sibert, for ADP conversion
                                   7-4  " Modified 06/23/82, E. N. Kittlitz, to move core map.
                                   7-5  "
                        000012     7-6  	equ	page_power,10		" 2**10 = size of page
                        000001     7-7  	bool	df1,000001		" directed fault 1 on page fault
                                   7-8  
                 777777 740000     7-9  	bool	address_mask,777777740000	" Mask for PTW add, add_type compares
                                  7-10  					" Use as =v36/address_mask
                                  7-11  
                        400000    7-12  	bool	ptw.nulled,400000		" flag for testing addresses
                                  7-13  
                        100000    7-14  	bool	int,100000		" Disk dim flags
                        000020    7-15  	bool	pri,000020
                        000004    7-16  	bool	no_post,000004
                                  7-17  
                        000003    7-18  	equ	sst,3			" Standard pointer and index
                        000003    7-19  	equ	pdm,sst			" register usage
                        000003    7-20  	equ	ast,sst
                        000002    7-21  	equ	ptw,2
                                  7-22  
                                  7-23  "	Various AST masks which are not
                                  7-24  "	expressible in standard notation
                                  7-25  "
                        777000    7-26  	bool	aste.csl_mask_inner,777000
                        777000    7-27  	bool	aste.records_mask_inner,777000
                                  7-28  
                        000000    7-29  	equ	fault_entry,0		" Flags indicating how we
                        000001    7-30  	equ	read_entry,1		" were entered
                        000002    7-31  	equ	write_entry,2
                        000003    7-32  	equ	pre_page_entry,3
                        000004    7-33  	equ	post_purge_entry,4
                        000005    7-34  	equ	pd_flush_entry,5
                        000006    7-35  	equ	evict_entry,6
                        000007    7-36  	equ	abs_wire_entry,7
                        000010    7-37  	equ	cleanup_entry,8
                                  7-38  
                                  7-39  " Constants for manipulating core addresses and PTWs. The core address
                                  7-40  " is a fixed bin (35) aligned, and must be moved to/from the appropriate
                                  7-41  " field in the SDW or PTW.
                                  7-42  "
                                  7-43  	iftarget	l68
                        777760          	   bool	ptw_add_mask,777760 " Page number
                        777760          	   bool	sdw_add_mask,777760 " Page number
                 000077 777777          	   bool	coreadd_mask,000077777777 " Mask for coreadd in AL
                                        
                        000014          	   equ	coreadd_to_ptw.ls,12
                        000014          	   equ	coreadd_to_sdw.ls,12
                        000014          	   equ	ptw_to_coreadd.rl,12
                        000014          	   equ	sdw_to_coreadd.rl,12
                        000002          	   equ	cmep_to_ptw.ls,2
                        000002          	   equ	cmep_to_sdw.ls,2
                        000002          	   equ	ptw_to_cmep.rl,2
                        000024          	   equ	ptw_to_cmep_lower.rl,20
                        000002          	   equ	sdw_to_cmep.rl,2
                                        "	ifend
                                  7-58  
                                  7-59  	iftarget	adp
                                        "	   bool	ptw_add_mask,177777 " Page number
                                        "	   bool	sdw_add_mask,777774 " Page number
                                        "	   bool	coreadd_mask,000377777777 " Mask for coreadd in AL
                                        "
                                        "	   equ	coreadd_to_ptw.ls,8
                                        "	   equ	coreadd_to_sdw.ls,10
                                        "	   equ	ptw_to_coreadd.rl,8
                                        "	   equ	sdw_to_coreadd.rl,10
                                        "	   equ	cmep_to_ptw.rl,2	" Must shift backwards
                                        "	   equ	cmep_to_sdw.ls,0
                                        "	   equ	ptw_to_cmep.ls,2	" Must shift backwards
                                        "	   equ	ptw_to_cmep_lower.rl,16
                                        "	   equ	sdw_to_cmep.rl,0
                                        "	ifend
                                  7-74  
                        000012    7-75  	equ	cmep_to_coreadd.rl,10	.cmep to coreadd
                        000012    7-76  	equ	coreadd_to_cmep.ls,10	coreadd to .cmep
                                  7-77  
                                  7-78  " 
                                  7-79  "
                                  7-80  " Assorted general purpose macros used in PC. These will be changed
                                  7-81  " when address types are changed for 20 bit addresses. Additionally,
                                  7-82  " for more accurate metering on the ADP, the metering macros should
                                  7-83  " modified to update the metering cells uninterruptably.
                                  7-84  "
                                  7-85  
                                  7-86  	macro	missing
                              1   7-87  	ife	&2,()
                              2   7-88  	  warn	(&1: Argument missing.)
                              3   7-89  	ifend
                              4   7-90  	&end
                                  7-91  "
                                  7-92  " staddra and staddrq store the address portion (upper 22 bits) of the A or Q
                                  7-93  " into the specified location.
                                  7-94  "
                                  7-95  	macro	staddra
                              1   7-96  	missing	staddra,&1
                              2   7-97  	era	&F1
                              3   7-98  	ana	=v36/address_mask
                              4   7-99  	ersa	&F1
                              5  7-100  	&end
                                 7-101  
                                 7-102  	macro	staddrq
                              1  7-103  	missing	staddrq,&1
                              2  7-104  	erq	&F1
                              3  7-105  	anq	=v36/address_mask
                              4  7-106  	ersq	&F1
                              5  7-107  	&end
                                 7-108  
                                 7-109  "	Macros for metering 6/23/80
                                 7-110  
                                 7-111  	macro	read_clock
                              1  7-112  	iftarget	l68
                              2  7-113  	  rccl	sys_info$clock_,*
                              3  7-114  	ifend
                              4  7-115  	iftarget adp
                              5  7-116  	  rccl	0
                              6  7-117  	ifend
                              7  7-118  	&end
                                 7-119  
                                 7-120  	macro	increment
                              1  7-121  	missing	increment,&1
                              2  7-122  	aos	&1
                              3  7-123  	&end
                                 7-124  
                                 7-125  	macro	store_clock
                              1  7-126  	missing	store_clock,&1
                              2  7-127  	read_clock
                              3  7-128  	staq	&1
                              4  7-129  	&end
                                 7-130  
                                 7-131  	macro	meter_time
                              1  7-132  	missing	meter_time,&3
                              2  7-133  	increment &3
                              3  7-134  	read_clock
                              4  7-135  	sbaq	&1
                              5  7-136  	adaq	&2
                              6  7-137  	staq	&2
                              7  7-138  	&end
                                 7-139  
                                 7-140  "	END INCLUDE FILE  page_info.incl.alm
                                    41  	include	sst
                                   8-1  
                                   8-2  
                                   8-3       "BEGIN INCLUDE FILE sst.incl.alm
                                   8-4  
                                   8-5  
                                   8-6  	"Created 01/14/85  1523.7 est Mon by convert_include_file,
                                   8-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   8-8  
                                   8-9  	"Made from >Pool>m>loe>incl>sst.incl.pl1,
                                  8-10  	"   modified 01/09/85  1148.3 est Wed
                                  8-11  
                                  8-12  "
                                  8-13  "	Structure sst
                                  8-14  "
                        001000    8-15  	equ	sst_size,512
                                  8-16  
                                  8-17  
                        000000    8-18  	equ	sst.space,0
                        000010    8-19  	equ	sst.pre_page_time,8		" DOUBLE
                        000012    8-20  	equ	sst.post_purge_time,10	" DOUBLE
                        000014    8-21  	equ	sst.post_in_core,12
                        000015    8-22  	equ	sst.thrashing,13
                        000016    8-23  	equ	sst.npfs_misses,14
                        000017    8-24  	equ	sst.salv,15
                        000020    8-25  	equ	sst.ptl,16
                        000021    8-26  	equ	sst.astl,17
                        000022    8-27  	equ	sst.astl_event,18
                                  8-28  
                        000023    8-29  	equ	sst.astl_notify_requested_word,19
                        400000    8-30  	bool	sst.astl_notify_requested,400000 " DU
                                  8-31  
                        000024    8-32  	equ	sst.nused,20
                        000025    8-33  	equ	sst.ptwbase,21
                        000026    8-34  	equ	sst.tfreep,22
                        000030    8-35  	equ	sst.astap,24
                        000032    8-36  	equ	sst.ptl_wait_ct,26
                        000033    8-37  	equ	sst.astsize,27
                        000034    8-38  	equ	sst.cmesize,28
                        000036    8-39  	equ	sst.root_astep,30
                        000040    8-40  	equ	sst.pts,32
                        000044    8-41  	equ	sst.level,36		" LEVEL 2
                                  8-42  
                        000044    8-43  	equ	sst.ausedp,36		" UPPER
                        000044    8-44  	equ	sst.no_aste,36		" LOWER
                                  8-45  
                        000050    8-46  	equ	sst.atempp,40		" UPPER
                        000050    8-47  	equ	sst.atempp1,40		" LOWER
                                  8-48  
                        000051    8-49  	equ	sst.dm_enabled_word,41
                        400000    8-50  	bool	sst.dm_enabled,400000	" DU
                                  8-51  
                        000052    8-52  	equ	sst.ainitp,42		" UPPER
                        000052    8-53  	equ	sst.ainitp1,42		" LOWER
                                  8-54  
                        000053    8-55  	equ	sst.strsize,43
                        000054    8-56  	equ	sst.cmp,44
                                  8-57  
                        000056    8-58  	equ	sst.usedp,46		" UPPER
                                  8-59  
                        000057    8-60  	equ	sst.wtct,47
                                  8-61  
                        000060    8-62  	equ	sst.startp,48		" UPPER
                                  8-63  
                        000061    8-64  	equ	sst.removep,49		" UPPER
                                  8-65  
                        000062    8-66  	equ	sst.double_write,50
                        000063    8-67  	equ	sst.temp_w_event,51
                        000064    8-68  	equ	sst.root_pvtx,52
                                  8-69  
                        000065    8-70  	equ	sst.nolock_word,53
                        400000    8-71  	bool	sst.nolock,400000		" DU
                                  8-72  
                        000066    8-73  	equ	sst.fc_skips_pinned,54
                        000067    8-74  	equ	sst.cl_skips_pinned,55
                        000070    8-75  	equ	sst.ast_ht_ptr,56
                        000072    8-76  	equ	sst.ast_ht_n_buckets,58
                        000073    8-77  	equ	sst.ast_ht_uid_mask,59
                        000074    8-78  	equ	sst.meter_ast_locking,60
                        000075    8-79  	equ	sst.checksum_filemap,61
                        000076    8-80  	equ	sst.page_read_errors,62
                        000077    8-81  	equ	sst.page_write_errors,63
                        000100    8-82  	equ	sst.cycle_pv_allocation,64
                        000101    8-83  	equ	sst.n_trailers,65
                        000102    8-84  	equ	sst.synch_activations,66
                        000103    8-85  	equ	sst.synch_skips,67
                        000104    8-86  	equ	sst.lock_waits,68
                        000105    8-87  	equ	sst.total_locks_set,69
                        000106    8-88  	equ	sst.pdir_page_faults,70
                        000107    8-89  	equ	sst.level_1_page_faults,71
                        000110    8-90  	equ	sst.dir_page_faults,72
                        000111    8-91  	equ	sst.ring_0_page_faults,73
                        000112    8-92  	equ	sst.rqover,74
                        000113    8-93  	equ	sst.pc_io_waits,75
                        000114    8-94  	equ	sst.steps,76
                        000115    8-95  	equ	sst.needc,77
                        000116    8-96  	equ	sst.ceiling,78
                        000117    8-97  	equ	sst.ctwait,79
                        000120    8-98  	equ	sst.wired,80
                        000121    8-99  	equ	sst.laps,81
                        000122   8-100  	equ	sst.skipw,82
                        000123   8-101  	equ	sst.skipu,83
                        000124   8-102  	equ	sst.skipm,84
                        000125   8-103  	equ	sst.skipos,85
                        000126   8-104  	equ	sst.aused,86
                        000127   8-105  	equ	sst.damaged_ct,87
                        000130   8-106  	equ	sst.deact_count,88
                        000131   8-107  	equ	sst.demand_deact_attempts,89
                        000132   8-108  	equ	sst.demand_deactivations,90
                        000133   8-109  	equ	sst.reads,91
                        000143   8-110  	equ	sst.writes,99
                        000153   8-111  	equ	sst.short_pf_count,107
                        000154   8-112  	equ	sst.loop_locks,108
                        000156   8-113  	equ	sst.loop_lock_time,110	" DOUBLE
                        000160   8-114  	equ	sst.cpu_sf_time,112		" DOUBLE
                        000162   8-115  	equ	sst.total_sf_pf,114
                        000163   8-116  	equ	sst.total_sf,115
                        000164   8-117  	equ	sst.pre_page_size,116
                        000165   8-118  	equ	sst.post_list_size,117
                        000166   8-119  	equ	sst.post_purgings,118
                        000167   8-120  	equ	sst.post_purge_calls,119
                        000170   8-121  	equ	sst.pre_page_calls,120
                        000171   8-122  	equ	sst.pre_page_list_size,121
                        000172   8-123  	equ	sst.pre_page_misses,122
                        000173   8-124  	equ	sst.pre_pagings,123
                        000174   8-125  	equ	sst.wire_proc_data,124	" DOUBLE
                        000214   8-126  	equ	sst.abs_wired_count,140
                        000215   8-127  	equ	sst.system_type,141
                        000216   8-128  	equ	sst.wired_copies,142
                        000217   8-129  	equ	sst.recopies,143
                        000220   8-130  	equ	sst.first_core_block,144
                        000221   8-131  	equ	sst.last_core_block,145
                        000222   8-132  	equ	sst.fw_retries,146
                        000223   8-133  	equ	sst.pvhtp,147
                        000224   8-134  	equ	sst.askipsize,148
                        000230   8-135  	equ	sst.aneedsize,152
                        000234   8-136  	equ	sst.stepsa,156
                        000235   8-137  	equ	sst.askipsehs,157
                        000236   8-138  	equ	sst.asearches,158
                        000237   8-139  	equ	sst.askipslevel,159
                        000240   8-140  	equ	sst.askipsinit,160
                        000241   8-141  	equ	sst.acost,161
                        000242   8-142  	equ	sst.askipslock,162
                        000243   8-143  	equ	sst.askipdius,163
                        000244   8-144  	equ	sst.alaps,164
                        000245   8-145  	equ	sst.updates,165
                        000246   8-146  	equ	sst.setfaults_all,166
                        000247   8-147  	equ	sst.setfaults_acc,167
                        000250   8-148  	equ	sst.total_bf,168
                        000251   8-149  	equ	sst.total_bf_pf,169
                        000252   8-150  	equ	sst.cpu_bf_time,170		" DOUBLE
                        000254   8-151  	equ	sst.asteps,172
                        000260   8-152  	equ	sst.ast_locked_at_time,176	" DOUBLE
                        000262   8-153  	equ	sst.ast_locked_total_time,178	" DOUBLE
                        000264   8-154  	equ	sst.ast_lock_wait_time,180	" DOUBLE
                        000266   8-155  	equ	sst.ast_locking_count,182
                        000267   8-156  	equ	sst.cleanup_count,183
                        000270   8-157  	equ	sst.cleanup_real_time,184	" DOUBLE
                        000272   8-158  	equ	sst.tree_count,186
                        000372   8-159  	equ	sst.pp_meters,250
                                 8-160  
                        000472   8-161  	equ	sst.wusedp,314		" UPPER
                                 8-162  
                        000473   8-163  	equ	sst.write_hunts,315
                        000474   8-164  	equ	sst.claim_skip_cme,316
                        000475   8-165  	equ	sst.claim_skip_free,317
                        000476   8-166  	equ	sst.claim_notmod,318
                        000477   8-167  	equ	sst.claim_passed_used,319
                        000500   8-168  	equ	sst.claim_skip_ptw,320
                        000501   8-169  	equ	sst.claim_writes,321
                        000502   8-170  	equ	sst.claim_steps,322
                        000503   8-171  	equ	sst.pre_seeks_failed,323
                        000504   8-172  	equ	sst.resurrections,324
                        000505   8-173  	equ	sst.volmap_seg_page_faults,325
                        000506   8-174  	equ	sst.oopv,326
                        000507   8-175  	equ	sst.dblw_resurrections,327
                        000510   8-176  	equ	sst.sgm_time,328		" DOUBLE
                        000512   8-177  	equ	sst.sgm_pf,330
                        000513   8-178  	equ	sst.bad_sgms,331
                        000514   8-179  	equ	sst.sgm_sgft,332
                        000515   8-180  	equ	sst.good_sgms,333
                        000516   8-181  	equ	sst.claim_runs,334
                        000517   8-182  	equ	sst.activations,335
                        000520   8-183  	equ	sst.dir_activations,336
                        000521   8-184  	equ	sst.hedge_updatevs,337
                        000522   8-185  	equ	sst.hedge_writes,338
                        000523   8-186  	equ	sst.evict_recover_data,339	" LEVEL 2
                                 8-187  
                        000523   8-188  	equ	sst.evict_ptp,339		" UPPER
                        000523   8-189  	equ	sst.evict_phmbit,339	" LOWER
                                 8-190  
                        000524   8-191  	equ	sst.force_swrites,340
                        000525   8-192  	equ	sst.force_pwrites,341
                        000526   8-193  	equ	sst.fw_none,342
                        000527   8-194  	equ	sst.force_updatevs,343
                        000530   8-195  	equ	sst.pf_unlock_ptl_time,344	" DOUBLE
                        000532   8-196  	equ	sst.pf_unlock_ptl_meterings,346
                        000533   8-197  	equ	sst.makeknown_activations,347
                        000534   8-198  	equ	sst.backup_activations,348
                        000535   8-199  	equ	sst.metering_flags,349	" LEVEL 2
                                 8-200  
                        400000   8-201  	bool	sst.activate_activated,400000	" DU
                                 8-202  
                        000536   8-203  	equ	sst.seg_fault_calls,350
                        000537   8-204  	equ	sst.stk_truncate_should_didnt,351
                        000540   8-205  	equ	sst.stk_truncate_should_did,352
                        000541   8-206  	equ	sst.stk_truncate_shouldnt_didnt,353
                        000542   8-207  	equ	sst.stk_truncate_shouldnt_did,354
                        000543   8-208  	equ	sst.stk_pages_truncated,355
                        000544   8-209  	equ	sst.stk_pages_truncated_in_core,356
                        000545   8-210  	equ	sst.segmove_lock,357	" LEVEL 2
                                 8-211  
                        000545   8-212  	equ	sst.pid,357
                        000546   8-213  	equ	sst.event,358
                                 8-214  
                        000547   8-215  	equ	sst.notify_word,359
                        400000   8-216  	bool	sst.notify,400000		" DU
                                 8-217  
                        000550   8-218  	equ	sst.segmove_io_limit,360
                        000551   8-219  	equ	sst.segmove_found_synch,361
                        000552   8-220  	equ	sst.segmove_synch_disappeared,362
                        000553   8-221  	equ	sst.segmove_n_reads,363
                        000554   8-222  	equ	sst.segmove_max_tries,364
                        000555   8-223  	equ	sst.segmove_astep,365
                        000556   8-224  	equ	sst.segmove_pvtx,366
                        000557   8-225  	equ	sst.segmove_vtocx,367
                        000560   8-226  	equ	sst.segmove_old_addr_astep,368
                        000561   8-227  	equ	sst.segmove_new_addr_astep,369
                        000562   8-228  	equ	sst.mod_during_write,370
                        000563   8-229  	equ	sst.zero_pages,371
                        000564   8-230  	equ	sst.trace_sw,372		" LEVEL 2
                                 8-231  
                        000010   8-232  	bool	sst.pc_trace_pf,000010	" DL
                        000004   8-233  	bool	sst.tty_trace,000004	" DL
                        000002   8-234  	bool	sst.pc_trace,000002		" DL
                        000001   8-235  	bool	sst.sc_trace,000001		" DL
                                 8-236  
                        000565   8-237  	equ	sst.new_pages,373
                                 8-238  
                        000566   8-239  	equ	sst.ast_track_word,374
                        400000   8-240  	bool	sst.ast_track,400000	" DU
                                 8-241  
                        000567   8-242  	equ	sst.dirlock_writebehind,375
                        000570   8-243  	equ	sst.write_limit,376
                                 8-244  
                        000571   8-245  	equ	sst.crash_test_segmove_word,377
                        400000   8-246  	bool	sst.crash_test_segmove,400000	" DU
                                 8-247  
                        000572   8-248  	equ	sst.delayed_seg_state_chg,378
                        000573   8-249  	equ	sst.audit_seg_state_chg,379
                        000574   8-250  	equ	sst.seg_state_chg_delay,380	" DOUBLE
                        000576   8-251  	equ	sst.seg_state_change_limit,382
                        000577   8-252  	equ	sst.max_seg_state_change_bw,383
                        000600   8-253  	equ	sst.audit_seg_state_change_bw,384
                        000601   8-254  	equ	sst.seg_state_chg_operation,385
                                 8-255  
                                 8-256       "END INCLUDE FILE sst.incl.alm
                                    42  	include	ptw
                                   9-1  " BEGIN INCLUDE FILE ... ptw.incl.alm ... 03/01/81, for ADP conversion
                                   9-2  
                                   9-3  	iftarget	l68	" Include whichever seems appropriate
                                        	 include	ptw.l68
                                  10-1  
                                  10-2  
                                  10-3       "BEGIN INCLUDE FILE ptw.l68.incl.alm
                                  10-4  
                                  10-5  
                                  10-6  	"Created 04/05/81  1616.0 est Sun by convert_include_file,
                                  10-7  	"   Version of 04/05/81  1606.8 est Sun.
                                  10-8  
                                  10-9  	"Made from >udd>Multics>hardcore_pool>new_pc>include>ptw.l68.incl.pl1,
                                 10-10  	"   modified 03/20/81  1815.9 est Fri
                                 10-11  
                                 10-12  "
                                 10-13  "	Structure core_ptw
                                 10-14  "
                        000026   10-15  	equ	core_ptw.frame_shift,22
                        037777   10-16  	bool	core_ptw.frame_mask,037777
                        000000   10-17  	equ	core_ptw.flags,0	" LOWER
                        000016   10-18  	equ	core_ptw.add_type_shift,14
                        000017   10-19  	bool	core_ptw.add_type_mask,000017
                        020000   10-20  	bool	core_ptw.first,020000	" DL
                        010000   10-21  	bool	core_ptw.er,010000	" DL
                        002000   10-22  	bool	core_ptw.unusable1,002000	" DL
                        001000   10-23  	bool	core_ptw.phu,001000	" DL
                        000400   10-24  	bool	core_ptw.phm1,000400	" DL
                        000200   10-25  	bool	core_ptw.nypd,000200	" DL
                        000100   10-26  	bool	core_ptw.phm,000100	" DL
                        000040   10-27  	bool	core_ptw.phu1,000040	" DL
                        000020   10-28  	bool	core_ptw.wired,000020	" DL
                        000010   10-29  	bool	core_ptw.os,000010	" DL
                        000004   10-30  	bool	core_ptw.valid,000004	" DL
                        000000   10-31  	equ	core_ptw.df_no_shift,0
                        000003   10-32  	bool	core_ptw.df_no_mask,000003
                                 10-33  
                                 10-34  "
                                 10-35  "	Structure ptw
                                 10-36  "
                        000000   10-37  	equ	ptw.add,0		" UPPER
                        000000   10-38  	equ	ptw.flags,0		" LOWER
                        000016   10-39  	equ	ptw.add_type_shift,14
                        000017   10-40  	bool	ptw.add_type_mask,000017
                        020000   10-41  	bool	ptw.first,020000	" DL
                        010000   10-42  	bool	ptw.er,010000		" DL
                        002000   10-43  	bool	ptw.unusable1,002000	" DL
                        001000   10-44  	bool	ptw.phu,001000		" DL
                        000400   10-45  	bool	ptw.phm1,000400		" DL
                        000200   10-46  	bool	ptw.nypd,000200		" DL
                        000100   10-47  	bool	ptw.phm,000100		" DL
                        000040   10-48  	bool	ptw.phu1,000040		" DL
                        000020   10-49  	bool	ptw.wired,000020	" DL
                        000010   10-50  	bool	ptw.os,000010		" DL
                        000004   10-51  	bool	ptw.valid,000004	" DL
                        000000   10-52  	equ	ptw.df_no_shift,0
                        000003   10-53  	bool	ptw.df_no_mask,000003
                                 10-54  
                                 10-55       "END INCLUDE FILE ptw.l68.incl.alm
                                        "	ifend
                                   9-6  
                                   9-7  	iftarget	adp
                                        "	 include	ptw.adp
                                        "	ifend
                                  9-10  
                                  9-11  " END INCLUDE FILE ... ptw.incl.alm
                                    43  	include	cmp
                                  11-1  "
                                  11-2  "	BEGIN INCLUDE FILE	cmp.incl.alm	October 1982
                                  11-3  "
                        000004    11-4  	equ	cme_size,4	Size of a CME
                                  11-5  
                        000000    11-6  	equ	cme.fp,0		forward pointer to next core map entry (DU)
                        000000    11-7  	equ	cme.bp,0		backward pointer to previous core map entry (DL)
                                  11-8  
                        000001    11-9  	equ	cme.devadd,1	device address of page in the core block
                        000001   11-10  	equ	cme.flags,1	word containing various flags
                        740000   11-11  	bool	cme.did_mask,740000	mask for extracting device ID from core map entry
                        010000   11-12  	bool	cme.synch_held,010000 page of synch seg held in mem (DL)
                        004000   11-13  	bool	cme.io,004000	read/write bit (DL)
                        001000   11-14  	bool	cme.er,001000	error on previous I/O
                        000400   11-15  	bool	cme.removing,000400	page is being removed
                        000200   11-16  	bool	cme.abs_w,000200	page may not be moved
                        000100   11-17  	bool	cme.abs_usable,000100 page may be assigned with fixed abs addr
                        000040   11-18  	bool	cme.notify_requested,000040 ptw event must be notified on completion
                        000010   11-19  	bool	cme.phm_hedge,000010 periodic write scheduler
                        000007   11-20  	bool	cme.contr,000007	port number of controller in which core block is located
                                 11-21  
                        000002   11-22  	equ	cme.ptwp,2	page table word pointer (DU)
                        000002   11-23  	equ	cme.astep,2	AST entry ptr (DL)
                                 11-24  
                        000003   11-25  	equ	cme.pin_counter,3	number times to skip eviction (DU)
                        000003   11-26  	equ	cme.synch_page_entryp,3 rel ptr to synch page entry
                                 11-27  	
                                 11-28  "	END INCLUDE FILE cmp.incl.alm
                                    44  	include	apte
                                  12-1  "	BEGIN INCLUDE FILE apte.incl.alm
                                  12-2  "
                                  12-3  "
                                  12-4  " HISTORY COMMENTS:
                                  12-5  "  1) change(86-08-09,Kissel), approve(86-08-12,MCR7479),
                                  12-6  "     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
                                  12-7  "     Added the ipc_r_offset, ipc_r_factor, and apad fields from the pl1
                                  12-8  "     include file to support async event channel wakeups.
                                  12-9  "                                                      END HISTORY COMMENTS
                                 12-10  
                        000000   12-11  	equ	apte.thread,0
                        000000   12-12  	equ	apte.fp,0			"UPPER
                        000000   12-13  	equ	apte.bp,0			"LOWER
                                 12-14  
                        000001   12-15  	equ	apte.flags,1
                        000001   12-16  	equ	apte.sentinel,1
                        400000   12-17  	bool	apte.mbz,400000		"DU
                        200000   12-18  	bool	apte.wakeup_waiting,200000	"DU
                        100000   12-19  	bool	apte.stop_pending,100000	"DU
                        040000   12-20  	bool	apte.pre_empted,040000	"DU
                        020000   12-21  	bool	apte.hproc,020000		"DU
                        010000   12-22  	bool	apte.loaded,010000		"DU
                        004000   12-23  	bool	apte.eligible,004000	"DU
                        002000   12-24  	bool	apte.idle,002000		"DU
                        001000   12-25  	bool	apte.interaction,001000	"DU
                        000400   12-26  	bool	apte.pre_empt_pending,000400	"DU
                        000200   12-27  	bool	apte.default_procs_required,000200 "DU
                        000100   12-28  	bool	apte.realtime_burst,000100	"DU
                        000040   12-29  	bool	apte.always_loaded,000040	"DU
                        000020   12-30  	bool	apte.dbr_loaded,000020	"DU
                        000010   12-31  	bool	apte.being_loaded,000010	"DU
                        000004   12-32  	bool	apte.shared_stack_0,000004	"DU
                        000002   12-33  	bool	apte.page_wait_flag,000002	"DU
                        000001   12-34  	bool	apte.firstsw,000001		"DU
                        000001   12-35  	equ	apte.state,1		"LOWER
                                 12-36  
                        000002   12-37  	equ	apte.page_faults,2
                                 12-38  
                        000003   12-39  	equ	apte.processid,3
                                 12-40  
                        000004   12-41  	equ	apte.te,4
                                 12-42  
                        000005   12-43  	equ	apte.ts,5
                                 12-44  
                        000006   12-45  	equ	apte.ti,6
                                 12-46  
                        000007   12-47  	equ	apte.timax,7
                                 12-48  
                        000010   12-49  	equ	apte.ipc_pointers,8
                        000010   12-50  	equ	apte.event_thread,8		"UPPER
                                 12-51  
                        000011   12-52  	equ	apte.ips_message,9
                                 12-53  
                        000012   12-54  	equ	apte.asteps,10
                        000012   12-55  	equ	apte.pds,10		"UPPER
                        000012   12-56  	equ	apte.dseg,10		"LOWER
                                 12-57  
                        000013   12-58  	equ	apte.prds,11		"UPPER
                        000013   12-59  	equ	apte.savex7,11		"LOWER
                                 12-60  
                        000014   12-61  	equ	apte.term_processid,12
                                 12-62  
                        000015   12-63  	equ	apte.lock_id,13
                        000016   12-64  	equ	apte.time_used_clock,14
                                 12-65  
                        000020   12-66  	equ	apte.wait_event,16
                                 12-67  
                        000021   12-68  	equ	apte.wct_index,17		"UPPER
                        000021   12-69  	equ	apte.flags2,17		"LOWER
                        400000   12-70  	bool	apte.prior_sched,400000	"DL
                        000023   12-71  	equ	apte.chans_offset,19
                        374000   12-72  	bool	apte.special_chans,374000	"DL
                        000021   12-73  	equ	apte.batch_word,17
                        000010   12-74  	bool	apte.batch,000010		"DL
                        000007   12-75  	bool	apte.pr_tag_mask,000007
                                 12-76  
                        000022   12-77  	equ	apte.state_change_time,18
                                 12-78  
                        000024   12-79  	equ	apte.alarm_event,20
                                 12-80  
                        000026   12-81  	equ	apte.alarm_time_thread,22	"UPPER
                        000026   12-82  	equ	apte.alarm_time,22
                                 12-83  
                        000030   12-84  	equ	apte.term_channel,24
                                 12-85  
                        000032   12-86  	equ	apte.ws_size,26
                                 12-87  
                        000033   12-88  	equ	apte.temax,27
                                 12-89  
                        000034   12-90  	equ	apte.deadline,28
                                 12-91  
                        000036   12-92  	equ	apte.lock,30
                                 12-93  
                        000037   12-94  	equ	apte.cpu_monitor,31		units = 1/1024 sec
                                 12-95  
                        000040   12-96  	equ	apte.paging_measure,32
                                 12-97  
                        000042   12-98  	equ	apte.access_authorization,34 	"DOUBLE WORD
                        400000   12-99  	bool	apte.no_ipc_check,400000	"DL
                                12-100  
                        000044  12-101  	equ	apte.dbr,36
                                12-102  
                        000046  12-103  	equ	apte.virtual_cpu_time,38
                                12-104  
                        000050  12-105  	equ	apte.ittes_sent,40
                        000051  12-106  	equ	apte.ittes_got,41
                                12-107  
                        000052  12-108  	equ	apte.current_response_state,42	" DU
                        000053  12-109  	equ	apte.number_processing,43
                        000054  12-110  	equ	apte.last_response_state_time,44
                        000056  12-111  	equ	apte.total_processing_time,46
                        000060  12-112  	equ	apte.begin_interaction_vcpu,48
                                12-113  
                        000062  12-114  	equ	apte.saved_temax,50
                        000063  12-115  	equ	apte.procs_required,51
                        776000  12-116  	bool	apte.procs_required_mask,776000	" DU
                                12-117  
                        000064  12-118  	equ	apte.ipc_r_offset,52
                        000065  12-119  	equ	apte.ipc_r_factor,53
                        000066  12-120  	equ	apte.apad,54
                                12-121  
                        000100  12-122  	equ	size_of_apt_entry,64
                                12-123  
                                12-124  "	MISC OLD DCLS.
                                12-125  
                        000013  12-126  	equ	apte.le_shift,11
                        000175  12-127  	bool	apte.timer_factor,175
                                12-128  
                                12-129  
                                12-130  "
                                12-131  "	END INCLUDE FILE apte.incl.alm
                                12-132  "
                                    45  	include	fs_dev_types
                                  13-1  " Begin include file ...... fs_dev_types.incl.alm
                                  13-2  " HISTORY COMMENTS:
                                  13-3  "  1) change(85-09-11,Fawcett), approve(85-09-11,MCR6979),
                                  13-4  "     audit(86-03-08,GDixon), install(86-03-21,MR12.0-1033):
                                  13-5  "      Support for IBM3380D.
                                  13-6  "  2) change(86-04-21,Fawcett), approve(86-04-21,MCR7383),
                                  13-7  "     audit(86-05-20,Coppola), install(86-07-18,MR12.0-1098):
                                  13-8  "     Add support for MSU3390.
                                  13-9  "  3) change(86-10-02,Fawcett), approve(86-10-02,PBF7383),
                                 13-10  "     audit(86-10-23,Farley), install(86-10-28,MR12.0-1200):
                                 13-11  "     Changed 3390 to 3381, "d338" to "3380" & "d339" to "3381".
                                 13-12  "                                                      END HISTORY COMMENTS
                                 13-13  
                                 13-14  "	Updated for NSS 4/75 by TVV
                                 13-15  "	Last modified 3/12/76 by Noel I. Morris
                                 13-16  "	Last modified 01/06/79 by Michael R. Jordan for MSS0500 support
                                 13-17  "	Last modified 4/79 by R.J.C. Kissel for MSU0501 support.
                                 13-18  "	Last modified 4/84 by P. K. Farley for FIPS 3380 support.
                                 13-19  "	Last modified 12/84 by P. K. Farley for FIPS 3380 (512wd) support.
                                 13-20  "	Last modified 1/85 by P. K. Farley to decrease the size of the
                                 13-21  "	3380, until the volmap and record stock can be expanded.
                                 13-22  "	Last modified 9/13/85 byu RAF for 3381
                                 13-23  	
                        000001   13-24  	equ	bulkdevt,1
                        000002   13-25  	equ	msu0500devt,2
                        000003   13-26  	equ	msu0451devt,3
                        000003   13-27  	equ	msu0450devt,3
                        000004   13-28  	equ	msu0400devt,4
                        000004   13-29  	equ	dsu191devt,4
                        000005   13-30  	equ	dsu190devt,5
                        000006   13-31  	equ	dsu181devt,6
                        000007   13-32  	equ	msu0501devt,7
                        000010   13-33  	equ	fips3380devt,8
                        000011   13-34  	equ	fips3381devt,9
    000000                       13-35  fs_dev.models:
    000000  aa  142 165 154 153  13-36  	aci	"bulk"		Bulk
    000001  aa   000000 000764   13-37  	dec	500		MSU0500
    000002  aa   000000 000703   13-38  	dec	451		MSU0451
    000003  aa   000000 000702   13-39  	dec	450		MSU0450
    000004  aa   000000 000620   13-40  	dec	400		MSU0400
    000005  aa   000000 000622   13-41  	dec	402		MSU0402
    000006  aa   000000 000277   13-42  	dec	191		DSU191
    000007  aa   000000 000276   13-43  	dec	190		DSU190
    000010  aa   000000 000265   13-44  	dec	181		DSU181
    000011  aa   000000 000765   13-45  	dec	501		MSU0501
    000012  aa   000000 006464   13-46  	dec	3380		FIPS 3380
    000013  aa   000000 006465   13-47            dec       3381		FIPS 3381
                        000014   13-48  	equ	fs_dev.n_models,*-fs_dev.models
                                 13-49  
    000014                       13-50  fs_dev.modelx:
    000014  aa   000000 000001   13-51  bulk_dvt:	dec	1		Bulk
    000015  aa   000000 000002   13-52  	dec	2		MSU0500
    000016  aa   000000 000003   13-53  	dec	3		MSU0451
    000017  aa   000000 000003   13-54  	dec	3		MSU0450
    000020  aa   000000 000004   13-55  	dec	4		MSU0400
    000021  aa   000000 000004   13-56  	dec	4		MSU0402
    000022  aa   000000 000004   13-57  	dec	4		DSU191
    000023  aa   000000 000005   13-58  	dec	5		DSU190
    000024  aa   000000 000006   13-59  	dec	6		DSU181
    000025  aa   000000 000007   13-60  	dec	7		MSU0501
    000026  aa   000000 000010   13-61  	dec	8		FIPS 3380
    000027  aa   000000 000011   13-62  	dec	9		FIPS 3381
                                 13-63  
                        000011   13-64  	equ	fs_dev.max_dev_type,9
                                 13-65  
    000030                       13-66  fs_dev.dev_type_names:
    000030  aa  142 165 154 153  13-67  	aci	"bulk"
    000031  aa  144 065 060 060  13-68  	aci	"d500"
    000032  aa  144 064 065 061  13-69  	aci	"d451"
    000033  aa  144 064 060 060  13-70  	aci	"d400"
    000034  aa  144 061 071 060  13-71  	aci	"d190"
    000035  aa  144 061 070 061  13-72  	aci	"d181"
    000036  aa  144 065 060 061  13-73  	aci	"d501"
    000037  aa  063 063 070 060  13-74  	aci	"3380"
    000040  aa  063 063 070 061  13-75  	aci	"3381"
    000041                       13-76  fs_dev.media_removable:
    000041  aa   000000 000000   13-77  	oct	0		Bulk
    000042  aa   000000 000000   13-78  	oct	0		MSU0500
    000043  aa   400000 000000   13-79  	oct	400000000000	MSU0451
    000044  aa   400000 000000   13-80  	oct	400000000000	MSU0400
    000045  aa   400000 000000   13-81  	oct	400000000000	DSU190
    000046  aa   400000 000000   13-82  	oct	400000000000	DSU181
    000047  aa   000000 000000   13-83  	oct	0		MSU0501
    000050  aa   000000 000000   13-84  	oct	0		FIPS 3380
    000051  aa   000000 000000   13-85  	oct	0		FIPS 3381
                                 13-86  
                                 13-87  " Following data items are hardware constants
                                 13-88  
    000052                       13-89  fs_dev.sect_per_dev:
    000052  aa   000017 204400   13-90  	vfd	36/4000000	Bulk
    000053  aa   000002 270220   13-91  	vfd	36/814*40*19	MSU0500
    000054  aa   000002 270220   13-92  	vfd	36/814*40*19	MSU0450
    000055  aa   000001 140460   13-93  	vfd	36/410*40*19	MSU0400
    000056  aa   000000 727522   13-94  	vfd	36/410*31*19	DSU190
    000057  aa   000000 216020   13-95  	vfd	36/202*18*20	DSU181
    000060  aa   000004 064000   13-96  	vfd	36/840*64*20	MSU0501
    000061  aa   000000 670613   13-97  	vfd	36/885*255	FIPS 3380
    000062  aa   000001 561426   13-98  	vfd	36/1770*255	FIPS 3381
                                 13-99  
                                13-100  
    000063                      13-101  fs_dev.track_per_cyl:
    000063  aa   000000 000001  13-102  	vfd	36/1		Bulk
    000064  aa   000000 000023  13-103  	vfd	36/19		MSU0500
    000065  aa   000000 000023  13-104  	vfd	36/19		MSU0450
    000066  aa   000000 000023  13-105  	vfd	36/19		MSU0400
    000067  aa   000000 000023  13-106  	vfd	36/19		DSU190
    000070  aa   000000 000024  13-107  	vfd	36/20		DSU181
    000071  aa   000000 000024  13-108  	vfd	36/20		MSU0501
    000072  aa   000000 000017  13-109  	vfd	36/15		FIPS 3380
    000073  aa   000000 000017  13-110  	vfd	36/15		FIPS 3381
    000074                      13-111  fs_dev.cyl_per_dev:
    000074  aa   000000 000000  13-112  	vfd	36/0		Bulk
    000075  aa   000000 001456  13-113  	vfd	36/814		MSU0500
    000076  aa   000000 001456  13-114  	vfd	36/814		MSU0450
    000077  aa   000000 000632  13-115  	vfd	36/410		MSU0400
    000100  aa   000000 000632  13-116  	vfd	36/410		DSU190
    000101  aa   000000 000312  13-117  	vfd	36/202		DSU181
    000102  aa   000000 001510  13-118  	vfd	36/840		MSU0501
    000103  aa   000000 001565  13-119  	vfd	36/885		FIPS 3380
    000104  aa   000000 003352  13-120  	vfd	36/1770		FIPS 3381
                                13-121  
    000105                      13-122  fs_dev.sect_per_cyl:
    000105  aa   000017 204400  13-123  	vfd	36/4000000	Bulk
    000106  aa   000000 001370  13-124  	vfd	36/40*19		MSU0500
    000107  aa   000000 001370  13-125  	vfd	36/40*19		MSU0450
    000110  aa   000000 001370  13-126  	vfd	36/40*19		MSU0400
    000111  aa   000000 001115  13-127  	vfd	36/31*19		DSU190
    000112  aa   000000 000550  13-128  	vfd	36/18*20		DSU181
    000113  aa   000000 002400  13-129  	vfd	36/64*20		MSU0501
    000114  aa   000000 000377  13-130  	vfd	36/255		FIPS 3380
    000115  aa   000000 000377  13-131  	vfd	36/255		FIPS 3381
                                13-132  
    000116                      13-133  fs_dev.sect_per_track:
    000116  aa   000000 000001  13-134  	vfd	36/1		Bulk
    000117  aa   000000 000050  13-135  	vfd	36/40		MSU0500
    000120  aa   000000 000050  13-136  	vfd	36/40		MSU0450
    000121  aa   000000 000050  13-137  	vfd	36/40		MSU0400
    000122  aa   000000 000037  13-138  	vfd	36/31		DSU190
    000123  aa   000000 000022  13-139  	vfd	36/18		DSU181
    000124  aa   000000 000100  13-140  	vfd	36/64		MSU0501
    000125  aa   000000 000210  13-141  	vfd	36/136		FIPS 3380 	" 8 * 17 = 136
    000126  aa   000000 000210  13-142  	vfd	36/136		FIPS 3381		" 8 * 17 = 136
                                13-143  
                                13-144  " The following figures depend on the Multics conventional definition of "record"
                                13-145  " A record consists of sectors with consecutive addresses ON THE SAME CYLINDER.
                                13-146  " This means that there can be a "gap" at the end of each cylinder (i.e., sectors in no record).
                                13-147  
    000127                      13-148  fs_dev.mult_sect_per_cyl:
    000127  aa   000000 100000  13-149  	vfd	36/2048*16	Bulk
    000130  aa   000000 001360  13-150  	vfd	36/40*19/16*16	MSU0500
    000131  aa   000000 001360  13-151  	vfd	36/40*19/16*16	MSU0450
    000132  aa   000000 001360  13-152  	vfd	36/40*19/16*16	MSU0400
    000133  aa   000000 001100  13-153  	vfd	36/31*19/16*16	DSU190
    000134  aa   000000 000540  13-154  	vfd	36/18*20/16*16	DSU181
    000135  aa   000000 002400  13-155  	vfd	36/64*20/16*16	MSU0501
    000136  aa   000000 003760  13-156  	vfd	36/136*15/16*16	FIPS 3380		" 8 * 17 = 136
    000137  aa   000000 003760  13-157  	vfd	36/136*15/16*16	FIPS 3381
                                13-158  	
    000140                      13-159  fs_dev.rem_per_cyl:		" Size of gap
    000140  aa   000000 000000  13-160  	vfd	36/0			Bulk
    000141  aa   000000 000010  13-161  	vfd	36/(40*19)-(40*19/16*16)	MSU0500
    000142  aa   000000 000010  13-162  	vfd	36/(40*19)-(40*19/16*16)	MSU0450
    000143  aa   000000 000010  13-163  	vfd	36/(40*19)-(40*19/16*16)	MSU0400
    000144  aa   000000 000015  13-164  	vfd	36/(31*19)-(31*19/16*16)	DSU190
    000145  aa   000000 000010  13-165  	vfd	36/(18*20)-(18*20/16*16)	DSU181
    000146  aa   000000 000000  13-166  	vfd	36/(64*20)-(64*20/16*16)	MSU0501
    000147  aa   000000 000010  13-167  	vfd	36/(136*15)-(136*15/16*16)	FIPS 3380 " 8 * 17 = 136
    000150  aa   000000 000010  13-168  	vfd	36/(136*15)-(136*15/16*16)	FIPS 3381 " 8 * 17 = 136
                                13-169  
    000151                      13-170  fs_dev.rec_per_dev:
    000151  aa   000000 004000  13-171  	vfd	36/2048		Bulk	 2048.
    000152  aa   000000 112562  13-172  	vfd	36/(40*19/16)*814	MSU0500	38258.
    000153  aa   000000 112562  13-173  	vfd	36/(40*19/16)*814	MSU0450	38258.
    000154  aa   000000 045506  13-174  	vfd	36/(40*19/16)*410	MSU0400	19270.
    000155  aa   000000 034650  13-175  	vfd	36/(31*19/16)*410	DSU190	14760.
    000156  aa   000000 010534  13-176  	vfd	36/(18*20/16)*202	DSU181	 4444.
    000157  aa   000000 203200  13-177  	vfd	36/(64*20/16)*840	MSU0501	67200.
    000160  aa   000000 333413  13-178  	vfd	36/(136*15/16)*885	FIPS 3380	112395.
    000161  aa   000000 667026  13-179  	vfd	36/(136*15/16)*1770	FIPS 3381	224790.
    000162                      13-180  fs_dev.amaxio:
    000162  aa   000000 004000  13-181  	vfd	36/2048		For bulk store.
    000163  aa   000000 000057  13-182  	vfd	36/40*19/16	MSU0500
    000164  aa   000000 000057  13-183  	vfd	36/40*19/16	MSU0450
    000165  aa   000000 000057  13-184  	vfd	36/40*19/16	MSU0400
    000166  aa   000000 000044  13-185  	vfd	36/31*19/16	DSU190
    000167  aa   000000 000026  13-186  	vfd	36/18*20/16	DSU181
    000170  aa   000000 000120  13-187  	vfd	36/64*20/16	MSU0501
    000171  aa   000000 000177  13-188  	vfd	36/136*15/16	FIPS 3380		" 8 * 17 = 136
    000172  aa   000000 000177  13-189  	vfd	36/136*15/16	FIPS 3381
                                13-190  " End of include file ...... fs_dev_types.incl.alm
                                13-191  
                                    46  "
                                    47  
    000173                          48  	name	device_control
                                    49  
                        000204      50  	segdef	dev_read,dev_write,time_out,run,init,pwait,esd_reset
                        000330      51  	segdef	disk_offlinep
                        000277      52  	entry	ptl_waitlock
                        000354      53  	segdef	check_ckdv,ckdv_from_pvtx
                        000301      54  	entry	pwait_return
                                    55  " 
    000173                          56  init:
    000173  aa   000300 6270 00     57  	push	"gonna call out.
    000174  aa  7 00040 2721 20
    000175  aa  0 00002 2361 20     58  	ldq	ap|2,*	get pvtx
    000176  aa  6 00172 7561 00     59  	stq	pvtx
                                    60  
    000177  0a   000335 7000 00     61  	tsx0	get_device_type	get from pvt
                                    62  
    000200  4a  4 00012 3521 20     63  	short_call disk_init$disk_init(ap|0)
    000201  aa  7 00036 6701 20
    000202  aa  6 00030 3701 20
    000203  aa  7 00042 7101 20     64  	return
                                    65  
                                    66  
                                    67  
    000204                          68  esd_reset:		"this entry is called to flush out all dim I/O reqs.
                                    69  			" note this works elegantly at ESD time, but does not
                                    70  			"extend easily to fault recover time.
    000204  aa   000300 6270 00     71  	push		"for callouts
    000205  aa  7 00040 2721 20
    000206  4a  4 00014 3535 20     72  	epp	sst,sst$
    000207  aa  3 00020 4501 00     73  	stz	sst|sst.ptl	somebody has to do this.
    000210  4a  4 00016 3521 20     74  	short_call disk_control$esd_reset_locks
    000211  aa  7 00036 6701 20
    000212  aa  6 00030 3701 20
                                    75  
    000213  4a  4 00020 7071 20     76  	tsx7	core_queue_man$clearout
    000214  aa  7 00042 7101 20     77  	return
                                    78  
                                    79  
    000215                          80  dev_read:
    000215  0a   000335 7000 00     81  	tsx0	get_device_type	get it from pvt
    000216  4a  4 00022 0541 20     82  	aos	sst$+sst.reads-1,al
                                    83  
                                    84  
    000217  4a  4 00024 3501 20     85  	eppap	dctl$disk_read
    000220  0a   000225 7100 00     86  	tra	call_join		go call the dim
                                    87  
    000221                          88  dev_write:
    000221  0a   000335 7000 00     89  	tsx0	get_device_type
    000222  4a  4 00026 0541 20     90  	aos	sst$+sst.writes-1,al
    000223  4a  4 00030 0541 20     91  	aos	sst$+sst.wtct
                                    92  
    000224  4a  4 00032 3501 20     93  	eppap	dctl$disk_write
                                    94  
    000225                          95  call_join:
    000225  aa  6 00177 3521 00     96  	eppbp	inter		pick up flag saying to interrupt
    000226  aa  6 00116 2521 00     97  	spribp	arg+8
    000227  aa  6 00172 3521 00     98  	eppbp	pvtx
    000230  aa  6 00110 2521 00     99  	spribp	arg+2
    000231  aa  6 00173 3521 00    100  	eppbp	core_add
    000232  aa  6 00112 2521 00    101  	spribp	arg+4
    000233  aa  6 00200 3521 00    102  	eppbp	devadd
    000234  aa  6 00114 2521 00    103  	spribp	arg+6
    000235  aa   020000 4310 07    104  	fld	=4b24,dl		4 arguments
    000236  aa   000004 2750 07    105  	ora	4,dl		all arg acceptable to PL1
    000237  aa  6 00106 7571 00    106  	staq	arg
    000240  aa  0 00000 3521 00    107  	eppbp	ap|0		can't use ap to call
    000241  aa  6 00000 2541 00    108  	call	bp|0(arg)
    000242  aa  6 00106 3501 00
    000243  aa  2 00000 3521 00
    000244  aa  6 00040 7531 00
    000245  aa  7 00036 6701 20
    000246  aa  6 00000 1731 00
    000247  aa  6 00040 0731 00
    000250  4a  4 00034 3521 20    109  	eppbp	sst$+0,2		restore bp to point into SST
    000251  aa  2 00000 3531 00    110  	epbpbb	bp|0		restore bb to point to base of sst
    000252  aa   000000 7100 17    111  	tra	0,7
                                   112  
                                   113  
                                   114  
                                   115  
    000253                         116  pwait:			"entry to wait for any page control event
    000253  aa   000300 6270 00    117  push:	push		"no more  frame-avoiding m-mouse
    000254  aa  7 00040 2721 20
    000255  4a  4 00036 7061 20    118  	tsx6	page_fault$init_savex_bb
    000256                         119  pwait_retry:
    000256  aa  0 00002 2351 20    120  	lda	ap|2,*		get event in a
    000257  aa   777777 3150 03    121  	cana	-1,du		global event?
    000260  0a   000272 6010 00    122  	tnz	await_tc
                                   123  
    000261  aa   000022 7350 00    124  	als	18		move to upper
    000262  aa  3 00000 2351 01    125  	lda	sst|0,au		get ptw
    000263  aa   000010 3150 07    126  	cana	ptw.os,dl		see if event still there
    000264  0a   000304 6000 00    127  	tze	.ret_long		return if no longer o/s
    000265  aa   000002 7710 00    128  	arl	2		get core map index
    000266  aa   000001 6350 01    129  	eaa	cme.devadd,au	set to get devadd
    000267  aa   000040 2360 07    130  	ldq	cme.notify_requested,dl set notify bit in cme
    000270  aa  3 00054 2561 61    131  	orsq	sst|sst.cmp,*au	.. as we came here to wait.
    000271  aa  3 00054 2351 61    132  	lda	sst|sst.cmp,*au	get devadd word
                                   133  
    000272                         134  await_tc:
    000272  aa  0 00002 2351 20    135  	lda	ap|2,*		get argument
    000273  4a  4 00040 3501 20    136  	eppap	pds$apt_ptr,*	get apt ptr
    000274  aa  0 00020 7551 00    137  	sta	ap|apte.wait_event	put it where it can get notified.
                                   138  
    000275  4a  4 00042 7071 20    139  	tsx7	page_fault$unlock_ptl
                                   140  				"clear postqueue, perhaps notify
                                   141  
                                   142  
    000276  4a  4 00044 7101 20    143  	tra	pxss$waitp
                                   144  
    000277                         145  ptl_waitlock:			"contract of this entry:
                                   146  		" 1. Who tras to me is in his stack frame, with its own return ptr valid.
                                   147  		" 2. Who tras to me has masked to sys_level and wired the (pds) stack.
                                   148  		" 3. I shall execute a full Multics return (to prev frame) when
                                   149  		"    and only when I have the PTL locked.
                                   150  
                                   151  		"It is NOT necessary to stx6 init_savex here.
                                   152  
    000277  aa   000300 6270 00    153  	push		"Establish page control frame.
    000300  aa  7 00040 2721 20
    000301                         154  pwait_return:
    000301  4a  4 00014 3535 20    155  	epp3	sst$		don't forget!
    000302  4a  4 00046 7071 20    156  	tsx7	core_queue_man$trylock_ptl
    000303  4a  4 00050 7101 20    157  	 tra	pxss$dvctl_retry_ptlwait
                                   158  			"patch to tra *-1 if too obscure
                                   159  
    000304  aa  7 00042 7101 20    160  .ret_long:return
                                   161  
                                   162  
                                   163  
    000305                         164  time_out:				"entry to call to make sure disks havn't stopped
    000305  aa   000300 6270 00    165  	save
    000306  aa  7 00040 2721 20
    000307  4a  4 00052 7071 20    166  	tsx7	page_fault$lock_ptl	lock the page table lock
    000310  4a  4 00054 7061 20    167  	tsx6	page_fault$init_savex  init x7 save stack
    000311  0a   000314 7070 00    168  	tsx7	run		call run on each device
    000312  4a  4 00042 7071 20    169  	tsx7	page_fault$unlock_ptl  unlock the page table lock
    000313  aa  7 00042 7101 20    170  	return
                                   171  
    000314                         172  run:
    000314  4a  4 00056 7061 20    173  	tsx6	page_fault$savex
    000315  4a  4 00060 7071 20    174  	tsx7	core_queue_man$run_core_queue
    000316  4a  4 00062 7061 20    175  	tsx6	pc_trace$running	trace the fact that we called run
                                   176  
    000317  0a   000372 3500 00    177  	eppap	=v18/0,18/4,18/0,18/0
    000320  aa  6 00000 2541 00    178  	call	disk_control$disk_run
    000321  0a   000374 3500 00
    000322  4a  4 00010 3521 20
    000323  aa  6 00040 7531 00
    000324  aa  7 00036 6701 20
    000325  aa  6 00000 1731 00
    000326  aa  6 00040 0731 00
    000327  4a  4 00064 7101 20    179  	tra	page_fault$unsavex
                                   180  
                                   181  
                                   182  
    000330                         183  disk_offlinep:
    000330  0a   000335 7000 00    184  	tsx0	get_device_type
    000331  aa  5 00004 2351 00    185  	lda	lb|pvte.device_inoperative_word
    000332  aa   002000 3150 07    186  	cana	pvte.device_inoperative,dl
    000333  aa   000001 6000 17    187  	tze	1,7
    000334  aa   000000 7100 17    188  	tra	0,7
                                   189  
    000335                         190  get_device_type:
    000335  aa  6 00172 2361 00    191  	ldq	pvtx
    000336  4a  4 00066 6045 20    192  	tmoz	page_error$bad_device_id
    000337  aa   000034 4020 07    193  	mpy	pvte_size,dl	index the pvt
    000340  4a  4 00070 3715 20    194  	epplb	pvt$array
    000341  aa  5 77744 3715 06    195  	epplb	lb|-pvte_size,ql	address the PVTE
    000342  aa  5 00004 2351 00    196  	lda	lb|pvte.device_type_word
    000343  aa   000033 7710 00    197  	arl	pvte.device_type_shift
    000344  4a  4 00066 6001 20    198  	tze	page_error$bad_device_id
    000345  aa   000011 1150 07    199  	cmpa	fs_dev.max_dev_type,dl
    000346  4a  4 00066 6055 20    200  	tpnz	page_error$bad_device_id
    000347  aa   000000 7100 10    201  	tra	0,0
                                   202  
                                   203  
                                   204  
    000350                         205  check_ckdv:
    000350  4a  4 00072 2351 20    206  	lda	page_fault$cme_devadd,*4 what device is this?
    000351  aa  3 00004 2351 13    207  	lda	ast|aste.pvtx_word,3
    000352  aa   000022 7710 00    208  	arl	aste.pvtx_shift
    000353  aa   000777 3750 07    209  	ana	aste.pvtx_mask,dl	get disk's pvtx
    000354                         210  ckdv_from_pvtx:
    000354  aa   000044 7730 00    211  	lrl	36		move to x
    000355  aa   000034 4020 07    212  	mpy	pvte_size,dl
    000356  4a  4 00070 3501 20    213  	eppap	pvt$array
    000357  aa  0 77744 3501 06    214  	eppap	ap|-pvte_size,ql	address the PVTE
    000360  aa  0 00004 2351 00    215  	lda	ap|pvte.check_read_incomplete_word
    000361  aa   004000 3150 07    216  	cana	pvte.check_read_incomplete,dl are we checking this dev?
    000362  aa   000000 6010 17    217  	tnz	0,7
    000363  aa   000001 7100 17    218  	tra	1,7		no
                                   219  	end
ENTRY SEQUENCES
     
    000364  5a   000036 0000 00
    000365  aa  7 00046 2721 20
    000366  0a   000277 7100 00
    000367  5a   000012 0000 00
    000370  aa  7 00046 2721 20
    000371  0a   000301 7100 00
LITERALS
     
    000372  aa   000000 000004 
    000373  aa   000000 000000 
    000374  aa   000000 000000 
    000375  aa   000000 000000 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000376  5a   000003 000000 
    000377  5a   000131 600000 
    000400  aa   000000 000000 
    000401  55   000012 000002 
    000402  5a   000002 400003 
    000403  55   000006 000012 
    000404  aa  016 144 145 166
    000405  aa  151 143 145 137
    000406  aa  143 157 156 164
    000407  aa  162 157 154 000
    000410  55   000021 000003 
    000411  0a   000370 500000 
    000412  55   000015 000003 
    000413  aa  014 160 167 141         pwait_return
    000414  aa  151 164 137 162
    000415  aa  145 164 165 162
    000416  aa  156 000 000 000
    000417  55   000030 000012 
    000420  0a   000354 400000 
    000421  55   000024 000003 
    000422  aa  016 143 153 144         ckdv_from_pvtx
    000423  aa  166 137 146 162
    000424  aa  157 155 137 160
    000425  aa  166 164 170 000
    000426  55   000036 000021 
    000427  0a   000350 400000 
    000430  55   000033 000003 
    000431  aa  012 143 150 145         check_ckdv
    000432  aa  143 153 137 143
    000433  aa  153 144 166 000
    000434  55   000045 000030 
    000435  0a   000365 500000 
    000436  55   000041 000003 
    000437  aa  014 160 164 154         ptl_waitlock
    000440  aa  137 167 141 151
    000441  aa  164 154 157 143
    000442  aa  153 000 000 000
    000443  55   000054 000036 
    000444  0a   000330 400000 
    000445  55   000050 000003 
    000446  aa  015 144 151 163         disk_offlinep
    000447  aa  153 137 157 146
    000450  aa  146 154 151 156
    000451  aa  145 160 000 000
    000452  55   000062 000045 
    000453  0a   000204 400000 
    000454  55   000057 000003 
    000455  aa  011 145 163 144         esd_reset
    000456  aa  137 162 145 163
    000457  aa  145 164 000 000
    000460  55   000067 000054 
    000461  0a   000253 400000 
    000462  55   000065 000003 
    000463  aa  005 160 167 141         pwait
    000464  aa  151 164 000 000
    000465  55   000074 000062 
    000466  0a   000173 400000 
    000467  55   000072 000003 
    000470  aa  004 151 156 151         init
    000471  aa  164 000 000 000
    000472  55   000100 000067 
    000473  0a   000314 400000 
    000474  55   000077 000003 
    000475  aa  003 162 165 156         run
    000476  55   000106 000074 
    000477  0a   000305 400000 
    000500  55   000103 000003 
    000501  aa  010 164 151 155         time_out
    000502  aa  145 137 157 165
    000503  aa  164 000 000 000
    000504  55   000114 000100 
    000505  0a   000221 400000 
    000506  55   000111 000003 
    000507  aa  011 144 145 166         dev_write
    000510  aa  137 167 162 151
    000511  aa  164 145 000 000
    000512  55   000122 000106 
    000513  0a   000215 400000 
    000514  55   000117 000003 
    000515  aa  010 144 145 166         dev_read
    000516  aa  137 162 145 141
    000517  aa  144 000 000 000
    000520  55   000002 000114 
    000521  6a   000000 400002 
    000522  55   000125 000003 
    000523  aa  014 163 171 155         symbol_table
    000524  aa  142 157 154 137
    000525  aa  164 141 142 154
    000526  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000527  aa   000000 000033 
    000530  5a   000106 000000 
    000531  5a   000114 000000 
    000532  aa   000000 000000 
    000533  aa   000000 000000 
    000534  5a   000062 000000 
    000535  5a   000030 000000 
    000536  5a   000100 000000 
    000537  aa   000000 000000 
    000540  aa   000000 000000 
    000541  aa   000000 000000 
    000542  5a   000122 000000 
    000543  5a   000036 000000 
    000544  aa   000000 000000 
    000545  aa   000000 000000 
    000546  aa   000000 000000 
    000547  5a   000067 000000 
    000550  5a   000045 000000 
    000551  aa   000000 000000 
    000552  aa   000000 000000 
    000553  aa   000000 000000 
    000554  aa   000000 000000 
    000555  aa   000000 000000 
    000556  aa   000000 000000 
    000557  5a   000054 000000 
    000560  5a   000012 000000 
    000561  5a   000021 000000 
    000562  5a   000074 000000 

EXTERNAL NAMES

    000563  aa  012 143 155 145         cme_devadd
    000564  aa  137 144 145 166
    000565  aa  141 144 144 000
    000566  aa  005 141 162 162         array
    000567  aa  141 171 000 000
    000570  aa  003 160 166 164         pvt
    000571  aa  015 142 141 144         bad_device_id
    000572  aa  137 144 145 166
    000573  aa  151 143 145 137
    000574  aa  151 144 000 000
    000575  aa  012 160 141 147         page_error
    000576  aa  145 137 145 162
    000577  aa  162 157 162 000
    000600  aa  007 165 156 163         unsavex
    000601  aa  141 166 145 170
    000602  aa  007 162 165 156         running
    000603  aa  156 151 156 147
    000604  aa  010 160 143 137         pc_trace
    000605  aa  164 162 141 143
    000606  aa  145 000 000 000
    000607  aa  016 162 165 156         run_core_queue
    000610  aa  137 143 157 162
    000611  aa  145 137 161 165
    000612  aa  145 165 145 000
    000613  aa  005 163 141 166         savex
    000614  aa  145 170 000 000
    000615  aa  012 151 156 151         init_savex
    000616  aa  164 137 163 141
    000617  aa  166 145 170 000
    000620  aa  010 154 157 143         lock_ptl
    000621  aa  153 137 160 164
    000622  aa  154 000 000 000
    000623  aa  023 144 166 143         dvctl_retry_ptlwait
    000624  aa  164 154 137 162
    000625  aa  145 164 162 171
    000626  aa  137 160 164 154
    000627  aa  167 141 151 164
    000630  aa  013 164 162 171         trylock_ptl
    000631  aa  154 157 143 153
    000632  aa  137 160 164 154
    000633  aa  005 167 141 151         waitp
    000634  aa  164 160 000 000
    000635  aa  004 160 170 163         pxss
    000636  aa  163 000 000 000
    000637  aa  012 165 156 154         unlock_ptl
    000640  aa  157 143 153 137
    000641  aa  160 164 154 000
    000642  aa  007 141 160 164         apt_ptr
    000643  aa  137 160 164 162
    000644  aa  003 160 144 163         pds
    000645  aa  015 151 156 151         init_savex_bb
    000646  aa  164 137 163 141
    000647  aa  166 145 170 137
    000650  aa  142 142 000 000
    000651  aa  012 160 141 147         page_fault
    000652  aa  145 137 146 141
    000653  aa  165 154 164 000
    000654  aa  012 144 151 163         disk_write
    000655  aa  153 137 167 162
    000656  aa  151 164 145 000
    000657  aa  011 144 151 163         disk_read
    000660  aa  153 137 162 145
    000661  aa  141 144 000 000
    000662  aa  004 144 143 164         dctl
    000663  aa  154 000 000 000
    000664  aa  010 143 154 145         clearout
    000665  aa  141 162 157 165
    000666  aa  164 000 000 000
    000667  aa  016 143 157 162         core_queue_man
    000670  aa  145 137 161 165
    000671  aa  145 165 145 137
    000672  aa  155 141 156 000
    000673  aa  017 145 163 144         esd_reset_locks
    000674  aa  137 162 145 163
    000675  aa  145 164 137 154
    000676  aa  157 143 153 163
    000677  aa  003 163 163 164         sst
    000700  aa  011 144 151 163         disk_init
    000701  aa  153 137 151 156
    000702  aa  151 164 000 000
    000703  aa  010 144 151 163         disk_run
    000704  aa  153 137 162 165
    000705  aa  156 000 000 000
    000706  aa  014 144 151 163         disk_control
    000707  aa  153 137 143 157
    000710  aa  156 164 162 157
    000711  aa  154 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000712  aa   000004 000000 
    000713  55   000253 000165 
    000714  aa   000004 000000 
    000715  55   000172 000170 
    000716  aa   000004 000000 
    000717  55   000177 000173 
    000720  aa   000004 000000 
    000721  55   000253 000202 
    000722  aa   000004 000000 
    000723  55   000206 000204 
    000724  aa   000004 000000 
    000725  55   000271 000211 
    000726  aa   000004 000000 
    000727  55   000253 000215 
    000730  aa   000004 000000 
    000731  55   000253 000217 
    000732  aa   000004 000000 
    000733  55   000253 000222 
    000734  aa   000004 000000 
    000735  55   000237 000225 
    000736  aa   000004 000000 
    000737  55   000271 000232 
    000740  aa   000004 000000 
    000741  55   000237 000235 
    000742  aa   000004 000000 
    000743  55   000253 000241 
    000744  aa   000004 000000 
    000745  55   000246 000244 
    000746  aa   000004 000000 
    000747  55   000253 000247 
    000750  aa   000004 000000 
    000751  55   000264 000256 
    000752  aa   000004 000000 
    000753  55   000264 000261 
    000754  aa   000004 000000 
    000755  55   000271 000266 
    000756  aa   000004 000000 
    000757  55   000310 000275 
    000760  aa   000003 000000 
    000761  5a   000301 000000 
    000762  aa   000004 000000 
    000763  55   000302 000302 
    000764  aa   000004 000000 
    000765  55   000310 000305 
    000766  aa   000001 000000 
    000767  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000770  5a   000314 000000 
    000771  5a   000316 000000 
    000772  5a   000320 000000 
    000773  5a   000322 000000 
    000774  5a   000324 000000 
    000775  5a   000326 000000 
    000776  5a   000330 000000 
    000777  5a   000332 000000 
    001000  5a   000334 000000 
    001001  5a   000336 000000 
    001002  5a   000340 000000 
    001003  5a   000342 000000 
    001004  5a   000344 000000 
    001005  5a   000346 000000 
    001006  5a   000350 000000 
    001007  5a   000352 000000 
    001010  5a   000362 000057 
    001011  5a   000362 000142 
    001012  5a   000354 000000 
    001013  5a   000362 000132 
    001014  5a   000356 000000 
    001015  5a   000360 000000 
    001016  5a   000362 000000 
    001017  5a   000364 000000 
    001020  5a   000366 000000 
    001021  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000376 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000074 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         disk_control|disk_run
    000011  5a   000422 0000 00
    000012  9a   777766 0000 46         disk_init|disk_init
    000013  5a   000421 0000 00
    000014  9a   777764 0000 46         sst|       
    000015  5a   000420 0000 00
    000016  9a   777762 0000 46         disk_control|esd_reset_locks
    000017  5a   000417 0000 00
    000020  9a   777760 0000 46         core_queue_man|clearout
    000021  5a   000416 0000 00
    000022  9a   777756 0000 46         sst|       
    000023  5a   000415 0000 05
    000024  9a   777754 0000 46         dctl|disk_read
    000025  5a   000414 0000 00
    000026  9a   777752 0000 46         sst|       
    000027  5a   000413 0000 05
    000030  9a   777750 0000 46         sst|       
    000031  5a   000412 0000 00
    000032  9a   777746 0000 46         dctl|disk_write
    000033  5a   000411 0000 00
    000034  9a   777744 0000 46         sst|       
    000035  5a   000420 0000 12
    000036  9a   777742 0000 46         page_fault|init_savex_bb
    000037  5a   000410 0000 00
    000040  9a   777740 0000 46         pds|apt_ptr
    000041  5a   000407 0000 20
    000042  9a   777736 0000 46         page_fault|unlock_ptl
    000043  5a   000406 0000 00
    000044  9a   777734 0000 46         pxss|waitp
    000045  5a   000405 0000 00
    000046  9a   777732 0000 46         core_queue_man|trylock_ptl
    000047  5a   000404 0000 00
    000050  9a   777730 0000 46         pxss|dvctl_retry_ptlwait
    000051  5a   000403 0000 00
    000052  9a   777726 0000 46         page_fault|lock_ptl
    000053  5a   000402 0000 00
    000054  9a   777724 0000 46         page_fault|init_savex
    000055  5a   000401 0000 00
    000056  9a   777722 0000 46         page_fault|savex
    000057  5a   000400 0000 00
    000060  9a   777720 0000 46         core_queue_man|run_core_queue
    000061  5a   000377 0000 00
    000062  9a   777716 0000 46         pc_trace|running
    000063  5a   000376 0000 00
    000064  9a   777714 0000 46         page_fault|unsavex
    000065  5a   000375 0000 00
    000066  9a   777712 0000 46         page_error|bad_device_id
    000067  5a   000374 0000 00
    000070  9a   777710 0000 46         pvt|array
    000071  5a   000373 0000 00
    000072  9a   777706 0000 46         page_fault|cme_devadd
    000073  5a   000372 0000 74
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   245335 457534 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000463 
    000020  aa   000000 000337 
    000021  aa   000401 000365 
    000022  aa   000444 000337 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000016 
    000066  aa   000156 000045 
    000067  aa   175453 017572 
    000070  aa   000000 117547 
    000071  aa   176306 400000 
    000072  aa   000170 000045 
    000073  aa   133234 136230 
    000074  aa   000000 113324 
    000075  aa   322064 400000 
    000076  aa   000202 000032 
    000077  aa   133234 136212 
    000100  aa   000000 113324 
    000101  aa   322064 200000 
    000102  aa   000211 000032 
    000103  aa   164131 272662 
    000104  aa   000000 116416 
    000105  aa   727372 600000 
    000106  aa   000220 000036 
    000107  aa   043243 127123 
    000110  aa   000000 103437 
    000111  aa   275656 200000 
    000112  aa   000230 000041 
    000113  aa   052721 247134 
    000114  aa   000000 105272 
    000115  aa   317215 400000 
    000116  aa   000241 000042 
    000117  aa   147777 464111 
    000120  aa   000000 115000 
    000121  aa   507463 000000 
    000122  aa   000252 000037 
    000123  aa   112456 132235 
    000124  aa   000000 111250 
    000125  aa   530556 400000 
    000126  aa   000262 000031 
    000127  aa   133234 136144 
    000130  aa   000000 113324 
    000131  aa   322064 400000 
    000132  aa   000271 000031 
    000133  aa   102456 350276 
    000134  aa   000000 110246 
    000135  aa   520730 400000 
    000136  aa   000300 000035 
    000137  aa   106701 740574 
    000140  aa   000000 110670 
    000141  aa   206425 200000 
    000142  aa   000310 000031 
    000143  aa   113434 242275 
    000144  aa   000000 111347 
    000145  aa   432071 000000 
    000146  aa   000317 000032 
    000147  aa   147777 464062 
    000150  aa   000000 115000 
    000151  aa   507456 000000 
    000152  aa   000326 000042 
    000153  aa   147574 613471 
    000154  aa   000000 114766 
    000155  aa   636042 400000 
    000156  aa   076163 160145          >spec>install>1111>device_control.alm
    000157  aa   143076 151156 
    000160  aa   163164 141154 
    000161  aa   154076 061061 
    000162  aa   061061 076144 
    000163  aa   145166 151143 
    000164  aa   145137 143157 
    000165  aa   156164 162157 
    000166  aa   154056 141154 
    000167  aa   155040 040040 
    000170  aa   076154 144144          >ldd>include>pxss_page_stack.incl.alm
    000171  aa   076151 156143 
    000172  aa   154165 144145 
    000173  aa   076160 170163 
    000174  aa   163137 160141 
    000175  aa   147145 137163 
    000176  aa   164141 143153 
    000177  aa   056151 156143 
    000200  aa   154056 141154 
    000201  aa   155040 040040 
    000202  aa   076154 144144          >ldd>include>aste.incl.alm
    000203  aa   076151 156143 
    000204  aa   154165 144145 
    000205  aa   076141 163164 
    000206  aa   145056 151156 
    000207  aa   143154 056141 
    000210  aa   154155 040040 
    000211  aa   076154 144144          >ldd>include>pvte.incl.alm
    000212  aa   076151 156143 
    000213  aa   154165 144145 
    000214  aa   076160 166164 
    000215  aa   145056 151156 
    000216  aa   143154 056141 
    000217  aa   154155 040040 
    000220  aa   076154 144144          >ldd>include>add_type.incl.alm
    000221  aa   076151 156143 
    000222  aa   154165 144145 
    000223  aa   076141 144144 
    000224  aa   137164 171160 
    000225  aa   145056 151156 
    000226  aa   143154 056141 
    000227  aa   154155 040040 
    000230  aa   076154 144144          >ldd>include>stack_frame.incl.alm
    000231  aa   076151 156143 
    000232  aa   154165 144145 
    000233  aa   076163 164141 
    000234  aa   143153 137146 
    000235  aa   162141 155145 
    000236  aa   056151 156143 
    000237  aa   154056 141154 
    000240  aa   155040 040040 
    000241  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000242  aa   076151 156143 
    000243  aa   154165 144145 
    000244  aa   076163 164141 
    000245  aa   143153 137150 
    000246  aa   145141 144145 
    000247  aa   162056 151156 
    000250  aa   143154 056141 
    000251  aa   154155 040040 
    000252  aa   076154 144144          >ldd>include>page_info.incl.alm
    000253  aa   076151 156143 
    000254  aa   154165 144145 
    000255  aa   076160 141147 
    000256  aa   145137 151156 
    000257  aa   146157 056151 
    000260  aa   156143 154056 
    000261  aa   141154 155040 
    000262  aa   076154 144144          >ldd>include>sst.incl.alm
    000263  aa   076151 156143 
    000264  aa   154165 144145 
    000265  aa   076163 163164 
    000266  aa   056151 156143 
    000267  aa   154056 141154 
    000270  aa   155040 040040 
    000271  aa   076154 144144          >ldd>include>ptw.incl.alm
    000272  aa   076151 156143 
    000273  aa   154165 144145 
    000274  aa   076160 164167 
    000275  aa   056151 156143 
    000276  aa   154056 141154 
    000277  aa   155040 040040 
    000300  aa   076154 144144          >ldd>include>ptw.l68.incl.alm
    000301  aa   076151 156143 
    000302  aa   154165 144145 
    000303  aa   076160 164167 
    000304  aa   056154 066070 
    000305  aa   056151 156143 
    000306  aa   154056 141154 
    000307  aa   155040 040040 
    000310  aa   076154 144144          >ldd>include>cmp.incl.alm
    000311  aa   076151 156143 
    000312  aa   154165 144145 
    000313  aa   076143 155160 
    000314  aa   056151 156143 
    000315  aa   154056 141154 
    000316  aa   155040 040040 
    000317  aa   076154 144144          >ldd>include>apte.incl.alm
    000320  aa   076151 156143 
    000321  aa   154165 144145 
    000322  aa   076141 160164 
    000323  aa   145056 151156 
    000324  aa   143154 056141 
    000325  aa   154155 040040 
    000326  aa   076154 144144          >ldd>include>fs_dev_types.incl.alm
    000327  aa   076151 156143 
    000330  aa   154165 144145 
    000331  aa   076146 163137 
    000332  aa   144145 166137 
    000333  aa   164171 160145 
    000334  aa   163056 151156 
    000335  aa   143154 056141 
    000336  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         304    .ret_long                device_control:     127,  160.
           7    abs_wire_entry           page_info:     36.
      740000    address_mask             page_info:      9.
      400000    add_type.core            add_type:       8.
      200000    add_type.disk            add_type:       9.
      740000    add_type.non_null        add_type:      13.
      100000    add_type.pd              add_type:      10.
       40000    add_type.reserved        add_type:      11.
          42    apte.access_authorization      apte:          98.
          24    apte.alarm_event         apte:          79.
          26    apte.alarm_time          apte:          82.
          26    apte.alarm_time_thread   apte:          81.
          40    apte.always_loaded       apte:          29.
          66    apte.apad                apte:         120.
          12    apte.asteps              apte:          54.
          10    apte.batch               apte:          74.
          21    apte.batch_word          apte:          73.
          60    apte.begin_interaction_vcpu    apte:         112.
          10    apte.being_loaded        apte:          31.
           0    apte.bp                  apte:          13.
          23    apte.chans_offset        apte:          71.
          37    apte.cpu_monitor         apte:          94.
          52    apte.current_response_state    apte:         108.
          44    apte.dbr                 apte:         101.
          20    apte.dbr_loaded          apte:          30.
          34    apte.deadline            apte:          90.
         200    apte.default_procs_required    apte:          27.
          12    apte.dseg                apte:          56.
        4000    apte.eligible            apte:          23.
          10    apte.event_thread        apte:          50.
           1    apte.firstsw             apte:          34.
           1    apte.flags               apte:          15.
          21    apte.flags2              apte:          69.
           0    apte.fp                  apte:          12.
       20000    apte.hproc               apte:          21.
        2000    apte.idle                apte:          24.
        1000    apte.interaction         apte:          25.
          10    apte.ipc_pointers        apte:          49.
          65    apte.ipc_r_factor        apte:         119.
          64    apte.ipc_r_offset        apte:         118.
          11    apte.ips_message         apte:          52.
          51    apte.ittes_got           apte:         106.
          50    apte.ittes_sent          apte:         105.
          54    apte.last_response_state_time  apte:         110.
          13    apte.le_shift            apte:         126.
       10000    apte.loaded              apte:          22.
          36    apte.lock                apte:          92.
          15    apte.lock_id             apte:          63.
      400000    apte.mbz                 apte:          17.
      400000    apte.no_ipc_check        apte:          99.
          53    apte.number_processing   apte:         109.
           2    apte.page_faults         apte:          37.
           2    apte.page_wait_flag      apte:          33.
          40    apte.paging_measure      apte:          96.
          12    apte.pds                 apte:          55.
          13    apte.prds                apte:          58.
       40000    apte.pre_empted          apte:          20.
         400    apte.pre_empt_pending    apte:          26.
      400000    apte.prior_sched         apte:          70.
           3    apte.processid           apte:          39.
          63    apte.procs_required      apte:         115.
      776000    apte.procs_required_mask       apte:         116.
           7    apte.pr_tag_mask         apte:          75.
         100    apte.realtime_burst      apte:          28.
          62    apte.saved_temax         apte:         114.
          13    apte.savex7              apte:          59.
           1    apte.sentinel            apte:          16.
           4    apte.shared_stack_0      apte:          32.
      374000    apte.special_chans       apte:          72.
           1    apte.state               apte:          35.
          22    apte.state_change_time   apte:          77.
      100000    apte.stop_pending        apte:          19.
           4    apte.te                  apte:          41.
          33    apte.temax               apte:          88.
          30    apte.term_channel        apte:          84.
          14    apte.term_processid      apte:          61.
           0    apte.thread              apte:          11.
           6    apte.ti                  apte:          45.
           7    apte.timax               apte:          47.
         175    apte.timer_factor        apte:         127.
          16    apte.time_used_clock     apte:          64.
          56    apte.total_processing_time     apte:         111.
           5    apte.ts                  apte:          43.
          46    apte.virtual_cpu_time    apte:         103.
          20    apte.wait_event          device_control:     137,
                                         apte:          66.
      200000    apte.wakeup_waiting      apte:          18.
          21    apte.wct_index           apte:          68.
          32    apte.ws_size             apte:          86.
         150    apt_ptr                  device_control:     136,
                                         pxss_page_stack:     13.
         106    arg                      device_control:      97,   99,  101,  103,  106,  108,
                                         pxss_page_stack:     11.
                array                    device_control:     194,  213.
           3    ast                      device_control:     207,
                                         page_info:     20.
        4000    aste.any_access_on       aste:          49.
           5    aste.any_access_on_word  aste:          48.
           0    aste.bp                  aste:          18.
         777    aste.csl_mask            aste:          92.
      777000    aste.csl_mask_inner      page_info:     26.
          33    aste.csl_shift           aste:          91.
          12    aste.csl_word            aste:          90.
      200000    aste.damaged             aste:         118.
          13    aste.damaged_word        aste:         117.
           4    aste.ddnp                aste:         106.
          12    aste.ddnp_word           aste:         105.
         200    aste.deact_error         aste:          57.
           5    aste.deact_error_word    aste:          56.
       40000    aste.dirsw               aste:          75.
           5    aste.dirsw_word          aste:          74.
           2    aste.dius                aste:          65.
           5    aste.dius_word           aste:          64.
      400000    aste.dmpr_pad            aste:          69.
           5    aste.dmpr_pad_word       aste:          68.
          20    aste.dnzp                aste:         102.
          12    aste.dnzp_word           aste:         101.
           7    aste.dtm                 aste:          84.
           6    aste.dtu                 aste:          83.
      200000    aste.ehs                 aste:          71.
           5    aste.ehs_word            aste:          70.
         400    aste.explicit_deact_ok   aste:          55.
           5    aste.explicit_deact_ok_word    aste:          54.
         400    aste.fmchanged           aste:          94.
      400000    aste.fmchanged1          aste:         116.
          13    aste.fmchanged1_word     aste:         115.
          12    aste.fmchanged_word      aste:          93.
         200    aste.fms                 aste:          96.
          12    aste.fms_word            aste:          95.
          40    aste.fm_damaged          aste:          61.
           5    aste.fm_damaged_word     aste:          60.
           0    aste.fp                  aste:          17.
       40000    aste.gtms                aste:          43.
           5    aste.gtms_word           aste:          42.
          40    aste.gtpd                aste:         100.
          12    aste.gtpd_word           aste:          99.
      100000    aste.gtus                aste:          41.
           5    aste.gtus_word           aste:          40.
       20000    aste.hc                  aste:          45.
         100    aste.hc_part             aste:          59.
           5    aste.hc_part_word        aste:          58.
       10000    aste.hc_sdw              aste:          47.
           5    aste.hc_sdw_word         aste:          46.
           5    aste.hc_word             aste:          44.
          13    aste.ht_fp               aste:         114.
           1    aste.infl                aste:          20.
           1    aste.infp                aste:          21.
        1000    aste.inhibit_cache       aste:          53.
           5    aste.inhibit_cache_word  aste:          52.
      200000    aste.init                aste:          39.
           5    aste.init_word           aste:          38.
          77    aste.marker_mask         aste:         128.
           0    aste.marker_shift        aste:         127.
          13    aste.marker_word         aste:         126.
       20000    aste.master_dir          aste:          77.
           5    aste.master_dir_word     aste:          76.
         777    aste.msl_mask            aste:          30.
          33    aste.msl_shift           aste:          29.
           4    aste.msl_word            aste:          28.
          20    aste.multi_class         aste:          63.
           5    aste.multi_class_word    aste:          62.
           1    aste.nid                 aste:          67.
           5    aste.nid_word            aste:          66.
         100    aste.npfs                aste:          98.
          12    aste.npfs_word           aste:          97.
         777    aste.np_mask             aste:         112.
           0    aste.np_shift            aste:         111.
          12    aste.np_word             aste:         110.
      100000    aste.nqsw                aste:          73.
           5    aste.nqsw_word           aste:          72.
      100000    aste.pack_ovfl           aste:         120.
          13    aste.pack_ovfl_word      aste:         119.
           2    aste.par_astep           aste:          24.
          10    aste.per_process         aste:         104.
          12    aste.per_process_word    aste:         103.
           3    aste.ptsi_mask           aste:         125.
           6    aste.ptsi_shift          aste:         124.
          13    aste.ptsi_word           aste:         123.
         777    aste.pvtx_mask           device_control:     209,
                                         aste:          33.
          22    aste.pvtx_shift          device_control:     208,
                                         aste:          32.
           4    aste.pvtx_word           device_control:     207,
                                         aste:          31.
          10    aste.quota               aste:          86.
         777    aste.records_mask        aste:         109.
      777000    aste.records_mask_inner  page_info:     27.
          11    aste.records_shift       aste:         108.
          12    aste.records_word        aste:         107.
           2    aste.strp                aste:          23.
       40000    aste.synchronized        aste:         122.
          13    aste.synchronized_word   aste:         121.
        4000    aste.tqsw                aste:          81.
           5    aste.tqsw_word           aste:          80.
           3    aste.uid                 aste:          26.
          11    aste.used                aste:          88.
      400000    aste.usedf               aste:          37.
           5    aste.usedf_word          aste:          36.
       10000    aste.volmap_seg          aste:          79.
           5    aste.volmap_seg_word     aste:          78.
           4    aste.vtocx               aste:          34.
        2000    aste.write_access_on     aste:          51.
           5    aste.write_access_on_word      aste:          50.
           0    aste_part.one            aste:         136.
         377    aste_part.three_mask     aste:         141.
           0    aste_part.three_shift    aste:         140.
          13    aste_part.three_word     aste:         139.
           1    aste_part.two            aste:         137.
          14    aste_part_size           aste:         133.
          14    aste_size                aste:          15.
         272    await_tc                 device_control:     122,  134.
                bad_device_id            device_control:     192,  198,  200.
         204    before                   pxss_page_stack:     17.
           1    bulkdevt                 fs_dev_types:        24.
          14    bulk_dvt                 fs_dev_types:        51.
         225    call_join                device_control:      86,   95.
        1170    call_offset              stack_header:        80.
         350    check_ckdv               device_control:      53,  205.
         354    ckdv_from_pvtx           device_control:      53,  210.
          10    cleanup_entry            page_info:     37.
                clearout                 device_control:      76.
         100    cme.abs_usable           cmp:           17.
         200    cme.abs_w                cmp:           16.
           2    cme.astep                cmp:           23.
           0    cme.bp                   cmp:            7.
           7    cme.contr                cmp:           20.
           1    cme.devadd               device_control:     129,
                                         cmp:            9.
      740000    cme.did_mask             cmp:           11.
        1000    cme.er                   cmp:           14.
           1    cme.flags                cmp:           10.
           0    cme.fp                   cmp:            6.
        4000    cme.io                   cmp:           13.
          40    cme.notify_requested     device_control:     130,
                                         cmp:           18.
          10    cme.phm_hedge            cmp:           19.
           3    cme.pin_counter          cmp:           25.
           2    cme.ptwp                 cmp:           22.
         400    cme.removing             cmp:           15.
       10000    cme.synch_held           cmp:           12.
           3    cme.synch_page_entryp    cmp:           26.
         164    cmep                     pxss_page_stack:     15.
          12    cmep_to_coreadd.rl       page_info:     75.
           2    cmep_to_ptw.ls           page_info:     57.
           2    cmep_to_sdw.ls           page_info:     57.
                cme_devadd               device_control:     206.
           4    cme_size                 cmp:            4.
      777777    coreadd_mask             page_info:     57.
          12    coreadd_to_cmep.ls       page_info:     76.
          14    coreadd_to_ptw.ls        page_info:     57.
          14    coreadd_to_sdw.ls        page_info:     57.
         173    core_add                 device_control:     100,
                                         pxss_page_stack:     16.
          17    core_ptw.add_type_mask   ptw.l68:       19.
          16    core_ptw.add_type_shift  ptw.l68:       18.
           3    core_ptw.df_no_mask      ptw.l68:       32.
           0    core_ptw.df_no_shift     ptw.l68:       31.
       10000    core_ptw.er              ptw.l68:       21.
       20000    core_ptw.first           ptw.l68:       20.
           0    core_ptw.flags           ptw.l68:       17.
       37777    core_ptw.frame_mask      ptw.l68:       16.
          26    core_ptw.frame_shift     ptw.l68:       15.
         200    core_ptw.nypd            ptw.l68:       25.
          10    core_ptw.os              ptw.l68:       29.
         100    core_ptw.phm             ptw.l68:       26.
         400    core_ptw.phm1            ptw.l68:       24.
        1000    core_ptw.phu             ptw.l68:       23.
          40    core_ptw.phu1            ptw.l68:       27.
        2000    core_ptw.unusable1       ptw.l68:       22.
           4    core_ptw.valid           ptw.l68:       30.
          20    core_ptw.wired           ptw.l68:       28.
                core_queue_man           device_control:      76,  156,  174.
         174    count                    pxss_page_stack:     16.
                dctl                     device_control:      85,   93.
         154    delta_t                  pxss_page_stack:     13.
         205    depth                    pxss_page_stack:     17.
         200    devadd                   device_control:     102,
                                         pxss_page_stack:     16.
         215    dev_read                 device_control:      50,   80.
         203    dev_signal               pxss_page_stack:     17.
         221    dev_write                device_control:      50,   88.
           1    df1                      page_info:      7.
                disk_control             device_control:      74,  178.
                disk_init                device_control:      63.
         330    disk_offlinep            device_control:      51,  183.
                disk_read                device_control:      85.
                disk_run                 device_control:     178.
                disk_write               device_control:      93.
         232    done_astep               pxss_page_stack:     24.
           6    dsu181devt               fs_dev_types:        31.
           5    dsu190devt               fs_dev_types:        30.
           4    dsu191devt               fs_dev_types:        29.
                dvctl_retry_ptlwait      device_control:     157.
        1174    entry_offset             stack_header:        84.
         175    entry_sw                 pxss_page_stack:     16.
         201    errcode                  pxss_page_stack:     16.
         204    esd_reset                device_control:      50,   68.
                esd_reset_locks          device_control:      74.
           6    evict_entry              page_info:     35.
           0    fault_entry              page_info:     29.
          10    fips3380devt             fs_dev_types:        33.
          11    fips3381devt             fs_dev_types:        34.
         226    free_store_start_time    pxss_page_stack:     22.
         221    free_store_temp          pxss_page_stack:     19.
         160    free_store_temp_1        pxss_page_stack:     14.
         162    fs_dev.amaxio            fs_dev_types:       180.
          74    fs_dev.cyl_per_dev       fs_dev_types:       111.
          30    fs_dev.dev_type_names    fs_dev_types:        66.
          11    fs_dev.max_dev_type      device_control:     199,
                                         fs_dev_types:        64.
          41    fs_dev.media_removable   fs_dev_types:        76.
           0    fs_dev.models            fs_dev_types:        35,   48.
          14    fs_dev.modelx            fs_dev_types:        50.
         127    fs_dev.mult_sect_per_cyl       fs_dev_types:       148.
          14    fs_dev.n_models          fs_dev_types:        48.
         151    fs_dev.rec_per_dev       fs_dev_types:       170.
         140    fs_dev.rem_per_cyl       fs_dev_types:       159.
         105    fs_dev.sect_per_cyl      fs_dev_types:       122.
          52    fs_dev.sect_per_dev      fs_dev_types:        89.
         116    fs_dev.sect_per_track    fs_dev_types:       133.
          63    fs_dev.track_per_cyl     fs_dev_types:       101.
         152    getwork_temp             pxss_page_stack:     13.
         335    get_device_type          device_control:      61,   81,   89,  184,  190.
         173    init                     device_control:      50,   56.
                init_savex               device_control:     167.
                init_savex_bb            device_control:     118.
      100000    int                      page_info:     14.
         177    inter                    device_control:      96,
                                         pxss_page_stack:     16.
                lock_ptl                 device_control:     166.
         223    lock_volmap_temp         pxss_page_stack:     20.
         156    lock_volmap_temp_1       pxss_page_stack:     14.
           4    msu0400devt              fs_dev_types:        28.
           3    msu0450devt              fs_dev_types:        27.
           3    msu0451devt              fs_dev_types:        26.
           2    msu0500devt              fs_dev_types:        25.
           7    msu0501devt              fs_dev_types:        32.
          50    notify_regs              pxss_page_stack:      8.
           4    no_post                  page_info:     16.
         250    pad                      pxss_page_stack:     33.
         235    pageno                   pxss_page_stack:     25.
                page_error               device_control:     192,  198,  200.
                page_fault               device_control:     118,  139,  166,  167,  169,  173,  179,  206.
          12    page_power               page_info:      6.
         242    page_synch_index         pxss_page_stack:     28.
         236    page_synch_temp          pxss_page_stack:     27.
         240    page_synch_time          pxss_page_stack:     27.
         245    pc_err_astep             pxss_page_stack:     30.
         244    pc_err_ptwp              pxss_page_stack:     30.
         243    pc_err_type              pxss_page_stack:     30.
                pc_trace                 device_control:     175.
           3    pdm                      page_info:     19.
                pds                      device_control:     136.
           5    pd_flush_entry           page_info:     34.
         246    pf_sdw                   pxss_page_stack:     31.
         230    post_io_start_time       pxss_page_stack:     22.
           4    post_purge_entry         page_info:     33.
           3    pre_page_entry           page_info:     32.
         100    pre_temp                 pxss_page_stack:     10.
          76    pre_time                 pxss_page_stack:     10.
          20    pri                      page_info:     15.
         277    ptl_waitlock             device_control:      52,  145.
         176    ptp_astep                pxss_page_stack:     16.
           2    ptw                      page_info:     21.
           0    ptw.add                  ptw.l68:       37.
          17    ptw.add_type_mask        ptw.l68:       40.
          16    ptw.add_type_shift       ptw.l68:       39.
           3    ptw.df_no_mask           ptw.l68:       53.
           0    ptw.df_no_shift          ptw.l68:       52.
       10000    ptw.er                   ptw.l68:       42.
       20000    ptw.first                ptw.l68:       41.
           0    ptw.flags                ptw.l68:       38.
      400000    ptw.nulled               page_info:     12.
         200    ptw.nypd                 ptw.l68:       46.
          10    ptw.os                   device_control:     126,
                                         ptw.l68:       50.
         100    ptw.phm                  ptw.l68:       47.
         400    ptw.phm1                 ptw.l68:       45.
        1000    ptw.phu                  ptw.l68:       44.
          40    ptw.phu1                 ptw.l68:       48.
        2000    ptw.unusable1            ptw.l68:       43.
           4    ptw.valid                ptw.l68:       51.
          20    ptw.wired                ptw.l68:       49.
      777760    ptw_add_mask             page_info:     57.
           2    ptw_to_cmep.rl           page_info:     57.
          24    ptw_to_cmep_lower.rl     page_info:     57.
          14    ptw_to_coreadd.rl        page_info:     57.
         253    push                     device_control:     117.
        1171    push_offset              stack_header:        81.
                pvt                      device_control:     194,  213.
          20    pvte.baseadd             pvte:         119.
       10000    pvte.being_demounted     pvte:          74.
         100    pvte.being_demounted2    pvte:          86.
           4    pvte.being_demounted2_word     pvte:          85.
           4    pvte.being_demounted_word      pvte:          73.
       20000    pvte.being_mounted       pvte:          72.
           4    pvte.being_mounted_word  pvte:          71.
         777    pvte.brother_pvtx_mask   pvte:          52.
          22    pvte.brother_pvtx_shift  pvte:          51.
           2    pvte.brother_pvtx_word   pvte:          50.
        4000    pvte.check_read_incomplete     device_control:     216,
                                               pvte:          76.
           4    pvte.check_read_incomplete_word      device_control:     215,
                                                     pvte:          75.
          16    pvte.curn_dmpr_vtocx     pvte:         115.
           6    pvte.dbmrp               pvte:         103.
         200    pvte.deposit_to_volmap   pvte:          84.
           4    pvte.deposit_to_volmap_word    pvte:          83.
        2000    pvte.device_inoperative  device_control:     186,
                                         pvte:          78.
           4    pvte.device_inoperative_word   device_control:     185,
                                               pvte:          77.
         777    pvte.device_type_mask    pvte:          59.
          33    pvte.device_type_shift   device_control:     197,
                                         pvte:          58.
           4    pvte.device_type_word    device_control:     196,
                                         pvte:          57.
           3    pvte.devname             pvte:          55.
          10    pvte.dim_info            pvte:         108.
      400000    pvte.dmpr_in_use         pvte:          41.
           2    pvte.dmpr_in_use_word    pvte:          40.
          10    pvte.hc_part_used        pvte:          92.
           4    pvte.hc_part_used_word   pvte:          91.
        4000    pvte.inconsistent_dbm    pvte:          49.
           2    pvte.inconsistent_dbm_word     pvte:          48.
       40000    pvte.is_sv               pvte:          43.
           2    pvte.is_sv_word          pvte:          42.
         777    pvte.logical_area_number_mask  pvte:          62.
          22    pvte.logical_area_number_shift       pvte:          61.
           4    pvte.logical_area_number_word  pvte:          60.
           1    pvte.lvid                pvte:          38.
           7    pvte.nleft               pvte:         105.
          12    pvte.num_of_svs          pvte:         110.
           5    pvte.n_free_vtoce        pvte:         100.
          17    pvte.n_vtoce             pvte:         117.
          40    pvte.pc_vacating         pvte:          88.
           4    pvte.pc_vacating_word    pvte:          87.
      100000    pvte.permanent           pvte:          68.
           4    pvte.permanent_word      pvte:          67.
           0    pvte.pvid                pvte:          37.
          13    pvte.records_per_cyl     pvte:         111.
          14    pvte.record_factor       pvte:         112.
       10000    pvte.removable_pack      pvte:          47.
           2    pvte.removable_pack_word       pvte:          46.
       20000    pvte.root_lv             pvte:          45.
           2    pvte.root_lv_word        pvte:          44.
        1000    pvte.rpv                 pvte:          80.
           4    pvte.rpv_word            pvte:          79.
          33    pvte.scavenger_block_rel       pvte:         136.
         400    pvte.scav_check_address  pvte:          82.
           4    pvte.scav_check_address_word   pvte:          81.
           2    pvte.skip_queue_count    pvte:          53.
      200000    pvte.storage_system      pvte:          66.
           4    pvte.storage_system_word       pvte:          65.
          15    pvte.sv_name             pvte:         113.
          11    pvte.sv_num              pvte:         109.
       40000    pvte.testing             pvte:          70.
           4    pvte.testing_word        pvte:          69.
           7    pvte.totrec              pvte:         106.
      400000    pvte.used                pvte:          64.
           4    pvte.used_word           pvte:          63.
          20    pvte.vacating            pvte:          90.
           4    pvte.vacating_word       pvte:          89.
          24    pvte.volmap_astep        pvte:         122.
          32    pvte.volmap_async_page   pvte:         133.
          32    pvte.volmap_async_state  pvte:         132.
           2    pvte.volmap_idle_notify  pvte:          96.
           4    pvte.volmap_idle_notify_word   pvte:          95.
          26    pvte.volmap_lock         pvte:         127.
           4    pvte.volmap_lock_notify  pvte:          94.
           4    pvte.volmap_lock_notify_word   pvte:          93.
          25    pvte.volmap_offset       pvte:         124.
          22    pvte.volmap_seg_sdw      pvte:         121.
          30    pvte.volmap_stock_ptr    pvte:         129.
          33    pvte.vol_trouble_count   pvte:         135.
          27    pvte.vtoc_map_lock       pvte:         128.
           1    pvte.vtoc_map_lock_notify      pvte:          98.
           4    pvte.vtoc_map_lock_notify_word       pvte:          97.
          25    pvte.vtoc_map_offset     pvte:         125.
          31    pvte.vtoc_map_stock_ptr  pvte:         130.
           5    pvte.vtoc_size           pvte:         101.
          34    pvte_size                device_control:     193,  195,  212,  214,
                                         pvte:          34.
         172    pvtx                     device_control:      59,   98,  191,
                                         pxss_page_stack:     16.
         253    pwait                    device_control:      50,  116.
         256    pwait_retry              device_control:     119.
         301    pwait_return             device_control:      54,  154.
                pxss                     device_control:     143,  157.
         210    pxss_save_stack          pxss_page_stack:     18.
         216    pxss_stackp              pxss_page_stack:     18.
           6    pxss_stack_size          pxss_page_stack:      5,   18.
           1    read_entry               page_info:     30.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
         314    run                      device_control:      50,  168,  172.
                running                  device_control:     175.
                run_core_queue           device_control:     174.
                savex                    device_control:     173.
          60    save_stack               pxss_page_stack:      9.
         222    savx2_3                  pxss_page_stack:     19.
      777760    sdw_add_mask             page_info:     57.
           2    sdw_to_cmep.rl           page_info:     57.
          14    sdw_to_coreadd.rl        page_info:     57.
          10    seg_aste.usage           aste:         149.
          14    seg_aste_size            aste:         146.
         100    size_of_apt_entry        apte:         122.
           3    sst                      device_control:      72,   73,   82,   90,   91,  109,  125,  131,  132,  155,
                                         page_info:     18,   19,   20.
         214    sst.abs_wired_count      sst:          126.
         241    sst.acost                sst:          141.
      400000    sst.activate_activated   sst:          201.
         517    sst.activations          sst:          182.
          52    sst.ainitp               sst:           52.
          52    sst.ainitp1              sst:           53.
         244    sst.alaps                sst:          144.
         230    sst.aneedsize            sst:          135.
         236    sst.asearches            sst:          138.
         243    sst.askipdius            sst:          143.
         235    sst.askipsehs            sst:          137.
         240    sst.askipsinit           sst:          140.
         224    sst.askipsize            sst:          134.
         237    sst.askipslevel          sst:          139.
         242    sst.askipslock           sst:          142.
          30    sst.astap                sst:           35.
         254    sst.asteps               sst:          151.
          21    sst.astl                 sst:           26.
          22    sst.astl_event           sst:           27.
      400000    sst.astl_notify_requested      sst:           30.
          23    sst.astl_notify_requested_word       sst:           29.
          33    sst.astsize              sst:           37.
          72    sst.ast_ht_n_buckets     sst:           76.
          70    sst.ast_ht_ptr           sst:           75.
          73    sst.ast_ht_uid_mask      sst:           77.
         260    sst.ast_locked_at_time   sst:          152.
         262    sst.ast_locked_total_time      sst:          153.
         266    sst.ast_locking_count    sst:          155.
         264    sst.ast_lock_wait_time   sst:          154.
      400000    sst.ast_track            sst:          240.
         566    sst.ast_track_word       sst:          239.
          50    sst.atempp               sst:           46.
          50    sst.atempp1              sst:           47.
         600    sst.audit_seg_state_change_bw  sst:          253.
         573    sst.audit_seg_state_chg  sst:          249.
         126    sst.aused                sst:          104.
          44    sst.ausedp               sst:           43.
         534    sst.backup_activations   sst:          198.
         513    sst.bad_sgms             sst:          178.
         116    sst.ceiling              sst:           96.
          75    sst.checksum_filemap     sst:           79.
         476    sst.claim_notmod         sst:          166.
         477    sst.claim_passed_used    sst:          167.
         516    sst.claim_runs           sst:          181.
         474    sst.claim_skip_cme       sst:          164.
         475    sst.claim_skip_free      sst:          165.
         500    sst.claim_skip_ptw       sst:          168.
         502    sst.claim_steps          sst:          170.
         501    sst.claim_writes         sst:          169.
         267    sst.cleanup_count        sst:          156.
         270    sst.cleanup_real_time    sst:          157.
          67    sst.cl_skips_pinned      sst:           74.
          34    sst.cmesize              sst:           38.
          54    sst.cmp                  device_control:     131,  132,
                                         sst:           56.
         252    sst.cpu_bf_time          sst:          150.
         160    sst.cpu_sf_time          sst:          114.
      400000    sst.crash_test_segmove   sst:          246.
         571    sst.crash_test_segmove_word    sst:          245.
         117    sst.ctwait               sst:           97.
         100    sst.cycle_pv_allocation  sst:           82.
         127    sst.damaged_ct           sst:          105.
         507    sst.dblw_resurrections   sst:          175.
         130    sst.deact_count          sst:          106.
         572    sst.delayed_seg_state_chg      sst:          248.
         132    sst.demand_deactivations       sst:          108.
         131    sst.demand_deact_attempts      sst:          107.
         567    sst.dirlock_writebehind  sst:          242.
         520    sst.dir_activations      sst:          183.
         110    sst.dir_page_faults      sst:           90.
      400000    sst.dm_enabled           sst:           50.
          51    sst.dm_enabled_word      sst:           49.
          62    sst.double_write         sst:           66.
         546    sst.event                sst:          213.
         523    sst.evict_phmbit         sst:          189.
         523    sst.evict_ptp            sst:          188.
         523    sst.evict_recover_data   sst:          186.
          66    sst.fc_skips_pinned      sst:           73.
         220    sst.first_core_block     sst:          130.
         525    sst.force_pwrites        sst:          192.
         524    sst.force_swrites        sst:          191.
         527    sst.force_updatevs       sst:          194.
         526    sst.fw_none              sst:          193.
         222    sst.fw_retries           sst:          132.
         515    sst.good_sgms            sst:          180.
         521    sst.hedge_updatevs       sst:          184.
         522    sst.hedge_writes         sst:          185.
         121    sst.laps                 sst:           99.
         221    sst.last_core_block      sst:          131.
          44    sst.level                sst:           41.
         107    sst.level_1_page_faults  sst:           89.
         104    sst.lock_waits           sst:           86.
         154    sst.loop_locks           sst:          112.
         156    sst.loop_lock_time       sst:          113.
         533    sst.makeknown_activations      sst:          197.
         577    sst.max_seg_state_change_bw    sst:          252.
         535    sst.metering_flags       sst:          199.
          74    sst.meter_ast_locking    sst:           78.
         562    sst.mod_during_write     sst:          228.
         115    sst.needc                sst:           95.
         565    sst.new_pages            sst:          237.
      400000    sst.nolock               sst:           71.
          65    sst.nolock_word          sst:           70.
      400000    sst.notify               sst:          216.
         547    sst.notify_word          sst:          215.
          44    sst.no_aste              sst:           44.
          16    sst.npfs_misses          sst:           23.
          24    sst.nused                sst:           32.
         101    sst.n_trailers           sst:           83.
         506    sst.oopv                 sst:          174.
          76    sst.page_read_errors     sst:           80.
          77    sst.page_write_errors    sst:           81.
         113    sst.pc_io_waits          sst:           93.
           2    sst.pc_trace             sst:          234.
          10    sst.pc_trace_pf          sst:          232.
         106    sst.pdir_page_faults     sst:           88.
         532    sst.pf_unlock_ptl_meterings    sst:          196.
         530    sst.pf_unlock_ptl_time   sst:          195.
         545    sst.pid                  sst:          212.
          14    sst.post_in_core         sst:           21.
         165    sst.post_list_size       sst:          118.
         167    sst.post_purge_calls     sst:          120.
          12    sst.post_purge_time      sst:           20.
         166    sst.post_purgings        sst:          119.
         372    sst.pp_meters            sst:          159.
         170    sst.pre_page_calls       sst:          121.
         171    sst.pre_page_list_size   sst:          122.
         172    sst.pre_page_misses      sst:          123.
         164    sst.pre_page_size        sst:          117.
          10    sst.pre_page_time        sst:           19.
         173    sst.pre_pagings          sst:          124.
         503    sst.pre_seeks_failed     sst:          171.
          20    sst.ptl                  device_control:      73,
                                         sst:           25.
          32    sst.ptl_wait_ct          sst:           36.
          40    sst.pts                  sst:           40.
          25    sst.ptwbase              sst:           33.
         223    sst.pvhtp                sst:          133.
         133    sst.reads                device_control:      82,
                                         sst:          109.
         217    sst.recopies             sst:          129.
          61    sst.removep              sst:           64.
         504    sst.resurrections        sst:          172.
         111    sst.ring_0_page_faults   sst:           91.
          36    sst.root_astep           sst:           39.
          64    sst.root_pvtx            sst:           68.
         112    sst.rqover               sst:           92.
          17    sst.salv                 sst:           24.
           1    sst.sc_trace             sst:          235.
         555    sst.segmove_astep        sst:          223.
         551    sst.segmove_found_synch  sst:          219.
         550    sst.segmove_io_limit     sst:          218.
         545    sst.segmove_lock         sst:          210.
         554    sst.segmove_max_tries    sst:          222.
         561    sst.segmove_new_addr_astep     sst:          227.
         553    sst.segmove_n_reads      sst:          221.
         560    sst.segmove_old_addr_astep     sst:          226.
         556    sst.segmove_pvtx         sst:          224.
         552    sst.segmove_synch_disappeared  sst:          220.
         557    sst.segmove_vtocx        sst:          225.
         536    sst.seg_fault_calls      sst:          203.
         576    sst.seg_state_change_limit     sst:          251.
         574    sst.seg_state_chg_delay  sst:          250.
         601    sst.seg_state_chg_operation    sst:          254.
         247    sst.setfaults_acc        sst:          147.
         246    sst.setfaults_all        sst:          146.
         512    sst.sgm_pf               sst:          177.
         514    sst.sgm_sgft             sst:          179.
         510    sst.sgm_time             sst:          176.
         153    sst.short_pf_count       sst:          111.
         124    sst.skipm                sst:          102.
         125    sst.skipos               sst:          103.
         123    sst.skipu                sst:          101.
         122    sst.skipw                sst:          100.
           0    sst.space                sst:           18.
          60    sst.startp               sst:           62.
         114    sst.steps                sst:           94.
         234    sst.stepsa               sst:          136.
         543    sst.stk_pages_truncated  sst:          208.
         544    sst.stk_pages_truncated_in_core      sst:          209.
         542    sst.stk_truncate_shouldnt_did  sst:          207.
         541    sst.stk_truncate_shouldnt_didnt      sst:          206.
         540    sst.stk_truncate_should_did    sst:          205.
         537    sst.stk_truncate_should_didnt  sst:          204.
          53    sst.strsize              sst:           55.
         102    sst.synch_activations    sst:           84.
         103    sst.synch_skips          sst:           85.
         215    sst.system_type          sst:          127.
          63    sst.temp_w_event         sst:           67.
          26    sst.tfreep               sst:           34.
          15    sst.thrashing            sst:           22.
         250    sst.total_bf             sst:          148.
         251    sst.total_bf_pf          sst:          149.
         105    sst.total_locks_set      sst:           87.
         163    sst.total_sf             sst:          116.
         162    sst.total_sf_pf          sst:          115.
         564    sst.trace_sw             sst:          230.
         272    sst.tree_count           sst:          158.
           4    sst.tty_trace            sst:          233.
         245    sst.updates              sst:          145.
          56    sst.usedp                sst:           58.
         505    sst.volmap_seg_page_faults     sst:          173.
         120    sst.wired                sst:           98.
         216    sst.wired_copies         sst:          128.
         174    sst.wire_proc_data       sst:          125.
         143    sst.writes               device_control:      90,
                                         sst:          110.
         473    sst.write_hunts          sst:          163.
         570    sst.write_limit          sst:          243.
          57    sst.wtct                 device_control:      91,
                                         sst:           60.
         472    sst.wusedp               sst:          161.
         563    sst.zero_pages           sst:          229.
        1000    sst_size                 sst:           15.
          73    stach_header.trace_top_ptr     stack_header:        62.
          75    stackp                   pxss_page_stack:      9.
          32    stack_frame.arg_ptr      stack_frame:   16.
         100    stack_frame.condition_bit      stack_frame:   32.
          20    stack_frame.condition_word     stack_frame:    9.
        2000    stack_frame.crawl_out_bit      stack_frame:   28.
          26    stack_frame.entry_ptr    stack_frame:   13.
          20    stack_frame.flag_word    stack_frame:   24.
         400    stack_frame.link_trap_bit      stack_frame:   30.
          30    stack_frame.lp_ptr       stack_frame:   15.
       20000    stack_frame.main_proc_bit      stack_frame:   25.
          60    stack_frame.min_length   stack_frame:   23.
          22    stack_frame.next_sp      stack_frame:   10.
          36    stack_frame.on_unit_rel_ptrs   stack_frame:   19.
          30    stack_frame.operator_ptr       stack_frame:   14.
          37    stack_frame.operator_ret_ptr   stack_frame:   20.
          20    stack_frame.prev_sp      stack_frame:    8.
          40    stack_frame.regs         stack_frame:   22.
          24    stack_frame.return_ptr   stack_frame:   12.
       10000    stack_frame.run_unit_manager   stack_frame:   26.
        1000    stack_frame.signaller_bit      stack_frame:   29.
          22    stack_frame.signaller_word     stack_frame:   11.
        4000    stack_frame.signal_bit   stack_frame:   27.
          34    stack_frame.static_ptr   stack_frame:   17.
         200    stack_frame.support_bit  stack_frame:   31.
          35    stack_frame.support_ptr  stack_frame:   18.
          37    stack_frame.translator_id      stack_frame:   21.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          15    stack_size               pxss_page_stack:      6,    9.
         136    stock_temp               pxss_page_stack:     12.
         217    stock_temp_1             pxss_page_stack:     19.
         220    stock_temp_2             pxss_page_stack:     19.
         134    temp                     pxss_page_stack:     11.
         166    temp1                    pxss_page_stack:     15.
         167    temp2                    pxss_page_stack:     15.
         305    time_out                 device_control:      50,  164.
         207    tmp_event                pxss_page_stack:     18.
         144    tmp_ev_channel           pxss_page_stack:     13.
         146    tmp_ev_message           pxss_page_stack:     13.
         202    tmp_ring                 pxss_page_stack:     17.
         165    total_steps              pxss_page_stack:     15.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
                trylock_ptl              device_control:     156.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
                unlock_ptl               device_control:     139,  169.
                unsavex                  device_control:     179.
           0    VOLMAP_ASYNC_IDLE        pvte:         138.
           1    VOLMAP_ASYNC_READ        pvte:         139.
           2    VOLMAP_ASYNC_WRITE       pvte:         140.
         224    volmap_page_temp         pxss_page_stack:     21.
         233    volmap_page_temp_1       pxss_page_stack:     24.
         142    volmap_save_ptr          pxss_page_stack:     12.
         162    volmap_save_sdw          pxss_page_stack:     14.
         140    volmap_temp              pxss_page_stack:     12.
         170    volmap_temp_1            pxss_page_stack:     15.
         171    volmap_temp_2            pxss_page_stack:     15.
         234    vtocx                    pxss_page_stack:     25.
                waitp                    device_control:     143.
           2    write_entry              page_info:     31.
         206    x5                       pxss_page_stack:     17.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
