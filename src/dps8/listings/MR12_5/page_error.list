ASSEMBLY LISTING OF SEGMENT >spec>install>1111>page_error.alm                                                                                                                                       
ASSEMBLED ON:	11/11/89  0926.0 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " HISTORY COMMENTS:
                                    13  "  1) change(86-05-13,GJohnson), approve(86-05-13,MCR7387),
                                    14  "     audit(86-05-13,Martinson), install(86-05-14,MR12.0-1056):
                                    15  "     Correct error message documentation.
                                    16  "  2) change(86-05-29,Fawcett), approve(86-04-11,MCR7383),
                                    17  "     audit(86-06-11,Coppola), install(86-07-17,MR12.0-1097):
                                    18  "     Add subvolume to error messages.
                                    19  "  3) change(87-02-18,Lippard), approve(87-03-16,MCR7640),
                                    20  "     audit(87-06-17,Farley), install(87-07-17,MR12.1-1043):
                                    21  "     Added entry to crash system on finding invalid volmap words (fix by
                                    22  "     Swenson).
                                    23  "                                                      END HISTORY COMMENTS
                                    24  
                                    25  " " " " " " " " " " " " " " " " " " " " " " " "
                                    26  "
                                    27  "	page_error	this procedure contains the code for outputing
                                    28  "			error messages that are generated by the machine
                                    29  "			language parts of page control.
                                    30  "
                                    31  "	First coded by Webber at time immemorial.
                                    32  "	Modified for NSS by B. Greenberg '75
                                    33  "	Mexped by VanVleck, with Greenberg, 2/77,3/77
                                    34  "	Macro ALM and declaration macrology by BSG 5-6/77
                                    35  "	Interpreter by BSG 7/17/77
                                    36  "	Modified for stock, -PML by J. Bongiovanni February 1982
                                    37  "	Modified to move core map by E. N. Kittlitz June 1982
                                    38  "	Modified for scavenger, J. Bongiovanni, August 1982
                                    39  "	Modified for page_synch, J. Bongiovanni, October 1982
                                    40  "	Delete sst include file, Benson Margulies, January 1984
                                    41  "	Added covert channel audit message, Keith Loepere, January 1985.
                                    42  "	Converted to access_audit_bin_header, Keith Loepere, January 1985.
                                    43  "	Modified to use syserr_constants, syserr_mmdam_msg,
                                    44  "			and segdamage_msg incls, EJ Sharpe, March 1985
                                    45  "	Modified to print the subvolume with the driveno for syserr,
                                    46  "		          R. A. Fawcett, July 1985
                                    47  "
                                    48  " " " " " " " " " " " " " " " " " " " " " " " "
                                    49  
                                    50  " GENERAL STRATEGY:
                                    51  
                                    52  "	First, we "adjust" pxss_page_stack to look like the TSX that
                                    53  "	     got us here did a PL/I "call" to page_error, but _w_e save all his
                                    54  "	     registers for him at sp|0 and sp|32 (decimal).
                                    55  "	While running in pxss_page_stack we copy anything we want into "arg".
                                    56  "	Then we do a push to new (upper) frame.
                                    57  "	Here we set up an arg list and call syserr.
                                    58  "	Then we pop up to the pxss_page_stack frame and return,
                                    59  
                                    60  "	     reloading his registers from the pxss_page_stack frame first.
                                    61  "
                                    62  "	Interpreter strategy:
                                    63  "
                                    64  "	Maximum code condensation of arglist preparation is achieved by
                                    65  "	coding 1 word per arglist element. Tsx7 to "interpreter"
                                    66  "	builds all of syserr arg list from arg "n" on in a "k" arg list:
                                    67  "
                                    68  "	tsx7	interpreter
                                    69  "	zero	endl,2*n
                                    70  "	zero	k,4
                                    71  "	arg_n_description
                                    72  "	arg_n_plus_1_description
                                    73  "	...
                                    74  "	arg_k_description
                                    75  "endl:
                                    76  
                                    77  "	description is 2 halfwords, first specifies arg addr,
                                    78  "	second descriptor addr. Address for data is negative if
                                    79  "	offset into pxss_page_stack, + if text. Descr. addr is always text.
                                    80  
                                    81  "
                                    82  "	How to use the page_error programming language.
                                    83  "
                                    84  "	This macrology enables the maintainter of page_error to generate
                                    85  "	calls to syserr and syserr$binary with a maximum of ease. A typical
                                    86  "	call to syserr is written like this:
                                    87  "
                                    88  "	call_syserr	1,(page_fault: this and that ^o for ^a),devadd,drivename
                                    89  "
                                    90  "	being equivalent to
                                    91  "
                                    92  "	call syserr (1, "page_fault: this and that ^o for ^a", devadd, drivename)
                                    93  "
                                    94  "	in PL/1. The ioa_arguments must be "declared" by the dcl or dclfix
                                    95  "	macros. Usage is:
                                    96  "
                                    97  "	dcl	drivename,arg+18,char,4
                                    98  "
                                    99  "	meaning
                                   100  "
                                   101  "	dcl drivename char (4) based (addr (arg)+18), so to speak.
                                   102  "
                                   103  "	1st arg is variable name, second is location, which must be in pxss_page_stack,
                                   104  "	3rd is data type (only char, fixed, ptr, bit provided now), 4th is precision, default 17.
                                   105  "
                                   106  "	dclfix declares something by its own name as fixed bin (17).
                                   107  
                                   108  "	1st argument to call_syserr (or call_syserr_binary) is interpreted as being an offset
                                   109  "	in pxss_page_stack if not a numeric literal.
                                   110  "
                                   111  "	call_syserr_binary 1,(arg+4,*),syserr_binary_code,opt_subr,(ctrlstring),args...
                                   112  "
                                   113  "	is similar. 2nd arg is DATA address- pointer developed from it. 3rd arg is suffix
                                   114  "	in syserr_binary_def.incl.alm (i.e., xx for SB_xx, SBL_xx). opt_subr is the name
                                   115  "	of a subroutine to be called by macro in new frame (currently only gseg_info).
                                   116  "	Omit (,,) in other cases. gseg_info formats up seg-id type message, incrs.
                                   117  "	sst$damaged_ct.
                                   118  "
                                   119  "
                                   120  "	Declaration/arglist macrology.
                                   121  "
                                   122  
                                   123  	macro	dcl	    "dcl  symbol,address(rel to U),type{,prec}
                              1    124  	maclist	off,save
                              2    125  	macro	iword_&1
                              3    126  	zero	-(&2),=v1/1,6/&3,17/0,12/&=&4,&[17&;&4&]
                              4    127  	&&end
                              5    128  	maclist	restore
                              6    129  	&end
                                   130  
                                   131  	macro	dclfix
                              1    132  	maclist	off,save
                              2    133  &R&(	dcl	&i,&i,fixed
                              3    134  &)	maclist	restore
                              4    135  	&end
                                   136  
                                   137  	macro	message
                              1    138  &1.msg:aci   "&2"
                              2    139  &1.dsc:	vfd	1/1,6/char,1/0,4/0,24/&l2
                              3    140  	&end
                                   141  
                                   142  
                                   143  	macro	call_syserr
                              1    144  
                              2    145  	new_frame
                              3    146  
                              4    147  	tsx7	interpreter
                              5    148  	zero	*+2+&K,2
                              6    149  	zero	2*&K,4
                              7    150  
                              8    151  	ifint	&1
                              9    152  	zero	=&1,fx
                             10    153  	ifend
                             11    154  	inint	&1
                             12    155  	zero	-(&1),fx
                             13    156  	ifend
                             14    157  
                             15    158  	zero	&U.msg,&U.dsc
                             16    159  &R3&(	iword_&i
                             17    160  &)
                             18    161  	tra	csys
                             19    162  
                             20    163  	message	&U,(&2)
                             21    164  	&end
                                   165  
                                   166  	macro	call_syserr_binary
                              1    167  
                              2    168  	new_frame
                              3    169  
                              4    170  	ine	&4,()
                              5    171  &(4	tsx7	&i
                              6    172  &)
                              7    173  	ifend
                              8    174  
                              9    175  	ifint	&1
                             10    176  	eppap	=&1
                             11    177  	ifend
                             12    178  	inint	&1
                             13    179  	eppap	&1
                             14    180  	ifend
                             15    181  	spriap	sp|syserr_arg_list+2
                             16    182  
                             17    183  	tsx7	interpreter
                             18    184  	zero	*+2+&K-2,6
                             19    185  	zero	2*&K,4
                             20    186  
                             21    187  	zero	&U.sbc,fx
                             22    188  	zero	&U.sbl,fx
                             23    189  	zero	&U.msg,&U.dsc
                             24    190  &R6&(	iword_&i
                             25    191  &)
                             26    192  	eppap	&2
                             27    193  	tsx7	binary_setup
                             28    194  			"no return
                             29    195  
                             30    196  &U.sbc:	vfd	36/SB_&3
                             31    197  &U.sbl:	vfd	36/SBL_&3
                             32    198  
                             33    199  	message	&U,(&5)
                             34    200  	&end
                                   201  
                                   202  	macro	savexx	savexx	regname
                              1    203  	stcd	sp|stack_frame.return_ptr bound_page_control
                              2    204  	spri	sp|0
                              3    205  	sreg	sp|32
                              4    206  	ine	&1,none
                              5    207  	stx	&1,sp|stack_frame.return_ptr+1
                              6    208  	ifend
                              7    209  	ife	&1,none
                              8    210  	stc1	sp|stack_frame.return_ptr+1	set loop message
                              9    211  	ifend
                             10    212  	&end
                                   213  
                                   214  	macro	new_frame
                              1    215  	push	syserr_arg_list+frame_size
                              2    216  	epp	U,sp|stack_frame.prev_sp,*
                              3    217  	&end
                                   218  
                                   219  "
                                   220  
                                   221  "
                                   222  "	Sundry	assembler declarations
                                   223  "
                                   224  
    000000                         225  	name	page_error
                        000000     226  	segdef	bad_device_id
                        000450     227  	segdef	device_error,out_of_core,ptl_mylock
                        000077     228  	segdef	zeroing_page
                        000367     229  	segdef	error_in_done
                        000044     230  	segdef	out_of_hc_part
                        000326     231  	segdef	page_fault_error,non_fatal_error
                        000157     232  	segdef	page_move_parity,wired_parity_error,reverting_page,deleting_mm_frame
                        000713     233  	segdef	volmap_async_error,deposit_invalid_addtype,stock_out_of_synch
                        000646     234  	segdef	invalid_deposit_list_args,address_out_of_range
                        001221     235  	segdef	volmap_stacq_fails,volmap_mylock,deposit_zero_address
                        001506     236  	segdef	volmap_inconsistent,stock_inconsistent,ptl_not_locked
                        001626     237  	segdef	wrong_async_state,volmap_page_async_error,volmap_page_invalid_call
                        001723     238  	segdef	deposit_inuse_address,bad_volmap_address,volmap_io_error,poll_state_change
                        001010     239  	segdef	scav_stacq_fails
                        001100     240  	segdef	no_free_dm_entries,dm_journal_seg_problem
                        001767     241  	segdef	excessive_seg_state_chg
                        001303     242  	segdef	invalid_volmap_word
                                   243  
                        000002     244  	equ	dcb,2
                        000005     245  	equ	mbx,5
                        000003     246  	equ	bsd,3
                                   247  
                                   248  
                        000002     249  	equ	U,2		Use bp to point at pxss_page_stack frame
                                   250  
                        000050     251  	equ	syserr_arg_list,40	The whole upper frame is arglist.
                        000200     252  	equ	frame_size,8*16
                        000140     253  	equ	binary_buffer,6*16
                                   254  
                                   255  "
                                   256  "	Declarations of variables for above macros
                                   257  "
                                   258  
                                   259  
                                   260  	dclfix	devadd,pvtx,core_add
                                   261  
                                   262  	dcl	argf,arg,fixed
                                   263  	dcl	a1char,arg+1,char,1
                                   264  	dcl	a1f,arg+1,fixed
                                   265  	dcl	t1f,temp+1,fixed
                                   266  	dcl	ctrlrtag,temp,char,1
                                   267  	dcl	a2f,arg+2,fixed
                                   268  	dcl	a3f,arg+3,fixed
                                   269  	dcl	a4f,arg+4,fixed
                                   270  	dcl	a5f,arg+5,fixed
                                   271  
                                   272  	dcl	devname,arg,char,4
                                   273  	dcl	driveno,arg+1,char,4
                                   274  
                                   275  	dcl	pvtep,arg+6,ptr
                                   276  	dcl	stockp,arg+8,ptr
                                   277  
                                   278  	dcl	person,arg,char,32
                                   279  	dcl	categories,arg+8,bit,18
                                   280  	dcl	level,arg+9,fixed
                                   281  
    000000                         282  bad_device_id:
                                   283  	savexx	none		TRA from device_control
    000000  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000001  aa  6 00000 2541 00         	spri	sp|0
    000002  aa  6 00040 7531 00         	sreg	sp|32
    000003  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   284  
                                   285  	call_syserr 1,(device_control: invalid pvtx ^w),pvtx
                                        
                                        	new_frame
    000004  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000005  aa  7 00040 2721 20
    000006  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000007  0a   002142 7070 00         	tsx7	interpreter
    000010  0a   000015 000002          	zero	*+2+3,2
    000011  aa   000006 000004          	zero	2*3,4
                                        
    000012  00   002334 002332          	zero	=1,fx
                                        
    000013  00   000016 000026          	zero	.._00000.msg,.._00000.dsc
                                        	iword_pvtx
    000014  a0   777606 002335          	zero	-(pvtx),=v1/1,6/fixed,17/0,12/17
                                        
    000015  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00000,(device_control: invalid pvtx ^w)
    000016  aa  144 145 166 151         .._00000.msg:aci   "device_control: invalid pvtx ^w"
    000017  aa  143 145 137 143
    000020  aa  157 156 164 162
    000021  aa  157 154 072 040
    000022  aa  151 156 166 141
    000023  aa  154 151 144 040
    000024  aa  160 166 164 170
    000025  aa  040 136 167 000
    000026  aa   524000 000037          .._00000.dsc:	vfd	1/1,6/char,1/0,4/0,24/31
                                   286  
    000027  aa  6 00000 2541 00    287  csys:	call	syserr$syserr(sp|syserr_arg_list)
    000030  aa  6 00050 3501 00
    000031  4a  4 00010 3521 20
    000032  aa  6 00040 7531 00
    000033  aa  7 00036 6701 20
    000034  aa  6 00000 1731 00
    000035  aa  6 00040 0731 00
                                   288  
                                   289  " now we are on the upper frame. Get back.
                                   290  
    000036  aa  6 00000 3731 00    291  exit:	epbpsb	sp|0		inline pop
    000037  aa  6 00020 3521 20    292  	eppbp	sp|stack_frame.prev_sp,*
    000040                         293  	inhibit	on
    000040  aa  7 00024 6523 00    294  	sprisp	sb|stack_header.stack_end_ptr
    000041  aa  2 00000 1733 00    295  	lpri	bp|0
    000042                         296  	inhibit	off
    000042  aa  6 00040 0731 00    297  	lreg	sp|32
    000043  aa  6 00024 6101 00    298  	rtcd	sp|stack_frame.return_ptr	return to alm code
                                   299  
                                   300  " 
                                   301  
    000044                         302  out_of_hc_part:
                                   303  	savexx	none		TRA from free_store
    000044  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000045  aa  6 00000 2541 00         	spri	sp|0
    000046  aa  6 00040 7531 00         	sreg	sp|32
    000047  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   304  
                                   305  	call_syserr 1,(free_store: out of of room in hardcore partition.)
                                        
                                        	new_frame
    000050  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000051  aa  7 00040 2721 20
    000052  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000053  0a   002142 7070 00         	tsx7	interpreter
    000054  0a   000060 000002          	zero	*+2+2,2
    000055  aa   000004 000004          	zero	2*2,4
                                        
    000056  00   002334 002332          	zero	=1,fx
                                        
    000057  00   000061 000076          	zero	.._00001.msg,.._00001.dsc
                                        
    000060  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00001,(free_store: out of of room in hardcore partition.)
    000061  aa  146 162 145 145         .._00001.msg:aci   "free_store: out of of room in hardcore partition."
    000062  aa  137 163 164 157
    000063  aa  162 145 072 040
    000064  aa  157 165 164 040
    000065  aa  157 146 040 157
    000066  aa  146 040 162 157
    000067  aa  157 155 040 151
    000070  aa  156 040 150 141
    000071  aa  162 144 143 157
    000072  aa  162 145 040 160
    000073  aa  141 162 164 151
    000074  aa  164 151 157 156
    000075  aa  056 000 000 000
    000076  aa   524000 000061          .._00001.dsc:	vfd	1/1,6/char,1/0,4/0,24/49
                                   306  " 
                                   307  
    000077                         308  zeroing_page:
                                   309  	savexx	.ret
    000077  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000100  aa  6 00000 2541 00         	spri	sp|0
    000101  aa  6 00040 7531 00         	sreg	sp|32
    000102  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    000103  aa   000001 2350 07    310  	lda	1,dl		set entry sw
    000104  0a   000112 7100 00    311  	tra	zpag_rpag_merge
                                   312  
    000105                         313  reverting_page:
                                   314  	savexx	.ret
    000105  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000106  aa  6 00000 2541 00         	spri	sp|0
    000107  aa  6 00040 7531 00         	sreg	sp|32
    000110  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    000111  aa   000002 2350 07    315  	lda	2,dl
    000112                         316  zpag_rpag_merge:
    000112  aa  6 00135 7551 00    317  	sta	temp+1
                                   318  
    000113  0a   002062 7070 00    319  	tsx7	get_ast_params
    000114  0a   002055 7070 00    320  	tsx7	get_pageno
    000115  aa  6 00130 2351 00    321  	lda	arg+18
                                   322  
    000116  0a   002107 7000 00    323  	tsx0	setup_pvtname
                                   324  
                                   325  	call_syserr_binary 0,sp|binary_buffer,zerpag,gseg_info,
                                   326  	     (page_fault: ^[Zeroing^;Reverting^] page on ^a_^a),t1f,devname,driveno
                                        
                                        	new_frame
    000117  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000120  aa  7 00040 2721 20
    000121  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000122  0a   002211 7070 00         	tsx7	gseg_info
                                        
                                        
    000123  0a   002336 3500 00         	eppap	=0
    000124  aa  6 00052 2501 00         	spriap	sp|syserr_arg_list+2
                                        
    000125  0a   002142 7070 00         	tsx7	interpreter
    000126  0a   000136 000006          	zero	*+2+8-2,6
    000127  aa   000020 000004          	zero	2*8,4
                                        
    000130  00   000140 002332          	zero	.._00002.sbc,fx
    000131  00   000141 002332          	zero	.._00002.sbl,fx
    000132  00   000142 000156          	zero	.._00002.msg,.._00002.dsc
                                        	iword_t1f
    000133  a0   777643 002335          	zero	-(temp+1),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    000134  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000135  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    000136  aa  6 00140 3501 00         	eppap	sp|binary_buffer
    000137  0a   002172 7070 00         	tsx7	binary_setup
                                        			"no return
                                        
    000140  aa   000000 000013          .._00002.sbc:	vfd	36/SB_zerpag
    000141  aa   000000 000024          .._00002.sbl:	vfd	36/SBL_zerpag
                                        
                                        	message	.._00002,(page_fault: ^[Zeroing^;Reverting^] page on ^a_^a)
    000142  aa  160 141 147 145         .._00002.msg:aci   "page_fault: ^[Zeroing^;Reverting^] page on ^a_^a"
    000143  aa  137 146 141 165
    000144  aa  154 164 072 040
    000145  aa  136 133 132 145
    000146  aa  162 157 151 156
    000147  aa  147 136 073 122
    000150  aa  145 166 145 162
    000151  aa  164 151 156 147
    000152  aa  136 135 040 160
    000153  aa  141 147 145 040
    000154  aa  157 156 040 136
    000155  aa  141 137 136 141
    000156  aa   524000 000060          .._00002.dsc:	vfd	1/1,6/char,1/0,4/0,24/48
                                   327  
                                   328  
                                   329  "
    000157                         330  deleting_mm_frame:
                                   331  	savexx	.ret
    000157  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000160  aa  6 00000 2541 00         	spri	sp|0
    000161  aa  6 00040 7531 00         	sreg	sp|32
    000162  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    000163  0a   002077 7000 00    332  	tsx0	setup_controller
                                   333  	call_syserr_binary 3,sp|binary_buffer,mmdam,movemm,
                                   334  		(page_fault: Deleting main memory at ^o, SCU ^a, due to parity errors.),core_add,ctrlrtag
                                        
                                        	new_frame
    000164  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000165  aa  7 00040 2721 20
    000166  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000167  0a   002247 7070 00         	tsx7	movemm
                                        
                                        
    000170  0a   002340 3500 00         	eppap	=3
    000171  aa  6 00052 2501 00         	spriap	sp|syserr_arg_list+2
                                        
    000172  0a   002142 7070 00         	tsx7	interpreter
    000173  0a   000202 000006          	zero	*+2+7-2,6
    000174  aa   000016 000004          	zero	2*7,4
                                        
    000175  00   000204 002332          	zero	.._00003.sbc,fx
    000176  00   000205 002332          	zero	.._00003.sbl,fx
    000177  00   000206 000230          	zero	.._00003.msg,.._00003.dsc
                                        	iword_core_add
    000200  a0   777605 002335          	zero	-(core_add),=v1/1,6/fixed,17/0,12/17
                                        	iword_ctrlrtag
    000201  a0   777644 002341          	zero	-(temp),=v1/1,6/char,17/0,12/1
                                        
    000202  aa  6 00140 3501 00         	eppap	sp|binary_buffer
    000203  0a   002172 7070 00         	tsx7	binary_setup
                                        			"no return
                                        
    000204  aa   000000 000025          .._00003.sbc:	vfd	36/SB_mmdam
    000205  aa   000000 000002          .._00003.sbl:	vfd	36/SBL_mmdam
                                        
                                        	message	.._00003,(page_fault: Deleting main memory at ^o, SCU ^a, due to parity errors.)
    000206  aa  160 141 147 145         .._00003.msg:aci   "page_fault: Deleting main memory at ^o, SCU ^a, due to parity errors."
    000207  aa  137 146 141 165
    000210  aa  154 164 072 040
    000211  aa  104 145 154 145
    000212  aa  164 151 156 147
    000213  aa  040 155 141 151
    000214  aa  156 040 155 145
    000215  aa  155 157 162 171
    000216  aa  040 141 164 040
    000217  aa  136 157 054 040
    000220  aa  123 103 125 040
    000221  aa  136 141 054 040
    000222  aa  144 165 145 040
    000223  aa  164 157 040 160
    000224  aa  141 162 151 164
    000225  aa  171 040 145 162
    000226  aa  162 157 162 163
    000227  aa  056 000 000 000
    000230  aa   524000 000105          .._00003.dsc:	vfd	1/1,6/char,1/0,4/0,24/69
                                   335  
                                   336  "
    000231                         337  page_move_parity:
                                   338  	savexx	.ret
    000231  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000232  aa  6 00000 2541 00         	spri	sp|0
    000233  aa  6 00040 7531 00         	sreg	sp|32
    000234  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    000235  aa   000000 2350 07    339  	lda	0,dl		info code
    000236  0a   000244 7100 00    340  	tra	evpp_merge
                                   341  
    000237                         342  wired_parity_error:
                                   343  	savexx	none		fatal
    000237  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000240  aa  6 00000 2541 00         	spri	sp|0
    000241  aa  6 00040 7531 00         	sreg	sp|32
    000242  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000243  aa   000001 2350 07    344  	lda	1,dl
    000244                         345  evpp_merge:
    000244  aa  6 00135 7551 00    346  	sta	temp+1
    000245  0a   002077 7000 00    347  	tsx0	setup_controller
    000246  0a   002062 7070 00    348  	tsx7	get_ast_params
    000247  0a   002055 7070 00    349  	tsx7	get_pageno
    000250  aa  6 00130 2351 00    350  	lda	arg+18
    000251  0a   002107 7000 00    351  	tsx0	setup_pvtname
                                   352  
                                   353  	call_syserr_binary temp+1,sp|binary_buffer,random_segdamage,gseg_info,
                                   354  	     (evict_page: ^[fatal ^]parity error moving page, frame at ^o, SCU ^a),
                                   355  	     t1f,core_add,ctrlrtag
                                        
                                        	new_frame
    000252  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000253  aa  7 00040 2721 20
    000254  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000255  0a   002211 7070 00         	tsx7	gseg_info
                                        
                                        
    000256  aa  6 00135 3501 00         	eppap	temp+1
    000257  aa  6 00052 2501 00         	spriap	sp|syserr_arg_list+2
                                        
    000260  0a   002142 7070 00         	tsx7	interpreter
    000261  0a   000271 000006          	zero	*+2+8-2,6
    000262  aa   000020 000004          	zero	2*8,4
                                        
    000263  00   000273 002332          	zero	.._00004.sbc,fx
    000264  00   000274 002332          	zero	.._00004.sbl,fx
    000265  00   000275 000316          	zero	.._00004.msg,.._00004.dsc
                                        	iword_t1f
    000266  a0   777643 002335          	zero	-(temp+1),=v1/1,6/fixed,17/0,12/17
                                        	iword_core_add
    000267  a0   777605 002335          	zero	-(core_add),=v1/1,6/fixed,17/0,12/17
                                        	iword_ctrlrtag
    000270  a0   777644 002341          	zero	-(temp),=v1/1,6/char,17/0,12/1
                                        
    000271  aa  6 00140 3501 00         	eppap	sp|binary_buffer
    000272  0a   002172 7070 00         	tsx7	binary_setup
                                        			"no return
                                        
    000273  aa   000000 000020          .._00004.sbc:	vfd	36/SB_random_segdamage
    000274  aa   000000 000024          .._00004.sbl:	vfd	36/SBL_random_segdamage
                                        
                                        	message	.._00004,(evict_page: ^[fatal ^]parity error moving page, frame at ^o, SCU ^a)
    000275  aa  145 166 151 143         .._00004.msg:aci   "evict_page: ^[fatal ^]parity error moving page, frame at ^o, SCU ^a"
    000276  aa  164 137 160 141
    000277  aa  147 145 072 040
    000300  aa  136 133 146 141
    000301  aa  164 141 154 040
    000302  aa  136 135 160 141
    000303  aa  162 151 164 171
    000304  aa  040 145 162 162
    000305  aa  157 162 040 155
    000306  aa  157 166 151 156
    000307  aa  147 040 160 141
    000310  aa  147 145 054 040
    000311  aa  146 162 141 155
    000312  aa  145 040 141 164
    000313  aa  040 136 157 054
    000314  aa  040 123 103 125
    000315  aa  040 136 141 000
    000316  aa   524000 000103          .._00004.dsc:	vfd	1/1,6/char,1/0,4/0,24/67
                                   356  
                                   357  " 
                                   358  
                                   359  
    000317                         360  page_fault_error:
                                   361  	savexx	none		TSX6 from page_fault, don't go
    000317  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000320  aa  6 00000 2541 00         	spri	sp|0
    000321  aa  6 00040 7531 00         	sreg	sp|32
    000322  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000323  aa   000001 2350 07    362  	lda	=1,dl		function
    000324  aa   000001 2360 07    363  	ldq	=1,dl		crash code
    000325  0a   000334 7100 00    364  	tra	pferr.join
    000326                         365  non_fatal_error:
                                   366  	savexx	.2ret		TSX6 from page_fault
    000326  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000327  aa  6 00000 2541 00         	spri	sp|0
    000330  aa  6 00040 7531 00         	sreg	sp|32
    000331  aa  6 00025 7461 00         	stx	.2ret,sp|stack_frame.return_ptr+1
    000332  aa   000002 2350 07    367  	lda	=2,dl		function
    000333  aa   000000 2360 07    368  	ldq	=0,dl
    000334                         369  pferr.join:
    000334  aa  6 00106 7551 00    370  	sta	arg
    000335  aa  6 00107 7561 00    371  	stq	arg+1
    000336  aa  6 00110 4501 00    372  	stz	arg+2		x5 has loc in page_fault
    000337  aa  6 00110 4451 00    373  	sxl5	arg+2
                                   374  
                                   375  	call_syserr arg+1,(page_fault: ^[^;non^]fatal error at loc ^o),argf,a2f
                                        
                                        	new_frame
    000340  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000341  aa  7 00040 2721 20
    000342  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000343  0a   002142 7070 00         	tsx7	interpreter
    000344  0a   000352 000002          	zero	*+2+4,2
    000345  aa   000010 000004          	zero	2*4,4
                                        
    000346  a0   777671 002332          	zero	-(arg+1),fx
                                        
    000347  00   000353 000366          	zero	.._00005.msg,.._00005.dsc
                                        	iword_argf
    000350  a0   777672 002335          	zero	-(arg),=v1/1,6/fixed,17/0,12/17
                                        	iword_a2f
    000351  a0   777670 002335          	zero	-(arg+2),=v1/1,6/fixed,17/0,12/17
                                        
    000352  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00005,(page_fault: ^[^;non^]fatal error at loc ^o)
    000353  aa  160 141 147 145         .._00005.msg:aci   "page_fault: ^[^;non^]fatal error at loc ^o"
    000354  aa  137 146 141 165
    000355  aa  154 164 072 040
    000356  aa  136 133 136 073
    000357  aa  156 157 156 136
    000360  aa  135 146 141 164
    000361  aa  141 154 040 145
    000362  aa  162 162 157 162
    000363  aa  040 141 164 040
    000364  aa  154 157 143 040
    000365  aa  136 157 000 000
    000366  aa   524000 000052          .._00005.dsc:	vfd	1/1,6/char,1/0,4/0,24/42
                                   376  
                                   377  "
                                   378  
    000367                         379  error_in_done:
                                   380  	savexx	none		TZE from page_fault
    000367  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000370  aa  6 00000 2541 00         	spri	sp|0
    000371  aa  6 00040 7531 00         	sreg	sp|32
    000372  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000373  aa  6 00106 4501 00    381  	stz	arg
    000374  aa  6 00106 4421 00    382  	sxl	.ptw,arg		ptr to ptw
                                   383  
                                   384  	call_syserr 1,(page_fault: fatal error in done, ptp ^o),argf
                                        
                                        	new_frame
    000375  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000376  aa  7 00040 2721 20
    000377  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000400  0a   002142 7070 00         	tsx7	interpreter
    000401  0a   000406 000002          	zero	*+2+3,2
    000402  aa   000006 000004          	zero	2*3,4
                                        
    000403  00   002334 002332          	zero	=1,fx
                                        
    000404  00   000407 000421          	zero	.._00006.msg,.._00006.dsc
                                        	iword_argf
    000405  a0   777672 002335          	zero	-(arg),=v1/1,6/fixed,17/0,12/17
                                        
    000406  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00006,(page_fault: fatal error in done, ptp ^o)
    000407  aa  160 141 147 145         .._00006.msg:aci   "page_fault: fatal error in done, ptp ^o"
    000410  aa  137 146 141 165
    000411  aa  154 164 072 040
    000412  aa  146 141 164 141
    000413  aa  154 040 145 162
    000414  aa  162 157 162 040
    000415  aa  151 156 040 144
    000416  aa  157 156 145 054
    000417  aa  040 160 164 160
    000420  aa  040 136 157 000
    000421  aa   524000 000047          .._00006.dsc:	vfd	1/1,6/char,1/0,4/0,24/39
                                   385  " 
                                   386  
    000422                         387  out_of_core:
                                   388  	savexx	none		TPL from page_fault
    000422  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000423  aa  6 00000 2541 00         	spri	sp|0
    000424  aa  6 00040 7531 00         	sreg	sp|32
    000425  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   389  
                                   390  	call_syserr 1,(page_fault: out of main memory)
                                        
                                        	new_frame
    000426  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000427  aa  7 00040 2721 20
    000430  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000431  0a   002142 7070 00         	tsx7	interpreter
    000432  0a   000436 000002          	zero	*+2+2,2
    000433  aa   000004 000004          	zero	2*2,4
                                        
    000434  00   002334 002332          	zero	=1,fx
                                        
    000435  00   000437 000447          	zero	.._00007.msg,.._00007.dsc
                                        
    000436  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00007,(page_fault: out of main memory)
    000437  aa  160 141 147 145         .._00007.msg:aci   "page_fault: out of main memory"
    000440  aa  137 146 141 165
    000441  aa  154 164 072 040
    000442  aa  157 165 164 040
    000443  aa  157 146 040 155
    000444  aa  141 151 156 040
    000445  aa  155 145 155 157
    000446  aa  162 171 000 000
    000447  aa   524000 000036          .._00007.dsc:	vfd	1/1,6/char,1/0,4/0,24/30
                                   391  " 
                                   392  
                                   393  
    000450                         394  ptl_mylock:
                                   395  	savexx	none		TZE from page_fault
    000450  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000451  aa  6 00000 2541 00         	spri	sp|0
    000452  aa  6 00040 7531 00         	sreg	sp|32
    000453  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   396  
                                   397  	call_syserr 1,(page_fault: mylock on global lock)
                                        
                                        	new_frame
    000454  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000455  aa  7 00040 2721 20
    000456  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000457  0a   002142 7070 00         	tsx7	interpreter
    000460  0a   000464 000002          	zero	*+2+2,2
    000461  aa   000004 000004          	zero	2*2,4
                                        
    000462  00   002334 002332          	zero	=1,fx
                                        
    000463  00   000465 000476          	zero	.._00010.msg,.._00010.dsc
                                        
    000464  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00010,(page_fault: mylock on global lock)
    000465  aa  160 141 147 145         .._00010.msg:aci   "page_fault: mylock on global lock"
    000466  aa  137 146 141 165
    000467  aa  154 164 072 040
    000470  aa  155 171 154 157
    000471  aa  143 153 040 157
    000472  aa  156 040 147 154
    000473  aa  157 142 141 154
    000474  aa  040 154 157 143
    000475  aa  153 000 000 000
    000476  aa   524000 000041          .._00010.dsc:	vfd	1/1,6/char,1/0,4/0,24/33
                                   398  " 
                                   399  
    000477                         400  device_error:
                                   401  	savexx	.2ret		TSX6 from page_fault
    000477  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000500  aa  6 00000 2541 00         	spri	sp|0
    000501  aa  6 00040 7531 00         	sreg	sp|32
    000502  aa  6 00025 7461 00         	stx	.2ret,sp|stack_frame.return_ptr+1
    000503  0a   002334 2350 00    402  	lda	=1	"ECCH"	
    000504  aa  6 00110 7551 00    403  	sta	arg+2
    000505  aa  3 00004 2351 13    404  	lda	ast|aste.pvtx_word,.aste
    000506  aa   000022 7710 00    405  	arl	aste.pvtx_shift
    000507  aa   000777 3750 07    406  	ana	aste.pvtx_mask,dl
    000510                         407  deverr.got_pvtx:
    000510  0a   002107 7000 00    408  	tsx0	setup_pvtname
                                   409  
                                   410  	call_syserr_binary 1,U|arg+18,read_nc,gseg_info,
                                   411  	     (page_fault: device read not complete ^a_^a ^w),
                                   412  	     devname,driveno,devadd
                                        
                                        	new_frame
    000511  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000512  aa  7 00040 2721 20
    000513  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000514  0a   002211 7070 00         	tsx7	gseg_info
                                        
                                        
    000515  0a   002334 3500 00         	eppap	=1
    000516  aa  6 00052 2501 00         	spriap	sp|syserr_arg_list+2
                                        
    000517  0a   002142 7070 00         	tsx7	interpreter
    000520  0a   000530 000006          	zero	*+2+8-2,6
    000521  aa   000020 000004          	zero	2*8,4
                                        
    000522  00   000532 002332          	zero	.._00011.sbc,fx
    000523  00   000533 002332          	zero	.._00011.sbl,fx
    000524  00   000534 000550          	zero	.._00011.msg,.._00011.dsc
                                        	iword_devname
    000525  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000526  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        	iword_devadd
    000527  a0   777600 002335          	zero	-(devadd),=v1/1,6/fixed,17/0,12/17
                                        
    000530  aa  2 00130 3501 00         	eppap	U|arg+18
    000531  0a   002172 7070 00         	tsx7	binary_setup
                                        			"no return
                                        
    000532  aa   000000 000021          .._00011.sbc:	vfd	36/SB_read_nc
    000533  aa   000000 000002          .._00011.sbl:	vfd	36/SBL_read_nc
                                        
                                        	message	.._00011,(page_fault: device read not complete ^a_^a ^w)
    000534  aa  160 141 147 145         .._00011.msg:aci   "page_fault: device read not complete ^a_^a ^w"
    000535  aa  137 146 141 165
    000536  aa  154 164 072 040
    000537  aa  144 145 166 151
    000540  aa  143 145 040 162
    000541  aa  145 141 144 040
    000542  aa  156 157 164 040
    000543  aa  143 157 155 160
    000544  aa  154 145 164 145
    000545  aa  040 136 141 137
    000546  aa  136 141 040 136
    000547  aa  167 000 000 000
    000550  aa   524000 000055          .._00011.dsc:	vfd	1/1,6/char,1/0,4/0,24/45
                                   413  " 
    000551                         414  volmap_async_error:
                                   415  	savexx	none
    000551  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000552  aa  6 00000 2541 00         	spri	sp|0
    000553  aa  6 00040 7531 00         	sreg	sp|32
    000554  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000555  aa  6 00172 2351 00    416  	lda	pvtx
    000556  0a   002107 7000 00    417  	tsx0	setup_pvtname
                                   418  	call_syserr 1,(free_store: volmap_seg async error for ^a_^a),devname,driveno
                                        
                                        	new_frame
    000557  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000560  aa  7 00040 2721 20
    000561  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000562  0a   002142 7070 00         	tsx7	interpreter
    000563  0a   000571 000002          	zero	*+2+4,2
    000564  aa   000010 000004          	zero	2*4,4
                                        
    000565  00   002334 002332          	zero	=1,fx
                                        
    000566  00   000572 000605          	zero	.._00012.msg,.._00012.dsc
                                        	iword_devname
    000567  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000570  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    000571  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00012,(free_store: volmap_seg async error for ^a_^a)
    000572  aa  146 162 145 145         .._00012.msg:aci   "free_store: volmap_seg async error for ^a_^a"
    000573  aa  137 163 164 157
    000574  aa  162 145 072 040
    000575  aa  166 157 154 155
    000576  aa  141 160 137 163
    000577  aa  145 147 040 141
    000600  aa  163 171 156 143
    000601  aa  040 145 162 162
    000602  aa  157 162 040 146
    000603  aa  157 162 040 136
    000604  aa  141 137 136 141
    000605  aa   524000 000054          .._00012.dsc:	vfd	1/1,6/char,1/0,4/0,24/44
                                   419  
    000606                         420  deposit_invalid_addtype:
                                   421  	savexx	none
    000606  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000607  aa  6 00000 2541 00         	spri	sp|0
    000610  aa  6 00040 7531 00         	sreg	sp|32
    000611  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000612  aa  6 00200 7551 00    422  	sta	devadd
    000613  aa  6 00114 2521 00    423  	spribp	arg+6
    000614  0a   002105 7000 00    424  	tsx0	setup_pvtname_from_pvtep
                                   425  	call_syserr 1,(free_store: Deposit non-disk address ^w on ^a_^a),devadd,devname,driveno
                                        
                                        	new_frame
    000615  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000616  aa  7 00040 2721 20
    000617  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000620  0a   002142 7070 00         	tsx7	interpreter
    000621  0a   000630 000002          	zero	*+2+5,2
    000622  aa   000012 000004          	zero	2*5,4
                                        
    000623  00   002334 002332          	zero	=1,fx
                                        
    000624  00   000631 000645          	zero	.._00013.msg,.._00013.dsc
                                        	iword_devadd
    000625  a0   777600 002335          	zero	-(devadd),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    000626  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000627  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    000630  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00013,(free_store: Deposit non-disk address ^w on ^a_^a)
    000631  aa  146 162 145 145         .._00013.msg:aci   "free_store: Deposit non-disk address ^w on ^a_^a"
    000632  aa  137 163 164 157
    000633  aa  162 145 072 040
    000634  aa  104 145 160 157
    000635  aa  163 151 164 040
    000636  aa  156 157 156 055
    000637  aa  144 151 163 153
    000640  aa  040 141 144 144
    000641  aa  162 145 163 163
    000642  aa  040 136 167 040
    000643  aa  157 156 040 136
    000644  aa  141 137 136 141
    000645  aa   524000 000060          .._00013.dsc:	vfd	1/1,6/char,1/0,4/0,24/48
                                   426  
    000646                         427  address_out_of_range:
                                   428  	savexx	none
    000646  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000647  aa  6 00000 2541 00         	spri	sp|0
    000650  aa  6 00040 7531 00         	sreg	sp|32
    000651  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000652  aa  6 00114 2521 00    429  	spribp	arg+6
    000653  0a   002105 7000 00    430  	tsx0	setup_pvtname_from_pvtep
                                   431  	call_syserr 1,(free_store: Deposit/withdraw address ^w out of paging region on ^a_^a.),devadd,devname,driveno
                                        
                                        	new_frame
    000654  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000655  aa  7 00040 2721 20
    000656  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000657  0a   002142 7070 00         	tsx7	interpreter
    000660  0a   000667 000002          	zero	*+2+5,2
    000661  aa   000012 000004          	zero	2*5,4
                                        
    000662  00   002334 002332          	zero	=1,fx
                                        
    000663  00   000670 000712          	zero	.._00014.msg,.._00014.dsc
                                        	iword_devadd
    000664  a0   777600 002335          	zero	-(devadd),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    000665  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000666  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    000667  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00014,(free_store: Deposit/withdraw address ^w out of paging region on ^a_^a.)
    000670  aa  146 162 145 145         .._00014.msg:aci   "free_store: Deposit/withdraw address ^w out of paging region on ^a_^a."
    000671  aa  137 163 164 157
    000672  aa  162 145 072 040
    000673  aa  104 145 160 157
    000674  aa  163 151 164 057
    000675  aa  167 151 164 150
    000676  aa  144 162 141 167
    000677  aa  040 141 144 144
    000700  aa  162 145 163 163
    000701  aa  040 136 167 040
    000702  aa  157 165 164 040
    000703  aa  157 146 040 160
    000704  aa  141 147 151 156
    000705  aa  147 040 162 145
    000706  aa  147 151 157 156
    000707  aa  040 157 156 040
    000710  aa  136 141 137 136
    000711  aa  141 056 000 000
    000712  aa   524000 000106          .._00014.dsc:	vfd	1/1,6/char,1/0,4/0,24/70
                                   432  
    000713                         433  stock_out_of_synch:
                                   434  	savexx	none
    000713  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000714  aa  6 00000 2541 00         	spri	sp|0
    000715  aa  6 00040 7531 00         	sreg	sp|32
    000716  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    000717  aa  6 00114 2521 00    435  	spribp	arg+6
    000720  aa  6 00116 2535 00    436  	spribb	arg+8
    000721  0a   002105 7000 00    437  	tsx0	setup_pvtname_from_pvtep
                                   438  	call_syserr 1,(free_store: PVTE/Stock out of synch on ^a_^a. stockp=^p.),devname,driveno,stockp
                                        
                                        	new_frame
    000722  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000723  aa  7 00040 2721 20
    000724  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000725  0a   002142 7070 00         	tsx7	interpreter
    000726  0a   000735 000002          	zero	*+2+5,2
    000727  aa   000012 000004          	zero	2*5,4
                                        
    000730  00   002334 002332          	zero	=1,fx
                                        
    000731  00   000736 000754          	zero	.._00015.msg,.._00015.dsc
                                        	iword_devname
    000732  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    000733  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        	iword_stockp
    000734  a0   777662 002342          	zero	-(arg+8),=v1/1,6/ptr,17/0,12/17
                                        
    000735  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00015,(free_store: PVTE/Stock out of synch on ^a_^a. stockp=^p.)
    000736  aa  146 162 145 145         .._00015.msg:aci   "free_store: PVTE/Stock out of synch on ^a_^a. stockp=^p."
    000737  aa  137 163 164 157
    000740  aa  162 145 072 040
    000741  aa  120 126 124 105
    000742  aa  057 123 164 157
    000743  aa  143 153 040 157
    000744  aa  165 164 040 157
    000745  aa  146 040 163 171
    000746  aa  156 143 150 040
    000747  aa  157 156 040 136
    000750  aa  141 137 136 141
    000751  aa  056 040 163 164
    000752  aa  157 143 153 160
    000753  aa  075 136 160 056
    000754  aa   524000 000070          .._00015.dsc:	vfd	1/1,6/char,1/0,4/0,24/56
                                   439  
    000755                         440  invalid_deposit_list_args:
                                   441  	savexx	none
    000755  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    000756  aa  6 00000 2541 00         	spri	sp|0
    000757  aa  6 00040 7531 00         	sreg	sp|32
    000760  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   442  	call_syserr 1,(free_store: Invalid call to free_store$deposit_list.)
                                        
                                        	new_frame
    000761  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    000762  aa  7 00040 2721 20
    000763  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    000764  0a   002142 7070 00         	tsx7	interpreter
    000765  0a   000771 000002          	zero	*+2+2,2
    000766  aa   000004 000004          	zero	2*2,4
                                        
    000767  00   002334 002332          	zero	=1,fx
                                        
    000770  00   000772 001007          	zero	.._00016.msg,.._00016.dsc
                                        
    000771  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00016,(free_store: Invalid call to free_store$deposit_list.)
    000772  aa  146 162 145 145         .._00016.msg:aci   "free_store: Invalid call to free_store$deposit_list."
    000773  aa  137 163 164 157
    000774  aa  162 145 072 040
    000775  aa  111 156 166 141
    000776  aa  154 151 144 040
    000777  aa  143 141 154 154
    001000  aa  040 164 157 040
    001001  aa  146 162 145 145
    001002  aa  137 163 164 157
    001003  aa  162 145 044 144
    001004  aa  145 160 157 163
    001005  aa  151 164 137 154
    001006  aa  151 163 164 056
    001007  aa   524000 000064          .._00016.dsc:	vfd	1/1,6/char,1/0,4/0,24/52
    001010                         443  scav_stacq_fails:
                                   444  	savexx	none
    001010  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001011  aa  6 00000 2541 00         	spri	sp|0
    001012  aa  6 00040 7531 00         	sreg	sp|32
    001013  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001014  aa  6 00114 2521 00    445  	spribp	arg+6
    001015  0a   002105 7000 00    446  	tsx0	setup_pvtname_from_pvtep
                                   447  	call_syserr 1,(free_store: Scavenger STACQ fails on ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001016  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001017  aa  7 00040 2721 20
    001020  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001021  0a   002142 7070 00         	tsx7	interpreter
    001022  0a   001030 000002          	zero	*+2+4,2
    001023  aa   000010 000004          	zero	2*4,4
                                        
    001024  00   002334 002332          	zero	=1,fx
                                        
    001025  00   001031 001044          	zero	.._00017.msg,.._00017.dsc
                                        	iword_devname
    001026  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001027  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001030  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00017,(free_store: Scavenger STACQ fails on ^a_^a.)
    001031  aa  146 162 145 145         .._00017.msg:aci   "free_store: Scavenger STACQ fails on ^a_^a."
    001032  aa  137 163 164 157
    001033  aa  162 145 072 040
    001034  aa  123 143 141 166
    001035  aa  145 156 147 145
    001036  aa  162 040 123 124
    001037  aa  101 103 121 040
    001040  aa  146 141 151 154
    001041  aa  163 040 157 156
    001042  aa  040 136 141 137
    001043  aa  136 141 056 000
    001044  aa   524000 000053          .._00017.dsc:	vfd	1/1,6/char,1/0,4/0,24/43
                                   448  
    001045                         449  no_free_dm_entries:
                                   450  	savexx	none
    001045  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001046  aa  6 00000 2541 00         	spri	sp|0
    001047  aa  6 00040 7531 00         	sreg	sp|32
    001050  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   451  	call_syserr 1,(page_synch: Out of free entries in dm_journal_seg_.)
                                        
                                        	new_frame
    001051  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001052  aa  7 00040 2721 20
    001053  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001054  0a   002142 7070 00         	tsx7	interpreter
    001055  0a   001061 000002          	zero	*+2+2,2
    001056  aa   000004 000004          	zero	2*2,4
                                        
    001057  00   002334 002332          	zero	=1,fx
                                        
    001060  00   001062 001077          	zero	.._00020.msg,.._00020.dsc
                                        
    001061  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00020,(page_synch: Out of free entries in dm_journal_seg_.)
    001062  aa  160 141 147 145         .._00020.msg:aci   "page_synch: Out of free entries in dm_journal_seg_."
    001063  aa  137 163 171 156
    001064  aa  143 150 072 040
    001065  aa  117 165 164 040
    001066  aa  157 146 040 146
    001067  aa  162 145 145 040
    001070  aa  145 156 164 162
    001071  aa  151 145 163 040
    001072  aa  151 156 040 144
    001073  aa  155 137 152 157
    001074  aa  165 162 156 141
    001075  aa  154 137 163 145
    001076  aa  147 137 056 000
    001077  aa   524000 000063          .._00020.dsc:	vfd	1/1,6/char,1/0,4/0,24/51
                                   452  
    001100                         453  dm_journal_seg_problem:
                                   454  	savexx	none
    001100  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001101  aa  6 00000 2541 00         	spri	sp|0
    001102  aa  6 00040 7531 00         	sreg	sp|32
    001103  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   455  	call_syserr 1,(page_synch: dm_journal_seg inconsistent.)
                                        
                                        	new_frame
    001104  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001105  aa  7 00040 2721 20
    001106  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001107  0a   002142 7070 00         	tsx7	interpreter
    001110  0a   001114 000002          	zero	*+2+2,2
    001111  aa   000004 000004          	zero	2*2,4
                                        
    001112  00   002334 002332          	zero	=1,fx
                                        
    001113  00   001115 001127          	zero	.._00021.msg,.._00021.dsc
                                        
    001114  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00021,(page_synch: dm_journal_seg inconsistent.)
    001115  aa  160 141 147 145         .._00021.msg:aci   "page_synch: dm_journal_seg inconsistent."
    001116  aa  137 163 171 156
    001117  aa  143 150 072 040
    001120  aa  144 155 137 152
    001121  aa  157 165 162 156
    001122  aa  141 154 137 163
    001123  aa  145 147 040 151
    001124  aa  156 143 157 156
    001125  aa  163 151 163 164
    001126  aa  145 156 164 056
    001127  aa   524000 000050          .._00021.dsc:	vfd	1/1,6/char,1/0,4/0,24/40
                                   456  " 
    001130                         457  volmap_stacq_fails:
                                   458  	savexx	none
    001130  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001131  aa  6 00000 2541 00         	spri	sp|0
    001132  aa  6 00040 7531 00         	sreg	sp|32
    001133  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001134  aa  6 00114 2521 00    459  	spribp	arg+6
    001135  0a   002105 7000 00    460  	tsx0	setup_pvtname_from_pvtep
                                   461  	call_syserr 1,(lock_volmap: STACQ fails on ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001136  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001137  aa  7 00040 2721 20
    001140  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001141  0a   002142 7070 00         	tsx7	interpreter
    001142  0a   001150 000002          	zero	*+2+4,2
    001143  aa   000010 000004          	zero	2*4,4
                                        
    001144  00   002334 002332          	zero	=1,fx
                                        
    001145  00   001151 001162          	zero	.._00022.msg,.._00022.dsc
                                        	iword_devname
    001146  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001147  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001150  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00022,(lock_volmap: STACQ fails on ^a_^a.)
    001151  aa  154 157 143 153         .._00022.msg:aci   "lock_volmap: STACQ fails on ^a_^a."
    001152  aa  137 166 157 154
    001153  aa  155 141 160 072
    001154  aa  040 123 124 101
    001155  aa  103 121 040 146
    001156  aa  141 151 154 163
    001157  aa  040 157 156 040
    001160  aa  136 141 137 136
    001161  aa  141 056 000 000
    001162  aa   524000 000042          .._00022.dsc:	vfd	1/1,6/char,1/0,4/0,24/34
                                   462  
    001163                         463  volmap_mylock:
                                   464  	savexx	none
    001163  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001164  aa  6 00000 2541 00         	spri	sp|0
    001165  aa  6 00040 7531 00         	sreg	sp|32
    001166  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001167  aa  6 00114 2521 00    465  	spribp	arg+6
    001170  0a   002105 7000 00    466  	tsx0	setup_pvtname_from_pvtep
                                   467  	call_syserr 1,(lock_volmap: MYLOCK on volmap lock for ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001171  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001172  aa  7 00040 2721 20
    001173  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001174  0a   002142 7070 00         	tsx7	interpreter
    001175  0a   001203 000002          	zero	*+2+4,2
    001176  aa   000010 000004          	zero	2*4,4
                                        
    001177  00   002334 002332          	zero	=1,fx
                                        
    001200  00   001204 001220          	zero	.._00023.msg,.._00023.dsc
                                        	iword_devname
    001201  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001202  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001203  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00023,(lock_volmap: MYLOCK on volmap lock for ^a_^a.)
    001204  aa  154 157 143 153         .._00023.msg:aci   "lock_volmap: MYLOCK on volmap lock for ^a_^a."
    001205  aa  137 166 157 154
    001206  aa  155 141 160 072
    001207  aa  040 115 131 114
    001210  aa  117 103 113 040
    001211  aa  157 156 040 166
    001212  aa  157 154 155 141
    001213  aa  160 040 154 157
    001214  aa  143 153 040 146
    001215  aa  157 162 040 136
    001216  aa  141 137 136 141
    001217  aa  056 000 000 000
    001220  aa   524000 000055          .._00023.dsc:	vfd	1/1,6/char,1/0,4/0,24/45
                                   468  
                                   469  " 
    001221                         470  deposit_zero_address:
                                   471  	savexx	none
    001221  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001222  aa  6 00000 2541 00         	spri	sp|0
    001223  aa  6 00040 7531 00         	sreg	sp|32
    001224  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   472  	call_syserr 1,(stock: deposit zero address.)
                                        
                                        	new_frame
    001225  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001226  aa  7 00040 2721 20
    001227  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001230  0a   002142 7070 00         	tsx7	interpreter
    001231  0a   001235 000002          	zero	*+2+2,2
    001232  aa   000004 000004          	zero	2*2,4
                                        
    001233  00   002334 002332          	zero	=1,fx
                                        
    001234  00   001236 001245          	zero	.._00024.msg,.._00024.dsc
                                        
    001235  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00024,(stock: deposit zero address.)
    001236  aa  163 164 157 143         .._00024.msg:aci   "stock: deposit zero address."
    001237  aa  153 072 040 144
    001240  aa  145 160 157 163
    001241  aa  151 164 040 172
    001242  aa  145 162 157 040
    001243  aa  141 144 144 162
    001244  aa  145 163 163 056
    001245  aa   524000 000034          .._00024.dsc:	vfd	1/1,6/char,1/0,4/0,24/28
                                   473  
                                   474  " 
    001246                         475  volmap_inconsistent:
                                   476  	savexx	none
    001246  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001247  aa  6 00000 2541 00         	spri	sp|0
    001250  aa  6 00040 7531 00         	sreg	sp|32
    001251  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001252  aa  6 00114 2521 00    477  	spribp	arg+6
    001253  0a   002105 7000 00    478  	tsx0	setup_pvtname_from_pvtep
                                   479  	call_syserr 1,(volmap: Volume Map inconsistent on ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001254  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001255  aa  7 00040 2721 20
    001256  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001257  0a   002142 7070 00         	tsx7	interpreter
    001260  0a   001266 000002          	zero	*+2+4,2
    001261  aa   000010 000004          	zero	2*4,4
                                        
    001262  00   002334 002332          	zero	=1,fx
                                        
    001263  00   001267 001302          	zero	.._00025.msg,.._00025.dsc
                                        	iword_devname
    001264  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001265  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001266  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00025,(volmap: Volume Map inconsistent on ^a_^a.)
    001267  aa  166 157 154 155         .._00025.msg:aci   "volmap: Volume Map inconsistent on ^a_^a."
    001270  aa  141 160 072 040
    001271  aa  126 157 154 165
    001272  aa  155 145 040 115
    001273  aa  141 160 040 151
    001274  aa  156 143 157 156
    001275  aa  163 151 163 164
    001276  aa  145 156 164 040
    001277  aa  157 156 040 136
    001300  aa  141 137 136 141
    001301  aa  056 000 000 000
    001302  aa   524000 000051          .._00025.dsc:	vfd	1/1,6/char,1/0,4/0,24/41
                                   480  
    001303                         481  invalid_volmap_word:
                                   482  	savexx	none
    001303  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001304  aa  6 00000 2541 00         	spri	sp|0
    001305  aa  6 00040 7531 00         	sreg	sp|32
    001306  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001307  aa  6 00114 2521 00    483  	spribp	arg+6
    001310  0a   002105 7000 00    484  	tsx0	setup_pvtname_from_pvtep
                                   485  	call_syserr 1,(volmap: Invalid volume map word on ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001311  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001312  aa  7 00040 2721 20
    001313  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001314  0a   002142 7070 00         	tsx7	interpreter
    001315  0a   001323 000002          	zero	*+2+4,2
    001316  aa   000010 000004          	zero	2*4,4
                                        
    001317  00   002334 002332          	zero	=1,fx
                                        
    001320  00   001324 001337          	zero	.._00026.msg,.._00026.dsc
                                        	iword_devname
    001321  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001322  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001323  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00026,(volmap: Invalid volume map word on ^a_^a.)
    001324  aa  166 157 154 155         .._00026.msg:aci   "volmap: Invalid volume map word on ^a_^a."
    001325  aa  141 160 072 040
    001326  aa  111 156 166 141
    001327  aa  154 151 144 040
    001330  aa  166 157 154 165
    001331  aa  155 145 040 155
    001332  aa  141 160 040 167
    001333  aa  157 162 144 040
    001334  aa  157 156 040 136
    001335  aa  141 137 136 141
    001336  aa  056 000 000 000
    001337  aa   524000 000051          .._00026.dsc:	vfd	1/1,6/char,1/0,4/0,24/41
                                   486  
    001340                         487  stock_inconsistent:
                                   488  	savexx	none
    001340  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001341  aa  6 00000 2541 00         	spri	sp|0
    001342  aa  6 00040 7531 00         	sreg	sp|32
    001343  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001344  aa  6 00114 2521 00    489  	spribp	arg+6
    001345  aa  6 00116 2535 00    490  	spribb	arg+8
    001346  0a   002105 7000 00    491  	tsx0	setup_pvtname_from_pvtep
                                   492  	call_syserr 1,(volmap: record stock inconsistent on ^a_^a. stockp=^p.),devname,driveno,stockp
                                        
                                        	new_frame
    001347  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001350  aa  7 00040 2721 20
    001351  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001352  0a   002142 7070 00         	tsx7	interpreter
    001353  0a   001362 000002          	zero	*+2+5,2
    001354  aa   000012 000004          	zero	2*5,4
                                        
    001355  00   002334 002332          	zero	=1,fx
                                        
    001356  00   001363 001401          	zero	.._00027.msg,.._00027.dsc
                                        	iword_devname
    001357  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001360  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        	iword_stockp
    001361  a0   777662 002342          	zero	-(arg+8),=v1/1,6/ptr,17/0,12/17
                                        
    001362  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00027,(volmap: record stock inconsistent on ^a_^a. stockp=^p.)
    001363  aa  166 157 154 155         .._00027.msg:aci   "volmap: record stock inconsistent on ^a_^a. stockp=^p."
    001364  aa  141 160 072 040
    001365  aa  162 145 143 157
    001366  aa  162 144 040 163
    001367  aa  164 157 143 153
    001370  aa  040 151 156 143
    001371  aa  157 156 163 151
    001372  aa  163 164 145 156
    001373  aa  164 040 157 156
    001374  aa  040 136 141 137
    001375  aa  136 141 056 040
    001376  aa  163 164 157 143
    001377  aa  153 160 075 136
    001400  aa  160 056 000 000
    001401  aa   524000 000066          .._00027.dsc:	vfd	1/1,6/char,1/0,4/0,24/54
                                   493  
    001402                         494  deposit_inuse_address:
                                   495  	savexx	.ret
    001402  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001403  aa  6 00000 2541 00         	spri	sp|0
    001404  aa  6 00040 7531 00         	sreg	sp|32
    001405  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    001406  aa  6 00114 2521 00    496  	spribp	arg+6
    001407  0a   002105 7000 00    497  	tsx0	setup_pvtname_from_pvtep
                                   498  
                                   499  
                                   500  	call_syserr 0,(volmap: Attempt to deposit in-use address ^o on ^a_^a.),devadd,devname,driveno
                                        
                                        	new_frame
    001410  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001411  aa  7 00040 2721 20
    001412  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001413  0a   002142 7070 00         	tsx7	interpreter
    001414  0a   001423 000002          	zero	*+2+5,2
    001415  aa   000012 000004          	zero	2*5,4
                                        
    001416  00   002336 002332          	zero	=0,fx
                                        
    001417  00   001424 001442          	zero	.._00030.msg,.._00030.dsc
                                        	iword_devadd
    001420  a0   777600 002335          	zero	-(devadd),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    001421  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001422  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001423  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00030,(volmap: Attempt to deposit in-use address ^o on ^a_^a.)
    001424  aa  166 157 154 155         .._00030.msg:aci   "volmap: Attempt to deposit in-use address ^o on ^a_^a."
    001425  aa  141 160 072 040
    001426  aa  101 164 164 145
    001427  aa  155 160 164 040
    001430  aa  164 157 040 144
    001431  aa  145 160 157 163
    001432  aa  151 164 040 151
    001433  aa  156 055 165 163
    001434  aa  145 040 141 144
    001435  aa  144 162 145 163
    001436  aa  163 040 136 157
    001437  aa  040 157 156 040
    001440  aa  136 141 137 136
    001441  aa  141 056 000 000
    001442  aa   524000 000066          .._00030.dsc:	vfd	1/1,6/char,1/0,4/0,24/54
                                   501  
    001443                         502  bad_volmap_address:
                                   503  	savexx	none
    001443  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001444  aa  6 00000 2541 00         	spri	sp|0
    001445  aa  6 00040 7531 00         	sreg	sp|32
    001446  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001447  aa  6 00114 2521 00    504  	spribp	arg+6
    001450  0a   002105 7000 00    505  	tsx0	setup_pvtname_from_pvtep
                                   506  	call_syserr 1,(volmap: Invalid Volume Map address computation for ^o on ^a_^a.),devadd,devname,driveno
                                        
                                        	new_frame
    001451  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001452  aa  7 00040 2721 20
    001453  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001454  0a   002142 7070 00         	tsx7	interpreter
    001455  0a   001464 000002          	zero	*+2+5,2
    001456  aa   000012 000004          	zero	2*5,4
                                        
    001457  00   002334 002332          	zero	=1,fx
                                        
    001460  00   001465 001505          	zero	.._00031.msg,.._00031.dsc
                                        	iword_devadd
    001461  a0   777600 002335          	zero	-(devadd),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    001462  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001463  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001464  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00031,(volmap: Invalid Volume Map address computation for ^o on ^a_^a.)
    001465  aa  166 157 154 155         .._00031.msg:aci   "volmap: Invalid Volume Map address computation for ^o on ^a_^a."
    001466  aa  141 160 072 040
    001467  aa  111 156 166 141
    001470  aa  154 151 144 040
    001471  aa  126 157 154 165
    001472  aa  155 145 040 115
    001473  aa  141 160 040 141
    001474  aa  144 144 162 145
    001475  aa  163 163 040 143
    001476  aa  157 155 160 165
    001477  aa  164 141 164 151
    001500  aa  157 156 040 146
    001501  aa  157 162 040 136
    001502  aa  157 040 157 156
    001503  aa  040 136 141 137
    001504  aa  136 141 056 000
    001505  aa   524000 000077          .._00031.dsc:	vfd	1/1,6/char,1/0,4/0,24/63
                                   507  
                                   508  "
    001506                         509  ptl_not_locked:
                                   510  	savexx	none
    001506  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001507  aa  6 00000 2541 00         	spri	sp|0
    001510  aa  6 00040 7531 00         	sreg	sp|32
    001511  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   511  	call_syserr 1,(volmap_page: PTL not locked to process.)
                                        
                                        	new_frame
    001512  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001513  aa  7 00040 2721 20
    001514  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001515  0a   002142 7070 00         	tsx7	interpreter
    001516  0a   001522 000002          	zero	*+2+2,2
    001517  aa   000004 000004          	zero	2*2,4
                                        
    001520  00   002334 002332          	zero	=1,fx
                                        
    001521  00   001523 001535          	zero	.._00032.msg,.._00032.dsc
                                        
    001522  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00032,(volmap_page: PTL not locked to process.)
    001523  aa  166 157 154 155         .._00032.msg:aci   "volmap_page: PTL not locked to process."
    001524  aa  141 160 137 160
    001525  aa  141 147 145 072
    001526  aa  040 120 124 114
    001527  aa  040 156 157 164
    001530  aa  040 154 157 143
    001531  aa  153 145 144 040
    001532  aa  164 157 040 160
    001533  aa  162 157 143 145
    001534  aa  163 163 056 000
    001535  aa   524000 000047          .._00032.dsc:	vfd	1/1,6/char,1/0,4/0,24/39
                                   512  
    001536                         513  wrong_async_state:
                                   514  	savexx	none
    001536  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001537  aa  6 00000 2541 00         	spri	sp|0
    001540  aa  6 00040 7531 00         	sreg	sp|32
    001541  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001542  aa  6 00114 2521 00    515  	spribp	arg+6
    001543  0a   002105 7000 00    516  	tsx0	setup_pvtname_from_pvtep
                                   517  	call_syserr 1,(volmap_page: Invalid async state on ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001544  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001545  aa  7 00040 2721 20
    001546  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001547  0a   002142 7070 00         	tsx7	interpreter
    001550  0a   001556 000002          	zero	*+2+4,2
    001551  aa   000010 000004          	zero	2*4,4
                                        
    001552  00   002334 002332          	zero	=1,fx
                                        
    001553  00   001557 001572          	zero	.._00033.msg,.._00033.dsc
                                        	iword_devname
    001554  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001555  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001556  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00033,(volmap_page: Invalid async state on ^a_^a.)
    001557  aa  166 157 154 155         .._00033.msg:aci   "volmap_page: Invalid async state on ^a_^a."
    001560  aa  141 160 137 160
    001561  aa  141 147 145 072
    001562  aa  040 111 156 166
    001563  aa  141 154 151 144
    001564  aa  040 141 163 171
    001565  aa  156 143 040 163
    001566  aa  164 141 164 145
    001567  aa  040 157 156 040
    001570  aa  136 141 137 136
    001571  aa  141 056 000 000
    001572  aa   524000 000052          .._00033.dsc:	vfd	1/1,6/char,1/0,4/0,24/42
                                   518  
    001573                         519  volmap_page_async_error:
                                   520  	savexx	none
    001573  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001574  aa  6 00000 2541 00         	spri	sp|0
    001575  aa  6 00040 7531 00         	sreg	sp|32
    001576  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
    001577  aa  6 00114 2521 00    521  	spribp	arg+6
    001600  0a   002105 7000 00    522  	tsx0	setup_pvtname_from_pvtep
                                   523  	call_syserr 1,(volmap_page: Async error for ^a_^a.),devname,driveno
                                        
                                        	new_frame
    001601  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001602  aa  7 00040 2721 20
    001603  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001604  0a   002142 7070 00         	tsx7	interpreter
    001605  0a   001613 000002          	zero	*+2+4,2
    001606  aa   000010 000004          	zero	2*4,4
                                        
    001607  00   002334 002332          	zero	=1,fx
                                        
    001610  00   001614 001625          	zero	.._00034.msg,.._00034.dsc
                                        	iword_devname
    001611  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001612  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001613  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00034,(volmap_page: Async error for ^a_^a.)
    001614  aa  166 157 154 155         .._00034.msg:aci   "volmap_page: Async error for ^a_^a."
    001615  aa  141 160 137 160
    001616  aa  141 147 145 072
    001617  aa  040 101 163 171
    001620  aa  156 143 040 145
    001621  aa  162 162 157 162
    001622  aa  040 146 157 162
    001623  aa  040 136 141 137
    001624  aa  136 141 056 000
    001625  aa   524000 000043          .._00034.dsc:	vfd	1/1,6/char,1/0,4/0,24/35
                                   524  
    001626                         525  volmap_page_invalid_call:
                                   526  	savexx	none
    001626  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001627  aa  6 00000 2541 00         	spri	sp|0
    001630  aa  6 00040 7531 00         	sreg	sp|32
    001631  aa  6 00025 5541 00         	stc1	sp|stack_frame.return_ptr+1	set loop message
                                   527  	call_syserr 1,(volmap_page: Invalid call.)
                                        
                                        	new_frame
    001632  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001633  aa  7 00040 2721 20
    001634  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001635  0a   002142 7070 00         	tsx7	interpreter
    001636  0a   001642 000002          	zero	*+2+2,2
    001637  aa   000004 000004          	zero	2*2,4
                                        
    001640  00   002334 002332          	zero	=1,fx
                                        
    001641  00   001643 001652          	zero	.._00035.msg,.._00035.dsc
                                        
    001642  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00035,(volmap_page: Invalid call.)
    001643  aa  166 157 154 155         .._00035.msg:aci   "volmap_page: Invalid call."
    001644  aa  141 160 137 160
    001645  aa  141 147 145 072
    001646  aa  040 111 156 166
    001647  aa  141 154 151 144
    001650  aa  040 143 141 154
    001651  aa  154 056 000 000
    001652  aa   524000 000032          .._00035.dsc:	vfd	1/1,6/char,1/0,4/0,24/26
                                   528  
    001653                         529  volmap_io_error:
                                   530  	savexx	.ret
    001653  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001654  aa  6 00000 2541 00         	spri	sp|0
    001655  aa  6 00040 7531 00         	sreg	sp|32
    001656  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    001657  aa  6 00110 7551 00    531  	sta	arg+2		Page number
    001660  aa  6 00114 2521 00    532  	spribp	arg+6
    001661  0a   002105 7000 00    533  	tsx0	setup_pvtname_from_pvtep
                                   534  	call_syserr 3,(volmap_page: Unrecoverable I/O error on Volmap page ^d of ^a_^a. Addresses lost.),a2f,devname,driveno
                                        
                                        	new_frame
    001662  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001663  aa  7 00040 2721 20
    001664  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001665  0a   002142 7070 00         	tsx7	interpreter
    001666  0a   001675 000002          	zero	*+2+5,2
    001667  aa   000012 000004          	zero	2*5,4
                                        
    001670  00   002340 002332          	zero	=3,fx
                                        
    001671  00   001676 001722          	zero	.._00036.msg,.._00036.dsc
                                        	iword_a2f
    001672  a0   777670 002335          	zero	-(arg+2),=v1/1,6/fixed,17/0,12/17
                                        	iword_devname
    001673  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001674  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        
    001675  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00036,(volmap_page: Unrecoverable I/O error on Volmap page ^d of ^a_^a. Addresses lost.)
    001676  aa  166 157 154 155         .._00036.msg:aci   "volmap_page: Unrecoverable I/O error on Volmap page ^d of ^a_^a. Addresses lost."
    001677  aa  141 160 137 160
    001700  aa  141 147 145 072
    001701  aa  040 125 156 162
    001702  aa  145 143 157 166
    001703  aa  145 162 141 142
    001704  aa  154 145 040 111
    001705  aa  057 117 040 145
    001706  aa  162 162 157 162
    001707  aa  040 157 156 040
    001710  aa  126 157 154 155
    001711  aa  141 160 040 160
    001712  aa  141 147 145 040
    001713  aa  136 144 040 157
    001714  aa  146 040 136 141
    001715  aa  137 136 141 056
    001716  aa  040 101 144 144
    001717  aa  162 145 163 163
    001720  aa  145 163 040 154
    001721  aa  157 163 164 056
    001722  aa   524000 000120          .._00036.dsc:	vfd	1/1,6/char,1/0,4/0,24/80
                                   535  
                                   536  
    001723                         537  poll_state_change:
                                   538  	savexx	.ret
    001723  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001724  aa  6 00000 2541 00         	spri	sp|0
    001725  aa  6 00040 7531 00         	sreg	sp|32
    001726  aa  6 00025 7471 00         	stx	.ret,sp|stack_frame.return_ptr+1
    001727  aa  6 00110 4501 00    539  	stz	arg+2
    001730  aa  2 00032 2211 00    540  	ldx1	bp|pvte.volmap_async_state
    001731  aa  6 00110 4411 00    541  	sxl1	arg+2		New async state
    001732  aa  6 00114 2521 00    542  	spribp	arg+6
    001733  0a   002105 7000 00    543  	tsx0	setup_pvtname_from_pvtep
                                   544  	call_syserr 4,(volmap_page: Async state on ^a_^a changed to ^d on poll.),devname,driveno,a2f
                                        
                                        	new_frame
    001734  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    001735  aa  7 00040 2721 20
    001736  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    001737  0a   002142 7070 00         	tsx7	interpreter
    001740  0a   001747 000002          	zero	*+2+5,2
    001741  aa   000012 000004          	zero	2*5,4
                                        
    001742  00   002343 002332          	zero	=4,fx
                                        
    001743  00   001750 001766          	zero	.._00037.msg,.._00037.dsc
                                        	iword_devname
    001744  a0   777672 002337          	zero	-(arg),=v1/1,6/char,17/0,12/4
                                        	iword_driveno
    001745  a0   777671 002337          	zero	-(arg+1),=v1/1,6/char,17/0,12/4
                                        	iword_a2f
    001746  a0   777670 002335          	zero	-(arg+2),=v1/1,6/fixed,17/0,12/17
                                        
    001747  0a   000027 7100 00         	tra	csys
                                        
                                        	message	.._00037,(volmap_page: Async state on ^a_^a changed to ^d on poll.)
    001750  aa  166 157 154 155         .._00037.msg:aci   "volmap_page: Async state on ^a_^a changed to ^d on poll."
    001751  aa  141 160 137 160
    001752  aa  141 147 145 072
    001753  aa  040 101 163 171
    001754  aa  156 143 040 163
    001755  aa  164 141 164 145
    001756  aa  040 157 156 040
    001757  aa  136 141 137 136
    001760  aa  141 040 143 150
    001761  aa  141 156 147 145
    001762  aa  144 040 164 157
    001763  aa  040 136 144 040
    001764  aa  157 156 040 160
    001765  aa  157 154 154 056
    001766  aa   524000 000070          .._00037.dsc:	vfd	1/1,6/char,1/0,4/0,24/56
                                   545  
                                   546  " 
                                   547  
    001767                         548  excessive_seg_state_chg:
                                   549  	savexx	.2ret		" tsx	.2ret from page_fault
    001767  aa  6 00024 3571 00         	stcd	sp|stack_frame.return_ptr bound_page_control
    001770  aa  6 00000 2541 00         	spri	sp|0
    001771  aa  6 00040 7531 00         	sreg	sp|32
    001772  aa  6 00025 7461 00         	stx	.2ret,sp|stack_frame.return_ptr+1
                                   550  
    001773  4a  4 00014 3521 20    551  	epp	U,pds$process_group_id
    001774  aa  0 00100 1005 00    552  	mlr	(pr),(pr)		" copy process_group_id
    001775  aa   200000 000040     553  	desc9a	U|0,32
    001776  aa   600106 000040     554  	desc9a	arg,32		" (person)
                                   555  
    001777  4a  4 00016 2371 20    556  	ldaq	pds$access_authorization
    002000  aa   000022 7720 00    557  	qrl	18		" level to lower half
    002001  aa  6 00116 7571 00    558  	staq	arg+8
                                   559  	
                                   560  	call_syserr_binary 24,sp|binary_buffer,covert_seg_state,covert_audit_info,
                                   561  	     (AUDIT (page_fault): GRANTED excessive segment state changes (Moderate_cc) for ^a (^o:^.3b).),person,level,categories
                                        
                                        	new_frame
    002002  aa   000260 6270 00         	push	syserr_arg_list+frame_size
    002003  aa  7 00040 2721 20
    002004  aa  6 00020 3521 20         	epp	U,sp|stack_frame.prev_sp,*
                                        
    002005  0a   002261 7070 00         	tsx7	covert_audit_info
                                        
                                        
    002006  0a   002344 3500 00         	eppap	=24
    002007  aa  6 00052 2501 00         	spriap	sp|syserr_arg_list+2
                                        
    002010  0a   002142 7070 00         	tsx7	interpreter
    002011  0a   002021 000006          	zero	*+2+8-2,6
    002012  aa   000020 000004          	zero	2*8,4
                                        
    002013  00   002023 002332          	zero	.._00040.sbc,fx
    002014  00   002024 002332          	zero	.._00040.sbl,fx
    002015  00   002025 002054          	zero	.._00040.msg,.._00040.dsc
                                        	iword_person
    002016  a0   777672 002345          	zero	-(arg),=v1/1,6/char,17/0,12/32
                                        	iword_level
    002017  a0   777661 002335          	zero	-(arg+9),=v1/1,6/fixed,17/0,12/17
                                        	iword_categories
    002020  a0   777662 002346          	zero	-(arg+8),=v1/1,6/bit,17/0,12/18
                                        
    002021  aa  6 00140 3501 00         	eppap	sp|binary_buffer
    002022  0a   002172 7070 00         	tsx7	binary_setup
                                        			"no return
                                        
    002023  aa   000000 000034          .._00040.sbc:	vfd	36/SB_covert_seg_state
    002024  aa   000000 000024          .._00040.sbl:	vfd	36/SBL_covert_seg_state
                                        
                                        	message	.._00040,(AUDIT (page_fault): GRANTED excessive segment state changes (Moderate_cc) for ^a (^o:^.3b).)
    002025  aa  101 125 104 111         .._00040.msg:aci   "AUDIT (page_fault): GRANTED excessive segment state changes (Moderate_cc) for ^a (^o:^.3b)."
    002026  aa  124 040 050 160
    002027  aa  141 147 145 137
    002030  aa  146 141 165 154
    002031  aa  164 051 072 040
    002032  aa  107 122 101 116
    002033  aa  124 105 104 040
    002034  aa  145 170 143 145
    002035  aa  163 163 151 166
    002036  aa  145 040 163 145
    002037  aa  147 155 145 156
    002040  aa  164 040 163 164
    002041  aa  141 164 145 040
    002042  aa  143 150 141 156
    002043  aa  147 145 163 040
    002044  aa  050 115 157 144
    002045  aa  145 162 141 164
    002046  aa  145 137 143 143
    002047  aa  051 040 146 157
    002050  aa  162 040 136 141
    002051  aa  040 050 136 157
    002052  aa  072 136 056 063
    002053  aa  142 051 056 000
    002054  aa   524000 000133          .._00040.dsc:	vfd	1/1,6/char,1/0,4/0,24/91
                                   562  " 
                                   563  
                                   564  " " " " " " " " " " " " " " " " " " " " " " "
                                   565  "				    "
                                   566  "	Subroutines		    "
                                   567  "				    "
                                   568  " " " " " " " " " " " " " " " " " " " " " " "
                                   569  
    002055                         570  get_pageno:			"Given astep, ptp, get pageno into
                                   571  				"arg+20 upper
    002055  aa   777764 6200 12    572  	eax0	-aste_size,.ptw
    002056  aa  6 00132 7431 00    573  	stx	.aste,arg+20
    002057  aa  6 00132 1201 00    574  	sblx0	arg+20
    002060  aa  6 00132 7401 00    575  	stx0	arg+20
    002061  aa   000000 7100 17    576  	tra	0,7		no ssx0 cause top bit oflw
                                   577  
    002062                         578  get_ast_params:			"Get uid, vtocx, pvtx.
    002062  aa  3 00003 2351 13    579  	lda	ast|aste.uid,.aste	get uid
    002063  aa  6 00133 7551 00    580  	sta	arg+21
    002064  0a   002070 6000 00    581  	tze	get_ast_params.zuid wie noord
                                   582  
    002065  aa  3 00004 2351 13    583  	lda	ast|aste.vtocx,.aste
    002066  aa   777777 3750 07    584  	ana	-1,dl
    002067  0a   002071 7100 00    585  	tra	get_ast_params.gotvx
                                   586  
    002070                         587  get_ast_params.zuid:
    002070  aa   000001 3350 07    588  	lca	1,dl
    002071                         589  get_ast_params.gotvx:
    002071  aa  6 00132 7551 00    590  	sta	arg+20
                                   591  
    002072  aa  3 00004 2351 13    592  	lda	ast|aste.pvtx_word,.aste
    002073  aa   000022 7710 00    593  	arl	aste.pvtx_shift
    002074  aa   000777 3750 07    594  	ana	aste.pvtx_mask,dl
    002075  aa  6 00130 7551 00    595  	sta	arg+18		"Leave this in A reg.
    002076  aa   000000 7100 17    596  	tra	0,7
                                   597  
                                   598  "
                                   599  
    002077                         600  setup_controller:
    002077  4a  4 00020 2351 20    601  	lda	page_fault$cme_flags,*.cme get controller
    002100  aa   000007 3750 07    602  	ana	cme.contr,dl	controller used here
    002101  aa   000033 7350 00    603  	als	36-9
    002102  0a   002347 0350 00    604  	adla	=aA   "		Ascii A
    002103  aa  6 00134 7551 00    605  	sta	temp
    002104  aa   000000 7100 10    606  	tra	0,0
                                   607  
    002105                         608  setup_pvtname_from_pvtep:			"s/r to address printable pv name
    002105  aa  6 00114 3501 20    609  	eppap	arg+6,*
    002106  0a   002113 7100 00    610  	tra	setup_pvtname.pvtep
                                   611  
    002107                         612  setup_pvtname:				"s/r to address printable pv name
    002107  aa   000000 6360 05    613  	eaq	0,al
    002110  aa   000034 4020 07    614  	mpy	pvte_size,dl
    002111  4a  4 00022 3501 20    615  	eppap	pvt$array
    002112  aa  0 77744 3501 02    616  	eppap	ap|-pvte_size,qu		address right pvte
    002113                         617  setup_pvtname.pvtep:
    002113  aa  0 00004 2361 00    618  	ldq	ap|pvte.logical_area_number_word
    002114  aa   000022 7720 00    619  	qrl	pvte.logical_area_number_shift
    002115  aa   000777 3760 07    620  	anq	pvte.logical_area_number_mask,dl
    002116  aa  6 00130 7561 00    621  	stq	arg+18
    002117  aa  0 00100 3015 00    622  	btd	(pr),(pr)
    002120  aa   600130 000004     623  	desc9a	arg+18,4
    002121  aa   600131 010003     624  	desc9ls	arg+19,3,0
    002122  aa  6 00107 4501 00    625  	stz	arg+1
    002123  aa  1 00000 0245 00    626  	mvne	(pr),(),(pr)
    002124  aa   600131 010003     627  	desc9ls	arg+19,3,0
    002125  0a   002141 000002     628  	desc9a	microp,2
    002126  aa   600107 000002     629  	desc9a	arg+1,2
    002127  aa  0 00100 1005 00    630  	mlr	(pr),(pr)
    002130  aa   000015 000002     631  	desc9a	ap|pvte.sv_name,2
    002131  aa   600107 400002     632  	desc9a	arg+1(2),2
    002132  aa  0 00003 2351 00    633  	lda	ap|pvte.devname
    002133  aa  6 00106 7551 00    634  	sta	arg
    002134  aa  0 00000 2351 00    635  	lda	ap|pvte.pvid
    002135  aa  6 00130 7551 00    636  	sta	arg+18
    002136  aa  0 00001 2351 00    637  	lda	ap|pvte.lvid
    002137  aa  6 00131 7551 00    638  	sta	arg+19
    002140  aa   000000 7100 10    639  	tra	0,0
                                   640  
    002141                         641  microp:
    002141  aa   070322 000000     642  	oct	070322000000		" ses ON, mvc 2
                                   643  "
                                   644  " " " " " " " " " " " " " " " " " " " " " " "
                                   645  "				    "
                                   646  "	Arglist interpreter		    "
                                   647  "				    "
                                   648  " " " " " " " " " " " " " " " " " " " " " " "
                                   649  
    002142                         650  interpreter:
    002142  aa   000001 2350 17    651  	lda	1,7		get 2*argct with 4
    002143  aa   000000 6360 01    652  	eaq	0,au
    002144  aa  6 00050 7571 00    653  	staq	sp|syserr_arg_list
                                   654  
    002145  aa   000002 6260 17    655  	eax6	2,7		point at arg
    002146  aa   000000 7210 17    656  	lxl1	0,7		offset to first unprocessed
    002147  aa   000050 6210 11    657  	eax1	syserr_arg_list+0,1
    002150  aa   000000 6220 11    658  	eax2	0,1
    002151  aa   000001 0220 17    659  	adlx2	1,7		-> descs
                                   660  
    002152                         661  interp.list:
    002152  aa   000000 1060 17    662  	cmpx6	0,7		end of list?
    002153  aa   000000 6000 16    663  	tze	0,6		wham
                                   664  
    002154  aa   000000 2350 16    665  	lda	0,6
    002155  aa   000000 3500 05    666  	eppap	0,al		-> desc
    002156  aa  6 00000 2501 12    667  	spriap	sp|0,2
    002157  aa   000000 6350 01    668  	eaa	0,au
    002160  0a   002164 6050 00    669  	tpl	int.txt
    002161  aa   000000 5310 00    670  	neg	0
    002162  aa  2 00000 3501 01    671  	eppap	U|0,au		-> stack arg
    002163  0a   002165 7100 00    672  	tra	*+2
    002164  aa   000000 3500 01    673  int.txt:	eppap	0,au		address text
    002165  aa  6 00000 2501 11    674  	spriap	sp|0,1
                                   675  
    002166  aa   000002 6210 11    676  	eax1	2,1
    002167  aa   000002 6220 12    677  	eax2	2,2
    002170  aa   000001 6260 16    678  	eax6	1,6		interp pc
    002171  0a   002152 7100 00    679  	tra	interp.list
                                   680  
    002172                         681  binary_setup:
    002172  aa  6 00166 2501 00    682  	spriap	sp|binary_buffer+22
    002173  aa  6 00166 3501 00    683  	eppap	sp|binary_buffer+22
    002174  aa  6 00054 2501 00    684  	spriap	sp|syserr_arg_list+2*2
    002175  aa  6 00050 2211 00    685  	ldx1	sp|syserr_arg_list
    002176  0a   002333 3500 00    686  	eppap	ptrd
    002177  aa  6 00054 2501 11    687  	spriap	sp|syserr_arg_list+2+2,1
    002200  0a   002201 7100 00    688  	tra	bincall
                                   689  
    002201  aa  6 00000 2541 00    690  bincall:	call	syserr$binary(sp|syserr_arg_list)
    002202  aa  6 00050 3501 00
    002203  4a  4 00012 3521 20
    002204  aa  6 00040 7531 00
    002205  aa  7 00036 6701 20
    002206  aa  6 00000 1731 00
    002207  aa  6 00040 0731 00
    002210  0a   000036 7100 00    691  	tra	exit
                                   692  
                                   693  "
                                   694  "
                                   695  "	New-frame subroutines
                                   696  "
                                   697  
    002211                         698  gseg_info:
    002211                         699  format_segdamage_binary:
                                   700  "
                                   701  "				First copy UIDs from AST, right-justified.
    002211  aa  0 00100 1005 00    702  	mlr	(pr),(pr)
    002212  aa   200130 000020     703  	desc9a	U|arg+18,4*4
    002213  aa   600140 000020     704  	desc9a	sp|binary_buffer+segdamage.pvid,4*4	"lvid immediately follows pvid
    002214  4a  4 00024 0541 20    705  	aos	sst$damaged_ct	trigger aswering service
    002215  aa   000020 6240 00    706  	eax4	16		assume no more stuff if lossage
    002216  aa   000000 6250 00    707  	eax5	0		fill from 0 if lossage
    002217  aa  2 00132 7221 00    708  	lxl2	U|arg+20		have vtocx?
    002220  0a   002243 6040 00    709  	tmi	gup.fillup3	no, put in zeros
                                   710  
    002221  aa  2 00041 7231 00    711  	lxl3	U|32+1		x3 from saved regs
    002222  aa  3 00002 7231 13    712  	lxl3	ast|aste.par_astep,3 check  par
    002223  0a   002243 6000 00    713  	tze	gup.fillup3	c/b root!
    002224  aa   000017 6240 00    714  	eax4	15		set to last uid word
    002225  aa  3 00003 2351 13    715  gup.lp1:	lda	ast|aste.uid,3
    002226  aa  6 00144 7551 14    716  	sta	sp|binary_buffer+segdamage.uid_path,4	store in array
    002227  aa  3 00002 7231 13    717  	lxl3	ast|aste.par_astep,3	loop up
    002230  0a   002234 6000 00    718  	tze	gup.fillup	thats all on this end
    002231  aa   777777 6240 14    719  	eax4	-1,4		count level
    002232  0a   002225 6050 00    720  	tpl	gup.lp1		normal case
    002233  aa   000001 6240 14    721  	eax4	1,4		only if busted, do this.
                                   722  
                                   723  "				Now left-justify them, pad with zeros.
    002234                         724  gup.fillup:
    002234  aa   000000 6250 00    725  	eax5	0		destination of  move
    002235                         726  gup.fillup1:
    002235  aa  6 00144 2351 14    727  	lda	sp|binary_buffer+segdamage.uid_path,4	get put word
    002236                         728  gup.fillup2:
    002236  aa  6 00144 7551 15    729  	sta	sp|binary_buffer+segdamage.uid_path,5	store in new place
    002237  aa   000001 6250 15    730  	eax5	1,5		new target
    002240  aa   000001 6240 14    731  	eax4	1,4		new source
    002241  aa   000020 1040 03    732  	cmpx4	16,du		ready to do over end?
    002242  0a   002235 6040 00    733  	tmi	gup.fillup1	no, do next word
    002243                         734  gup.fillup3:
    002243  aa   000000 2350 07    735  	lda	0,dl		pad out zeros
    002244  aa   000020 1050 03    736  	cmpx5	16,du		gonna store over end?
    002245  0a   002236 6040 00    737  	tmi	gup.fillup2	no, go store zero
    002246  aa   000000 7100 17    738  	tra	0,7		good luck.
                                   739  
                                   740  
    002247                         741  movemm:				"Get main mem lossage parms
    002247  aa  2 00173 2351 00    742  	lda	U|core_add
    002250  aa  2 00134 2361 00    743  	ldq	U|temp		abcd etc
    002251  aa  6 00140 7571 00    744  	staq	sp|binary_buffer+mmdam_msg.addr	"ctrltag immediately follows addr
    002252  aa   000000 7100 17    745  	tra	0,7
                                   746  
    002253  aa   000000 0110 03    747  	even
    002254                         748  devadd_to_20:
    002254  aa  6 00200 2351 00    749  	lda	devadd
    002255  aa  6 00132 7551 00    750  	sta	arg+20
                                   751  
    002256                         752  devadd_to_buf20:
    002256  aa  2 00200 2351 00    753  	lda	U|devadd
    002257  aa  6 00164 7551 00    754  	sta	sp|binary_buffer+20
    002260  aa   000000 7100 17    755  	tra	0,7
                                   756  "
    002261                         757  covert_audit_info:
    002261  aa   000100 1004 00    758  	mlr	(),(pr)			" zero all first
    002262  aa   000000 000000     759  	desc9a	0,0
    002263  aa   600140 000120     760  	desc9a	sp|binary_buffer,4*audit_head_size
                                   761  
                        056000     762  	bool	period,056000
                                   763  
    002264  aa  0 00003 1245 00    764  	scm	(pr),(du)			" take apart process_group_id
    002265  aa   200106 000040     765  	desc9a	U|arg,32
    002266  aa   056000 000001     766  	desc9a	period,1			" period
    002267  aa  6 00140 0001 00    767  	arg	sp|binary_buffer
                                   768  
    002270  aa  6 00140 2351 00    769  	lda	sp|binary_buffer		" lth of person
    002271  aa  0 40100 1005 40    770  	mlr	(pr,rl),(pr),fill(040)
    002272  aa   200106 000005     771  	desc9a	U|arg,al
    002273  aa   600144 000026     772  	desc9a	sp|binary_buffer+audit_head.person,22
                                   773  
    002274  aa   000001 0750 07    774  	ada	1,dl			" pt at project
    002275  aa  0 00003 1245 05    775  	scm	(pr,al),(du)
    002276  aa   200106 000040     776  	desc9a	U|arg,32
    002277  aa   056000 000001     777  	desc9a	period,1			" period
    002300  aa  6 00140 0001 00    778  	arg	sp|binary_buffer
                                   779  
    002301  aa  6 00140 7231 00    780  	lxl3	sp|binary_buffer
    002302  aa  0 40100 1005 45    781  	mlr	(pr,rl,al),(pr),fill(040)
    002303  aa   200106 000013     782  	desc9a	U|arg,x3
    002304  aa   600151 400011     783  	desc9a	sp|binary_buffer+audit_head.person+5(2),9
                                   784  
    002305  aa  6 00140 0751 00    785  	ada	sp|binary_buffer
    002306  aa   000001 0750 07    786  	ada	1,dl
    002307  aa  0 00100 1005 05    787  	mlr	(pr,al),(pr)
    002310  aa   200106 000001     788  	desc9a	U|arg,1
    002311  aa   600153 600001     789  	desc9a	sp|binary_buffer+audit_head.person+7(3),1
                                   790  
    002312  aa   000001 2350 07    791  	lda	ARH_NO_PROXY,dl
    002313  aa   000011 7350 00    792  	als	audit_head.type_shift-audit_head.version_shift
    002314  aa   000003 0750 07    793  	ada	ACCESS_AUDIT_HEADER_VERSION_3,dl
    002315  aa   000022 7350 00    794  	als	audit_head.version_shift
    002316  aa   400000 2750 07    795  	ora	audit_head.subj_process,dl
    002317  aa  6 00140 7551 00    796  	sta	sp|binary_buffer+audit_head.version
                                   797  
    002320  4a  4 00026 2351 20    798  	lda	sst$seg_state_chg_operation
    002321  aa  6 00141 7551 00    799  	sta	sp|binary_buffer+audit_head.operation_code
                                   800  
    002322  aa   210000 2350 03    801  	lda	audit_event_flags.grant+audit_event_flags.cc_10_100,du
    002323  aa  6 00142 7551 00    802  	sta	sp|binary_buffer+audit_head.event_flags
                                   803  
    002324  4a  4 00030 2351 20    804  	lda	pds$process_id
    002325  aa  6 00155 7551 00    805  	sta	sp|binary_buffer+audit_head.process_id
                                   806  
    002326  4a  4 00016 2371 20    807  	ldaq	pds$access_authorization
    002327  aa  6 00156 7571 00    808  	staq	sp|binary_buffer+audit_head.authorization
    002330  aa  6 00162 7571 00    809  	staq	sp|binary_buffer+audit_head.max_authorization	" pds$max_auth is not wired
    002331  aa   000000 7100 17    810  	tra	0,7
                                   811  "
                                   812  " " " " " " " " " " " " " " " " " " " "
                                   813  "
                                   814  "	constants and descriptors
                                   815  "
                                   816  " " " " " " " " " " " " " " " " " " " "
                                   817  
    002332  aa   404000 000043     818  fx:	vfd	1/1,6/fixed,1/0,4/0,12/0,12/35
    002333  aa   464000 000000     819  ptrd:	vfd	1/1,6/ptr,1/0,4/0,24/0
                                   820  
                        000015     821  	equ	ptr,13
                        000001     822  	equ	fixed,1
                        000025     823  	equ	char,21
                        000023     824  	equ	bit,19
                                   825  "
                                   826  	include	access_audit_eventflags
                                   1-1  
                                   1-2  
                                   1-3       "BEGIN INCLUDE FILE access_audit_eventflags.incl.alm
                                   1-4  
                                   1-5  
                                   1-6  	"Created 01/14/85  1527.1 est Mon by convert_include_file,
                                   1-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   1-8  
                                   1-9  	"Made from >Pool>m>loe>incl>access_audit_eventflags.incl.pl1,
                                  1-10  	"   modified 01/09/85  1217.7 est Wed
                                  1-11  
                                  1-12  "
                                  1-13  "	Structure audit_event_flags
                                  1-14  "
                        400000    1-15  	bool	audit_event_flags.special_op,400000 " DU
                        200000    1-16  	bool	audit_event_flags.grant,200000 " DU
                        100000    1-17  	bool	audit_event_flags.admin_op,100000 " DU
                        040000    1-18  	bool	audit_event_flags.priv_op,040000 " DU
                        020000    1-19  	bool	audit_event_flags.cc_1_10,020000 " DU
                        010000    1-20  	bool	audit_event_flags.cc_10_100,010000 " DU
                        004000    1-21  	bool	audit_event_flags.receiver,004000 " DU
                                  1-22  
                                  1-23       "END INCLUDE FILE access_audit_eventflags.incl.alm
                                   827  	include	access_audit_bin_header
                                   2-1  " BEGIN INCLUDE FILE access_audit_bin_header.incl.alm
                                   2-2  
                                   2-3  " NOTE: This include file has a pl1 counterpart.  Keep them in sync.
                                   2-4  "
                                   2-5  " Modification history:
                                   2-6  "    85-01-17 by E. Swenson to rename to access_audit_bin_header.incl.alm
                                   2-7  "    85-01-16 by E. Swenson to add session_uid
                                   2-8  
                                   2-9  "
                                  2-10  "	Structure audit_record_header
                                  2-11  "
                        000024    2-12  	equ	audit_head_size,20
                                  2-13  
                        000000    2-14  	equ	audit_head.type_word,0
                        000033    2-15  	equ	audit_head.type_shift,27
                        000777    2-16  	bool	audit_head.type_mask,000777
                        000000    2-17  	equ	audit_head.version,0
                        000022    2-18  	equ	audit_head.version_shift,18
                        000777    2-19  	bool	audit_head.version_mask,000777
                        000000    2-20  	equ	audit_head.flags,0	" LOWER
                        000000    2-21  	equ	audit_head.subj_process_word,0
                        400000    2-22  	bool	audit_head.subj_process,400000 " DL
                        000000    2-23  	equ	audit_head.obj_valid_word,0
                        200000    2-24  	bool	audit_head.obj_valid,200000 " DL
                                  2-25  
                        000001    2-26  	equ	audit_head.operation_code,1
                        000002    2-27  	equ	audit_head.event_flags,2
                        000003    2-28  	equ	audit_head.session_uid,3
                                  2-29  
                        000004    2-30  	equ	audit_head.subjects,4 " LEVEL 2
                        000004    2-31  	equ	audit_head.person,4
                        000014    2-32  	equ	audit_head.ring_word,12
                        000041    2-33  	equ	audit_head.ring_shift,33
                        000007    2-34  	bool	audit_head.ring_mask,000007
                        000014    2-35  	equ	audit_head.anonymous_word,12
                        040000    2-36  	bool	audit_head.anonymous,040000 " DU
                        000015    2-37  	equ	audit_head.process_id,13
                        000016    2-38  	equ	audit_head.authorization,14 " DOUBLE
                        000020    2-39  	equ	audit_head.min_authorization,16 " DOUBLE
                        000022    2-40  	equ	audit_head.max_authorization,18 " DOUBLE
                                  2-41  
                        000002    2-42  	equ	ARH_PROXY,2		" MANIFEST
                        000001    2-43  	equ	ARH_NO_PROXY,1		" MANIFEST
                        000003    2-44  	equ	ACCESS_AUDIT_HEADER_VERSION_3,3 " MANIFEST
                                  2-45  
                                  2-46  "END INCLUDE FILE access_audit_bin_header.incl.alm
                                   828  	include	aste
                                   3-1  
                                   3-2  
                                   3-3       "BEGIN INCLUDE FILE aste.incl.alm
                                   3-4  
                                   3-5  
                                   3-6  	"Created 01/14/85  1523.3 est Mon by convert_include_file,
                                   3-7  	"   Version of 01/09/85  0954.4 est Wed.
                                   3-8  
                                   3-9  	"Made from >Pool>m>loe>incl>aste.incl.pl1,
                                  3-10  	"   modified 01/08/85  1115.0 est Tue
                                  3-11  
                                  3-12  "
                                  3-13  "	Structure aste
                                  3-14  "
                        000014    3-15  	equ	aste_size,12
                                  3-16  
                        000000    3-17  	equ	aste.fp,0			" UPPER
                        000000    3-18  	equ	aste.bp,0			" LOWER
                                  3-19  
                        000001    3-20  	equ	aste.infl,1		" UPPER
                        000001    3-21  	equ	aste.infp,1		" LOWER
                                  3-22  
                        000002    3-23  	equ	aste.strp,2		" UPPER
                        000002    3-24  	equ	aste.par_astep,2		" LOWER
                                  3-25  
                        000003    3-26  	equ	aste.uid,3
                                  3-27  
                        000004    3-28  	equ	aste.msl_word,4
                        000033    3-29  	equ	aste.msl_shift,27
                        000777    3-30  	bool	aste.msl_mask,000777
                        000004    3-31  	equ	aste.pvtx_word,4
                        000022    3-32  	equ	aste.pvtx_shift,18
                        000777    3-33  	bool	aste.pvtx_mask,000777
                        000004    3-34  	equ	aste.vtocx,4		" LOWER
                                  3-35  
                        000005    3-36  	equ	aste.usedf_word,5
                        400000    3-37  	bool	aste.usedf,400000		" DU
                        000005    3-38  	equ	aste.init_word,5
                        200000    3-39  	bool	aste.init,200000		" DU
                        000005    3-40  	equ	aste.gtus_word,5
                        100000    3-41  	bool	aste.gtus,100000		" DU
                        000005    3-42  	equ	aste.gtms_word,5
                        040000    3-43  	bool	aste.gtms,040000		" DU
                        000005    3-44  	equ	aste.hc_word,5
                        020000    3-45  	bool	aste.hc,020000		" DU
                        000005    3-46  	equ	aste.hc_sdw_word,5
                        010000    3-47  	bool	aste.hc_sdw,010000		" DU
                        000005    3-48  	equ	aste.any_access_on_word,5
                        004000    3-49  	bool	aste.any_access_on,004000	" DU
                        000005    3-50  	equ	aste.write_access_on_word,5
                        002000    3-51  	bool	aste.write_access_on,002000	" DU
                        000005    3-52  	equ	aste.inhibit_cache_word,5
                        001000    3-53  	bool	aste.inhibit_cache,001000	" DU
                        000005    3-54  	equ	aste.explicit_deact_ok_word,5
                        000400    3-55  	bool	aste.explicit_deact_ok,000400	" DU
                        000005    3-56  	equ	aste.deact_error_word,5
                        000200    3-57  	bool	aste.deact_error,000200	" DU
                        000005    3-58  	equ	aste.hc_part_word,5
                        000100    3-59  	bool	aste.hc_part,000100		" DU
                        000005    3-60  	equ	aste.fm_damaged_word,5
                        000040    3-61  	bool	aste.fm_damaged,000040	" DU
                        000005    3-62  	equ	aste.multi_class_word,5
                        000020    3-63  	bool	aste.multi_class,000020	" DU
                        000005    3-64  	equ	aste.dius_word,5
                        000002    3-65  	bool	aste.dius,000002		" DU
                        000005    3-66  	equ	aste.nid_word,5
                        000001    3-67  	bool	aste.nid,000001		" DU
                        000005    3-68  	equ	aste.dmpr_pad_word,5
                        400000    3-69  	bool	aste.dmpr_pad,400000	" DL
                        000005    3-70  	equ	aste.ehs_word,5
                        200000    3-71  	bool	aste.ehs,200000		" DL
                        000005    3-72  	equ	aste.nqsw_word,5
                        100000    3-73  	bool	aste.nqsw,100000		" DL
                        000005    3-74  	equ	aste.dirsw_word,5
                        040000    3-75  	bool	aste.dirsw,040000		" DL
                        000005    3-76  	equ	aste.master_dir_word,5
                        020000    3-77  	bool	aste.master_dir,020000	" DL
                        000005    3-78  	equ	aste.volmap_seg_word,5
                        010000    3-79  	bool	aste.volmap_seg,010000	" DL
                        000005    3-80  	equ	aste.tqsw_word,5
                        004000    3-81  	bool	aste.tqsw,004000		" DL
                                  3-82  
                        000006    3-83  	equ	aste.dtu,6
                        000007    3-84  	equ	aste.dtm,7
                                  3-85  
                        000010    3-86  	equ	aste.quota,8		" UPPER
                                  3-87  
                        000011    3-88  	equ	aste.used,9		" UPPER
                                  3-89  
                        000012    3-90  	equ	aste.csl_word,10
                        000033    3-91  	equ	aste.csl_shift,27
                        000777    3-92  	bool	aste.csl_mask,000777
                        000012    3-93  	equ	aste.fmchanged_word,10
                        000400    3-94  	bool	aste.fmchanged,000400	" DU
                        000012    3-95  	equ	aste.fms_word,10
                        000200    3-96  	bool	aste.fms,000200		" DU
                        000012    3-97  	equ	aste.npfs_word,10
                        000100    3-98  	bool	aste.npfs,000100		" DU
                        000012    3-99  	equ	aste.gtpd_word,10
                        000040   3-100  	bool	aste.gtpd,000040		" DU
                        000012   3-101  	equ	aste.dnzp_word,10
                        000020   3-102  	bool	aste.dnzp,000020		" DU
                        000012   3-103  	equ	aste.per_process_word,10
                        000010   3-104  	bool	aste.per_process,000010	" DU
                        000012   3-105  	equ	aste.ddnp_word,10
                        000004   3-106  	bool	aste.ddnp,000004		" DU
                        000012   3-107  	equ	aste.records_word,10
                        000011   3-108  	equ	aste.records_shift,9
                        000777   3-109  	bool	aste.records_mask,000777
                        000012   3-110  	equ	aste.np_word,10
                        000000   3-111  	equ	aste.np_shift,0
                        000777   3-112  	bool	aste.np_mask,000777
                                 3-113  
                        000013   3-114  	equ	aste.ht_fp,11		" UPPER
                        000013   3-115  	equ	aste.fmchanged1_word,11
                        400000   3-116  	bool	aste.fmchanged1,400000	" DL
                        000013   3-117  	equ	aste.damaged_word,11
                        200000   3-118  	bool	aste.damaged,200000		" DL
                        000013   3-119  	equ	aste.pack_ovfl_word,11
                        100000   3-120  	bool	aste.pack_ovfl,100000	" DL
                        000013   3-121  	equ	aste.synchronized_word,11
                        040000   3-122  	bool	aste.synchronized,040000	" DL
                        000013   3-123  	equ	aste.ptsi_word,11
                        000006   3-124  	equ	aste.ptsi_shift,6
                        000003   3-125  	bool	aste.ptsi_mask,000003
                        000013   3-126  	equ	aste.marker_word,11
                        000000   3-127  	equ	aste.marker_shift,0
                        000077   3-128  	bool	aste.marker_mask,000077
                                 3-129  
                                 3-130  "
                                 3-131  "	Structure aste_part
                                 3-132  "
                        000014   3-133  	equ	aste_part_size,12
                                 3-134  
                                 3-135  
                        000000   3-136  	equ	aste_part.one,0
                        000001   3-137  	equ	aste_part.two,1		" DOUBLE
                                 3-138  
                        000013   3-139  	equ	aste_part.three_word,11
                        000000   3-140  	equ	aste_part.three_shift,0
                        000377   3-141  	bool	aste_part.three_mask,000377
                                 3-142  
                                 3-143  "
                                 3-144  "	Structure seg_aste
                                 3-145  "
                        000014   3-146  	equ	seg_aste_size,12
                                 3-147  
                                 3-148  
                        000010   3-149  	equ	seg_aste.usage,8
                                 3-150  
                                 3-151       "END INCLUDE FILE aste.incl.alm
                                   829  	include	cmp
                                   4-1  "
                                   4-2  "	BEGIN INCLUDE FILE	cmp.incl.alm	October 1982
                                   4-3  "
                        000004     4-4  	equ	cme_size,4	Size of a CME
                                   4-5  
                        000000     4-6  	equ	cme.fp,0		forward pointer to next core map entry (DU)
                        000000     4-7  	equ	cme.bp,0		backward pointer to previous core map entry (DL)
                                   4-8  
                        000001     4-9  	equ	cme.devadd,1	device address of page in the core block
                        000001    4-10  	equ	cme.flags,1	word containing various flags
                        740000    4-11  	bool	cme.did_mask,740000	mask for extracting device ID from core map entry
                        010000    4-12  	bool	cme.synch_held,010000 page of synch seg held in mem (DL)
                        004000    4-13  	bool	cme.io,004000	read/write bit (DL)
                        001000    4-14  	bool	cme.er,001000	error on previous I/O
                        000400    4-15  	bool	cme.removing,000400	page is being removed
                        000200    4-16  	bool	cme.abs_w,000200	page may not be moved
                        000100    4-17  	bool	cme.abs_usable,000100 page may be assigned with fixed abs addr
                        000040    4-18  	bool	cme.notify_requested,000040 ptw event must be notified on completion
                        000010    4-19  	bool	cme.phm_hedge,000010 periodic write scheduler
                        000007    4-20  	bool	cme.contr,000007	port number of controller in which core block is located
                                  4-21  
                        000002    4-22  	equ	cme.ptwp,2	page table word pointer (DU)
                        000002    4-23  	equ	cme.astep,2	AST entry ptr (DL)
                                  4-24  
                        000003    4-25  	equ	cme.pin_counter,3	number times to skip eviction (DU)
                        000003    4-26  	equ	cme.synch_page_entryp,3 rel ptr to synch page entry
                                  4-27  	
                                  4-28  "	END INCLUDE FILE cmp.incl.alm
                                   830  	include	page_info
                                   5-1  "	BEGIN INCLUDE FILE page_info.incl.alm  --  6/72
                                   5-2  "
                                   5-3  " Modified 02/22/81, W. Olin Sibert, for ADP conversion
                                   5-4  " Modified 06/23/82, E. N. Kittlitz, to move core map.
                                   5-5  "
                        000012     5-6  	equ	page_power,10		" 2**10 = size of page
                        000001     5-7  	bool	df1,000001		" directed fault 1 on page fault
                                   5-8  
                 777777 740000     5-9  	bool	address_mask,777777740000	" Mask for PTW add, add_type compares
                                  5-10  					" Use as =v36/address_mask
                                  5-11  
                        400000    5-12  	bool	ptw.nulled,400000		" flag for testing addresses
                                  5-13  
                        100000    5-14  	bool	int,100000		" Disk dim flags
                        000020    5-15  	bool	pri,000020
                        000004    5-16  	bool	no_post,000004
                                  5-17  
                        000003    5-18  	equ	sst,3			" Standard pointer and index
                        000003    5-19  	equ	pdm,sst			" register usage
                        000003    5-20  	equ	ast,sst
                        000002    5-21  	equ	ptw,2
                                  5-22  
                                  5-23  "	Various AST masks which are not
                                  5-24  "	expressible in standard notation
                                  5-25  "
                        777000    5-26  	bool	aste.csl_mask_inner,777000
                        777000    5-27  	bool	aste.records_mask_inner,777000
                                  5-28  
                        000000    5-29  	equ	fault_entry,0		" Flags indicating how we
                        000001    5-30  	equ	read_entry,1		" were entered
                        000002    5-31  	equ	write_entry,2
                        000003    5-32  	equ	pre_page_entry,3
                        000004    5-33  	equ	post_purge_entry,4
                        000005    5-34  	equ	pd_flush_entry,5
                        000006    5-35  	equ	evict_entry,6
                        000007    5-36  	equ	abs_wire_entry,7
                        000010    5-37  	equ	cleanup_entry,8
                                  5-38  
                                  5-39  " Constants for manipulating core addresses and PTWs. The core address
                                  5-40  " is a fixed bin (35) aligned, and must be moved to/from the appropriate
                                  5-41  " field in the SDW or PTW.
                                  5-42  "
                                  5-43  	iftarget	l68
                        777760          	   bool	ptw_add_mask,777760 " Page number
                        777760          	   bool	sdw_add_mask,777760 " Page number
                 000077 777777          	   bool	coreadd_mask,000077777777 " Mask for coreadd in AL
                                        
                        000014          	   equ	coreadd_to_ptw.ls,12
                        000014          	   equ	coreadd_to_sdw.ls,12
                        000014          	   equ	ptw_to_coreadd.rl,12
                        000014          	   equ	sdw_to_coreadd.rl,12
                        000002          	   equ	cmep_to_ptw.ls,2
                        000002          	   equ	cmep_to_sdw.ls,2
                        000002          	   equ	ptw_to_cmep.rl,2
                        000024          	   equ	ptw_to_cmep_lower.rl,20
                        000002          	   equ	sdw_to_cmep.rl,2
                                        "	ifend
                                  5-58  
                                  5-59  	iftarget	adp
                                        "	   bool	ptw_add_mask,177777 " Page number
                                        "	   bool	sdw_add_mask,777774 " Page number
                                        "	   bool	coreadd_mask,000377777777 " Mask for coreadd in AL
                                        "
                                        "	   equ	coreadd_to_ptw.ls,8
                                        "	   equ	coreadd_to_sdw.ls,10
                                        "	   equ	ptw_to_coreadd.rl,8
                                        "	   equ	sdw_to_coreadd.rl,10
                                        "	   equ	cmep_to_ptw.rl,2	" Must shift backwards
                                        "	   equ	cmep_to_sdw.ls,0
                                        "	   equ	ptw_to_cmep.ls,2	" Must shift backwards
                                        "	   equ	ptw_to_cmep_lower.rl,16
                                        "	   equ	sdw_to_cmep.rl,0
                                        "	ifend
                                  5-74  
                        000012    5-75  	equ	cmep_to_coreadd.rl,10	.cmep to coreadd
                        000012    5-76  	equ	coreadd_to_cmep.ls,10	coreadd to .cmep
                                  5-77  
                                  5-78  " 
                                  5-79  "
                                  5-80  " Assorted general purpose macros used in PC. These will be changed
                                  5-81  " when address types are changed for 20 bit addresses. Additionally,
                                  5-82  " for more accurate metering on the ADP, the metering macros should
                                  5-83  " modified to update the metering cells uninterruptably.
                                  5-84  "
                                  5-85  
                                  5-86  	macro	missing
                              1   5-87  	ife	&2,()
                              2   5-88  	  warn	(&1: Argument missing.)
                              3   5-89  	ifend
                              4   5-90  	&end
                                  5-91  "
                                  5-92  " staddra and staddrq store the address portion (upper 22 bits) of the A or Q
                                  5-93  " into the specified location.
                                  5-94  "
                                  5-95  	macro	staddra
                              1   5-96  	missing	staddra,&1
                              2   5-97  	era	&F1
                              3   5-98  	ana	=v36/address_mask
                              4   5-99  	ersa	&F1
                              5  5-100  	&end
                                 5-101  
                                 5-102  	macro	staddrq
                              1  5-103  	missing	staddrq,&1
                              2  5-104  	erq	&F1
                              3  5-105  	anq	=v36/address_mask
                              4  5-106  	ersq	&F1
                              5  5-107  	&end
                                 5-108  
                                 5-109  "	Macros for metering 6/23/80
                                 5-110  
                                 5-111  	macro	read_clock
                              1  5-112  	iftarget	l68
                              2  5-113  	  rccl	sys_info$clock_,*
                              3  5-114  	ifend
                              4  5-115  	iftarget adp
                              5  5-116  	  rccl	0
                              6  5-117  	ifend
                              7  5-118  	&end
                                 5-119  
                                 5-120  	macro	increment
                              1  5-121  	missing	increment,&1
                              2  5-122  	aos	&1
                              3  5-123  	&end
                                 5-124  
                                 5-125  	macro	store_clock
                              1  5-126  	missing	store_clock,&1
                              2  5-127  	read_clock
                              3  5-128  	staq	&1
                              4  5-129  	&end
                                 5-130  
                                 5-131  	macro	meter_time
                              1  5-132  	missing	meter_time,&3
                              2  5-133  	increment &3
                              3  5-134  	read_clock
                              4  5-135  	sbaq	&1
                              5  5-136  	adaq	&2
                              6  5-137  	staq	&2
                              7  5-138  	&end
                                 5-139  
                                 5-140  "	END INCLUDE FILE  page_info.incl.alm
                                   831  	include	page_regs
                                   6-1  "
                                   6-2  "	Begin include file page_regs.incl.alm
                                   6-3  "
                                   6-4  "	11/12/74 by BSG
                                   6-5  "
                                   6-6  
                        000000     6-7  	equ	.tem,0	temporary (may be used at any time)
                        000000     6-8  	equ	.nxt,0	threading temp, points to next cme/pdme
                        000001     6-9  	equ	.lst,1	threading temp, points to last cme/pdme
                        000001    6-10  	equ	.pdme,1	pointer to pdme of interest
                        000002    6-11  	equ	.ptw,2	pointer to PTW of interest
                        000003    6-12  	equ	.aste,3	pointer to AST entry of interest
                        000004    6-13  	equ	.cme,4	pointer to core map entry of interest
                        000005    6-14  	equ	.x5,5	not used consistently
                        000006    6-15  	equ	.2ret,6	auxiliary one-level-deep call return
                        000007    6-16  	equ	.ret,7	standard call return
                                  6-17  
                                  6-18  "
                                  6-19  "	End include file page_regs.incl.alm
                                  6-20  "
                                   832  	include	pvte
                                   7-1  
                                   7-2  
                                   7-3       "BEGIN INCLUDE FILE pvte.incl.alm
                                   7-4  
                                   7-5  
                                   7-6  	"Created 05/29/86  1617.9 mst Thu by convert_include_file,
                                   7-7  	"   Version of 04/10/86  1622.3 mst Thu.
                                   7-8  
                                   7-9  	"Made from >dumps>old>dipper>svs5>incl>pvte.incl.pl1,
                                  7-10  	"   modified 05/29/86  1617.8 mst Thu
                                  7-11  
                                  7-12  
                                  7-13  " HISTORY COMMENTS:
                                  7-14  "  1) change(86-04-11,Fawcett), approve(86-04-11,MCR7383),
                                  7-15  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  7-16  "        Add the support for subvolumes
                                  7-17  "  2) change(86-04-11,Lippard), approve(86-04-11,MCR7309),
                                  7-18  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  7-19  "        Add root_lv flag to mount RLVs that do not have hardcore partitions.
                                  7-20  "  3) change(88-05-27,GWMay), approve(88-05-27,MCR7883),
                                  7-21  "     audit(88-06-14,Beattie), install(88-07-19,MR12.2-1061):
                                  7-22  "        Added inconsistent_dbm bit for determining the status of volume
                                  7-23  "        dumper bit maps.
                                  7-24  "                                                      END HISTORY COMMENTS
                                  7-25  
                                  7-26  
                                  7-27  "
                                  7-28  "	Structure pvt_array
                                  7-29  "
                                  7-30  
                                  7-31  "
                                  7-32  "	Structure pvte
                                  7-33  "
                        000034    7-34  	equ	pvte_size,28
                                  7-35  
                                  7-36  
                        000000    7-37  	equ	pvte.pvid,0
                        000001    7-38  	equ	pvte.lvid,1
                                  7-39  
                        000002    7-40  	equ	pvte.dmpr_in_use_word,2
                        400000    7-41  	bool	pvte.dmpr_in_use,400000	" DU
                        000002    7-42  	equ	pvte.is_sv_word,2
                        040000    7-43  	bool	pvte.is_sv,040000		" DU
                        000002    7-44  	equ	pvte.root_lv_word,2
                        020000    7-45  	bool	pvte.root_lv,020000		" DU
                        000002    7-46  	equ	pvte.removable_pack_word,2
                        010000    7-47  	bool	pvte.removable_pack,010000	" DU
                        000002    7-48  	equ	pvte.inconsistent_dbm_word,2
                        004000    7-49  	bool	pvte.inconsistent_dbm,004000	" DU
                        000002    7-50  	equ	pvte.brother_pvtx_word,2
                        000022    7-51  	equ	pvte.brother_pvtx_shift,18
                        000777    7-52  	bool	pvte.brother_pvtx_mask,000777
                        000002    7-53  	equ	pvte.skip_queue_count,2	" LOWER
                                  7-54  
                        000003    7-55  	equ	pvte.devname,3
                                  7-56  
                        000004    7-57  	equ	pvte.device_type_word,4
                        000033    7-58  	equ	pvte.device_type_shift,27
                        000777    7-59  	bool	pvte.device_type_mask,000777
                        000004    7-60  	equ	pvte.logical_area_number_word,4
                        000022    7-61  	equ	pvte.logical_area_number_shift,18
                        000777    7-62  	bool	pvte.logical_area_number_mask,000777
                        000004    7-63  	equ	pvte.used_word,4
                        400000    7-64  	bool	pvte.used,400000		" DL
                        000004    7-65  	equ	pvte.storage_system_word,4
                        200000    7-66  	bool	pvte.storage_system,200000	" DL
                        000004    7-67  	equ	pvte.permanent_word,4
                        100000    7-68  	bool	pvte.permanent,100000	" DL
                        000004    7-69  	equ	pvte.testing_word,4
                        040000    7-70  	bool	pvte.testing,040000		" DL
                        000004    7-71  	equ	pvte.being_mounted_word,4
                        020000    7-72  	bool	pvte.being_mounted,020000	" DL
                        000004    7-73  	equ	pvte.being_demounted_word,4
                        010000    7-74  	bool	pvte.being_demounted,010000	" DL
                        000004    7-75  	equ	pvte.check_read_incomplete_word,4
                        004000    7-76  	bool	pvte.check_read_incomplete,004000 " DL
                        000004    7-77  	equ	pvte.device_inoperative_word,4
                        002000    7-78  	bool	pvte.device_inoperative,002000 " DL
                        000004    7-79  	equ	pvte.rpv_word,4
                        001000    7-80  	bool	pvte.rpv,001000		" DL
                        000004    7-81  	equ	pvte.scav_check_address_word,4
                        000400    7-82  	bool	pvte.scav_check_address,000400 " DL
                        000004    7-83  	equ	pvte.deposit_to_volmap_word,4
                        000200    7-84  	bool	pvte.deposit_to_volmap,000200	" DL
                        000004    7-85  	equ	pvte.being_demounted2_word,4
                        000100    7-86  	bool	pvte.being_demounted2,000100	" DL
                        000004    7-87  	equ	pvte.pc_vacating_word,4
                        000040    7-88  	bool	pvte.pc_vacating,000040	" DL
                        000004    7-89  	equ	pvte.vacating_word,4
                        000020    7-90  	bool	pvte.vacating,000020	" DL
                        000004    7-91  	equ	pvte.hc_part_used_word,4
                        000010    7-92  	bool	pvte.hc_part_used,000010	" DL
                        000004    7-93  	equ	pvte.volmap_lock_notify_word,4
                        000004    7-94  	bool	pvte.volmap_lock_notify,000004 " DL
                        000004    7-95  	equ	pvte.volmap_idle_notify_word,4
                        000002    7-96  	bool	pvte.volmap_idle_notify,000002 " DL
                        000004    7-97  	equ	pvte.vtoc_map_lock_notify_word,4
                        000001    7-98  	bool	pvte.vtoc_map_lock_notify,000001 " DL
                                  7-99  
                        000005   7-100  	equ	pvte.n_free_vtoce,5		" UPPER
                        000005   7-101  	equ	pvte.vtoc_size,5		" LOWER
                                 7-102  
                        000006   7-103  	equ	pvte.dbmrp,6		" UPPER
                                 7-104  
                        000007   7-105  	equ	pvte.nleft,7		" UPPER
                        000007   7-106  	equ	pvte.totrec,7		" LOWER
                                 7-107  
                        000010   7-108  	equ	pvte.dim_info,8
                        000011   7-109  	equ	pvte.sv_num,9
                        000012   7-110  	equ	pvte.num_of_svs,10
                        000013   7-111  	equ	pvte.records_per_cyl,11
                        000014   7-112  	equ	pvte.record_factor,12
                        000015   7-113  	equ	pvte.sv_name,13
                                 7-114  
                        000016   7-115  	equ	pvte.curn_dmpr_vtocx,14	" UPPER
                                 7-116  
                        000017   7-117  	equ	pvte.n_vtoce,15		" LOWER
                                 7-118  
                        000020   7-119  	equ	pvte.baseadd,16		" UPPER
                                 7-120  
                        000022   7-121  	equ	pvte.volmap_seg_sdw,18	" DOUBLE
                        000024   7-122  	equ	pvte.volmap_astep,20
                                 7-123  
                        000025   7-124  	equ	pvte.volmap_offset,21	" UPPER
                        000025   7-125  	equ	pvte.vtoc_map_offset,21	" LOWER
                                 7-126  
                        000026   7-127  	equ	pvte.volmap_lock,22
                        000027   7-128  	equ	pvte.vtoc_map_lock,23
                        000030   7-129  	equ	pvte.volmap_stock_ptr,24
                        000031   7-130  	equ	pvte.vtoc_map_stock_ptr,25
                                 7-131  
                        000032   7-132  	equ	pvte.volmap_async_state,26	" UPPER
                        000032   7-133  	equ	pvte.volmap_async_page,26	" LOWER
                                 7-134  
                        000033   7-135  	equ	pvte.vol_trouble_count,27	" UPPER
                        000033   7-136  	equ	pvte.scavenger_block_rel,27	" LOWER
                                 7-137  
                        000000   7-138  	equ	VOLMAP_ASYNC_IDLE,0		" MANIFEST
                        000001   7-139  	equ	VOLMAP_ASYNC_READ,1		" MANIFEST
                        000002   7-140  	equ	VOLMAP_ASYNC_WRITE,2	" MANIFEST
                                 7-141  
                                 7-142       "END INCLUDE FILE pvte.incl.alm
                                   833  	include	pxss_page_stack
                                   8-1  "
                                   8-2  "	BEGIN INCLUDE FILE  pxss_page_stack.incl.alm     July 1982
                                   8-3  "
                                   8-4  
                        000006     8-5  	equ	pxss_stack_size,6	" size of x7 save stack used by pxss
                        000015     8-6  	equ	stack_size,13	" size of x7 save stack used by page control
                                   8-7  
                                   8-8  	temp8	notify_regs
                                   8-9  	temp	save_stack(stack_size),stackp
                                  8-10  	tempd	pre_time,pre_temp(3)
                                  8-11  	tempd	arg(11),temp
                                  8-12  	tempd	stock_temp,volmap_temp,volmap_save_ptr
                                  8-13  	tempd	tmp_ev_channel,tmp_ev_message,apt_ptr,getwork_temp,delta_t
                                  8-14  	tempd	lock_volmap_temp_1,free_store_temp_1,volmap_save_sdw
                                  8-15  	temp	cmep,total_steps,temp1,temp2,volmap_temp_1,volmap_temp_2
                                  8-16  	temp	pvtx,core_add,count,entry_sw,ptp_astep,inter,devadd,errcode
                                  8-17  	temp	tmp_ring,dev_signal,before,depth,x5
                                  8-18  	temp	tmp_event,pxss_save_stack(pxss_stack_size),pxss_stackp
                                  8-19  	temp	stock_temp_1,stock_temp_2,free_store_temp,savx2_3
                                  8-20  	temp	lock_volmap_temp
                                  8-21  	temp	volmap_page_temp
                                  8-22  	tempd	free_store_start_time,post_io_start_time
                                  8-23  
                                  8-24  	temp	done_astep,volmap_page_temp_1
                                  8-25  	temp	vtocx,pageno
                                  8-26  
                                  8-27  	tempd	page_synch_temp,page_synch_time
                                  8-28  	temp	page_synch_index
                                  8-29  
                                  8-30  	temp	pc_err_type,pc_err_ptwp,pc_err_astep
                                  8-31  	tempd	pf_sdw
                                  8-32  
                                  8-33  	temp	pad(22)		" to grow compatibly
                                  8-34  "
                                  8-35  "	END INCLUDE FILE  pxss_page_stack.incl.alm
                                  8-36  "
                                   834  	include	stack_frame
                                   9-1  "
                                   9-2  "	BEGIN INCLUDE FILE ... stack_frame.incl.alm   6/72 RBS
                                   9-3  "
                                   9-4  " Modified: 16 Dec 1977, D. Levin - to add fio_ps_ptr
                                   9-5  " Modified:  3 Feb 1978, P. Krupp - to add run_unit_manager_bit & main_proc_bit
                                   9-6  " Modified: 21 March 1978, D. Levin - change fio_ps_ptr to support_ptr
                                   9-7  "
                        000020     9-8  	equ	stack_frame.prev_sp,16
                        000020     9-9  	equ	stack_frame.condition_word,16
                        000022    9-10  	equ	stack_frame.next_sp,18
                        000022    9-11  	equ	stack_frame.signaller_word,18
                        000024    9-12  	equ	stack_frame.return_ptr,20
                        000026    9-13  	equ	stack_frame.entry_ptr,22
                        000030    9-14  	equ	stack_frame.operator_ptr,24
                        000030    9-15  	equ	stack_frame.lp_ptr,24
                        000032    9-16  	equ	stack_frame.arg_ptr,26
                        000034    9-17  	equ	stack_frame.static_ptr,28
                        000035    9-18  	equ	stack_frame.support_ptr,29	" only used by fortran I/O
                        000036    9-19  	equ	stack_frame.on_unit_rel_ptrs,30
                        000037    9-20  	equ	stack_frame.operator_ret_ptr,31
                        000037    9-21  	equ	stack_frame.translator_id,31
                        000040    9-22  	equ	stack_frame.regs,32
                        000060    9-23  	equ	stack_frame.min_length,48
                        000020    9-24  	equ	stack_frame.flag_word,16
                        020000    9-25  	bool	stack_frame.main_proc_bit,020000	(DL)
                        010000    9-26  	bool	stack_frame.run_unit_manager,010000	(DL)
                        004000    9-27  	bool	stack_frame.signal_bit,004000		(DL)
                        002000    9-28  	bool	stack_frame.crawl_out_bit,002000	(DL)
                        001000    9-29  	bool	stack_frame.signaller_bit,001000	(DL)
                        000400    9-30  	bool	stack_frame.link_trap_bit,000400	(DL)
                        000200    9-31  	bool	stack_frame.support_bit,000200	(DL)
                        000100    9-32  	bool	stack_frame.condition_bit,000100	(DL)
                                  9-33  
                                  9-34  "
                                  9-35  "	END INCLUDE FILE  ... stack_frame.incl.alm
                                  9-36  "
                                   835  	include	stack_header
                                  10-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                  10-2  "
                                  10-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                  10-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                  10-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                  10-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                  10-7  
                                  10-8  " HISTORY COMMENTS:
                                  10-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                 10-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                 10-11  "     added the heap_header_ptr definition
                                 10-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                 10-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                 10-14  "     Modified to support control point management.  These changes were
                                 10-15  "     actually made in February 1985 by G. Palter.
                                 10-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                 10-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                 10-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                 10-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                 10-20  "     some space int the stack header and change the cpd_ptr unal to
                                 10-21  "     cpm_data_ptr (ITS pair).
                                 10-22  "                                                      END HISTORY COMMENTS
                                 10-23  
                        000004   10-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006   10-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                 10-26  
                        000010   10-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012   10-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012   10-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012   10-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013   10-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013   10-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014   10-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016   10-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                 10-35  
                        000020   10-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022   10-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024   10-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026   10-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                 10-40  
                        000030   10-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032   10-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034   10-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036   10-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                 10-45  
                        000040   10-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042   10-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044   10-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046   10-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                 10-50  
                        000050   10-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052   10-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054   10-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056   10-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                 10-55  
                        000060   10-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062   10-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064   10-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066   10-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070   10-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072   10-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073   10-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074   10-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100   10-64  	equ	stack_header_end,64			length of stack header
                                 10-65  
                                 10-66  
                                 10-67  
                                 10-68  
                        000000   10-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001   10-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                 10-71  
                                 10-72  "	The  following constant is an offset within the  pl1  operators table.
                                 10-73  "	It  references a  transfer vector table.
                                 10-74  
                        000551   10-75  	bool	tv_offset,551
                                 10-76  
                                 10-77  
                                 10-78  "	The  following constants are offsets within this transfer vector table.
                                 10-79  
                        001170   10-80  	equ	call_offset,tv_offset+271
                        001171   10-81  	equ	push_offset,tv_offset+272
                        001172   10-82  	equ	return_offset,tv_offset+273
                        001173   10-83  	equ	return_no_pop_offset,tv_offset+274
                        001174   10-84  	equ	entry_offset,tv_offset+275
                                 10-85  
                                 10-86  
                                 10-87  " 	END INCLUDE FILE stack_header.incl.alm
                                   836  	include	syserr_constants
                                  11-1  
                                  11-2  
                                  11-3       "BEGIN INCLUDE FILE syserr_constants.incl.alm
                                  11-4  
                                  11-5  
                                  11-6  	"Created 04/24/85  2004.3 est Wed by convert_include_file,
                                  11-7  	"   Version of 01/09/85  0954.4 est Wed.
                                  11-8  
                                  11-9  	"Made from >Pool>Multics>Palter>work>mseg>syserr_constants.incl.pl1,
                                 11-10  	"   modified 04/24/85  2004.3 est Wed
                                 11-11  
                                 11-12  
                        000001   11-13  	equ	SYSERR_CRASH_SYSTEM,1	" MANIFEST
                        000001   11-14  	equ	CRASH,1			" MANIFEST
                        000002   11-15  	equ	SYSERR_TERMINATE_PROCESS,2	" MANIFEST
                        000002   11-16  	equ	TERMINATE_PROCESS,2		" MANIFEST
                        000003   11-17  	equ	SYSERR_PRINT_WITH_ALARM,3	" MANIFEST
                        000003   11-18  	equ	BEEP,3			" MANIFEST
                        000000   11-19  	equ	SYSERR_PRINT_ON_CONSOLE,0	" MANIFEST
                        000000   11-20  	equ	ANNOUNCE,0		" MANIFEST
                        000004   11-21  	equ	SYSERR_LOG_OR_PRINT,4	" MANIFEST
                        000004   11-22  	equ	LOG,4			" MANIFEST
                        000005   11-23  	equ	SYSERR_LOG_OR_DISCARD,5	" MANIFEST
                        000005   11-24  	equ	JUST_LOG,5		" MANIFEST
                        000000   11-25  	equ	SYSERR_SYSTEM_ERROR,00	" MANIFEST
                        000012   11-26  	equ	SYSERR_RING1_ERROR,10	" MANIFEST
                        000024   11-27  	equ	SYSERR_COVERT_CHANNEL,20	" MANIFEST
                        000036   11-28  	equ	SYSERR_UNSUCCESSFUL_ACCESS,30	" MANIFEST
                        000050   11-29  	equ	SYSERR_SUCCESSFUL_ACCESS,40	" MANIFEST
                                 11-30  
                                 11-31       "END INCLUDE FILE syserr_constants.incl.alm
                        000030     837  	equ	SYSERR_COVERT_CHANNEL_LOG,SYSERR_COVERT_CHANNEL+LOG
                                   838  	include	syserr_mmdam_msg
                                  12-1  
                                  12-2  
                                  12-3       "BEGIN INCLUDE FILE syserr_mmdam_msg.incl.alm
                                  12-4  
                                  12-5  
                                  12-6  	"Created 02/21/85  1427.9 est Thu by convert_include_file,
                                  12-7  	"   Version of 01/09/85  0954.4 est Wed.
                                  12-8  
                                  12-9  	"Made from >Pool>Multics>EJSharpe>syserr>i2>syserr_mmdam_msg.incl.pl1,
                                 12-10  	"   modified 02/21/85  1427.9 est Thu
                                 12-11  
                                 12-12  "
                                 12-13  "	Structure mmdam_msg
                                 12-14  "
                        000002   12-15  	equ	mmdam_msg_size,2
                                 12-16  
                                 12-17  
                        000000   12-18  	equ	mmdam_msg.addr,0
                        000001   12-19  	equ	mmdam_msg.ctrltag,1
                                 12-20  
                                 12-21       "END INCLUDE FILE syserr_mmdam_msg.incl.alm
                                   839  	include	segdamage_msg
                                  13-1  
                                  13-2  
                                  13-3       "BEGIN INCLUDE FILE segdamage_msg.incl.alm
                                  13-4  
                                  13-5  	"Created 07/15/77  1404.1 edt Fri by convert_include_file,
                                  13-6  	"   Version of 03/21/77  1355.7 edt Mon.
                                  13-7  
                                  13-8  	"Made from >user_dir_dir>Multics>nss>bsg2>segdamage_msg.incl.pl1,
                                  13-9  	"   modified 07/15/77  1404.0 edt Fri
                                 13-10  
                                 13-11  "
                                 13-12  "	Structure segdamage
                                 13-13  "
                        000024   13-14  	equ	segdamage_size,20
                                 13-15  
                                 13-16  
                        000000   13-17  	equ	segdamage.pvid,0
                        000001   13-18  	equ	segdamage.lvid,1
                                 13-19  
                        000002   13-20  	equ	segdamage.pno,2		"UPPER
                        000002   13-21  	equ	segdamage.vtocx,2		"LOWER
                                 13-22  
                        000003   13-23  	equ	segdamage.uid,3
                        000004   13-24  	equ	segdamage.uid_path,4
                                 13-25  
                                 13-26       "END INCLUDE FILE segdamage_msg.incl.alm
                                   840  	include	syserr_binary_def
                                  14-1  
                                  14-2  
                                  14-3       "BEGIN INCLUDE FILE syserr_binary_def.incl.alm
                                  14-4  
                                  14-5  
                                  14-6  	"Created 02/21/85  1110.7 est Thu by convert_include_file,
                                  14-7  	"   Version of 01/09/85  0954.4 est Wed.
                                  14-8  
                                  14-9  	"Made from >Pool_volume>Multics>EJSharpe>syserr>install2>syserr_binary_def.incl.pl1,
                                 14-10  	"   modified 02/21/85  1108.3 est Thu
                                 14-11  
                                 14-12  
                        000001   14-13  	equ	SB_disk_err,1		" MANIFEST
                        000005   14-14  	equ	SBL_disk_err,5		" MANIFEST
                        000002   14-15  	equ	SB_hw_fault,2		" MANIFEST
                        000260   14-16  	equ	SBL_hw_fault,176		" MANIFEST
                        000003   14-17  	equ	SB_io_err,3		" MANIFEST
                        000005   14-18  	equ	SBL_io_err,5		" MANIFEST
                        000004   14-19  	equ	SB_mos_poll,4		" MANIFEST
                        000001   14-20  	equ	SBL_mos_poll,1		" MANIFEST
                        000005   14-21  	equ	SB_mos_err,5		" MANIFEST
                        000002   14-22  	equ	SBL_mos_err,2		" MANIFEST
                        000006   14-23  	equ	SB_unused_6,6		" MANIFEST
                        000001   14-24  	equ	SBL_unused_6,1		" MANIFEST
                        000007   14-25  	equ	SB_unused_7,7		" MANIFEST
                        000001   14-26  	equ	SBL_unused_7,1		" MANIFEST
                        000010   14-27  	equ	SB_unused_8,8		" MANIFEST
                        000003   14-28  	equ	SBL_unused_8,3		" MANIFEST
                        000011   14-29  	equ	SB_unused_9,9		" MANIFEST
                        000002   14-30  	equ	SBL_unused_9,2		" MANIFEST
                        000012   14-31  	equ	SB_unused_10,10		" MANIFEST
                        000025   14-32  	equ	SBL_unused_10,21		" MANIFEST
                        000013   14-33  	equ	SB_zerpag,11		" MANIFEST
                        000024   14-34  	equ	SBL_zerpag,20		" MANIFEST
                        000014   14-35  	equ	SB_unused_12,12		" MANIFEST
                        000024   14-36  	equ	SBL_unused_12,20		" MANIFEST
                        000015   14-37  	equ	SB_vtoc_salv_dam,13		" MANIFEST
                        000024   14-38  	equ	SBL_vtoc_salv_dam,20	" MANIFEST
                        000016   14-39  	equ	SB_unused_14,14		" MANIFEST
                        000024   14-40  	equ	SBL_unused_14,20		" MANIFEST
                        000017   14-41  	equ	SB_unused_15,15		" MANIFEST
                        000003   14-42  	equ	SBL_unused_15,3		" MANIFEST
                        000020   14-43  	equ	SB_random_segdamage,16	" MANIFEST
                        000024   14-44  	equ	SBL_random_segdamage,20	" MANIFEST
                        000021   14-45  	equ	SB_read_nc,17		" MANIFEST
                        000002   14-46  	equ	SBL_read_nc,2		" MANIFEST
                        000022   14-47  	equ	SB_unused_18,18		" MANIFEST
                        000002   14-48  	equ	SBL_unused_18,2		" MANIFEST
                        000023   14-49  	equ	SB_mdc_del_uidpath,19	" MANIFEST
                        000020   14-50  	equ	SBL_mdc_del_uidpath,16	" MANIFEST
                        000024   14-51  	equ	SB_ocdcm_err,20		" MANIFEST
                        000005   14-52  	equ	SBL_ocdcm_err,5		" MANIFEST
                        000025   14-53  	equ	SB_mmdam,21		" MANIFEST
                        000002   14-54  	equ	SBL_mmdam,2		" MANIFEST
                        000026   14-55  	equ	SB_verify_lock,22		" MANIFEST
                        000260   14-56  	equ	SBL_verify_lock,176		" MANIFEST
                        000027   14-57  	equ	SB_io_err_detail,23		" MANIFEST
                        000013   14-58  	equ	SBL_io_err_detail,11	" MANIFEST
                        000030   14-59  	equ	SB_mpc_poll,24		" MANIFEST
                        000400   14-60  	equ	SBL_mpc_poll,256		" MANIFEST
                        000031   14-61  	equ	SB_fnp_poll,25		" MANIFEST
                        000400   14-62  	equ	SBL_fnp_poll,256		" MANIFEST
                        000032   14-63  	equ	SB_config_deck,26		" MANIFEST
                        000400   14-64  	equ	SBL_config_deck,256		" MANIFEST
                        000033   14-65  	equ	SB_vtoce,27		" MANIFEST
                        000300   14-66  	equ	SBL_vtoce,192		" MANIFEST
                        000034   14-67  	equ	SB_access_audit,28		" MANIFEST
                        000400   14-68  	equ	SBL_access_audit,256	" MANIFEST
                        000043   14-69  	equ	SB_ibm3270_mde,35		" MANIFEST
                        000400   14-70  	equ	SBL_ibm3270_mde,256		" MANIFEST
                        000044   14-71  	equ	SB_end_of_table,36		" MANIFEST
                        000001   14-72  	equ	SBL_end_of_table,1		" MANIFEST
                 060000 000000   14-73  	bool	syserr_binary_mos_mask,060000000000 " MANIFEST
                 000374 000000   14-74  	bool	syserr_binary_seg_damage_mask,000374000000 " MANIFEST
                 003413 000000   14-75  	bool	syserr_binary_vol_damage_mask,003413000000 " MANIFEST
                                 14-76  "	bool	syserr_binary_address_damage_mask,002010000000 " MANIFEST
                                 14-77  
                                 14-78       "END INCLUDE FILE syserr_binary_def.incl.alm
                        000034     841  	equ	SB_covert_seg_state,SB_access_audit
                        000024     842  	equ	SBL_covert_seg_state,audit_head_size
                                   843  "
                                   844  "BEGIN MESSAGE DOCUMENTATION
                                   845  
                                   846  "	Message:
                                   847  "	device_control: invalid pvtx XX
                                   848  
                                   849  "	S:	$crash
                                   850  
                                   851  "	T:	$run
                                   852  
                                   853  "	M:	An invalid PVT index XX was found by device control,
                                   854  "	or an invalid device type appeared in the PVT entry of that index.
                                   855  "	$err
                                   856  
                                   857  "	A:	$recover
                                   858  
                                   859  
                                   860  "	Message:
                                   861  "	free_store: out of room in hardcore partition.
                                   862  
                                   863  "	S:	$crash
                                   864  
                                   865  "	T:	$run
                                   866  
                                   867  "	M:	During bootload, the PART HC on the RLV became full.
                                   868  "	$err
                                   869  
                                   870  "	A:	$recover
                                   871  "	It may be necessary to boot with another tape.
                                   872  "	If this error occurs with a new version of the system boot tape,
                                   873  "	the system programming staff may determine that the size of the
                                   874  "	hardcore partition must be increased by using the
                                   875  "	rebuild_disk command on a copy of the RPV.
                                   876  
                                   877  
                                   878  "	Message:
                                   879  "	page_fault: Zeroing page on DSKX_NN{S}
                                   880  
                                   881  "	S:	$info
                                   882  
                                   883  "	T:	$run
                                   884  
                                   885  "	M:	A segment residing on DSKX_NN{S}
                                   886  "	has been damaged due to a device error.
                                   887  "	The segment damaged switch is set and a page of zeros is introduced
                                   888  "	into the segment.
                                   889  "	Subsequent user processes attempting to use this segment will
                                   890  "	receive an error indication.
                                   891  "	Binary information identifying the damaged segment is encoded into
                                   892  "	this message for subsequent automatic processing. The pathname
                                   893  "	of the damaged segment will appear in a message in the answering
                                   894  "	service log, bearing the syserr_log sequence number of this
                                   895  "	message, shortly after this message occurs.
                                   896  
                                   897  "	A: Attempt to identify the damaged segment, and
                                   898  "	inform its owner.
                                   899  
                                   900  
                                   901  "	Message:
                                   902  "	page_fault: fatal error at loc AAAA
                                   903  
                                   904  "	S:	$crash
                                   905  
                                   906  "	T:	$run
                                   907  
                                   908  "	M:	$err
                                   909  
                                   910  "	A:	$recover
                                   911  
                                   912  
                                   913  "	Message:
                                   914  "	page_fault: nonfatal error at loc AAAA
                                   915  
                                   916  "	S:	$info
                                   917  
                                   918  "	T:	$run
                                   919  
                                   920  "	M:	$err
                                   921  "	The system attempts to keep running.
                                   922  
                                   923  "	A:	$ignore
                                   924  
                                   925  
                                   926  "	Message:
                                   927  "	page_fault: device read not complete DSKX_NN{S} DDDD
                                   928  
                                   929  "	S:	$crash
                                   930  
                                   931  "	T:	$run
                                   932  
                                   933  "	M:	This message is used for program debugging only.
                                   934  
                                   935  "	A:	$recover
                                   936  "	$inform
                                   937  
                                   938  
                                   939  "	Message:
                                   940  "	page_fault: fatal error in done, ptp ZZZZ
                                   941  
                                   942  "	S:	$crash
                                   943  
                                   944  "	T:	$run
                                   945  
                                   946  "	M:	While posting an I/O completion,
                                   947  "	the system found a page table pointer of zero,
                                   948  "	or found that the page was not out of service.
                                   949  "	$err
                                   950  
                                   951  "	A:	$recover
                                   952  
                                   953  
                                   954  "	Message:
                                   955  "	page_fault: mylock on global lock
                                   956  
                                   957  "	S:	$crash
                                   958  
                                   959  "	T:	$run
                                   960  
                                   961  "	M:	When page_fault attempted to lock the global
                                   962  "	page control lock, it found it already locked to the same process.
                                   963  "	$err
                                   964  
                                   965  "	A:	$recover
                                   966  
                                   967  
                                   968  "	Message:
                                   969  "	page_fault: out of main memory
                                   970  
                                   971  "	S:	$crash
                                   972  
                                   973  "	T:	$run
                                   974  
                                   975  "	M:	The page removal algorithm was unable to
                                   976  "	find a removable page. Incorrect system programmer action,
                                   977  "	damage to the AST, or an error in the
                                   978  "	supervisor or the hardware could cause this symptom.
                                   979  
                                   980  "	A:	$recover
                                   981  
                                   982  
                                   983  "	Message:
                                   984  "	page_fault: Reverting page on DSKX_NN{S}
                                   985  
                                   986  "	S:	$info
                                   987  
                                   988  "	T:	$run
                                   989  
                                   990  "	M:	A segment residing on DSKX_NN{S} has had one of its
                                   991  "	pages reverted to an earlier copy of the same page.  The damaged switch
                                   992  "	is set.  This can happen due to device error or main memory errors.
                                   993  "	Subsequent user processes attempting to use this segment
                                   994  "	will receive an error indication.  Binary information
                                   995  "	identifying the damaged segment is encoded into this message for
                                   996  "	subsequent automatic processing.  The pathname
                                   997  "	of the damaged segment will appear in a message in the answering
                                   998  "	service log, bearing the syserr log sequence number
                                   999  "	of this message, shortly after this message occurs.
                                  1000  
                                  1001  "	A: Attempt to identify the damaged segment and inform its owner.
                                  1002  
                                  1003  
                                  1004  "	Message:
                                  1005  "	page_fault: Deleting main memory at AAAA, SCU TAG,
                                  1006  "	due to parity errors.
                                  1007  
                                  1008  "	S: $beep
                                  1009  
                                  1010  "	T: $run
                                  1011  
                                  1012  "	M: Due to main memory parity errors, the system is automatically
                                  1013  "	removing a page of main memory from the memory in SCU TAG,
                                  1014  "	preventing further use during this bootload.
                                  1015  
                                  1016  "	A: Inform Field Engineering personnel about possible
                                  1017  "	problems with this SCU.
                                  1018  
                                  1019  
                                  1020  "	Message:
                                  1021  "	evict_page: parity error moving page, frame at AAA, SCU TAG.
                                  1022  
                                  1023  "	S: $info
                                  1024  
                                  1025  "	T: $run
                                  1026  
                                  1027  "	M: A parity error was encountered while moving a page within
                                  1028  "	main memory.  This may occur as part of an attempt to delete that
                                  1029  "	main memory, or use it as an I/O buffer.
                                  1030  
                                  1031  "	A: Inform Field Engineering personnel about possible problems
                                  1032  "	with this SCU.
                                  1033  
                                  1034  
                                  1035  "	Message:
                                  1036  "	evict_page: fatal parity error moving page, frame at AAA, SCU TAG.
                                  1037  
                                  1038  "	S: $crash
                                  1039  
                                  1040  "	T: $run
                                  1041  
                                  1042  "	M: A parity error was encountered while moving a wired page
                                  1043  "	around memory.  The page may not be usable.
                                  1044  
                                  1045  "	A: Contact Field Engineering personnel about possible
                                  1046  "	problems with SCU TAG.
                                  1047  "	$recover
                                  1048  
                                  1049  
                                  1050  "	Message:
                                  1051  "	free_store: volmap_seg async error for dskX_NN{S}
                                  1052  
                                  1053  "	S:	$crash
                                  1054  
                                  1055  "	T:	$run
                                  1056  
                                  1057  "	M:	When attempting to write a page of the Volume Map
                                  1058  "	to dskX_NN{S}, the page was found not to be in memory. This
                                  1059  "	probably indicates a software error.
                                  1060  
                                  1061  "	A:	$recover
                                  1062  
                                  1063  
                                  1064  "	Message:
                                  1065  "	free_store: Deposit non-disk address XXXXXXXXXXXX on dskX_NN{S}
                                  1066  
                                  1067  "	S:	$crash
                                  1068  
                                  1069  "	T:	$run
                                  1070  
                                  1071  "	M:	free_store was called to return an address to the free
                                  1072  "	pool for dskX_NN{S}, but the address type was not disk. This probably
                                  1073  "	indicates a software error.
                                  1074  
                                  1075  "	A:	$recover
                                  1076  
                                  1077  
                                  1078  "	Message:
                                  1079  "	free_store: Deposit/withdraw address XXXXXX out of paging region on dskX_NN{S}.
                                  1080  
                                  1081  "	S:	$crash
                                  1082  
                                  1083  "	T:	$run
                                  1084  
                                  1085  "	M:	Address XXXXXX was being deposited to or wtihdrawn from
                                  1086  "	the pool of free addresses for dskX_NN{S}, but the address is not
                                  1087  "	within the Paging Region for the device. This probably indicates
                                  1088  "	a software error.
                                  1089  
                                  1090  "	A:	$recover
                                  1091  
                                  1092  
                                  1093  "	Message:
                                  1094  "	free_store: PVTE/Stock out of synch on dskX_NN{S}. stockp=YYY|YYYYY.
                                  1095  
                                  1096  "	S:	$crash
                                  1097  
                                  1098  "	T:	$run
                                  1099  
                                  1100  "	M:	The PVTE and record stock for dskX_NN{S} do not point to
                                  1101  "	each other. This indicates a hardware or software error.
                                  1102  
                                  1103  "	A:	$recover
                                  1104  
                                  1105  
                                  1106  "	Message:
                                  1107  "	free_store: Invalid call to free_store$deposit_list.
                                  1108  
                                  1109  "	S:	$crash
                                  1110  
                                  1111  "	T:	$run
                                  1112  
                                  1113  "	M:	free_store$deposit_list was called with the wrong
                                  1114  "	number of arguments. This is a software error.
                                  1115  
                                  1116  "	A:	$recover
                                  1117  
                                  1118  
                                  1119  "	Message:
                                  1120  "	free_store: Scavenger STACQ fails on dskX_NN{S}.
                                  1121  
                                  1122  "	S:	$crash
                                  1123  
                                  1124  "	T:	During a physical volume scavenge of dskX_NN{S}.
                                  1125  
                                  1126  "	M:	A STACQ instruction, used to unlock a record address
                                  1127  "	during a volume scavenge, did not operate correctly. This indicates
                                  1128  "	processor or memory malfunction.
                                  1129  
                                  1130  "	A:	$recover
                                  1131  
                                  1132  
                                  1133  "	Message:
                                  1134  "	lock_volmap: STACQ fails on dskX_NN{S}.
                                  1135  
                                  1136  "	S:	$crash
                                  1137  
                                  1138  "	T:	$run
                                  1139  
                                  1140  "	M:	The stacq instruction, used to lock the Volume Map on
                                  1141  "	dskX_NN{S}, did not operate correctly. This indicates processor or
                                  1142  "	memory malfunction.
                                  1143  
                                  1144  "	A:	$recover
                                  1145  
                                  1146  
                                  1147  "	Message:
                                  1148  "	lock_volmap: MYLOCK on volmap lock for dskX_NN{S}.
                                  1149  
                                  1150  "	S:	$crash
                                  1151  
                                  1152  "	T:	$run
                                  1153  
                                  1154  "	M:	A process attempted to lock the Volume Map lock for
                                  1155  "	dskX_NN{S} while already owning the lock. This indicates a software
                                  1156  "	malfunction.
                                  1157  
                                  1158  "	A:	$recover
                                  1159  
                                  1160  
                                  1161  "	Message:
                                  1162  "	stock: deposit zero address.
                                  1163  
                                  1164  "	S:	$crash
                                  1165  
                                  1166  "	T:	$run
                                  1167  
                                  1168  "	M:	An attempt was made to deposit address zero into a record
                                  1169  "	stock. This is an invalid address, and it indicates hardware or
                                  1170  "	software failure.
                                  1171  
                                  1172  "	A:	$recover
                                  1173  
                                  1174  
                                  1175  "	Message:
                                  1176  "	volmap: Volume Map inconsistent on dskX_NN{S}.
                                  1177  
                                  1178  "	S:	$crash
                                  1179  
                                  1180  "	T:	$run
                                  1181  
                                  1182  "	M:	An attempt to withdraw a disk address from the pool of
                                  1183  "	free addresses on dskX_NN{S} failed, although the control structures
                                  1184  "	describing the Volume Map indicated that addresses were available.
                                  1185  "	This indicates hardware or software failure.
                                  1186  
                                  1187  "	A:	$recover
                                  1188  
                                  1189  
                                  1190  "	Message:
                                  1191  "	volmap: Invalid volume map word on dskX_NN{S}.
                                  1192  
                                  1193  "	S:	$crash
                                  1194  
                                  1195  "	T:	$run
                                  1196  
                                  1197  "	M:	An attempt to withdraw a disk address from the pool of
                                  1198  "	free addresses on dskX_NN{S} resulted in finding a volume map word
                                  1199  "	with at least one of bits 0, 33, 34, and 35 on.  These bits are
                                  1200  "	invalid for volume map words.  This indicates hardware or
                                  1201  "	software failure.
                                  1202  
                                  1203  "	A:	Perform an ESD.  Reboot the system and perform a
                                  1204  "	volume salvage (not a scavenge) of the disk volume dskX_NN{S}.
                                  1205  "	This may be performed at Initializer ring-1 or ring-4 command
                                  1206  "	level.  Perform the salvage before adding the storage system
                                  1207  "	volume back to the system.  The volume scavenger will not
                                  1208  "	detect volume map words with invalid bits enabled, so the
                                  1209  "	salvager must be used.  Once the salvage is complete, the
                                  1210  "	volume may be added back to the system.
                                  1211  
                                  1212  
                                  1213  "	Message:
                                  1214  "	volmap: record stock inconsistent on dskX_NN{S}. stockp=YYY|YYYYY.
                                  1215  
                                  1216  "	S:	$crash
                                  1217  
                                  1218  "	T:	$run
                                  1219  
                                  1220  "	M:	An attempt to deposit a record address from the Volume
                                  1221  "	Map to the record stock failed unaccountably. This indicates
                                  1222  "	probably software failure.
                                  1223  
                                  1224  "	A:	$recover
                                  1225  
                                  1226  
                                  1227  "	Message:
                                  1228  "	volmap: Attempt to deposit in-use address YYYYYY on dskX_NN{S}.
                                  1229  
                                  1230  "	S:	$info
                                  1231  
                                  1232  "	T:	$run
                                  1233  
                                  1234  "	M:	An attempt was made to return disk address YYYYYY to the free
                                  1235  "	pool on dskX_NN{S}, but the address was already marked as free. This indicates
                                  1236  "	damage of some sort to the Volume Map. This damage can be repaired
                                  1237  "	by a volume salvage.
                                  1238  
                                  1239  "	A:	$inform
                                  1240  
                                  1241  
                                  1242  "	Message:
                                  1243  "	volmap: Invalid Volume Map address computation for YYYYYY on dskX_NN{S}.
                                  1244  
                                  1245  "	S:	$crash
                                  1246  
                                  1247  "	T:	$run
                                  1248  
                                  1249  "	M:	In attempting to place the disk address YYYYYY into the
                                  1250  "	free pool for dskX_NN{S}, an error occurred in translating the address
                                  1251  "	into a location within the Volume Map.  This indicates a software
                                  1252  "	error.
                                  1253  
                                  1254  
                                  1255  "	Message:
                                  1256  "	volmap_page: PTL not locked to process.
                                  1257  
                                  1258  "	S:	$crash
                                  1259  
                                  1260  "	T:	$run
                                  1261  
                                  1262  "	M:	An entry in volmap_page was called which required that
                                  1263  "	the Global Page Table lock be held by the calling process. It
                                  1264  "	was not held by that process, indicating software failure.
                                  1265  
                                  1266  "	A:	$recover
                                  1267  
                                  1268  
                                  1269  "	Message:
                                  1270  "	volmap_page: Invalid async state on dskX_NN{S}.
                                  1271  
                                  1272  "	S:	$crash
                                  1273  
                                  1274  "	T:	$run
                                  1275  
                                  1276  "	M:	An inconsistency was discovered in the asynchronous
                                  1277  "	update state of the Volume Map on dskX_NN{S}. This is likely a
                                  1278  "	software error.
                                  1279  
                                  1280  "	A:	$recover
                                  1281  
                                  1282  
                                  1283  "	Message:
                                  1284  "	volmap_page: Async error for dskX_NN{S}.
                                  1285  
                                  1286  "	S:	$crash
                                  1287  
                                  1288  "	T:	$run
                                  1289  
                                  1290  "	M:	When attempting to write an updated page of the Volume Map
                                  1291  "	on dskX_NN{S}, it was found not to be in memory. This indicates a
                                  1292  "	software failure.
                                  1293  
                                  1294  "	A:	$recover
                                  1295  
                                  1296  "	Message:
                                  1297  "	volmap_page: Invalid call.
                                  1298  
                                  1299  "	S:	$crash
                                  1300  
                                  1301  "	T:	$run
                                  1302  
                                  1303  "	M:	One of the conditions required for a call to a volmap_page
                                  1304  "	entry point was not present. This indicates a software failure in
                                  1305  "	the caller of volmap_page.
                                  1306  
                                  1307  "	A:	$recover
                                  1308  
                                  1309  
                                  1310  "	Message:
                                  1311  "	volmap_page: Unrecoverable I/O error on Volmap page M of dskX_NN{S}. Addresses lost.
                                  1312  
                                  1313  "	S:	$beep
                                  1314  
                                  1315  "	T:	$run
                                  1316  
                                  1317  "	M:	There was an unrecoverable I/O on a page of the Volume Map,
                                  1318  "	which describes free records on the volume. As a result, all free
                                  1319  "	records described by that page of the Volume Map have been lost.
                                  1320  
                                  1321  "	A:	It may be possible to recover the lost addresses by a 
                                  1322  "	volume salvage. However, a hard device error will prevent the volume
                                  1323  "	salvage from succeeding. In this case, it will be necessary
                                  1324  "	to recover the volume to a good pack.
                                  1325  
                                  1326  
                                  1327  "	Message:
                                  1328  "	volmap_page: Async state on dskX_NN{S} changed to S on poll.
                                  1329  
                                  1330  "	S:	$log
                                  1331  
                                  1332  "	T:	$run
                                  1333  
                                  1334  "	M:	An interrupt for a volume map I/O was lost and was
                                  1335  "	recovered by a periodic polling routine.
                                  1336  
                                  1337  "	A:	$ignore
                                  1338  
                                  1339  
                                  1340  "	Message:
                                  1341  "	page_synch: Out of free entries in dm_journal_seg_.
                                  1342  
                                  1343  "	T:	$run
                                  1344  
                                  1345  "	S:	$crash
                                  1346  
                                  1347  "	M:	$err
                                  1348  
                                  1349  "	A:	$recover
                                  1350  
                                  1351  
                                  1352  "	Message:
                                  1353  "	page_synch: dm_journal_seg_ inconsistent.
                                  1354  
                                  1355  "	T:	$run
                                  1356  
                                  1357  "	S:	$crash
                                  1358  
                                  1359  "	M:	$err
                                  1360  
                                  1361  "	A:	$recover
                                  1362  
                                  1363  
                                  1364  "	Message:
                                  1365  "	AUDIT (page_fault): GRANTED excessive segment state changes 
                                  1366  "	(Moderate_cc) for PROCESS_GROUP_ID (AUTHORIZATION)
                                  1367  
                                  1368  "	T:	$run
                                  1369  
                                  1370  "	S:	$security_log
                                  1371  
                                  1372  "	M:	An attempt to use the modification of various segment
                                  1373  "         attributes as a covert channel was detected.
                                  1374  
                                  1375  "	END MESSAGE DOCUMENTATION
                                  1376  
                                  1377  	end
LITERALS
     
    002334  aa   000000 000001 
    002335  aa   404000 000021 
    002336  aa   000000 000000 
    002337  aa   524000 000004 
    002340  aa   000000 000003 
    002341  aa   524000 000001 
    002342  aa   464000 000021 
    002343  aa   000000 000004 
    002344  aa   000000 000030 
    002345  aa   524000 000040 
    002346  aa   514000 000022 
    002347  aa   101040 040040 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    002350  5a   000003 000000 
    002351  5a   000455 600000 
    002352  aa   000000 000000 
    002353  55   000011 000002 
    002354  5a   000002 400003 
    002355  55   000006 000011 
    002356  aa  012 160 141 147
    002357  aa  145 137 145 162
    002360  aa  162 157 162 000
    002361  55   000021 000003 
    002362  0a   001303 400000 
    002363  55   000014 000003 
    002364  aa  023 151 156 166         invalid_volmap_word
    002365  aa  141 154 151 144
    002366  aa  137 166 157 154
    002367  aa  155 141 160 137
    002370  aa  167 157 162 144
    002371  55   000032 000011 
    002372  0a   001767 400000 
    002373  55   000024 000003 
    002374  aa  027 145 170 143         excessive_seg_state_chg
    002375  aa  145 163 163 151
    002376  aa  166 145 137 163
    002377  aa  145 147 137 163
    002400  aa  164 141 164 145
    002401  aa  137 143 150 147
    002402  55   000043 000021 
    002403  0a   001100 400000 
    002404  55   000035 000003 
    002405  aa  026 144 155 137         dm_journal_seg_problem
    002406  aa  152 157 165 162
    002407  aa  156 141 154 137
    002410  aa  163 145 147 137
    002411  aa  160 162 157 142
    002412  aa  154 145 155 000
    002413  55   000053 000032 
    002414  0a   001045 400000 
    002415  55   000046 000003 
    002416  aa  022 156 157 137         no_free_dm_entries
    002417  aa  146 162 145 145
    002420  aa  137 144 155 137
    002421  aa  145 156 164 162
    002422  aa  151 145 163 000
    002423  55   000063 000043 
    002424  0a   001010 400000 
    002425  55   000056 000003 
    002426  aa  020 163 143 141         scav_stacq_fails
    002427  aa  166 137 163 164
    002430  aa  141 143 161 137
    002431  aa  146 141 151 154
    002432  aa  163 000 000 000
    002433  55   000073 000053 
    002434  0a   001723 400000 
    002435  55   000066 000003 
    002436  aa  021 160 157 154         poll_state_change
    002437  aa  154 137 163 164
    002440  aa  141 164 145 137
    002441  aa  143 150 141 156
    002442  aa  147 145 000 000
    002443  55   000102 000063 
    002444  0a   001653 400000 
    002445  55   000076 000003 
    002446  aa  017 166 157 154         volmap_io_error
    002447  aa  155 141 160 137
    002450  aa  151 157 137 145
    002451  aa  162 162 157 162
    002452  55   000112 000073 
    002453  0a   001443 400000 
    002454  55   000105 000003 
    002455  aa  022 142 141 144         bad_volmap_address
    002456  aa  137 166 157 154
    002457  aa  155 141 160 137
    002460  aa  141 144 144 162
    002461  aa  145 163 163 000
    002462  55   000123 000102 
    002463  0a   001402 400000 
    002464  55   000115 000003 
    002465  aa  025 144 145 160         deposit_inuse_address
    002466  aa  157 163 151 164
    002467  aa  137 151 156 165
    002470  aa  163 145 137 141
    002471  aa  144 144 162 145
    002472  aa  163 163 000 000
    002473  55   000135 000112 
    002474  0a   001626 400000 
    002475  55   000126 000003 
    002476  aa  030 166 157 154         volmap_page_invalid_call
    002477  aa  155 141 160 137
    002500  aa  160 141 147 145
    002501  aa  137 151 156 166
    002502  aa  141 154 151 144
    002503  aa  137 143 141 154
    002504  aa  154 000 000 000
    002505  55   000146 000123 
    002506  0a   001573 400000 
    002507  55   000140 000003 
    002510  aa  027 166 157 154         volmap_page_async_error
    002511  aa  155 141 160 137
    002512  aa  160 141 147 145
    002513  aa  137 141 163 171
    002514  aa  156 143 137 145
    002515  aa  162 162 157 162
    002516  55   000156 000135 
    002517  0a   001536 400000 
    002520  55   000151 000003 
    002521  aa  021 167 162 157         wrong_async_state
    002522  aa  156 147 137 141
    002523  aa  163 171 156 143
    002524  aa  137 163 164 141
    002525  aa  164 145 000 000
    002526  55   000165 000146 
    002527  0a   001506 400000 
    002530  55   000161 000003 
    002531  aa  016 160 164 154         ptl_not_locked
    002532  aa  137 156 157 164
    002533  aa  137 154 157 143
    002534  aa  153 145 144 000
    002535  55   000175 000156 
    002536  0a   001340 400000 
    002537  55   000170 000003 
    002540  aa  022 163 164 157         stock_inconsistent
    002541  aa  143 153 137 151
    002542  aa  156 143 157 156
    002543  aa  163 151 163 164
    002544  aa  145 156 164 000
    002545  55   000205 000165 
    002546  0a   001246 400000 
    002547  55   000200 000003 
    002550  aa  023 166 157 154         volmap_inconsistent
    002551  aa  155 141 160 137
    002552  aa  151 156 143 157
    002553  aa  156 163 151 163
    002554  aa  164 145 156 164
    002555  55   000216 000175 
    002556  0a   001221 400000 
    002557  55   000210 000003 
    002560  aa  024 144 145 160         deposit_zero_address
    002561  aa  157 163 151 164
    002562  aa  137 172 145 162
    002563  aa  157 137 141 144
    002564  aa  144 162 145 163
    002565  aa  163 000 000 000
    002566  55   000225 000205 
    002567  0a   001163 400000 
    002570  55   000221 000003 
    002571  aa  015 166 157 154         volmap_mylock
    002572  aa  155 141 160 137
    002573  aa  155 171 154 157
    002574  aa  143 153 000 000
    002575  55   000235 000216 
    002576  0a   001130 400000 
    002577  55   000230 000003 
    002600  aa  022 166 157 154         volmap_stacq_fails
    002601  aa  155 141 160 137
    002602  aa  163 164 141 143
    002603  aa  161 137 146 141
    002604  aa  151 154 163 000
    002605  55   000246 000225 
    002606  0a   000646 400000 
    002607  55   000240 000003 
    002610  aa  024 141 144 144         address_out_of_range
    002611  aa  162 145 163 163
    002612  aa  137 157 165 164
    002613  aa  137 157 146 137
    002614  aa  162 141 156 147
    002615  aa  145 000 000 000
    002616  55   000260 000235 
    002617  0a   000755 400000 
    002620  55   000251 000003 
    002621  aa  031 151 156 166         invalid_deposit_list_args
    002622  aa  141 154 151 144
    002623  aa  137 144 145 160
    002624  aa  157 163 151 164
    002625  aa  137 154 151 163
    002626  aa  164 137 141 162
    002627  aa  147 163 000 000
    002630  55   000270 000246 
    002631  0a   000713 400000 
    002632  55   000263 000003 
    002633  aa  022 163 164 157         stock_out_of_synch
    002634  aa  143 153 137 157
    002635  aa  165 164 137 157
    002636  aa  146 137 163 171
    002637  aa  156 143 150 000
    002640  55   000301 000260 
    002641  0a   000606 400000 
    002642  55   000273 000003 
    002643  aa  027 144 145 160         deposit_invalid_addtype
    002644  aa  157 163 151 164
    002645  aa  137 151 156 166
    002646  aa  141 154 151 144
    002647  aa  137 141 144 144
    002650  aa  164 171 160 145
    002651  55   000311 000270 
    002652  0a   000551 400000 
    002653  55   000304 000003 
    002654  aa  022 166 157 154         volmap_async_error
    002655  aa  155 141 160 137
    002656  aa  141 163 171 156
    002657  aa  143 137 145 162
    002660  aa  162 157 162 000
    002661  55   000321 000301 
    002662  0a   000157 400000 
    002663  55   000314 000003 
    002664  aa  021 144 145 154         deleting_mm_frame
    002665  aa  145 164 151 156
    002666  aa  147 137 155 155
    002667  aa  137 146 162 141
    002670  aa  155 145 000 000
    002671  55   000330 000311 
    002672  0a   000105 400000 
    002673  55   000324 000003 
    002674  aa  016 162 145 166         reverting_page
    002675  aa  145 162 164 151
    002676  aa  156 147 137 160
    002677  aa  141 147 145 000
    002700  55   000340 000321 
    002701  0a   000237 400000 
    002702  55   000333 000003 
    002703  aa  022 167 151 162         wired_parity_error
    002704  aa  145 144 137 160
    002705  aa  141 162 151 164
    002706  aa  171 137 145 162
    002707  aa  162 157 162 000
    002710  55   000350 000330 
    002711  0a   000231 400000 
    002712  55   000343 000003 
    002713  aa  020 160 141 147         page_move_parity
    002714  aa  145 137 155 157
    002715  aa  166 145 137 160
    002716  aa  141 162 151 164
    002717  aa  171 000 000 000
    002720  55   000357 000340 
    002721  0a   000326 400000 
    002722  55   000353 000003 
    002723  aa  017 156 157 156         non_fatal_error
    002724  aa  137 146 141 164
    002725  aa  141 154 137 145
    002726  aa  162 162 157 162
    002727  55   000367 000350 
    002730  0a   000317 400000 
    002731  55   000362 000003 
    002732  aa  020 160 141 147         page_fault_error
    002733  aa  145 137 146 141
    002734  aa  165 154 164 137
    002735  aa  145 162 162 157
    002736  aa  162 000 000 000
    002737  55   000376 000357 
    002740  0a   000044 400000 
    002741  55   000372 000003 
    002742  aa  016 157 165 164         out_of_hc_part
    002743  aa  137 157 146 137
    002744  aa  150 143 137 160
    002745  aa  141 162 164 000
    002746  55   000405 000367 
    002747  0a   000367 400000 
    002750  55   000401 000003 
    002751  aa  015 145 162 162         error_in_done
    002752  aa  157 162 137 151
    002753  aa  156 137 144 157
    002754  aa  156 145 000 000
    002755  55   000414 000376 
    002756  0a   000077 400000 
    002757  55   000410 000003 
    002760  aa  014 172 145 162         zeroing_page
    002761  aa  157 151 156 147
    002762  aa  137 160 141 147
    002763  aa  145 000 000 000
    002764  55   000422 000405 
    002765  0a   000450 400000 
    002766  55   000417 000003 
    002767  aa  012 160 164 154         ptl_mylock
    002770  aa  137 155 171 154
    002771  aa  157 143 153 000
    002772  55   000430 000414 
    002773  0a   000422 400000 
    002774  55   000425 000003 
    002775  aa  013 157 165 164         out_of_core
    002776  aa  137 157 146 137
    002777  aa  143 157 162 145
    003000  55   000437 000422 
    003001  0a   000477 400000 
    003002  55   000433 000003 
    003003  aa  014 144 145 166         device_error
    003004  aa  151 143 145 137
    003005  aa  145 162 162 157
    003006  aa  162 000 000 000
    003007  55   000446 000430 
    003010  0a   000000 400000 
    003011  55   000442 000003 
    003012  aa  015 142 141 144         bad_device_id
    003013  aa  137 144 145 166
    003014  aa  151 143 145 137
    003015  aa  151 144 000 000
    003016  55   000002 000437 
    003017  6a   000000 400002 
    003020  55   000451 000003 
    003021  aa  014 163 171 155         symbol_table
    003022  aa  142 157 154 137
    003023  aa  164 141 142 154
    003024  aa  145 000 000 000

DEFINITIONS HASH TABLE

    003025  aa   000000 000065 
    003026  aa   000000 000000 
    003027  5a   000225 000000 
    003030  5a   000011 000000 
    003031  5a   000165 000000 
    003032  5a   000260 000000 
    003033  5a   000301 000000 
    003034  5a   000340 000000 
    003035  5a   000073 000000 
    003036  5a   000235 000000 
    003037  5a   000357 000000 
    003040  aa   000000 000000 
    003041  5a   000146 000000 
    003042  5a   000216 000000 
    003043  5a   000405 000000 
    003044  5a   000032 000000 
    003045  5a   000270 000000 
    003046  5a   000321 000000 
    003047  5a   000330 000000 
    003050  5a   000112 000000 
    003051  5a   000102 000000 
    003052  5a   000063 000000 
    003053  5a   000205 000000 
    003054  5a   000311 000000 
    003055  5a   000350 000000 
    003056  5a   000376 000000 
    003057  aa   000000 000000 
    003060  5a   000367 000000 
    003061  aa   000000 000000 
    003062  5a   000446 000000 
    003063  5a   000437 000000 
    003064  aa   000000 000000 
    003065  aa   000000 000000 
    003066  5a   000422 000000 
    003067  5a   000053 000000 
    003070  aa   000000 000000 
    003071  aa   000000 000000 
    003072  5a   000021 000000 
    003073  aa   000000 000000 
    003074  aa   000000 000000 
    003075  aa   000000 000000 
    003076  aa   000000 000000 
    003077  aa   000000 000000 
    003100  5a   000123 000000 
    003101  5a   000156 000000 
    003102  5a   000135 000000 
    003103  5a   000246 000000 
    003104  5a   000043 000000 
    003105  5a   000430 000000 
    003106  aa   000000 000000 
    003107  aa   000000 000000 
    003110  5a   000414 000000 
    003111  aa   000000 000000 
    003112  5a   000175 000000 

EXTERNAL NAMES

    003113  aa  012 160 162 157         process_id
    003114  aa  143 145 163 163
    003115  aa  137 151 144 000
    003116  aa  027 163 145 147         seg_state_chg_operation
    003117  aa  137 163 164 141
    003120  aa  164 145 137 143
    003121  aa  150 147 137 157
    003122  aa  160 145 162 141
    003123  aa  164 151 157 156
    003124  aa  012 144 141 155         damaged_ct
    003125  aa  141 147 145 144
    003126  aa  137 143 164 000
    003127  aa  003 163 163 164         sst
    003130  aa  005 141 162 162         array
    003131  aa  141 171 000 000
    003132  aa  003 160 166 164         pvt
    003133  aa  011 143 155 145         cme_flags
    003134  aa  137 146 154 141
    003135  aa  147 163 000 000
    003136  aa  012 160 141 147         page_fault
    003137  aa  145 137 146 141
    003140  aa  165 154 164 000
    003141  aa  024 141 143 143         access_authorization
    003142  aa  145 163 163 137
    003143  aa  141 165 164 150
    003144  aa  157 162 151 172
    003145  aa  141 164 151 157
    003146  aa  156 000 000 000
    003147  aa  020 160 162 157         process_group_id
    003150  aa  143 145 163 163
    003151  aa  137 147 162 157
    003152  aa  165 160 137 151
    003153  aa  144 000 000 000
    003154  aa  003 160 144 163         pds
    003155  aa  006 142 151 156         binary
    003156  aa  141 162 171 000
    003157  aa  006 163 171 163         syserr
    003160  aa  145 162 162 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    003161  aa   000004 000000 
    003162  55   000604 000543 
    003163  aa   000004 000000 
    003164  55   000557 000546 
    003165  aa   000004 000000 
    003166  55   000557 000554 
    003167  aa   000004 000000 
    003170  55   000562 000560 
    003171  aa   000004 000000 
    003172  55   000566 000563 
    003173  aa   000004 000000 
    003174  55   000604 000571 
    003175  aa   000004 000000 
    003176  55   000604 000577 
    003177  aa   000004 000000 
    003200  55   000607 000605 
    003201  aa   000004 000000 
    003202  55   000607 000607 
    003203  aa   000001 000000 
    003204  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    003205  5a   000611 000000 
    003206  5a   000613 000000 
    003207  5a   000615 000000 
    003210  5a   000617 000000 
    003211  5a   000621 000000 
    003212  5a   000623 000000 
    003213  5a   000625 000000 
    003214  5a   000627 000000 
    003215  5a   000631 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   002350 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000032 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         syserr|syserr
    000011  5a   000645 0000 00
    000012  9a   777766 0000 46         syserr|binary
    000013  5a   000644 0000 00
    000014  9a   777764 0000 46         pds|process_group_id
    000015  5a   000643 0000 00
    000016  9a   777762 0000 46         pds|access_authorization
    000017  5a   000642 0000 00
    000020  9a   777760 0000 46         page_fault|cme_flags
    000021  5a   000641 0000 74
    000022  9a   777756 0000 46         pvt|array
    000023  5a   000640 0000 00
    000024  9a   777754 0000 46         sst|damaged_ct
    000025  5a   000637 0000 00
    000026  9a   777752 0000 46         sst|seg_state_chg_operation
    000027  5a   000636 0000 00
    000030  9a   777750 0000 46         pds|process_id
    000031  5a   000635 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   242776 743035 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000670 
    000020  aa   000000 000373 
    000021  aa   000562 000554 
    000022  aa   000650 000373 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000017 
    000066  aa   000162 000041 
    000067  aa   175453 017646 
    000070  aa   000000 117547 
    000071  aa   176346 400000 
    000072  aa   000173 000055 
    000073  aa   133234 136245 
    000074  aa   000000 113324 
    000075  aa   322065 000000 
    000076  aa   000207 000055 
    000077  aa   133400 233543 
    000100  aa   000000 113344 
    000101  aa   552237 000000 
    000102  aa   000223 000032 
    000103  aa   133234 136212 
    000104  aa   000000 113324 
    000105  aa   322064 200000 
    000106  aa   000232 000031 
    000107  aa   113434 242275 
    000110  aa   000000 111347 
    000111  aa   432071 000000 
    000112  aa   000241 000037 
    000113  aa   112456 132235 
    000114  aa   000000 111250 
    000115  aa   530556 400000 
    000116  aa   000251 000037 
    000117  aa   043243 130235 
    000120  aa   000000 102532 
    000121  aa   522427 000000 
    000122  aa   000261 000032 
    000123  aa   164131 272662 
    000124  aa   000000 116416 
    000125  aa   727372 600000 
    000126  aa   000270 000045 
    000127  aa   133234 136230 
    000130  aa   000000 113324 
    000131  aa   322064 400000 
    000132  aa   000302 000041 
    000133  aa   052721 247134 
    000134  aa   000000 105272 
    000135  aa   317215 400000 
    000136  aa   000313 000042 
    000137  aa   147777 464111 
    000140  aa   000000 115000 
    000141  aa   507463 000000 
    000142  aa   000324 000046 
    000143  aa   135317 443312 
    000144  aa   000000 113532 
    000145  aa   354133 400000 
    000146  aa   000336 000046 
    000147  aa   134126 132502 
    000150  aa   000000 113413 
    000151  aa   342261 600000 
    000152  aa   000350 000043 
    000153  aa   045654 462066 
    000154  aa   000000 104565 
    000155  aa   624722 600000 
    000156  aa   000361 000047 
    000157  aa   134126 132471 
    000160  aa   000000 113413 
    000161  aa   342260 400000 
    000162  aa   076163 160145          >spec>install>1111>page_error.alm
    000163  aa   143076 151156 
    000164  aa   163164 141154 
    000165  aa   154076 061061 
    000166  aa   061061 076160 
    000167  aa   141147 145137 
    000170  aa   145162 162157 
    000171  aa   162056 141154 
    000172  aa   155040 040040 
    000173  aa   076154 144144          >ldd>include>access_audit_eventflags.incl.alm
    000174  aa   076151 156143 
    000175  aa   154165 144145 
    000176  aa   076141 143143 
    000177  aa   145163 163137 
    000200  aa   141165 144151 
    000201  aa   164137 145166 
    000202  aa   145156 164146 
    000203  aa   154141 147163 
    000204  aa   056151 156143 
    000205  aa   154056 141154 
    000206  aa   155040 040040 
    000207  aa   076154 144144          >ldd>include>access_audit_bin_header.incl.alm
    000210  aa   076151 156143 
    000211  aa   154165 144145 
    000212  aa   076141 143143 
    000213  aa   145163 163137 
    000214  aa   141165 144151 
    000215  aa   164137 142151 
    000216  aa   156137 150145 
    000217  aa   141144 145162 
    000220  aa   056151 156143 
    000221  aa   154056 141154 
    000222  aa   155040 040040 
    000223  aa   076154 144144          >ldd>include>aste.incl.alm
    000224  aa   076151 156143 
    000225  aa   154165 144145 
    000226  aa   076141 163164 
    000227  aa   145056 151156 
    000230  aa   143154 056141 
    000231  aa   154155 040040 
    000232  aa   076154 144144          >ldd>include>cmp.incl.alm
    000233  aa   076151 156143 
    000234  aa   154165 144145 
    000235  aa   076143 155160 
    000236  aa   056151 156143 
    000237  aa   154056 141154 
    000240  aa   155040 040040 
    000241  aa   076154 144144          >ldd>include>page_info.incl.alm
    000242  aa   076151 156143 
    000243  aa   154165 144145 
    000244  aa   076160 141147 
    000245  aa   145137 151156 
    000246  aa   146157 056151 
    000247  aa   156143 154056 
    000250  aa   141154 155040 
    000251  aa   076154 144144          >ldd>include>page_regs.incl.alm
    000252  aa   076151 156143 
    000253  aa   154165 144145 
    000254  aa   076160 141147 
    000255  aa   145137 162145 
    000256  aa   147163 056151 
    000257  aa   156143 154056 
    000260  aa   141154 155040 
    000261  aa   076154 144144          >ldd>include>pvte.incl.alm
    000262  aa   076151 156143 
    000263  aa   154165 144145 
    000264  aa   076160 166164 
    000265  aa   145056 151156 
    000266  aa   143154 056141 
    000267  aa   154155 040040 
    000270  aa   076154 144144          >ldd>include>pxss_page_stack.incl.alm
    000271  aa   076151 156143 
    000272  aa   154165 144145 
    000273  aa   076160 170163 
    000274  aa   163137 160141 
    000275  aa   147145 137163 
    000276  aa   164141 143153 
    000277  aa   056151 156143 
    000300  aa   154056 141154 
    000301  aa   155040 040040 
    000302  aa   076154 144144          >ldd>include>stack_frame.incl.alm
    000303  aa   076151 156143 
    000304  aa   154165 144145 
    000305  aa   076163 164141 
    000306  aa   143153 137146 
    000307  aa   162141 155145 
    000310  aa   056151 156143 
    000311  aa   154056 141154 
    000312  aa   155040 040040 
    000313  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000314  aa   076151 156143 
    000315  aa   154165 144145 
    000316  aa   076163 164141 
    000317  aa   143153 137150 
    000320  aa   145141 144145 
    000321  aa   162056 151156 
    000322  aa   143154 056141 
    000323  aa   154155 040040 
    000324  aa   076154 144144          >ldd>include>syserr_constants.incl.alm
    000325  aa   076151 156143 
    000326  aa   154165 144145 
    000327  aa   076163 171163 
    000330  aa   145162 162137 
    000331  aa   143157 156163 
    000332  aa   164141 156164 
    000333  aa   163056 151156 
    000334  aa   143154 056141 
    000335  aa   154155 040040 
    000336  aa   076154 144144          >ldd>include>syserr_mmdam_msg.incl.alm
    000337  aa   076151 156143 
    000340  aa   154165 144145 
    000341  aa   076163 171163 
    000342  aa   145162 162137 
    000343  aa   155155 144141 
    000344  aa   155137 155163 
    000345  aa   147056 151156 
    000346  aa   143154 056141 
    000347  aa   154155 040040 
    000350  aa   076154 144144          >ldd>include>segdamage_msg.incl.alm
    000351  aa   076151 156143 
    000352  aa   154165 144145 
    000353  aa   076163 145147 
    000354  aa   144141 155141 
    000355  aa   147145 137155 
    000356  aa   163147 056151 
    000357  aa   156143 154056 
    000360  aa   141154 155040 
    000361  aa   076154 144144          >ldd>include>syserr_binary_def.incl.alm
    000362  aa   076151 156143 
    000363  aa   154165 144145 
    000364  aa   076163 171163 
    000365  aa   145162 162137 
    000366  aa   142151 156141 
    000367  aa   162171 137144 
    000370  aa   145146 056151 
    000371  aa   156143 154056 
    000372  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          26    .._00000.dsc             page_error:   285.
          16    .._00000.msg             page_error:   285.
          76    .._00001.dsc             page_error:   305.
          61    .._00001.msg             page_error:   305.
         156    .._00002.dsc             page_error:   326.
         142    .._00002.msg             page_error:   326.
         140    .._00002.sbc             page_error:   326.
         141    .._00002.sbl             page_error:   326.
         230    .._00003.dsc             page_error:   334.
         206    .._00003.msg             page_error:   334.
         204    .._00003.sbc             page_error:   334.
         205    .._00003.sbl             page_error:   334.
         316    .._00004.dsc             page_error:   355.
         275    .._00004.msg             page_error:   355.
         273    .._00004.sbc             page_error:   355.
         274    .._00004.sbl             page_error:   355.
         366    .._00005.dsc             page_error:   375.
         353    .._00005.msg             page_error:   375.
         421    .._00006.dsc             page_error:   384.
         407    .._00006.msg             page_error:   384.
         447    .._00007.dsc             page_error:   390.
         437    .._00007.msg             page_error:   390.
         476    .._00010.dsc             page_error:   397.
         465    .._00010.msg             page_error:   397.
         550    .._00011.dsc             page_error:   412.
         534    .._00011.msg             page_error:   412.
         532    .._00011.sbc             page_error:   412.
         533    .._00011.sbl             page_error:   412.
         605    .._00012.dsc             page_error:   418.
         572    .._00012.msg             page_error:   418.
         645    .._00013.dsc             page_error:   425.
         631    .._00013.msg             page_error:   425.
         712    .._00014.dsc             page_error:   431.
         670    .._00014.msg             page_error:   431.
         754    .._00015.dsc             page_error:   438.
         736    .._00015.msg             page_error:   438.
        1007    .._00016.dsc             page_error:   442.
         772    .._00016.msg             page_error:   442.
        1044    .._00017.dsc             page_error:   447.
        1031    .._00017.msg             page_error:   447.
        1077    .._00020.dsc             page_error:   451.
        1062    .._00020.msg             page_error:   451.
        1127    .._00021.dsc             page_error:   455.
        1115    .._00021.msg             page_error:   455.
        1162    .._00022.dsc             page_error:   461.
        1151    .._00022.msg             page_error:   461.
        1220    .._00023.dsc             page_error:   467.
        1204    .._00023.msg             page_error:   467.
        1245    .._00024.dsc             page_error:   472.
        1236    .._00024.msg             page_error:   472.
        1302    .._00025.dsc             page_error:   479.
        1267    .._00025.msg             page_error:   479.
        1337    .._00026.dsc             page_error:   485.
        1324    .._00026.msg             page_error:   485.
        1401    .._00027.dsc             page_error:   492.
        1363    .._00027.msg             page_error:   492.
        1442    .._00030.dsc             page_error:   500.
        1424    .._00030.msg             page_error:   500.
        1505    .._00031.dsc             page_error:   506.
        1465    .._00031.msg             page_error:   506.
        1535    .._00032.dsc             page_error:   511.
        1523    .._00032.msg             page_error:   511.
        1572    .._00033.dsc             page_error:   517.
        1557    .._00033.msg             page_error:   517.
        1625    .._00034.dsc             page_error:   523.
        1614    .._00034.msg             page_error:   523.
        1652    .._00035.dsc             page_error:   527.
        1643    .._00035.msg             page_error:   527.
        1722    .._00036.dsc             page_error:   534.
        1676    .._00036.msg             page_error:   534.
        1766    .._00037.dsc             page_error:   544.
        1750    .._00037.msg             page_error:   544.
        2054    .._00040.dsc             page_error:   561.
        2025    .._00040.msg             page_error:   561.
        2023    .._00040.sbc             page_error:   561.
        2024    .._00040.sbl             page_error:   561.
           6    .2ret                    page_error:   366,  401,  549,
                                         page_regs:     15.
           3    .aste                    page_error:   404,  573,  579,  583,  592,
                                         page_regs:     12.
           4    .cme                     page_error:   601,
                                         page_regs:     13.
           1    .lst                     page_regs:      9.
           0    .nxt                     page_regs:      8.
           1    .pdme                    page_regs:     10.
           2    .ptw                     page_error:   382,  572,
                                         page_regs:     11.
           7    .ret                     page_error:   309,  314,  331,  338,  495,  530,  538,
                                         page_regs:     16.
           0    .tem                     page_regs:      7.
           5    .x5                      page_regs:     14.
           7    abs_wire_entry           page_info:     36.
           3    ACCESS_AUDIT_HEADER_VERSION_3  page_error:   793,
                                               access_audit_bin_header:   44.
                access_authorization     page_error:   556,  807.
      740000    address_mask             page_info:      9.
         646    address_out_of_range     page_error:   234,  427.
           0    ANNOUNCE                 syserr_constants:    20.
         150    apt_ptr                  pxss_page_stack:     13.
         106    arg                      page_error:   321,  326,  350,  370,  371,  372,  373,  375,  381,  382,  384,  403,
                                                       412,  418,  423,  425,  429,  431,  435,  436,  438,  445,  447,  459,
                                                       461,  465,  467,  477,  479,  483,  485,  489,  490,  492,  496,  500,
                                                       504,  506,  515,  517,  521,  523,  531,  532,  534,  539,  541,  542,
                                                       544,  554,  558,  561,  573,  574,  575,  580,  590,  595,  609,  621,
                                                       623,  624,  625,  627,  629,  632,  634,  636,  638,  703,  708,  750,
                                                       765,  771,  776,  782,  788,
                                         pxss_page_stack:     11.
           1    ARH_NO_PROXY             page_error:   791,
                                         access_audit_bin_header:   43.
           2    ARH_PROXY                access_audit_bin_header:   42.
                array                    page_error:   615.
           3    ast                      page_error:   404,  579,  583,  592,  712,  715,  717,
                                         page_info:     20.
        4000    aste.any_access_on       aste:          49.
           5    aste.any_access_on_word  aste:          48.
           0    aste.bp                  aste:          18.
         777    aste.csl_mask            aste:          92.
      777000    aste.csl_mask_inner      page_info:     26.
          33    aste.csl_shift           aste:          91.
          12    aste.csl_word            aste:          90.
      200000    aste.damaged             aste:         118.
          13    aste.damaged_word        aste:         117.
           4    aste.ddnp                aste:         106.
          12    aste.ddnp_word           aste:         105.
         200    aste.deact_error         aste:          57.
           5    aste.deact_error_word    aste:          56.
       40000    aste.dirsw               aste:          75.
           5    aste.dirsw_word          aste:          74.
           2    aste.dius                aste:          65.
           5    aste.dius_word           aste:          64.
      400000    aste.dmpr_pad            aste:          69.
           5    aste.dmpr_pad_word       aste:          68.
          20    aste.dnzp                aste:         102.
          12    aste.dnzp_word           aste:         101.
           7    aste.dtm                 aste:          84.
           6    aste.dtu                 aste:          83.
      200000    aste.ehs                 aste:          71.
           5    aste.ehs_word            aste:          70.
         400    aste.explicit_deact_ok   aste:          55.
           5    aste.explicit_deact_ok_word    aste:          54.
         400    aste.fmchanged           aste:          94.
      400000    aste.fmchanged1          aste:         116.
          13    aste.fmchanged1_word     aste:         115.
          12    aste.fmchanged_word      aste:          93.
         200    aste.fms                 aste:          96.
          12    aste.fms_word            aste:          95.
          40    aste.fm_damaged          aste:          61.
           5    aste.fm_damaged_word     aste:          60.
           0    aste.fp                  aste:          17.
       40000    aste.gtms                aste:          43.
           5    aste.gtms_word           aste:          42.
          40    aste.gtpd                aste:         100.
          12    aste.gtpd_word           aste:          99.
      100000    aste.gtus                aste:          41.
           5    aste.gtus_word           aste:          40.
       20000    aste.hc                  aste:          45.
         100    aste.hc_part             aste:          59.
           5    aste.hc_part_word        aste:          58.
       10000    aste.hc_sdw              aste:          47.
           5    aste.hc_sdw_word         aste:          46.
           5    aste.hc_word             aste:          44.
          13    aste.ht_fp               aste:         114.
           1    aste.infl                aste:          20.
           1    aste.infp                aste:          21.
        1000    aste.inhibit_cache       aste:          53.
           5    aste.inhibit_cache_word  aste:          52.
      200000    aste.init                aste:          39.
           5    aste.init_word           aste:          38.
          77    aste.marker_mask         aste:         128.
           0    aste.marker_shift        aste:         127.
          13    aste.marker_word         aste:         126.
       20000    aste.master_dir          aste:          77.
           5    aste.master_dir_word     aste:          76.
         777    aste.msl_mask            aste:          30.
          33    aste.msl_shift           aste:          29.
           4    aste.msl_word            aste:          28.
          20    aste.multi_class         aste:          63.
           5    aste.multi_class_word    aste:          62.
           1    aste.nid                 aste:          67.
           5    aste.nid_word            aste:          66.
         100    aste.npfs                aste:          98.
          12    aste.npfs_word           aste:          97.
         777    aste.np_mask             aste:         112.
           0    aste.np_shift            aste:         111.
          12    aste.np_word             aste:         110.
      100000    aste.nqsw                aste:          73.
           5    aste.nqsw_word           aste:          72.
      100000    aste.pack_ovfl           aste:         120.
          13    aste.pack_ovfl_word      aste:         119.
           2    aste.par_astep           page_error:   712,  717,
                                         aste:          24.
          10    aste.per_process         aste:         104.
          12    aste.per_process_word    aste:         103.
           3    aste.ptsi_mask           aste:         125.
           6    aste.ptsi_shift          aste:         124.
          13    aste.ptsi_word           aste:         123.
         777    aste.pvtx_mask           page_error:   406,  594,
                                         aste:          33.
          22    aste.pvtx_shift          page_error:   405,  593,
                                         aste:          32.
           4    aste.pvtx_word           page_error:   404,  592,
                                         aste:          31.
          10    aste.quota               aste:          86.
         777    aste.records_mask        aste:         109.
      777000    aste.records_mask_inner  page_info:     27.
          11    aste.records_shift       aste:         108.
          12    aste.records_word        aste:         107.
           2    aste.strp                aste:          23.
       40000    aste.synchronized        aste:         122.
          13    aste.synchronized_word   aste:         121.
        4000    aste.tqsw                aste:          81.
           5    aste.tqsw_word           aste:          80.
           3    aste.uid                 page_error:   579,  715,
                                         aste:          26.
          11    aste.used                aste:          88.
      400000    aste.usedf               aste:          37.
           5    aste.usedf_word          aste:          36.
       10000    aste.volmap_seg          aste:          79.
           5    aste.volmap_seg_word     aste:          78.
           4    aste.vtocx               page_error:   583,
                                         aste:          34.
        2000    aste.write_access_on     aste:          51.
           5    aste.write_access_on_word      aste:          50.
           0    aste_part.one            aste:         136.
         377    aste_part.three_mask     aste:         141.
           0    aste_part.three_shift    aste:         140.
          13    aste_part.three_word     aste:         139.
           1    aste_part.two            aste:         137.
          14    aste_part_size           aste:         133.
          14    aste_size                page_error:   572,
                                         aste:          15.
      100000    audit_event_flags.admin_op     access_audit_eventflags:   17.
       10000    audit_event_flags.cc_10_100    page_error:   801,
                                               access_audit_eventflags:   20.
       20000    audit_event_flags.cc_1_10      access_audit_eventflags:   19.
      200000    audit_event_flags.grant  page_error:   801,
                                         access_audit_eventflags:   16.
       40000    audit_event_flags.priv_op      access_audit_eventflags:   18.
        4000    audit_event_flags.receiver     access_audit_eventflags:   21.
      400000    audit_event_flags.special_op   access_audit_eventflags:   15.
       40000    audit_head.anonymous     access_audit_bin_header:   36.
          14    audit_head.anonymous_word      access_audit_bin_header:   35.
          16    audit_head.authorization       page_error:   808,
                                               access_audit_bin_header:   38.
           2    audit_head.event_flags   page_error:   802,
                                         access_audit_bin_header:   27.
           0    audit_head.flags         access_audit_bin_header:   20.
          22    audit_head.max_authorization   page_error:   809,
                                               access_audit_bin_header:   40.
          20    audit_head.min_authorization   access_audit_bin_header:   39.
      200000    audit_head.obj_valid     access_audit_bin_header:   24.
           0    audit_head.obj_valid_word      access_audit_bin_header:   23.
           1    audit_head.operation_code      page_error:   799,
                                               access_audit_bin_header:   26.
           4    audit_head.person        page_error:   772,  783,  789,
                                         access_audit_bin_header:   31.
          15    audit_head.process_id    page_error:   805,
                                         access_audit_bin_header:   37.
           7    audit_head.ring_mask     access_audit_bin_header:   34.
          41    audit_head.ring_shift    access_audit_bin_header:   33.
          14    audit_head.ring_word     access_audit_bin_header:   32.
           3    audit_head.session_uid   access_audit_bin_header:   28.
           4    audit_head.subjects      access_audit_bin_header:   30.
      400000    audit_head.subj_process  page_error:   795,
                                         access_audit_bin_header:   22.
           0    audit_head.subj_process_word   access_audit_bin_header:   21.
         777    audit_head.type_mask     access_audit_bin_header:   16.
          33    audit_head.type_shift    page_error:   792,
                                         access_audit_bin_header:   15.
           0    audit_head.type_word     access_audit_bin_header:   14.
           0    audit_head.version       page_error:   796,
                                         access_audit_bin_header:   17.
         777    audit_head.version_mask  access_audit_bin_header:   19.
          22    audit_head.version_shift       page_error:   792,  794,
                                               access_audit_bin_header:   18.
          24    audit_head_size          page_error:   760,  842,
                                         access_audit_bin_header:   12.
           0    bad_device_id            page_error:   226,  282.
        1443    bad_volmap_address       page_error:   238,  502.
           3    BEEP                     syserr_constants:    18.
         204    before                   pxss_page_stack:     17.
                binary                   page_error:   690.
         140    binary_buffer            page_error:   253,  326,  334,  355,  561,  682,  683,  704,  716,  727,  729,  744,
                                                       754,  760,  767,  769,  772,  778,  780,  783,  785,  789,  796,  799,
                                                       802,  805,  808,  809.
        2172    binary_setup             page_error:   326,  334,  355,  412,  561,  681.
        2201    bincall                  page_error:   688,  690.
          23    bit                      page_error:   561,  824.
           3    bsd                      page_error:   246.
        1170    call_offset              stack_header:        80.
          25    char                     page_error:   285,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,  425,
                                                       431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,  492,
                                                       500,  506,  511,  517,  523,  527,  534,  544,  561,  823.
          10    cleanup_entry            page_info:     37.
         100    cme.abs_usable           cmp:           17.
         200    cme.abs_w                cmp:           16.
           2    cme.astep                cmp:           23.
           0    cme.bp                   cmp:            7.
           7    cme.contr                page_error:   602,
                                         cmp:           20.
           1    cme.devadd               cmp:            9.
      740000    cme.did_mask             cmp:           11.
        1000    cme.er                   cmp:           14.
           1    cme.flags                cmp:           10.
           0    cme.fp                   cmp:            6.
        4000    cme.io                   cmp:           13.
          40    cme.notify_requested     cmp:           18.
          10    cme.phm_hedge            cmp:           19.
           3    cme.pin_counter          cmp:           25.
           2    cme.ptwp                 cmp:           22.
         400    cme.removing             cmp:           15.
       10000    cme.synch_held           cmp:           12.
           3    cme.synch_page_entryp    cmp:           26.
         164    cmep                     pxss_page_stack:     15.
          12    cmep_to_coreadd.rl       page_info:     75.
           2    cmep_to_ptw.ls           page_info:     57.
           2    cmep_to_sdw.ls           page_info:     57.
                cme_flags                page_error:   601.
           4    cme_size                 cmp:            4.
      777777    coreadd_mask             page_info:     57.
          12    coreadd_to_cmep.ls       page_info:     76.
          14    coreadd_to_ptw.ls        page_info:     57.
          14    coreadd_to_sdw.ls        page_info:     57.
         173    core_add                 page_error:   334,  355,  742,
                                         pxss_page_stack:     16.
         174    count                    pxss_page_stack:     16.
        2261    covert_audit_info        page_error:   561,  757.
           1    CRASH                    syserr_constants:    14.
          27    csys                     page_error:   285,  287,  305,  375,  384,  390,  397,  418,  425,  431,  438,  442,
                                                       447,  451,  455,  461,  467,  472,  479,  485,  492,  500,  506,  511,
                                                       517,  523,  527,  534,  544.
                damaged_ct               page_error:   705.
           2    dcb                      page_error:   244.
         157    deleting_mm_frame        page_error:   232,  330.
         154    delta_t                  pxss_page_stack:     13.
        1402    deposit_inuse_address    page_error:   238,  494.
         606    deposit_invalid_addtype  page_error:   233,  420.
        1221    deposit_zero_address     page_error:   235,  470.
         205    depth                    pxss_page_stack:     17.
         200    devadd                   page_error:   412,  422,  425,  431,  500,  506,  749,  753,
                                         pxss_page_stack:     16.
        2254    devadd_to_20             page_error:   748.
        2256    devadd_to_buf20          page_error:   752.
         510    deverr.got_pvtx          page_error:   407.
         477    device_error             page_error:   227,  400.
         203    dev_signal               pxss_page_stack:     17.
           1    df1                      page_info:      7.
        1100    dm_journal_seg_problem   page_error:   240,  453.
         232    done_astep               pxss_page_stack:     24.
        1174    entry_offset             stack_header:        84.
         175    entry_sw                 pxss_page_stack:     16.
         201    errcode                  pxss_page_stack:     16.
         367    error_in_done            page_error:   229,  379.
           6    evict_entry              page_info:     35.
         244    evpp_merge               page_error:   340,  345.
        1767    excessive_seg_state_chg  page_error:   241,  548.
          36    exit                     page_error:   291,  691.
           0    fault_entry              page_info:     29.
           1    fixed                    page_error:   285,  326,  334,  355,  375,  384,  412,  425,  431,  500,  506,  534,
                                                       544,  561,  818,  822.
        2211    format_segdamage_binary  page_error:   699.
         200    frame_size               page_error:   252,  285,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,
                                                       425,  431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,
                                                       492,  500,  506,  511,  517,  523,  527,  534,  544,  561.
         226    free_store_start_time    pxss_page_stack:     22.
         221    free_store_temp          pxss_page_stack:     19.
         160    free_store_temp_1        pxss_page_stack:     14.
        2332    fx                       page_error:   285,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,  425,
                                                       431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,  492,
                                                       500,  506,  511,  517,  523,  527,  534,  544,  561,  818.
         152    getwork_temp             pxss_page_stack:     13.
        2062    get_ast_params           page_error:   319,  348,  578.
        2071    get_ast_params.gotvx     page_error:   585,  589.
        2070    get_ast_params.zuid      page_error:   581,  587.
        2055    get_pageno               page_error:   320,  349,  570.
        2211    gseg_info                page_error:   326,  355,  412,  698.
        2234    gup.fillup               page_error:   718,  724.
        2235    gup.fillup1              page_error:   726,  733.
        2236    gup.fillup2              page_error:   728,  737.
        2243    gup.fillup3              page_error:   709,  713,  734.
        2225    gup.lp1                  page_error:   715,  720.
      100000    int                      page_info:     14.
        2164    int.txt                  page_error:   669,  673.
         177    inter                    pxss_page_stack:     16.
        2152    interp.list              page_error:   661,  679.
        2142    interpreter              page_error:   285,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,  425,
                                                       431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,  492,
                                                       500,  506,  511,  517,  523,  527,  534,  544,  561,  650.
         755    invalid_deposit_list_args      page_error:   234,  440.
        1303    invalid_volmap_word      page_error:   242,  481.
           5    JUST_LOG                 syserr_constants:    24.
         223    lock_volmap_temp         pxss_page_stack:     20.
         156    lock_volmap_temp_1       pxss_page_stack:     14.
           4    LOG                      page_error:   837,
                                         syserr_constants:    22.
           5    mbx                      page_error:   245.
        2141    microp                   page_error:   628,  641.
           0    mmdam_msg.addr           page_error:   744,
                                         syserr_mmdam_msg:    18.
           1    mmdam_msg.ctrltag        syserr_mmdam_msg:    19.
           2    mmdam_msg_size           syserr_mmdam_msg:    15.
        2247    movemm                   page_error:   334,  741.
         326    non_fatal_error          page_error:   231,  365.
          50    notify_regs              pxss_page_stack:      8.
        1045    no_free_dm_entries       page_error:   240,  449.
           4    no_post                  page_info:     16.
         422    out_of_core              page_error:   227,  387.
          44    out_of_hc_part           page_error:   230,  302.
         250    pad                      pxss_page_stack:     33.
         235    pageno                   pxss_page_stack:     25.
                page_fault               page_error:   601.
         317    page_fault_error         page_error:   231,  360.
         231    page_move_parity         page_error:   232,  337.
          12    page_power               page_info:      6.
         242    page_synch_index         pxss_page_stack:     28.
         236    page_synch_temp          pxss_page_stack:     27.
         240    page_synch_time          pxss_page_stack:     27.
         245    pc_err_astep             pxss_page_stack:     30.
         244    pc_err_ptwp              pxss_page_stack:     30.
         243    pc_err_type              pxss_page_stack:     30.
           3    pdm                      page_info:     19.
                pds                      page_error:   551,  556,  804,  807.
           5    pd_flush_entry           page_info:     34.
       56000    period                   page_error:   762,  766,  777.
         334    pferr.join               page_error:   364,  369.
         246    pf_sdw                   pxss_page_stack:     31.
        1723    poll_state_change        page_error:   238,  537.
         230    post_io_start_time       pxss_page_stack:     22.
           4    post_purge_entry         page_info:     33.
           3    pre_page_entry           page_info:     32.
         100    pre_temp                 pxss_page_stack:     10.
          76    pre_time                 pxss_page_stack:     10.
          20    pri                      page_info:     15.
                process_group_id         page_error:   551.
                process_id               page_error:   804.
         450    ptl_mylock               page_error:   227,  394.
        1506    ptl_not_locked           page_error:   236,  509.
         176    ptp_astep                pxss_page_stack:     16.
          15    ptr                      page_error:   438,  492,  819,  821.
        2333    ptrd                     page_error:   686,  819.
           2    ptw                      page_info:     21.
      400000    ptw.nulled               page_info:     12.
      777760    ptw_add_mask             page_info:     57.
           2    ptw_to_cmep.rl           page_info:     57.
          24    ptw_to_cmep_lower.rl     page_info:     57.
          14    ptw_to_coreadd.rl        page_info:     57.
        1171    push_offset              stack_header:        81.
                pvt                      page_error:   615.
          20    pvte.baseadd             pvte:         119.
       10000    pvte.being_demounted     pvte:          74.
         100    pvte.being_demounted2    pvte:          86.
           4    pvte.being_demounted2_word     pvte:          85.
           4    pvte.being_demounted_word      pvte:          73.
       20000    pvte.being_mounted       pvte:          72.
           4    pvte.being_mounted_word  pvte:          71.
         777    pvte.brother_pvtx_mask   pvte:          52.
          22    pvte.brother_pvtx_shift  pvte:          51.
           2    pvte.brother_pvtx_word   pvte:          50.
        4000    pvte.check_read_incomplete     pvte:          76.
           4    pvte.check_read_incomplete_word      pvte:          75.
          16    pvte.curn_dmpr_vtocx     pvte:         115.
           6    pvte.dbmrp               pvte:         103.
         200    pvte.deposit_to_volmap   pvte:          84.
           4    pvte.deposit_to_volmap_word    pvte:          83.
        2000    pvte.device_inoperative  pvte:          78.
           4    pvte.device_inoperative_word   pvte:          77.
         777    pvte.device_type_mask    pvte:          59.
          33    pvte.device_type_shift   pvte:          58.
           4    pvte.device_type_word    pvte:          57.
           3    pvte.devname             page_error:   633,
                                         pvte:          55.
          10    pvte.dim_info            pvte:         108.
      400000    pvte.dmpr_in_use         pvte:          41.
           2    pvte.dmpr_in_use_word    pvte:          40.
          10    pvte.hc_part_used        pvte:          92.
           4    pvte.hc_part_used_word   pvte:          91.
        4000    pvte.inconsistent_dbm    pvte:          49.
           2    pvte.inconsistent_dbm_word     pvte:          48.
       40000    pvte.is_sv               pvte:          43.
           2    pvte.is_sv_word          pvte:          42.
         777    pvte.logical_area_number_mask  page_error:   620,
                                               pvte:          62.
          22    pvte.logical_area_number_shift       page_error:   619,
                                                     pvte:          61.
           4    pvte.logical_area_number_word  page_error:   618,
                                               pvte:          60.
           1    pvte.lvid                page_error:   637,
                                         pvte:          38.
           7    pvte.nleft               pvte:         105.
          12    pvte.num_of_svs          pvte:         110.
           5    pvte.n_free_vtoce        pvte:         100.
          17    pvte.n_vtoce             pvte:         117.
          40    pvte.pc_vacating         pvte:          88.
           4    pvte.pc_vacating_word    pvte:          87.
      100000    pvte.permanent           pvte:          68.
           4    pvte.permanent_word      pvte:          67.
           0    pvte.pvid                page_error:   635,
                                         pvte:          37.
          13    pvte.records_per_cyl     pvte:         111.
          14    pvte.record_factor       pvte:         112.
       10000    pvte.removable_pack      pvte:          47.
           2    pvte.removable_pack_word       pvte:          46.
       20000    pvte.root_lv             pvte:          45.
           2    pvte.root_lv_word        pvte:          44.
        1000    pvte.rpv                 pvte:          80.
           4    pvte.rpv_word            pvte:          79.
          33    pvte.scavenger_block_rel       pvte:         136.
         400    pvte.scav_check_address  pvte:          82.
           4    pvte.scav_check_address_word   pvte:          81.
           2    pvte.skip_queue_count    pvte:          53.
      200000    pvte.storage_system      pvte:          66.
           4    pvte.storage_system_word       pvte:          65.
          15    pvte.sv_name             page_error:   631,
                                         pvte:         113.
          11    pvte.sv_num              pvte:         109.
       40000    pvte.testing             pvte:          70.
           4    pvte.testing_word        pvte:          69.
           7    pvte.totrec              pvte:         106.
      400000    pvte.used                pvte:          64.
           4    pvte.used_word           pvte:          63.
          20    pvte.vacating            pvte:          90.
           4    pvte.vacating_word       pvte:          89.
          24    pvte.volmap_astep        pvte:         122.
          32    pvte.volmap_async_page   pvte:         133.
          32    pvte.volmap_async_state  page_error:   540,
                                         pvte:         132.
           2    pvte.volmap_idle_notify  pvte:          96.
           4    pvte.volmap_idle_notify_word   pvte:          95.
          26    pvte.volmap_lock         pvte:         127.
           4    pvte.volmap_lock_notify  pvte:          94.
           4    pvte.volmap_lock_notify_word   pvte:          93.
          25    pvte.volmap_offset       pvte:         124.
          22    pvte.volmap_seg_sdw      pvte:         121.
          30    pvte.volmap_stock_ptr    pvte:         129.
          33    pvte.vol_trouble_count   pvte:         135.
          27    pvte.vtoc_map_lock       pvte:         128.
           1    pvte.vtoc_map_lock_notify      pvte:          98.
           4    pvte.vtoc_map_lock_notify_word       pvte:          97.
          25    pvte.vtoc_map_offset     pvte:         125.
          31    pvte.vtoc_map_stock_ptr  pvte:         130.
           5    pvte.vtoc_size           pvte:         101.
          34    pvte_size                page_error:   614,  616,
                                         pvte:          34.
         172    pvtx                     page_error:   285,  416,
                                         pxss_page_stack:     16.
         210    pxss_save_stack          pxss_page_stack:     18.
         216    pxss_stackp              pxss_page_stack:     18.
           6    pxss_stack_size          pxss_page_stack:      5,   18.
           1    read_entry               page_info:     30.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
         105    reverting_page           page_error:   232,  313.
          60    save_stack               pxss_page_stack:      9.
         222    savx2_3                  pxss_page_stack:     19.
         400    SBL_access_audit         syserr_binary_def:   68.
         400    SBL_config_deck          syserr_binary_def:   64.
          24    SBL_covert_seg_state     page_error:   561,  842.
           5    SBL_disk_err             syserr_binary_def:   14.
           1    SBL_end_of_table         syserr_binary_def:   72.
         400    SBL_fnp_poll             syserr_binary_def:   62.
         260    SBL_hw_fault             syserr_binary_def:   16.
         400    SBL_ibm3270_mde          syserr_binary_def:   70.
           5    SBL_io_err               syserr_binary_def:   18.
          13    SBL_io_err_detail        syserr_binary_def:   58.
          20    SBL_mdc_del_uidpath      syserr_binary_def:   50.
           2    SBL_mmdam                page_error:   334,
                                         syserr_binary_def:   54.
           2    SBL_mos_err              syserr_binary_def:   22.
           1    SBL_mos_poll             syserr_binary_def:   20.
         400    SBL_mpc_poll             syserr_binary_def:   60.
           5    SBL_ocdcm_err            syserr_binary_def:   52.
          24    SBL_random_segdamage     page_error:   355,
                                         syserr_binary_def:   44.
           2    SBL_read_nc              page_error:   412,
                                         syserr_binary_def:   46.
          25    SBL_unused_10            syserr_binary_def:   32.
          24    SBL_unused_12            syserr_binary_def:   36.
          24    SBL_unused_14            syserr_binary_def:   40.
           3    SBL_unused_15            syserr_binary_def:   42.
           2    SBL_unused_18            syserr_binary_def:   48.
           1    SBL_unused_6             syserr_binary_def:   24.
           1    SBL_unused_7             syserr_binary_def:   26.
           3    SBL_unused_8             syserr_binary_def:   28.
           2    SBL_unused_9             syserr_binary_def:   30.
         260    SBL_verify_lock          syserr_binary_def:   56.
         300    SBL_vtoce                syserr_binary_def:   66.
          24    SBL_vtoc_salv_dam        syserr_binary_def:   38.
          24    SBL_zerpag               page_error:   326,
                                         syserr_binary_def:   34.
          34    SB_access_audit          page_error:   841,
                                         syserr_binary_def:   67.
          32    SB_config_deck           syserr_binary_def:   63.
          34    SB_covert_seg_state      page_error:   561,  841.
           1    SB_disk_err              syserr_binary_def:   13.
          44    SB_end_of_table          syserr_binary_def:   71.
          31    SB_fnp_poll              syserr_binary_def:   61.
           2    SB_hw_fault              syserr_binary_def:   15.
          43    SB_ibm3270_mde           syserr_binary_def:   69.
           3    SB_io_err                syserr_binary_def:   17.
          27    SB_io_err_detail         syserr_binary_def:   57.
          23    SB_mdc_del_uidpath       syserr_binary_def:   49.
          25    SB_mmdam                 page_error:   334,
                                         syserr_binary_def:   53.
           5    SB_mos_err               syserr_binary_def:   21.
           4    SB_mos_poll              syserr_binary_def:   19.
          30    SB_mpc_poll              syserr_binary_def:   59.
          24    SB_ocdcm_err             syserr_binary_def:   51.
          20    SB_random_segdamage      page_error:   355,
                                         syserr_binary_def:   43.
          21    SB_read_nc               page_error:   412,
                                         syserr_binary_def:   45.
          12    SB_unused_10             syserr_binary_def:   31.
          14    SB_unused_12             syserr_binary_def:   35.
          16    SB_unused_14             syserr_binary_def:   39.
          17    SB_unused_15             syserr_binary_def:   41.
          22    SB_unused_18             syserr_binary_def:   47.
           6    SB_unused_6              syserr_binary_def:   23.
           7    SB_unused_7              syserr_binary_def:   25.
          10    SB_unused_8              syserr_binary_def:   27.
          11    SB_unused_9              syserr_binary_def:   29.
          26    SB_verify_lock           syserr_binary_def:   55.
          33    SB_vtoce                 syserr_binary_def:   65.
          15    SB_vtoc_salv_dam         syserr_binary_def:   37.
          13    SB_zerpag                page_error:   326,
                                         syserr_binary_def:   33.
        1010    scav_stacq_fails         page_error:   239,  443.
      777760    sdw_add_mask             page_info:     57.
           2    sdw_to_cmep.rl           page_info:     57.
          14    sdw_to_coreadd.rl        page_info:     57.
           1    segdamage.lvid           segdamage_msg:       18.
           2    segdamage.pno            segdamage_msg:       20.
           0    segdamage.pvid           page_error:   704,
                                         segdamage_msg:       17.
           3    segdamage.uid            segdamage_msg:       23.
           4    segdamage.uid_path       page_error:   716,  727,  729,
                                         segdamage_msg:       24.
           2    segdamage.vtocx          segdamage_msg:       21.
          24    segdamage_size           segdamage_msg:       14.
          10    seg_aste.usage           aste:         149.
          14    seg_aste_size            aste:         146.
                seg_state_chg_operation  page_error:   798.
        2077    setup_controller         page_error:   332,  347,  600.
        2107    setup_pvtname            page_error:   323,  351,  408,  417,  612.
        2113    setup_pvtname.pvtep      page_error:   610,  617.
        2105    setup_pvtname_from_pvtep       page_error:   424,  430,  437,  446,  460,  466,  478,  484,  491,  497,  505,
                                                             516,  522,  533,  543,  608.
           3    sst                      page_error:   705,  798,
                                         page_info:     18,   19,   20.
          73    stach_header.trace_top_ptr     stack_header:        62.
          75    stackp                   pxss_page_stack:      9.
          32    stack_frame.arg_ptr      stack_frame:   16.
         100    stack_frame.condition_bit      stack_frame:   32.
          20    stack_frame.condition_word     stack_frame:    9.
        2000    stack_frame.crawl_out_bit      stack_frame:   28.
          26    stack_frame.entry_ptr    stack_frame:   13.
          20    stack_frame.flag_word    stack_frame:   24.
         400    stack_frame.link_trap_bit      stack_frame:   30.
          30    stack_frame.lp_ptr       stack_frame:   15.
       20000    stack_frame.main_proc_bit      stack_frame:   25.
          60    stack_frame.min_length   stack_frame:   23.
          22    stack_frame.next_sp      stack_frame:   10.
          36    stack_frame.on_unit_rel_ptrs   stack_frame:   19.
          30    stack_frame.operator_ptr       stack_frame:   14.
          37    stack_frame.operator_ret_ptr   stack_frame:   20.
          20    stack_frame.prev_sp      page_error:   285,  292,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,
                                                       425,  431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,
                                                       492,  500,  506,  511,  517,  523,  527,  534,  544,  561,
                                         stack_frame:    8.
          40    stack_frame.regs         stack_frame:   22.
          24    stack_frame.return_ptr   page_error:   283,  298,  303,  309,  314,  331,  338,  343,  361,  366,  380,  388,
                                                       395,  401,  415,  421,  428,  434,  441,  444,  450,  454,  458,  464,
                                                       471,  476,  482,  488,  495,  503,  510,  514,  520,  526,  530,  538,
                                                       549,
                                         stack_frame:   12.
       10000    stack_frame.run_unit_manager   stack_frame:   26.
        1000    stack_frame.signaller_bit      stack_frame:   29.
          22    stack_frame.signaller_word     stack_frame:   11.
        4000    stack_frame.signal_bit   stack_frame:   27.
          34    stack_frame.static_ptr   stack_frame:   17.
         200    stack_frame.support_bit  stack_frame:   31.
          35    stack_frame.support_ptr  stack_frame:   18.
          37    stack_frame.translator_id      stack_frame:   21.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     page_error:   294,
                                               stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          15    stack_size               pxss_page_stack:      6,    9.
        1340    stock_inconsistent       page_error:   236,  487.
         713    stock_out_of_synch       page_error:   233,  433.
         136    stock_temp               pxss_page_stack:     12.
         217    stock_temp_1             pxss_page_stack:     19.
         220    stock_temp_2             pxss_page_stack:     19.
                syserr                   page_error:   287,  690.
          50    syserr_arg_list          page_error:   251,  285,  287,  305,  326,  334,  355,  375,  384,  390,  397,  412,
                                                       418,  425,  431,  438,  442,  447,  451,  455,  461,  467,  472,  479,
                                                       485,  492,  500,  506,  511,  517,  523,  527,  534,  544,  561,  653,
                                                       657,  684,  685,  687,  690.
           0    syserr_binary_mos_mask   syserr_binary_def:   73.
           0    syserr_binary_seg_damage_mask  syserr_binary_def:   74.
           0    syserr_binary_vol_damage_mask  syserr_binary_def:   75.
          24    SYSERR_COVERT_CHANNEL    page_error:   837,
                                         syserr_constants:    27.
          30    SYSERR_COVERT_CHANNEL_LOG      page_error:   837.
           1    SYSERR_CRASH_SYSTEM      syserr_constants:    13.
           5    SYSERR_LOG_OR_DISCARD    syserr_constants:    23.
           4    SYSERR_LOG_OR_PRINT      syserr_constants:    21.
           0    SYSERR_PRINT_ON_CONSOLE  syserr_constants:    19.
           3    SYSERR_PRINT_WITH_ALARM  syserr_constants:    17.
          12    SYSERR_RING1_ERROR       syserr_constants:    26.
          50    SYSERR_SUCCESSFUL_ACCESS       syserr_constants:    29.
           0    SYSERR_SYSTEM_ERROR      syserr_constants:    25.
           2    SYSERR_TERMINATE_PROCESS       syserr_constants:    15.
          36    SYSERR_UNSUCCESSFUL_ACCESS     syserr_constants:    28.
         134    temp                     page_error:   317,  326,  334,  346,  355,  605,  743,
                                         pxss_page_stack:     11.
         166    temp1                    pxss_page_stack:     15.
         167    temp2                    pxss_page_stack:     15.
           2    TERMINATE_PROCESS        syserr_constants:    16.
         207    tmp_event                pxss_page_stack:     18.
         144    tmp_ev_channel           pxss_page_stack:     13.
         146    tmp_ev_message           pxss_page_stack:     13.
         202    tmp_ring                 pxss_page_stack:     17.
         165    total_steps              pxss_page_stack:     15.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
           2    U                        page_error:   249,  285,  305,  326,  334,  355,  375,  384,  390,  397,  412,  418,
                                                       425,  431,  438,  442,  447,  451,  455,  461,  467,  472,  479,  485,
                                                       492,  500,  506,  511,  517,  523,  527,  534,  544,  551,  553,  561,
                                                       671,  703,  708,  711,  742,  743,  753,  765,  771,  776,  782,  788.
         551    volmap_async_error       page_error:   233,  414.
           0    VOLMAP_ASYNC_IDLE        pvte:         138.
           1    VOLMAP_ASYNC_READ        pvte:         139.
           2    VOLMAP_ASYNC_WRITE       pvte:         140.
        1246    volmap_inconsistent      page_error:   236,  475.
        1653    volmap_io_error          page_error:   238,  529.
        1163    volmap_mylock            page_error:   235,  463.
        1573    volmap_page_async_error  page_error:   237,  519.
        1626    volmap_page_invalid_call       page_error:   237,  525.
         224    volmap_page_temp         pxss_page_stack:     21.
         233    volmap_page_temp_1       pxss_page_stack:     24.
         142    volmap_save_ptr          pxss_page_stack:     12.
         162    volmap_save_sdw          pxss_page_stack:     14.
        1130    volmap_stacq_fails       page_error:   235,  457.
         140    volmap_temp              pxss_page_stack:     12.
         170    volmap_temp_1            pxss_page_stack:     15.
         171    volmap_temp_2            pxss_page_stack:     15.
         234    vtocx                    pxss_page_stack:     25.
         237    wired_parity_error       page_error:   232,  342.
           2    write_entry              page_info:     31.
        1536    wrong_async_state        page_error:   237,  513.
         206    x5                       pxss_page_stack:     17.
          77    zeroing_page             page_error:   228,  308.
         112    zpag_rpag_merge          page_error:   311,  316.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
