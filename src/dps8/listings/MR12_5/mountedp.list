	COMPILATION LISTING OF SEGMENT mountedp
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1022.2 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 mountedp: proc (a_lvid) returns (fixed bin (35));
       14 
       15 /*
       16*
       17*   Written 03/11/76 by R. Bratt to answer the question: is my process
       18*   able to use a given logical volume
       19*
       20**/
       21 
       22 dcl  a_lvid bit (36) aligned;
       23 dcl  lvid bit (36) aligned,
       24      code fixed bin (35);
       25 dcl  logical_volume_manager$lvtep entry (bit (36) aligned, ptr, fixed bin (35)),
       26      private_logical_volume$lvx entry (bit (36) aligned, fixed bin (8), fixed bin (35));
       27 
       28 	lvid = a_lvid;
       29 	call logical_volume_manager$lvtep (lvid, lvtep, code);
       30 	if code ^= 0 then return (code);
       31 	if lvtep -> lvte.public then return (0);
       32 	call private_logical_volume$lvx (lvid, (0), code);
       33 	return (code);
       34 
       35 /*  */
       36 
  1     1 /* BEGIN INCLUDE FILE lvt.incl.pl1 -- Written Jan. 1976 by R. Bratt       */
  1     2 /*
  1     3*   This include file defines the format of the hardcore L_ogical V_olume T_able (LVT).
  1     4**/
  1     5 
  1     6 dcl  lvt$ ext;
  1     7 dcl  lvtp ptr;
  1     8 dcl  lvtep ptr;
  1     9 
  1    10 dcl 1 lvt aligned based (lvtp),
  1    11     2 max_lvtex fixed bin (17),			/* maximum number of LVs describable */
  1    12     2 high_water_lvtex fixed bin (17),			/* highest LVT index assigned */
  1    13     2 free_lvtep ptr,				/* pointer to  first free lvte  */
  1    14     2 pad1 (4) bit (36),
  1    15     2 ht (0:63) ptr unal,				/* lvid hash table */
  1    16     2 lvtes (1:1 refer (lvt.max_lvtex)) like lvte;	/* LVT entries */
  1    17 
  1    18 dcl 1 lvte aligned based (lvtep),			/* logical volume table entry */
  1    19     2 lvtep ptr unaligned,				/* lvid hash thread */
  1    20     2 pvtex fixed bin (17),				/* thread of mounted PVs */
  1    21     2 lvid bit (36),				/* logical volume id */
  1    22     2 access_class aligned,				/* access isolation mechanism stuff */
  1    23       3 min bit (72),				/* minimum access class allowed on LV */
  1    24       3 max bit (72),				/* maximum access class allowed on volume */
  1    25     2 flags unaligned,				/* flags */
  1    26       3 public bit (1),				/* => anyone can connect to this LV */
  1    27       3 read_only bit (1),				/* => no writes on this LV */
  1    28       3 pad bit (16),
  1    29       3 cycle_pvtx fixed bin (17);			/* pvtx for next per_process seg */
  1    30 
  1    31 /* END INCLUDE FILE lvt.incl.pl1                                                    */
       37 
       38 
       39      end mountedp;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0808.5  mountedp.pl1                      >spec>install>1112>mountedp.pl1
37           1    11/30/76  1555.4  lvt.incl.pl1                      >ldd>include>lvt.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_lvid                                 parameter       bit(36)                  dcl 22 ref 13 28
code                            000101 automatic       fixed bin(35,0)          dcl 23 set ref 29* 30 30 32* 33
flags                     7            based           structure                level 2 packed packed unaligned dcl 1-18
logical_volume_manager$lvtep    000010 constant        entry                    external dcl 25 ref 29
lvid                            000100 automatic       bit(36)                  dcl 23 set ref 28* 29* 32*
lvte                                   based           structure                level 1 dcl 1-18
lvtep                           000102 automatic       pointer                  dcl 1-8 set ref 29* 31
private_logical_volume$lvx      000012 constant        entry                    external dcl 25 ref 32
public                    7            based           bit(1)                   level 3 packed packed unaligned dcl 1-18 ref 31

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
lvt                                    based           structure                level 1 dcl 1-10
lvt$                                   external static fixed bin(17,0)          dcl 1-6
lvtp                                   automatic       pointer                  dcl 1-7

NAME DECLARED BY EXPLICIT CONTEXT.
mountedp                        000006 constant        entry                    external dcl 13

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       136         152      64         146
Length       326      64        14         140      51           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mountedp                             77 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mountedp                 000100 lvid                        mountedp
                         000101 code                        mountedp
                         000102 lvtep                       mountedp

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
logical_volume_manager$lvtep  private_logical_volume$lvx

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000002        28 000013        29 000016        30 000030        31 000035        32 000044        33 000060


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
