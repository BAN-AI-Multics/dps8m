ASSEMBLY LISTING OF SEGMENT >spec>install>1111>lock_volmap.alm                                                                                                                                      
ASSEMBLED ON:	11/11/89  0926.7 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " ***********************************************************
                                     8  
                                     9  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    10  "
                                    11  "	lock_volmap
                                    12  "
                                    13  "	Routines for manipulating the per-volume volume map lock.
                                    14  "	Lock succeeds if the lock can be obtained and the asynchronous
                                    15  "	state is idle. Otherwise, it fails. The asynchronous state
                                    16  "	is protected in the following way:
                                    17  "
                                    18  "	   To change the state from IDLE requires both the volume map
                                    19  "	   lock and the Page Table Lock.
                                    20  "
                                    21  "	   To change the state from anything else requires the Page
                                    22  "	   Table Lock.
                                    23  "
                                    24  "	Entries:
                                    25  "
                                    26  "	   lock_unwired      - lock from outside of page control
                                    27  "	   lock_wired_nowait - lock from page control, don't wait
                                    28  "	   lock_wired_wait   - lock from page control, set wait event
                                    29  "	   unlock_unwired    - unlock from outside of page control
                                    30  "	   unlock_wired      - unlock from page control
                                    31  "
                                    32  "	Written February 1982 by J. Bongiovanni
                                    33  "
                                    34  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    35  
    000000                          36  	name	lock_volmap
                                    37  
                        000002      38  	segdef	lock_unwired
                        000021      39  	segdef	unlock_unwired
                                    40  
                        000027      41  	segdef	lock_wired_nowait
                        000035      42  	segdef	lock_wired_wait
                        000057      43  	segdef	unlock_wired
                                    44  
                                    45  	even
    000000                          46  notify_arg_list:
    000000  aa   000002 000004      47  	vfd	o18/2,o18/4,o36/0
    000001  aa   000000 000000 
                                    48  
                                    49  "
                                    50  	include	apte
                                   1-1  "	BEGIN INCLUDE FILE apte.incl.alm
                                   1-2  "
                                   1-3  "
                                   1-4  " HISTORY COMMENTS:
                                   1-5  "  1) change(86-08-09,Kissel), approve(86-08-12,MCR7479),
                                   1-6  "     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
                                   1-7  "     Added the ipc_r_offset, ipc_r_factor, and apad fields from the pl1
                                   1-8  "     include file to support async event channel wakeups.
                                   1-9  "                                                      END HISTORY COMMENTS
                                  1-10  
                        000000    1-11  	equ	apte.thread,0
                        000000    1-12  	equ	apte.fp,0			"UPPER
                        000000    1-13  	equ	apte.bp,0			"LOWER
                                  1-14  
                        000001    1-15  	equ	apte.flags,1
                        000001    1-16  	equ	apte.sentinel,1
                        400000    1-17  	bool	apte.mbz,400000		"DU
                        200000    1-18  	bool	apte.wakeup_waiting,200000	"DU
                        100000    1-19  	bool	apte.stop_pending,100000	"DU
                        040000    1-20  	bool	apte.pre_empted,040000	"DU
                        020000    1-21  	bool	apte.hproc,020000		"DU
                        010000    1-22  	bool	apte.loaded,010000		"DU
                        004000    1-23  	bool	apte.eligible,004000	"DU
                        002000    1-24  	bool	apte.idle,002000		"DU
                        001000    1-25  	bool	apte.interaction,001000	"DU
                        000400    1-26  	bool	apte.pre_empt_pending,000400	"DU
                        000200    1-27  	bool	apte.default_procs_required,000200 "DU
                        000100    1-28  	bool	apte.realtime_burst,000100	"DU
                        000040    1-29  	bool	apte.always_loaded,000040	"DU
                        000020    1-30  	bool	apte.dbr_loaded,000020	"DU
                        000010    1-31  	bool	apte.being_loaded,000010	"DU
                        000004    1-32  	bool	apte.shared_stack_0,000004	"DU
                        000002    1-33  	bool	apte.page_wait_flag,000002	"DU
                        000001    1-34  	bool	apte.firstsw,000001		"DU
                        000001    1-35  	equ	apte.state,1		"LOWER
                                  1-36  
                        000002    1-37  	equ	apte.page_faults,2
                                  1-38  
                        000003    1-39  	equ	apte.processid,3
                                  1-40  
                        000004    1-41  	equ	apte.te,4
                                  1-42  
                        000005    1-43  	equ	apte.ts,5
                                  1-44  
                        000006    1-45  	equ	apte.ti,6
                                  1-46  
                        000007    1-47  	equ	apte.timax,7
                                  1-48  
                        000010    1-49  	equ	apte.ipc_pointers,8
                        000010    1-50  	equ	apte.event_thread,8		"UPPER
                                  1-51  
                        000011    1-52  	equ	apte.ips_message,9
                                  1-53  
                        000012    1-54  	equ	apte.asteps,10
                        000012    1-55  	equ	apte.pds,10		"UPPER
                        000012    1-56  	equ	apte.dseg,10		"LOWER
                                  1-57  
                        000013    1-58  	equ	apte.prds,11		"UPPER
                        000013    1-59  	equ	apte.savex7,11		"LOWER
                                  1-60  
                        000014    1-61  	equ	apte.term_processid,12
                                  1-62  
                        000015    1-63  	equ	apte.lock_id,13
                        000016    1-64  	equ	apte.time_used_clock,14
                                  1-65  
                        000020    1-66  	equ	apte.wait_event,16
                                  1-67  
                        000021    1-68  	equ	apte.wct_index,17		"UPPER
                        000021    1-69  	equ	apte.flags2,17		"LOWER
                        400000    1-70  	bool	apte.prior_sched,400000	"DL
                        000023    1-71  	equ	apte.chans_offset,19
                        374000    1-72  	bool	apte.special_chans,374000	"DL
                        000021    1-73  	equ	apte.batch_word,17
                        000010    1-74  	bool	apte.batch,000010		"DL
                        000007    1-75  	bool	apte.pr_tag_mask,000007
                                  1-76  
                        000022    1-77  	equ	apte.state_change_time,18
                                  1-78  
                        000024    1-79  	equ	apte.alarm_event,20
                                  1-80  
                        000026    1-81  	equ	apte.alarm_time_thread,22	"UPPER
                        000026    1-82  	equ	apte.alarm_time,22
                                  1-83  
                        000030    1-84  	equ	apte.term_channel,24
                                  1-85  
                        000032    1-86  	equ	apte.ws_size,26
                                  1-87  
                        000033    1-88  	equ	apte.temax,27
                                  1-89  
                        000034    1-90  	equ	apte.deadline,28
                                  1-91  
                        000036    1-92  	equ	apte.lock,30
                                  1-93  
                        000037    1-94  	equ	apte.cpu_monitor,31		units = 1/1024 sec
                                  1-95  
                        000040    1-96  	equ	apte.paging_measure,32
                                  1-97  
                        000042    1-98  	equ	apte.access_authorization,34 	"DOUBLE WORD
                        400000    1-99  	bool	apte.no_ipc_check,400000	"DL
                                 1-100  
                        000044   1-101  	equ	apte.dbr,36
                                 1-102  
                        000046   1-103  	equ	apte.virtual_cpu_time,38
                                 1-104  
                        000050   1-105  	equ	apte.ittes_sent,40
                        000051   1-106  	equ	apte.ittes_got,41
                                 1-107  
                        000052   1-108  	equ	apte.current_response_state,42	" DU
                        000053   1-109  	equ	apte.number_processing,43
                        000054   1-110  	equ	apte.last_response_state_time,44
                        000056   1-111  	equ	apte.total_processing_time,46
                        000060   1-112  	equ	apte.begin_interaction_vcpu,48
                                 1-113  
                        000062   1-114  	equ	apte.saved_temax,50
                        000063   1-115  	equ	apte.procs_required,51
                        776000   1-116  	bool	apte.procs_required_mask,776000	" DU
                                 1-117  
                        000064   1-118  	equ	apte.ipc_r_offset,52
                        000065   1-119  	equ	apte.ipc_r_factor,53
                        000066   1-120  	equ	apte.apad,54
                                 1-121  
                        000100   1-122  	equ	size_of_apt_entry,64
                                 1-123  
                                 1-124  "	MISC OLD DCLS.
                                 1-125  
                        000013   1-126  	equ	apte.le_shift,11
                        000175   1-127  	bool	apte.timer_factor,175
                                 1-128  
                                 1-129  
                                 1-130  "
                                 1-131  "	END INCLUDE FILE apte.incl.alm
                                 1-132  "
                                    51  "
                                    52  	include	page_info
                                   2-1  "	BEGIN INCLUDE FILE page_info.incl.alm  --  6/72
                                   2-2  "
                                   2-3  " Modified 02/22/81, W. Olin Sibert, for ADP conversion
                                   2-4  " Modified 06/23/82, E. N. Kittlitz, to move core map.
                                   2-5  "
                        000012     2-6  	equ	page_power,10		" 2**10 = size of page
                        000001     2-7  	bool	df1,000001		" directed fault 1 on page fault
                                   2-8  
                 777777 740000     2-9  	bool	address_mask,777777740000	" Mask for PTW add, add_type compares
                                  2-10  					" Use as =v36/address_mask
                                  2-11  
                        400000    2-12  	bool	ptw.nulled,400000		" flag for testing addresses
                                  2-13  
                        100000    2-14  	bool	int,100000		" Disk dim flags
                        000020    2-15  	bool	pri,000020
                        000004    2-16  	bool	no_post,000004
                                  2-17  
                        000003    2-18  	equ	sst,3			" Standard pointer and index
                        000003    2-19  	equ	pdm,sst			" register usage
                        000003    2-20  	equ	ast,sst
                        000002    2-21  	equ	ptw,2
                                  2-22  
                                  2-23  "	Various AST masks which are not
                                  2-24  "	expressible in standard notation
                                  2-25  "
                        777000    2-26  	bool	aste.csl_mask_inner,777000
                        777000    2-27  	bool	aste.records_mask_inner,777000
                                  2-28  
                        000000    2-29  	equ	fault_entry,0		" Flags indicating how we
                        000001    2-30  	equ	read_entry,1		" were entered
                        000002    2-31  	equ	write_entry,2
                        000003    2-32  	equ	pre_page_entry,3
                        000004    2-33  	equ	post_purge_entry,4
                        000005    2-34  	equ	pd_flush_entry,5
                        000006    2-35  	equ	evict_entry,6
                        000007    2-36  	equ	abs_wire_entry,7
                        000010    2-37  	equ	cleanup_entry,8
                                  2-38  
                                  2-39  " Constants for manipulating core addresses and PTWs. The core address
                                  2-40  " is a fixed bin (35) aligned, and must be moved to/from the appropriate
                                  2-41  " field in the SDW or PTW.
                                  2-42  "
                                  2-43  	iftarget	l68
                        777760          	   bool	ptw_add_mask,777760 " Page number
                        777760          	   bool	sdw_add_mask,777760 " Page number
                 000077 777777          	   bool	coreadd_mask,000077777777 " Mask for coreadd in AL
                                        
                        000014          	   equ	coreadd_to_ptw.ls,12
                        000014          	   equ	coreadd_to_sdw.ls,12
                        000014          	   equ	ptw_to_coreadd.rl,12
                        000014          	   equ	sdw_to_coreadd.rl,12
                        000002          	   equ	cmep_to_ptw.ls,2
                        000002          	   equ	cmep_to_sdw.ls,2
                        000002          	   equ	ptw_to_cmep.rl,2
                        000024          	   equ	ptw_to_cmep_lower.rl,20
                        000002          	   equ	sdw_to_cmep.rl,2
                                        "	ifend
                                  2-58  
                                  2-59  	iftarget	adp
                                        "	   bool	ptw_add_mask,177777 " Page number
                                        "	   bool	sdw_add_mask,777774 " Page number
                                        "	   bool	coreadd_mask,000377777777 " Mask for coreadd in AL
                                        "
                                        "	   equ	coreadd_to_ptw.ls,8
                                        "	   equ	coreadd_to_sdw.ls,10
                                        "	   equ	ptw_to_coreadd.rl,8
                                        "	   equ	sdw_to_coreadd.rl,10
                                        "	   equ	cmep_to_ptw.rl,2	" Must shift backwards
                                        "	   equ	cmep_to_sdw.ls,0
                                        "	   equ	ptw_to_cmep.ls,2	" Must shift backwards
                                        "	   equ	ptw_to_cmep_lower.rl,16
                                        "	   equ	sdw_to_cmep.rl,0
                                        "	ifend
                                  2-74  
                        000012    2-75  	equ	cmep_to_coreadd.rl,10	.cmep to coreadd
                        000012    2-76  	equ	coreadd_to_cmep.ls,10	coreadd to .cmep
                                  2-77  
                                  2-78  " 
                                  2-79  "
                                  2-80  " Assorted general purpose macros used in PC. These will be changed
                                  2-81  " when address types are changed for 20 bit addresses. Additionally,
                                  2-82  " for more accurate metering on the ADP, the metering macros should
                                  2-83  " modified to update the metering cells uninterruptably.
                                  2-84  "
                                  2-85  
                                  2-86  	macro	missing
                              1   2-87  	ife	&2,()
                              2   2-88  	  warn	(&1: Argument missing.)
                              3   2-89  	ifend
                              4   2-90  	&end
                                  2-91  "
                                  2-92  " staddra and staddrq store the address portion (upper 22 bits) of the A or Q
                                  2-93  " into the specified location.
                                  2-94  "
                                  2-95  	macro	staddra
                              1   2-96  	missing	staddra,&1
                              2   2-97  	era	&F1
                              3   2-98  	ana	=v36/address_mask
                              4   2-99  	ersa	&F1
                              5  2-100  	&end
                                 2-101  
                                 2-102  	macro	staddrq
                              1  2-103  	missing	staddrq,&1
                              2  2-104  	erq	&F1
                              3  2-105  	anq	=v36/address_mask
                              4  2-106  	ersq	&F1
                              5  2-107  	&end
                                 2-108  
                                 2-109  "	Macros for metering 6/23/80
                                 2-110  
                                 2-111  	macro	read_clock
                              1  2-112  	iftarget	l68
                              2  2-113  	  rccl	sys_info$clock_,*
                              3  2-114  	ifend
                              4  2-115  	iftarget adp
                              5  2-116  	  rccl	0
                              6  2-117  	ifend
                              7  2-118  	&end
                                 2-119  
                                 2-120  	macro	increment
                              1  2-121  	missing	increment,&1
                              2  2-122  	aos	&1
                              3  2-123  	&end
                                 2-124  
                                 2-125  	macro	store_clock
                              1  2-126  	missing	store_clock,&1
                              2  2-127  	read_clock
                              3  2-128  	staq	&1
                              4  2-129  	&end
                                 2-130  
                                 2-131  	macro	meter_time
                              1  2-132  	missing	meter_time,&3
                              2  2-133  	increment &3
                              3  2-134  	read_clock
                              4  2-135  	sbaq	&1
                              5  2-136  	adaq	&2
                              6  2-137  	staq	&2
                              7  2-138  	&end
                                 2-139  
                                 2-140  "	END INCLUDE FILE  page_info.incl.alm
                                    53  "
                                    54  	include	pvt
                                   3-1  
                                   3-2  
                                   3-3       "BEGIN INCLUDE FILE pvt.incl.alm
                                   3-4  
                                   3-5  
                                   3-6  	"Created 04/22/82  1949.1 est Thu by convert_include_file,
                                   3-7  	"   Version of 12/01/81  1540.3 est Tue.
                                   3-8  
                                   3-9  	"Made from >cdd>include>pvt.incl.pl1,
                                  3-10  	"   modified 04/22/82  1949.1 est Thu
                                  3-11  
                                  3-12  "
                                  3-13  "	Structure pvt
                                  3-14  "
                        000052    3-15  	equ	pvt_size,42
                                  3-16  
                                  3-17  
                        000000    3-18  	equ	pvt.n_entries,0
                        000001    3-19  	equ	pvt.max_n_entries,1
                        000002    3-20  	equ	pvt.n_in_use,2
                        000003    3-21  	equ	pvt.rwun_pvtx,3
                        000004    3-22  	equ	pvt.shutdown_state,4
                        000005    3-23  	equ	pvt.esd_state,5
                        000006    3-24  	equ	pvt.prev_shutdown_state,6
                        000007    3-25  	equ	pvt.prev_esd_state,7
                        000010    3-26  	equ	pvt.time_of_bootload,8	" DOUBLE
                        000012    3-27  	equ	pvt.root_lvid,10
                        000013    3-28  	equ	pvt.root_pvid,11
                        000014    3-29  	equ	pvt.root_pvtx,12
                        000015    3-30  	equ	pvt.root_vtocx,13
                        000016    3-31  	equ	pvt.disk_table_vtocx,14
                        000017    3-32  	equ	pvt.disk_table_uid,15
                                  3-33  
                        000020    3-34  	equ	pvt.rpvs_requested_word,16
                        400000    3-35  	bool	pvt.rpvs_requested,400000	" DU
                                  3-36  
                        000021    3-37  	equ	pvt.rpv_needs_salv_word,17
                        400000    3-38  	bool	pvt.rpv_needs_salv,400000	" DU
                                  3-39  
                        000022    3-40  	equ	pvt.rlv_needs_salv_word,18
                        400000    3-41  	bool	pvt.rlv_needs_salv,400000	" DU
                                  3-42  
                        000023    3-43  	equ	pvt.volmap_lock_wait_constant,19
                        000024    3-44  	equ	pvt.volmap_idle_wait_constant,20
                        000025    3-45  	equ	pvt.vtoc_map_lock_wait_constant,21
                        000026    3-46  	equ	pvt.n_volmap_locks_held,22
                        000027    3-47  	equ	pvt.n_vtoc_map_locks_held,23
                        000030    3-48  	equ	pvt.last_volmap_time,24	" DOUBLE
                        000032    3-49  	equ	pvt.last_vtoc_map_time,26	" DOUBLE
                        000034    3-50  	equ	pvt.total_volmap_lock_time,28	" DOUBLE
                        000036    3-51  	equ	pvt.total_vtoc_map_lock_time,30 " DOUBLE
                        000040    3-52  	equ	pvt.n_volmap_locks,32
                        000041    3-53  	equ	pvt.n_vtoc_map_locks,33
                        000042    3-54  	equ	pvt.volmap_lock_nowait_calls,34
                        000043    3-55  	equ	pvt.volmap_lock_nowait_fails,35
                        000044    3-56  	equ	pvt.volmap_lock_wait_calls,36
                        000045    3-57  	equ	pvt.volmap_lock_wait_fails,37
                        000050    3-58  	equ	pvt.array,40		" DOUBLE
                                  3-59  
                                  3-60       "END INCLUDE FILE pvt.incl.alm
                                    55  "
                                    56  	include	pvte
                                   4-1  
                                   4-2  
                                   4-3       "BEGIN INCLUDE FILE pvte.incl.alm
                                   4-4  
                                   4-5  
                                   4-6  	"Created 05/29/86  1617.9 mst Thu by convert_include_file,
                                   4-7  	"   Version of 04/10/86  1622.3 mst Thu.
                                   4-8  
                                   4-9  	"Made from >dumps>old>dipper>svs5>incl>pvte.incl.pl1,
                                  4-10  	"   modified 05/29/86  1617.8 mst Thu
                                  4-11  
                                  4-12  
                                  4-13  " HISTORY COMMENTS:
                                  4-14  "  1) change(86-04-11,Fawcett), approve(86-04-11,MCR7383),
                                  4-15  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  4-16  "        Add the support for subvolumes
                                  4-17  "  2) change(86-04-11,Lippard), approve(86-04-11,MCR7309),
                                  4-18  "     audit(86-05-29,GDixon), install(86-07-18,MR12.0-1098):
                                  4-19  "        Add root_lv flag to mount RLVs that do not have hardcore partitions.
                                  4-20  "  3) change(88-05-27,GWMay), approve(88-05-27,MCR7883),
                                  4-21  "     audit(88-06-14,Beattie), install(88-07-19,MR12.2-1061):
                                  4-22  "        Added inconsistent_dbm bit for determining the status of volume
                                  4-23  "        dumper bit maps.
                                  4-24  "                                                      END HISTORY COMMENTS
                                  4-25  
                                  4-26  
                                  4-27  "
                                  4-28  "	Structure pvt_array
                                  4-29  "
                                  4-30  
                                  4-31  "
                                  4-32  "	Structure pvte
                                  4-33  "
                        000034    4-34  	equ	pvte_size,28
                                  4-35  
                                  4-36  
                        000000    4-37  	equ	pvte.pvid,0
                        000001    4-38  	equ	pvte.lvid,1
                                  4-39  
                        000002    4-40  	equ	pvte.dmpr_in_use_word,2
                        400000    4-41  	bool	pvte.dmpr_in_use,400000	" DU
                        000002    4-42  	equ	pvte.is_sv_word,2
                        040000    4-43  	bool	pvte.is_sv,040000		" DU
                        000002    4-44  	equ	pvte.root_lv_word,2
                        020000    4-45  	bool	pvte.root_lv,020000		" DU
                        000002    4-46  	equ	pvte.removable_pack_word,2
                        010000    4-47  	bool	pvte.removable_pack,010000	" DU
                        000002    4-48  	equ	pvte.inconsistent_dbm_word,2
                        004000    4-49  	bool	pvte.inconsistent_dbm,004000	" DU
                        000002    4-50  	equ	pvte.brother_pvtx_word,2
                        000022    4-51  	equ	pvte.brother_pvtx_shift,18
                        000777    4-52  	bool	pvte.brother_pvtx_mask,000777
                        000002    4-53  	equ	pvte.skip_queue_count,2	" LOWER
                                  4-54  
                        000003    4-55  	equ	pvte.devname,3
                                  4-56  
                        000004    4-57  	equ	pvte.device_type_word,4
                        000033    4-58  	equ	pvte.device_type_shift,27
                        000777    4-59  	bool	pvte.device_type_mask,000777
                        000004    4-60  	equ	pvte.logical_area_number_word,4
                        000022    4-61  	equ	pvte.logical_area_number_shift,18
                        000777    4-62  	bool	pvte.logical_area_number_mask,000777
                        000004    4-63  	equ	pvte.used_word,4
                        400000    4-64  	bool	pvte.used,400000		" DL
                        000004    4-65  	equ	pvte.storage_system_word,4
                        200000    4-66  	bool	pvte.storage_system,200000	" DL
                        000004    4-67  	equ	pvte.permanent_word,4
                        100000    4-68  	bool	pvte.permanent,100000	" DL
                        000004    4-69  	equ	pvte.testing_word,4
                        040000    4-70  	bool	pvte.testing,040000		" DL
                        000004    4-71  	equ	pvte.being_mounted_word,4
                        020000    4-72  	bool	pvte.being_mounted,020000	" DL
                        000004    4-73  	equ	pvte.being_demounted_word,4
                        010000    4-74  	bool	pvte.being_demounted,010000	" DL
                        000004    4-75  	equ	pvte.check_read_incomplete_word,4
                        004000    4-76  	bool	pvte.check_read_incomplete,004000 " DL
                        000004    4-77  	equ	pvte.device_inoperative_word,4
                        002000    4-78  	bool	pvte.device_inoperative,002000 " DL
                        000004    4-79  	equ	pvte.rpv_word,4
                        001000    4-80  	bool	pvte.rpv,001000		" DL
                        000004    4-81  	equ	pvte.scav_check_address_word,4
                        000400    4-82  	bool	pvte.scav_check_address,000400 " DL
                        000004    4-83  	equ	pvte.deposit_to_volmap_word,4
                        000200    4-84  	bool	pvte.deposit_to_volmap,000200	" DL
                        000004    4-85  	equ	pvte.being_demounted2_word,4
                        000100    4-86  	bool	pvte.being_demounted2,000100	" DL
                        000004    4-87  	equ	pvte.pc_vacating_word,4
                        000040    4-88  	bool	pvte.pc_vacating,000040	" DL
                        000004    4-89  	equ	pvte.vacating_word,4
                        000020    4-90  	bool	pvte.vacating,000020	" DL
                        000004    4-91  	equ	pvte.hc_part_used_word,4
                        000010    4-92  	bool	pvte.hc_part_used,000010	" DL
                        000004    4-93  	equ	pvte.volmap_lock_notify_word,4
                        000004    4-94  	bool	pvte.volmap_lock_notify,000004 " DL
                        000004    4-95  	equ	pvte.volmap_idle_notify_word,4
                        000002    4-96  	bool	pvte.volmap_idle_notify,000002 " DL
                        000004    4-97  	equ	pvte.vtoc_map_lock_notify_word,4
                        000001    4-98  	bool	pvte.vtoc_map_lock_notify,000001 " DL
                                  4-99  
                        000005   4-100  	equ	pvte.n_free_vtoce,5		" UPPER
                        000005   4-101  	equ	pvte.vtoc_size,5		" LOWER
                                 4-102  
                        000006   4-103  	equ	pvte.dbmrp,6		" UPPER
                                 4-104  
                        000007   4-105  	equ	pvte.nleft,7		" UPPER
                        000007   4-106  	equ	pvte.totrec,7		" LOWER
                                 4-107  
                        000010   4-108  	equ	pvte.dim_info,8
                        000011   4-109  	equ	pvte.sv_num,9
                        000012   4-110  	equ	pvte.num_of_svs,10
                        000013   4-111  	equ	pvte.records_per_cyl,11
                        000014   4-112  	equ	pvte.record_factor,12
                        000015   4-113  	equ	pvte.sv_name,13
                                 4-114  
                        000016   4-115  	equ	pvte.curn_dmpr_vtocx,14	" UPPER
                                 4-116  
                        000017   4-117  	equ	pvte.n_vtoce,15		" LOWER
                                 4-118  
                        000020   4-119  	equ	pvte.baseadd,16		" UPPER
                                 4-120  
                        000022   4-121  	equ	pvte.volmap_seg_sdw,18	" DOUBLE
                        000024   4-122  	equ	pvte.volmap_astep,20
                                 4-123  
                        000025   4-124  	equ	pvte.volmap_offset,21	" UPPER
                        000025   4-125  	equ	pvte.vtoc_map_offset,21	" LOWER
                                 4-126  
                        000026   4-127  	equ	pvte.volmap_lock,22
                        000027   4-128  	equ	pvte.vtoc_map_lock,23
                        000030   4-129  	equ	pvte.volmap_stock_ptr,24
                        000031   4-130  	equ	pvte.vtoc_map_stock_ptr,25
                                 4-131  
                        000032   4-132  	equ	pvte.volmap_async_state,26	" UPPER
                        000032   4-133  	equ	pvte.volmap_async_page,26	" LOWER
                                 4-134  
                        000033   4-135  	equ	pvte.vol_trouble_count,27	" UPPER
                        000033   4-136  	equ	pvte.scavenger_block_rel,27	" LOWER
                                 4-137  
                        000000   4-138  	equ	VOLMAP_ASYNC_IDLE,0		" MANIFEST
                        000001   4-139  	equ	VOLMAP_ASYNC_READ,1		" MANIFEST
                        000002   4-140  	equ	VOLMAP_ASYNC_WRITE,2	" MANIFEST
                                 4-141  
                                 4-142       "END INCLUDE FILE pvte.incl.alm
                                    57  "
                                    58  	include	pxss_page_stack
                                   5-1  "
                                   5-2  "	BEGIN INCLUDE FILE  pxss_page_stack.incl.alm     July 1982
                                   5-3  "
                                   5-4  
                        000006     5-5  	equ	pxss_stack_size,6	" size of x7 save stack used by pxss
                        000015     5-6  	equ	stack_size,13	" size of x7 save stack used by page control
                                   5-7  
                                   5-8  	temp8	notify_regs
                                   5-9  	temp	save_stack(stack_size),stackp
                                  5-10  	tempd	pre_time,pre_temp(3)
                                  5-11  	tempd	arg(11),temp
                                  5-12  	tempd	stock_temp,volmap_temp,volmap_save_ptr
                                  5-13  	tempd	tmp_ev_channel,tmp_ev_message,apt_ptr,getwork_temp,delta_t
                                  5-14  	tempd	lock_volmap_temp_1,free_store_temp_1,volmap_save_sdw
                                  5-15  	temp	cmep,total_steps,temp1,temp2,volmap_temp_1,volmap_temp_2
                                  5-16  	temp	pvtx,core_add,count,entry_sw,ptp_astep,inter,devadd,errcode
                                  5-17  	temp	tmp_ring,dev_signal,before,depth,x5
                                  5-18  	temp	tmp_event,pxss_save_stack(pxss_stack_size),pxss_stackp
                                  5-19  	temp	stock_temp_1,stock_temp_2,free_store_temp,savx2_3
                                  5-20  	temp	lock_volmap_temp
                                  5-21  	temp	volmap_page_temp
                                  5-22  	tempd	free_store_start_time,post_io_start_time
                                  5-23  
                                  5-24  	temp	done_astep,volmap_page_temp_1
                                  5-25  	temp	vtocx,pageno
                                  5-26  
                                  5-27  	tempd	page_synch_temp,page_synch_time
                                  5-28  	temp	page_synch_index
                                  5-29  
                                  5-30  	temp	pc_err_type,pc_err_ptwp,pc_err_astep
                                  5-31  	tempd	pf_sdw
                                  5-32  
                                  5-33  	temp	pad(22)		" to grow compatibly
                                  5-34  "
                                  5-35  "	END INCLUDE FILE  pxss_page_stack.incl.alm
                                  5-36  "
                                    59  "
                                    60  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    61  "
                                    62  "	lock_unwired
                                    63  "
                                    64  "	call page$lock_volmap (pvtep)
                                    65  "
                                    66  "	pvtep -> PVTE
                                    67  "
                                    68  "	Returns with lock held and async state idle
                                    69  "
                                    70  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    71  
    000002                          72  lock_unwired:
    000002  aa   000300 6270 00     73  	push
    000003  aa  7 00040 2721 20
    000004  aa  0 00002 3521 20     74  	eppbp	ap|2,*			" bp -> ptr -> PVTE
    000005  aa  2 00000 3521 20     75  	eppbp	bp|0,*			" bp -> PVTE
                                    76  
    000006                          77  lock_unwired_retry:
    000006  0a   000035 7070 00     78  	tsx7	lock_wired_wait		" Try to lock lock
    000007  0a   000011 7100 00     79  	tra	lock_unwired_fails		" Didn't get it
    000010  aa  7 00042 7101 20     80  	return				" Got it
                                    81  
    000011                          82  lock_unwired_fails:
    000011  aa  6 00000 2541 00     83  	call	pxss$wait			" Wait event already set
    000012  0a   000204 3500 00
    000013  4a  4 00010 3521 20
    000014  aa  6 00040 7531 00
    000015  aa  7 00036 6701 20
    000016  aa  6 00000 1731 00
    000017  aa  6 00040 0731 00
    000020  0a   000006 7100 00     84  	tra	lock_unwired_retry		" Go for it again
                                    85  
                                    86  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    87  "
                                    88  "	unlock_unwired
                                    89  "
                                    90  "	call page$unlock_volmap (pvtep)
                                    91  "
                                    92  "	pvtep -> PVTE
                                    93  "
                                    94  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    95  
    000021                          96  unlock_unwired:
    000021  aa   000300 6270 00     97  	push
    000022  aa  7 00040 2721 20
    000023  aa  0 00002 3521 20     98  	eppbp	ap|2,*			" bp -> ptr -> PVTE
    000024  aa  2 00000 3521 20     99  	eppbp	bp|0,*			" bp -> PVTE
    000025  0a   000057 7070 00    100  	tsx7	unlock_wired
    000026  aa  7 00042 7101 20    101  	return
                                   102  "
                                   103  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   104  "
                                   105  "	lock_wired_nowait
                                   106  "
                                   107  "	tsx7	lock_volmap$lock_wired_nowait
                                   108  "	<return if failed>
                                   109  "	<return if succeed>
                                   110  "
                                   111  "	On entry,
                                   112  "	    bp -> PVTE
                                   113  "
                                   114  "	On return,
                                   115  "	    if succeeded, then lock owned by process and async state is idle
                                   116  "
                                   117  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   118  
    000027                         119  lock_wired_nowait:
                                   120  	increment	pvt$volmap_lock_nowait_calls
                                        	missing	increment,pvt$volmap_lock_nowait_calls
    000027  4a  4 00014 0541 20         	aos	pvt$volmap_lock_nowait_calls
    000030  0a   000133 7060 00    121  	tsx6	lock_try			" Attempt to lock
    000031  0a   000033 7100 00    122  	tra	lock_wired_fails		" Failed
    000032  aa   000001 7100 17    123  	tra	1,x7			" Succeeded
                                   124  
    000033                         125  lock_wired_fails:
                                   126  	increment	pvt$volmap_lock_nowait_fails
                                        	missing	increment,pvt$volmap_lock_nowait_fails
    000033  4a  4 00016 0541 20         	aos	pvt$volmap_lock_nowait_fails
    000034  aa   000000 7100 17    127  	tra	0,x7
                                   128  "
                                   129  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   130  "
                                   131  "	lock_wired_wait
                                   132  "
                                   133  "	tsx7	lock_volmap$lock_wired_wait
                                   134  "	<return if failed>
                                   135  "	<return if succeeded>
                                   136  "
                                   137  "	On entry,
                                   138  "	    bp -> PVTE
                                   139  "
                                   140  "	On return,
                                   141  "	    if succeeded, lock help by process and async state is idle
                                   142  "	    if failed, appropriate wait event is in APTE, notify switch set
                                   143  "
                                   144  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   145  
    000035                         146  lock_wired_wait:
                                   147  	increment	pvt$volmap_lock_wait_calls
                                        	missing	increment,pvt$volmap_lock_wait_calls
    000035  4a  4 00020 0541 20         	aos	pvt$volmap_lock_wait_calls
    000036  0a   000133 7060 00    148  	tsx6	lock_try			" Try to get lock
    000037  0a   000041 7100 00    149  	tra	lock_set_wait		" Failed
    000040  aa   000001 7100 17    150  	tra	1,x7			" Succeeded
                                   151  
    000041                         152  lock_set_wait:
                                   153  	increment	pvt$volmap_lock_wait_fails
                                        	missing	increment,pvt$volmap_lock_wait_fails
    000041  4a  4 00022 0541 20         	aos	pvt$volmap_lock_wait_fails
    000042  aa  6 00223 7561 00    154  	stq	lock_volmap_temp		" Notify switch bit
    000043  4a  4 00024 3501 20    155  	eppap	pds$apt_ptr,*		" ap -> APTE
    000044  aa  0 00020 7551 00    156  	sta	ap|apte.wait_event		" Set wait event
                                   157  
    000045                         158  lock_wired_retry:
    000045  aa  2 00000 2361 10    159  	ldq	bp|0,x0			" Notify switch word
    000046  aa  2 00000 2351 10    160  	lda	bp|0,x0
    000047  aa  6 00223 2751 00    161  	ora	lock_volmap_temp		" Set notify switch
    000050  aa  2 00000 6541 10    162  	stacq	bp|0,x0			" Into PVTE
    000051  0a   000045 6010 00    163  	tnz	lock_wired_retry		" Lost race, retry
                                   164  
    000052  0a   000133 7060 00    165  	tsx6	lock_try			" Try again, in case race
    000053  aa   000000 7100 17    166  	tra	0,x7			" Failed again
    000054  4a  4 00024 3501 20    167  	eppap	pds$apt_ptr,*		" Got it this time, reset wait
    000055  aa  0 00020 4501 00    168  	stz	ap|apte.wait_event
    000056  aa   000001 7100 17    169  	tra	1,x7
                                   170  "
                                   171  
                                   172  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   173  "
                                   174  "	unlock_wired
                                   175  "
                                   176  "	tsx7	lock_volmap$unlock_wired
                                   177  "
                                   178  "	On entry,
                                   179  "	    bp -> PVTE
                                   180  "
                                   181  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   182  
    000057                         183  unlock_wired:
    000057  4a  4 00026 2361 20    184  	ldq	pds$processid
    000060  aa   000000 2350 07    185  	lda	0,dl
    000061  aa  2 00026 6541 00    186  	stacq	bp|pvte.volmap_lock		" Unlock
    000062  4a  4 00030 6011 20    187  	tnz	page_error$volmap_stacq_fails
                                   188  
    000063  aa  2 00000 3505 00    189  	epbpap	bp|0			" ap -> PVT
    000064                         190  unlock_wired_retry:
    000064  aa  0 00026 2361 00    191  	ldq	ap|pvt.n_volmap_locks_held	" Meter total lock time
    000065  aa   000000 6000 17    192  	tze	0,x7			" Something wrong
    000066  aa  0 00026 2351 00    193  	lda	ap|pvt.n_volmap_locks_held
    000067  aa  6 00223 7551 00    194  	sta	lock_volmap_temp		" Save old value
    000070  aa   000001 1750 07    195  	sba	1,dl			" One fewer lock held
    000071  aa  0 00026 6541 00    196  	stacq	ap|pvt.n_volmap_locks_held	" Update
    000072  0a   000064 6010 00    197  	tnz	unlock_wired_retry		" Lost race
                                   198  
    000073  aa  0 00030 2371 00    199  	ldaq	ap|pvt.last_volmap_time	" Last lock/unlock
    000074  aa  6 00156 7571 00    200  	staq	lock_volmap_temp_1		" Save
    000075  4a  4 00032 6331 20    201  	rccl	sys_info$clock_,*		" Current time
    000076  aa  0 00030 7571 00    202  	staq	ap|pvt.last_volmap_time
    000077  aa  6 00156 1771 00    203  	sbaq	lock_volmap_temp_1		" Delta
    000100  aa  6 00223 4021 00    204  	mpy	lock_volmap_temp		" Integral
    000101  aa  0 00034 0771 00    205  	adaq	ap|pvt.total_volmap_lock_time
    000102  aa  0 00034 7571 00    206  	staq	ap|pvt.total_volmap_lock_time " Total integral
                                   207  
    000103                         208  unlock_wired_notify_retry:
    000103  aa  2 00004 2361 00    209  	ldq	bp|pvte.volmap_lock_notify_word " Check for notify
    000104  aa  2 00004 2351 00    210  	lda	bp|pvte.volmap_lock_notify_word
    000105  aa   000004 3150 07    211  	cana	pvte.volmap_lock_notify,dl
    000106  aa   000000 6000 17    212  	tze	0,x7			" Nobody to notify
    000107  aa   000004 6750 07    213  	era	pvte.volmap_lock_notify,dl	" Reset notify bit
    000110  aa  2 00004 6541 00    214  	stacq	bp|pvte.volmap_lock_notify_word " Into PVTE
    000111  0a   000103 6010 00    215  	tnz	unlock_wired_notify_retry	" Lost race
                                   216  
    000112  aa  2 00000 6351 00    217  	eaa	bp|0			" PVTE offset
    000113  aa   000022 7710 00    218  	arl	18			" Into AL
    000114  aa  2 00000 3505 00    219  	epbpap	bp|0			" ap -> PVT
    000115  aa  0 00023 2751 00    220  	ora	ap|pvt.volmap_lock_wait_constant " Event to notify
                                   221  
    000116  aa  6 00112 7551 00    222  	sta	arg+4
    000117  aa  6 00112 3501 00    223  	eppap	arg+4
    000120  aa  6 00110 2501 00    224  	spriap	arg+2
    000121  0a   000000 2370 00    225  	ldaq	notify_arg_list
    000122  aa  6 00106 7571 00    226  	staq	arg
                                   227  
    000123  aa  6 00000 2541 00    228  	call	pxss$notify(arg)
    000124  aa  6 00106 3501 00
    000125  4a  4 00012 3521 20
    000126  aa  6 00040 7531 00
    000127  aa  7 00036 6701 20
    000130  aa  6 00000 1731 00
    000131  aa  6 00040 0731 00
                                   229  
    000132  aa   000000 7100 17    230  	tra	0,x7
                                   231  
                                   232  "
                                   233  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   234  "
                                   235  "	lock_try
                                   236  "
                                   237  "	Internal procedure to attempt lock
                                   238  "
                                   239  "	tsx6	lock_try
                                   240  "	<return if fail>
                                   241  "	<return if succeed>
                                   242  "
                                   243  "	On entry,
                                   244  "	    bp -> PVTE
                                   245  "
                                   246  "	On successful return,
                                   247  "	    Lock help by process
                                   248  "	    Async state is idle
                                   249  "
                                   250  "	On failure return,
                                   251  "	    Areg contains wait event
                                   252  "	    Qreg contains notify bit
                                   253  "	    x0 is offset into PVTE of notify word
                                   254  "
                                   255  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   256  
    000133                         257  lock_try:
    000133  aa  2 00000 3505 00    258  	epbpap	bp|0			" ap -> PVT
    000134  4a  4 00026 2351 20    259  	lda	pds$processid
    000135  aa  2 00026 1151 00    260  	cmpa	bp|pvte.volmap_lock		" MYLOCK?
    000136  4a  4 00034 6001 20    261  	tze	page_error$volmap_mylock	" Yes
                                   262  
    000137  aa  2 00026 3541 00    263  	stac	bp|pvte.volmap_lock		" Go for it
    000140  0a   000147 6000 00    264  	tze	lock_try_got		" Got it
    000141  aa  2 00000 6351 00    265  	eaa	bp|0			" AU = PVTE offset
    000142  aa   000022 7710 00    266  	arl	18			" AL = PVTE offset
    000143  aa  0 00023 2751 00    267  	ora	ap|pvt.volmap_lock_wait_constant " Areg = wait event
    000144  aa   000004 2360 07    268  	ldq	pvte.volmap_lock_notify,dl	" Notify bit
    000145  aa   000004 6200 00    269  	eax0	pvte.volmap_lock_notify_word	" Notify word
    000146  aa   000000 7100 16    270  	tra	0,x6
                                   271  
    000147                         272  lock_try_got:
    000147  aa  2 00032 2201 00    273  	ldx0	bp|pvte.volmap_async_state
    000150  aa   000000 1000 03    274  	cmpx0	VOLMAP_ASYNC_IDLE,du	" Is asynchronous state idle
    000151  0a   000172 6010 00    275  	tnz	lock_try_not_idle		" No
                                   276  
    000152  aa  0 00040 0541 00    277  	aos	ap|pvt.n_volmap_locks	" Meter
    000153                         278  lock_try_retry:
    000153  aa  0 00026 2361 00    279  	ldq	ap|pvt.n_volmap_locks_held	" Meter total lock time
    000154  aa  0 00026 2351 00    280  	lda	ap|pvt.n_volmap_locks_held
    000155  aa  6 00223 7551 00    281  	sta	lock_volmap_temp		" Save old value
    000156  aa   000001 0750 07    282  	ada	1,dl			" One more lock held
    000157  aa  0 00026 6541 00    283  	stacq	ap|pvt.n_volmap_locks_held	" Update
    000160  0a   000153 6010 00    284  	tnz	lock_try_retry		" Lost race
                                   285  
    000161  aa  0 00030 2371 00    286  	ldaq	ap|pvt.last_volmap_time	" Last lock/unlock
    000162  aa  6 00156 7571 00    287  	staq	lock_volmap_temp_1		" Save
    000163  4a  4 00032 6331 20    288  	rccl	sys_info$clock_,*		" Current time
    000164  aa  0 00030 7571 00    289  	staq	ap|pvt.last_volmap_time
    000165  aa  6 00156 1771 00    290  	sbaq	lock_volmap_temp_1		" Delta
    000166  aa  6 00223 4021 00    291  	mpy	lock_volmap_temp		" Integral
    000167  aa  0 00034 0771 00    292  	adaq	ap|pvt.total_volmap_lock_time
    000170  aa  0 00034 7571 00    293  	staq	ap|pvt.total_volmap_lock_time	" Total integral
    000171  aa   000001 7100 16    294  	tra	1,x6
                                   295  
    000172                         296  lock_try_not_idle:
    000172  aa   000044 7730 00    297  	lrl	36			" Areg = 0, Qreg = processid
    000173  aa  2 00026 6541 00    298  	stacq	bp|pvte.volmap_lock		" Unlock
    000174  4a  4 00030 6011 20    299  	tnz	page_error$volmap_stacq_fails	" Bad news
                                   300  
    000175  aa  2 00000 6351 00    301  	eaa	bp|0			" AU = PVTE offset
    000176  aa   000022 7710 00    302  	arl	18			" AL = PVTE offset
    000177  aa  0 00024 2751 00    303  	ora	ap|pvt.volmap_idle_wait_constant " Areg = wait event
    000200  aa   000002 2360 07    304  	ldq	pvte.volmap_idle_notify,dl	" Notify bit
    000201  aa   000004 6200 00    305  	eax0	pvte.volmap_idle_notify_word	" Notify word
    000202  aa   000000 7100 16    306  	tra	0,x6
                                   307  
                                   308  	end
LITERALS
     
    000204  aa   000000 000000 
    000205  aa   000000 000000 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000206  5a   000003 000000 
    000207  5a   000064 600000 
    000210  aa   000000 000000 
    000211  55   000011 000002 
    000212  5a   000002 400003 
    000213  55   000006 000011 
    000214  aa  013 154 157 143
    000215  aa  153 137 166 157
    000216  aa  154 155 141 160
    000217  55   000020 000003 
    000220  0a   000057 400000 
    000221  55   000014 000003 
    000222  aa  014 165 156 154         unlock_wired
    000223  aa  157 143 153 137
    000224  aa  167 151 162 145
    000225  aa  144 000 000 000
    000226  55   000027 000011 
    000227  0a   000035 400000 
    000230  55   000023 000003 
    000231  aa  017 154 157 143         lock_wired_wait
    000232  aa  153 137 167 151
    000233  aa  162 145 144 137
    000234  aa  167 141 151 164
    000235  55   000037 000020 
    000236  0a   000027 400000 
    000237  55   000032 000003 
    000240  aa  021 154 157 143         lock_wired_nowait
    000241  aa  153 137 167 151
    000242  aa  162 145 144 137
    000243  aa  156 157 167 141
    000244  aa  151 164 000 000
    000245  55   000046 000027 
    000246  0a   000021 400000 
    000247  55   000042 000003 
    000250  aa  016 165 156 154         unlock_unwired
    000251  aa  157 143 153 137
    000252  aa  165 156 167 151
    000253  aa  162 145 144 000
    000254  55   000055 000037 
    000255  0a   000002 400000 
    000256  55   000051 000003 
    000257  aa  014 154 157 143         lock_unwired
    000260  aa  153 137 165 156
    000261  aa  167 151 162 145
    000262  aa  144 000 000 000
    000263  55   000002 000046 
    000264  6a   000000 400002 
    000265  55   000060 000003 
    000266  aa  014 163 171 155         symbol_table
    000267  aa  142 157 154 137
    000270  aa  164 141 142 154
    000271  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000272  aa   000000 000015 
    000273  5a   000011 000000 
    000274  aa   000000 000000 
    000275  aa   000000 000000 
    000276  5a   000020 000000 
    000277  5a   000037 000000 
    000300  5a   000046 000000 
    000301  5a   000027 000000 
    000302  5a   000055 000000 
    000303  aa   000000 000000 
    000304  aa   000000 000000 
    000305  aa   000000 000000 
    000306  aa   000000 000000 
    000307  aa   000000 000000 

EXTERNAL NAMES

    000310  aa  015 166 157 154         volmap_mylock
    000311  aa  155 141 160 137
    000312  aa  155 171 154 157
    000313  aa  143 153 000 000
    000314  aa  006 143 154 157         clock_
    000315  aa  143 153 137 000
    000316  aa  010 163 171 163         sys_info
    000317  aa  137 151 156 146
    000320  aa  157 000 000 000
    000321  aa  022 166 157 154         volmap_stacq_fails
    000322  aa  155 141 160 137
    000323  aa  163 164 141 143
    000324  aa  161 137 146 141
    000325  aa  151 154 163 000
    000326  aa  012 160 141 147         page_error
    000327  aa  145 137 145 162
    000330  aa  162 157 162 000
    000331  aa  011 160 162 157         processid
    000332  aa  143 145 163 163
    000333  aa  151 144 000 000
    000334  aa  007 141 160 164         apt_ptr
    000335  aa  137 160 164 162
    000336  aa  003 160 144 163         pds
    000337  aa  026 166 157 154         volmap_lock_wait_fails
    000340  aa  155 141 160 137
    000341  aa  154 157 143 153
    000342  aa  137 167 141 151
    000343  aa  164 137 146 141
    000344  aa  151 154 163 000
    000345  aa  026 166 157 154         volmap_lock_wait_calls
    000346  aa  155 141 160 137
    000347  aa  154 157 143 153
    000350  aa  137 167 141 151
    000351  aa  164 137 143 141
    000352  aa  154 154 163 000
    000353  aa  030 166 157 154         volmap_lock_nowait_fails
    000354  aa  155 141 160 137
    000355  aa  154 157 143 153
    000356  aa  137 156 157 167
    000357  aa  141 151 164 137
    000360  aa  146 141 151 154
    000361  aa  163 000 000 000
    000362  aa  030 166 157 154         volmap_lock_nowait_calls
    000363  aa  155 141 160 137
    000364  aa  154 157 143 153
    000365  aa  137 156 157 167
    000366  aa  141 151 164 137
    000367  aa  143 141 154 154
    000370  aa  163 000 000 000
    000371  aa  003 160 166 164         pvt
    000372  aa  006 156 157 164         notify
    000373  aa  151 146 171 000
    000374  aa  004 167 141 151         wait
    000375  aa  164 000 000 000
    000376  aa  004 160 170 163         pxss
    000377  aa  163 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000400  aa   000004 000000 
    000401  55   000120 000102 
    000402  aa   000004 000000 
    000403  55   000110 000106 
    000404  aa   000004 000000 
    000405  55   000120 000113 
    000406  aa   000004 000000 
    000407  55   000130 000123 
    000410  aa   000004 000000 
    000411  55   000130 000126 
    000412  aa   000004 000000 
    000413  55   000163 000131 
    000414  aa   000004 000000 
    000415  55   000163 000137 
    000416  aa   000004 000000 
    000417  55   000163 000145 
    000420  aa   000004 000000 
    000421  55   000163 000154 
    000422  aa   000004 000000 
    000423  55   000170 000164 
    000424  aa   000004 000000 
    000425  55   000170 000166 
    000426  aa   000001 000000 
    000427  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000430  5a   000172 000000 
    000431  5a   000174 000000 
    000432  5a   000176 000000 
    000433  5a   000200 000000 
    000434  5a   000202 000000 
    000435  5a   000204 000000 
    000436  5a   000206 000000 
    000437  5a   000210 000000 
    000440  5a   000212 000000 
    000441  5a   000214 000000 
    000442  5a   000216 000000 
    000443  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000206 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000036 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         pxss|wait
    000011  5a   000234 0000 00
    000012  9a   777766 0000 46         pxss|notify
    000013  5a   000233 0000 00
    000014  9a   777764 0000 46         pvt|volmap_lock_nowait_calls
    000015  5a   000232 0000 00
    000016  9a   777762 0000 46         pvt|volmap_lock_nowait_fails
    000017  5a   000231 0000 00
    000020  9a   777760 0000 46         pvt|volmap_lock_wait_calls
    000021  5a   000230 0000 00
    000022  9a   777756 0000 46         pvt|volmap_lock_wait_fails
    000023  5a   000227 0000 00
    000024  9a   777754 0000 46         pds|apt_ptr
    000025  5a   000226 0000 20
    000026  9a   777752 0000 46         pds|processid
    000027  5a   000225 0000 00
    000030  9a   777750 0000 46         page_error|volmap_stacq_fails
    000031  5a   000224 0000 00
    000032  9a   777746 0000 46         sys_info|clock_
    000033  5a   000223 0000 20
    000034  9a   777744 0000 46         page_error|volmap_mylock
    000035  5a   000222 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   243241 231635 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000257 
    000020  aa   000000 000176 
    000021  aa   000222 000213 
    000022  aa   000246 000176 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000006 
    000066  aa   000116 000042 
    000067  aa   175453 017643 
    000070  aa   000000 117547 
    000071  aa   176317 200000 
    000072  aa   000127 000032 
    000073  aa   147777 464062 
    000074  aa   000000 115000 
    000075  aa   507456 000000 
    000076  aa   000136 000037 
    000077  aa   112456 132235 
    000100  aa   000000 111250 
    000101  aa   530556 400000 
    000102  aa   000146 000031 
    000103  aa   110044 377566 
    000104  aa   000000 111005 
    000105  aa   417103 200000 
    000106  aa   000155 000032 
    000107  aa   164131 272662 
    000110  aa   000000 116416 
    000111  aa   727372 600000 
    000112  aa   000164 000045 
    000113  aa   133234 136230 
    000114  aa   000000 113324 
    000115  aa   322064 400000 
    000116  aa   076163 160145          >spec>install>1111>lock_volmap.alm
    000117  aa   143076 151156 
    000120  aa   163164 141154 
    000121  aa   154076 061061 
    000122  aa   061061 076154 
    000123  aa   157143 153137 
    000124  aa   166157 154155 
    000125  aa   141160 056141 
    000126  aa   154155 040040 
    000127  aa   076154 144144          >ldd>include>apte.incl.alm
    000130  aa   076151 156143 
    000131  aa   154165 144145 
    000132  aa   076141 160164 
    000133  aa   145056 151156 
    000134  aa   143154 056141 
    000135  aa   154155 040040 
    000136  aa   076154 144144          >ldd>include>page_info.incl.alm
    000137  aa   076151 156143 
    000140  aa   154165 144145 
    000141  aa   076160 141147 
    000142  aa   145137 151156 
    000143  aa   146157 056151 
    000144  aa   156143 154056 
    000145  aa   141154 155040 
    000146  aa   076154 144144          >ldd>include>pvt.incl.alm
    000147  aa   076151 156143 
    000150  aa   154165 144145 
    000151  aa   076160 166164 
    000152  aa   056151 156143 
    000153  aa   154056 141154 
    000154  aa   155040 040040 
    000155  aa   076154 144144          >ldd>include>pvte.incl.alm
    000156  aa   076151 156143 
    000157  aa   154165 144145 
    000160  aa   076160 166164 
    000161  aa   145056 151156 
    000162  aa   143154 056141 
    000163  aa   154155 040040 
    000164  aa   076154 144144          >ldd>include>pxss_page_stack.incl.alm
    000165  aa   076151 156143 
    000166  aa   154165 144145 
    000167  aa   076160 170163 
    000170  aa   163137 160141 
    000171  aa   147145 137163 
    000172  aa   164141 143153 
    000173  aa   056151 156143 
    000174  aa   154056 141154 
    000175  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           7    abs_wire_entry           page_info:     36.
      740000    address_mask             page_info:      9.
          42    apte.access_authorization      apte:          98.
          24    apte.alarm_event         apte:          79.
          26    apte.alarm_time          apte:          82.
          26    apte.alarm_time_thread   apte:          81.
          40    apte.always_loaded       apte:          29.
          66    apte.apad                apte:         120.
          12    apte.asteps              apte:          54.
          10    apte.batch               apte:          74.
          21    apte.batch_word          apte:          73.
          60    apte.begin_interaction_vcpu    apte:         112.
          10    apte.being_loaded        apte:          31.
           0    apte.bp                  apte:          13.
          23    apte.chans_offset        apte:          71.
          37    apte.cpu_monitor         apte:          94.
          52    apte.current_response_state    apte:         108.
          44    apte.dbr                 apte:         101.
          20    apte.dbr_loaded          apte:          30.
          34    apte.deadline            apte:          90.
         200    apte.default_procs_required    apte:          27.
          12    apte.dseg                apte:          56.
        4000    apte.eligible            apte:          23.
          10    apte.event_thread        apte:          50.
           1    apte.firstsw             apte:          34.
           1    apte.flags               apte:          15.
          21    apte.flags2              apte:          69.
           0    apte.fp                  apte:          12.
       20000    apte.hproc               apte:          21.
        2000    apte.idle                apte:          24.
        1000    apte.interaction         apte:          25.
          10    apte.ipc_pointers        apte:          49.
          65    apte.ipc_r_factor        apte:         119.
          64    apte.ipc_r_offset        apte:         118.
          11    apte.ips_message         apte:          52.
          51    apte.ittes_got           apte:         106.
          50    apte.ittes_sent          apte:         105.
          54    apte.last_response_state_time  apte:         110.
          13    apte.le_shift            apte:         126.
       10000    apte.loaded              apte:          22.
          36    apte.lock                apte:          92.
          15    apte.lock_id             apte:          63.
      400000    apte.mbz                 apte:          17.
      400000    apte.no_ipc_check        apte:          99.
          53    apte.number_processing   apte:         109.
           2    apte.page_faults         apte:          37.
           2    apte.page_wait_flag      apte:          33.
          40    apte.paging_measure      apte:          96.
          12    apte.pds                 apte:          55.
          13    apte.prds                apte:          58.
       40000    apte.pre_empted          apte:          20.
         400    apte.pre_empt_pending    apte:          26.
      400000    apte.prior_sched         apte:          70.
           3    apte.processid           apte:          39.
          63    apte.procs_required      apte:         115.
      776000    apte.procs_required_mask       apte:         116.
           7    apte.pr_tag_mask         apte:          75.
         100    apte.realtime_burst      apte:          28.
          62    apte.saved_temax         apte:         114.
          13    apte.savex7              apte:          59.
           1    apte.sentinel            apte:          16.
           4    apte.shared_stack_0      apte:          32.
      374000    apte.special_chans       apte:          72.
           1    apte.state               apte:          35.
          22    apte.state_change_time   apte:          77.
      100000    apte.stop_pending        apte:          19.
           4    apte.te                  apte:          41.
          33    apte.temax               apte:          88.
          30    apte.term_channel        apte:          84.
          14    apte.term_processid      apte:          61.
           0    apte.thread              apte:          11.
           6    apte.ti                  apte:          45.
           7    apte.timax               apte:          47.
         175    apte.timer_factor        apte:         127.
          16    apte.time_used_clock     apte:          64.
          56    apte.total_processing_time     apte:         111.
           5    apte.ts                  apte:          43.
          46    apte.virtual_cpu_time    apte:         103.
          20    apte.wait_event          lock_volmap:  156,  168,
                                         apte:          66.
      200000    apte.wakeup_waiting      apte:          18.
          21    apte.wct_index           apte:          68.
          32    apte.ws_size             apte:          86.
         150    apt_ptr                  lock_volmap:  155,  167,
                                         pxss_page_stack:     13.
         106    arg                      lock_volmap:  222,  223,  224,  226,  228,
                                         pxss_page_stack:     11.
           3    ast                      page_info:     20.
      777000    aste.csl_mask_inner      page_info:     26.
      777000    aste.records_mask_inner  page_info:     27.
         204    before                   pxss_page_stack:     17.
          10    cleanup_entry            page_info:     37.
                clock_                   lock_volmap:  201,  288.
         164    cmep                     pxss_page_stack:     15.
          12    cmep_to_coreadd.rl       page_info:     75.
           2    cmep_to_ptw.ls           page_info:     57.
           2    cmep_to_sdw.ls           page_info:     57.
      777777    coreadd_mask             page_info:     57.
          12    coreadd_to_cmep.ls       page_info:     76.
          14    coreadd_to_ptw.ls        page_info:     57.
          14    coreadd_to_sdw.ls        page_info:     57.
         173    core_add                 pxss_page_stack:     16.
         174    count                    pxss_page_stack:     16.
         154    delta_t                  pxss_page_stack:     13.
         205    depth                    pxss_page_stack:     17.
         200    devadd                   pxss_page_stack:     16.
         203    dev_signal               pxss_page_stack:     17.
           1    df1                      page_info:      7.
         232    done_astep               pxss_page_stack:     24.
         175    entry_sw                 pxss_page_stack:     16.
         201    errcode                  pxss_page_stack:     16.
           6    evict_entry              page_info:     35.
           0    fault_entry              page_info:     29.
         226    free_store_start_time    pxss_page_stack:     22.
         221    free_store_temp          pxss_page_stack:     19.
         160    free_store_temp_1        pxss_page_stack:     14.
         152    getwork_temp             pxss_page_stack:     13.
      100000    int                      page_info:     14.
         177    inter                    pxss_page_stack:     16.
          41    lock_set_wait            lock_volmap:  149,  152.
         133    lock_try                 lock_volmap:  121,  148,  165,  257.
         147    lock_try_got             lock_volmap:  264,  272.
         172    lock_try_not_idle        lock_volmap:  275,  296.
         153    lock_try_retry           lock_volmap:  278,  284.
           2    lock_unwired             lock_volmap:   38,   72.
          11    lock_unwired_fails       lock_volmap:   79,   82.
           6    lock_unwired_retry       lock_volmap:   77,   84.
         223    lock_volmap_temp         lock_volmap:  154,  161,  194,  204,  281,  291,
                                         pxss_page_stack:     20.
         156    lock_volmap_temp_1       lock_volmap:  200,  203,  287,  290,
                                         pxss_page_stack:     14.
          33    lock_wired_fails         lock_volmap:  122,  125.
          27    lock_wired_nowait        lock_volmap:   41,  119.
          45    lock_wired_retry         lock_volmap:  158,  163.
          35    lock_wired_wait          lock_volmap:   42,   78,  146.
                notify                   lock_volmap:  228.
           0    notify_arg_list          lock_volmap:   46,  225.
          50    notify_regs              pxss_page_stack:      8.
           4    no_post                  page_info:     16.
         250    pad                      pxss_page_stack:     33.
         235    pageno                   pxss_page_stack:     25.
                page_error               lock_volmap:  187,  261,  299.
          12    page_power               page_info:      6.
         242    page_synch_index         pxss_page_stack:     28.
         236    page_synch_temp          pxss_page_stack:     27.
         240    page_synch_time          pxss_page_stack:     27.
         245    pc_err_astep             pxss_page_stack:     30.
         244    pc_err_ptwp              pxss_page_stack:     30.
         243    pc_err_type              pxss_page_stack:     30.
           3    pdm                      page_info:     19.
                pds                      lock_volmap:  155,  167,  184,  259.
           5    pd_flush_entry           page_info:     34.
         246    pf_sdw                   pxss_page_stack:     31.
         230    post_io_start_time       pxss_page_stack:     22.
           4    post_purge_entry         page_info:     33.
           3    pre_page_entry           page_info:     32.
         100    pre_temp                 pxss_page_stack:     10.
          76    pre_time                 pxss_page_stack:     10.
          20    pri                      page_info:     15.
                processid                lock_volmap:  184,  259.
         176    ptp_astep                pxss_page_stack:     16.
           2    ptw                      page_info:     21.
      400000    ptw.nulled               page_info:     12.
      777760    ptw_add_mask             page_info:     57.
           2    ptw_to_cmep.rl           page_info:     57.
          24    ptw_to_cmep_lower.rl     page_info:     57.
          14    ptw_to_coreadd.rl        page_info:     57.
                pvt                      lock_volmap:  120,  126,  147,  153.
          50    pvt.array                pvt:           58.
          17    pvt.disk_table_uid       pvt:           32.
          16    pvt.disk_table_vtocx     pvt:           31.
           5    pvt.esd_state            pvt:           23.
          30    pvt.last_volmap_time     lock_volmap:  199,  202,  286,  289,
                                         pvt:           48.
          32    pvt.last_vtoc_map_time   pvt:           49.
           1    pvt.max_n_entries        pvt:           19.
           0    pvt.n_entries            pvt:           18.
           2    pvt.n_in_use             pvt:           20.
          40    pvt.n_volmap_locks       lock_volmap:  277,
                                         pvt:           52.
          26    pvt.n_volmap_locks_held  lock_volmap:  191,  193,  196,  279,  280,  283,
                                         pvt:           46.
          41    pvt.n_vtoc_map_locks     pvt:           53.
          27    pvt.n_vtoc_map_locks_held      pvt:           47.
           7    pvt.prev_esd_state       pvt:           25.
           6    pvt.prev_shutdown_state  pvt:           24.
      400000    pvt.rlv_needs_salv       pvt:           41.
          22    pvt.rlv_needs_salv_word  pvt:           40.
          12    pvt.root_lvid            pvt:           27.
          13    pvt.root_pvid            pvt:           28.
          14    pvt.root_pvtx            pvt:           29.
          15    pvt.root_vtocx           pvt:           30.
      400000    pvt.rpvs_requested       pvt:           35.
          20    pvt.rpvs_requested_word  pvt:           34.
      400000    pvt.rpv_needs_salv       pvt:           38.
          21    pvt.rpv_needs_salv_word  pvt:           37.
           3    pvt.rwun_pvtx            pvt:           21.
           4    pvt.shutdown_state       pvt:           22.
          10    pvt.time_of_bootload     pvt:           26.
          34    pvt.total_volmap_lock_time     lock_volmap:  205,  206,  292,  293,
                                               pvt:           50.
          36    pvt.total_vtoc_map_lock_time   pvt:           51.
          24    pvt.volmap_idle_wait_constant  lock_volmap:  303,
                                               pvt:           44.
          42    pvt.volmap_lock_nowait_calls   pvt:           54.
          43    pvt.volmap_lock_nowait_fails   pvt:           55.
          44    pvt.volmap_lock_wait_calls     pvt:           56.
          23    pvt.volmap_lock_wait_constant  lock_volmap:  220,  267,
                                               pvt:           43.
          45    pvt.volmap_lock_wait_fails     pvt:           57.
          25    pvt.vtoc_map_lock_wait_constant      pvt:           45.
          20    pvte.baseadd             pvte:         119.
       10000    pvte.being_demounted     pvte:          74.
         100    pvte.being_demounted2    pvte:          86.
           4    pvte.being_demounted2_word     pvte:          85.
           4    pvte.being_demounted_word      pvte:          73.
       20000    pvte.being_mounted       pvte:          72.
           4    pvte.being_mounted_word  pvte:          71.
         777    pvte.brother_pvtx_mask   pvte:          52.
          22    pvte.brother_pvtx_shift  pvte:          51.
           2    pvte.brother_pvtx_word   pvte:          50.
        4000    pvte.check_read_incomplete     pvte:          76.
           4    pvte.check_read_incomplete_word      pvte:          75.
          16    pvte.curn_dmpr_vtocx     pvte:         115.
           6    pvte.dbmrp               pvte:         103.
         200    pvte.deposit_to_volmap   pvte:          84.
           4    pvte.deposit_to_volmap_word    pvte:          83.
        2000    pvte.device_inoperative  pvte:          78.
           4    pvte.device_inoperative_word   pvte:          77.
         777    pvte.device_type_mask    pvte:          59.
          33    pvte.device_type_shift   pvte:          58.
           4    pvte.device_type_word    pvte:          57.
           3    pvte.devname             pvte:          55.
          10    pvte.dim_info            pvte:         108.
      400000    pvte.dmpr_in_use         pvte:          41.
           2    pvte.dmpr_in_use_word    pvte:          40.
          10    pvte.hc_part_used        pvte:          92.
           4    pvte.hc_part_used_word   pvte:          91.
        4000    pvte.inconsistent_dbm    pvte:          49.
           2    pvte.inconsistent_dbm_word     pvte:          48.
       40000    pvte.is_sv               pvte:          43.
           2    pvte.is_sv_word          pvte:          42.
         777    pvte.logical_area_number_mask  pvte:          62.
          22    pvte.logical_area_number_shift       pvte:          61.
           4    pvte.logical_area_number_word  pvte:          60.
           1    pvte.lvid                pvte:          38.
           7    pvte.nleft               pvte:         105.
          12    pvte.num_of_svs          pvte:         110.
           5    pvte.n_free_vtoce        pvte:         100.
          17    pvte.n_vtoce             pvte:         117.
          40    pvte.pc_vacating         pvte:          88.
           4    pvte.pc_vacating_word    pvte:          87.
      100000    pvte.permanent           pvte:          68.
           4    pvte.permanent_word      pvte:          67.
           0    pvte.pvid                pvte:          37.
          13    pvte.records_per_cyl     pvte:         111.
          14    pvte.record_factor       pvte:         112.
       10000    pvte.removable_pack      pvte:          47.
           2    pvte.removable_pack_word       pvte:          46.
       20000    pvte.root_lv             pvte:          45.
           2    pvte.root_lv_word        pvte:          44.
        1000    pvte.rpv                 pvte:          80.
           4    pvte.rpv_word            pvte:          79.
          33    pvte.scavenger_block_rel       pvte:         136.
         400    pvte.scav_check_address  pvte:          82.
           4    pvte.scav_check_address_word   pvte:          81.
           2    pvte.skip_queue_count    pvte:          53.
      200000    pvte.storage_system      pvte:          66.
           4    pvte.storage_system_word       pvte:          65.
          15    pvte.sv_name             pvte:         113.
          11    pvte.sv_num              pvte:         109.
       40000    pvte.testing             pvte:          70.
           4    pvte.testing_word        pvte:          69.
           7    pvte.totrec              pvte:         106.
      400000    pvte.used                pvte:          64.
           4    pvte.used_word           pvte:          63.
          20    pvte.vacating            pvte:          90.
           4    pvte.vacating_word       pvte:          89.
          24    pvte.volmap_astep        pvte:         122.
          32    pvte.volmap_async_page   pvte:         133.
          32    pvte.volmap_async_state  lock_volmap:  273,
                                         pvte:         132.
           2    pvte.volmap_idle_notify  lock_volmap:  304,
                                         pvte:          96.
           4    pvte.volmap_idle_notify_word   lock_volmap:  305,
                                               pvte:          95.
          26    pvte.volmap_lock         lock_volmap:  186,  260,  263,  298,
                                         pvte:         127.
           4    pvte.volmap_lock_notify  lock_volmap:  211,  213,  268,
                                         pvte:          94.
           4    pvte.volmap_lock_notify_word   lock_volmap:  209,  210,  214,  269,
                                               pvte:          93.
          25    pvte.volmap_offset       pvte:         124.
          22    pvte.volmap_seg_sdw      pvte:         121.
          30    pvte.volmap_stock_ptr    pvte:         129.
          33    pvte.vol_trouble_count   pvte:         135.
          27    pvte.vtoc_map_lock       pvte:         128.
           1    pvte.vtoc_map_lock_notify      pvte:          98.
           4    pvte.vtoc_map_lock_notify_word       pvte:          97.
          25    pvte.vtoc_map_offset     pvte:         125.
          31    pvte.vtoc_map_stock_ptr  pvte:         130.
           5    pvte.vtoc_size           pvte:         101.
          34    pvte_size                pvte:          34.
         172    pvtx                     pxss_page_stack:     16.
          52    pvt_size                 pvt:           15.
                pxss                     lock_volmap:   83,  228.
         210    pxss_save_stack          pxss_page_stack:     18.
         216    pxss_stackp              pxss_page_stack:     18.
           6    pxss_stack_size          pxss_page_stack:      5,   18.
           1    read_entry               page_info:     30.
          60    save_stack               pxss_page_stack:      9.
         222    savx2_3                  pxss_page_stack:     19.
      777760    sdw_add_mask             page_info:     57.
           2    sdw_to_cmep.rl           page_info:     57.
          14    sdw_to_coreadd.rl        page_info:     57.
         100    size_of_apt_entry        apte:         122.
           3    sst                      page_info:     18,   19,   20.
          75    stackp                   pxss_page_stack:      9.
          15    stack_size               pxss_page_stack:      6,    9.
         136    stock_temp               pxss_page_stack:     12.
         217    stock_temp_1             pxss_page_stack:     19.
         220    stock_temp_2             pxss_page_stack:     19.
                sys_info                 lock_volmap:  201,  288.
         134    temp                     pxss_page_stack:     11.
         166    temp1                    pxss_page_stack:     15.
         167    temp2                    pxss_page_stack:     15.
         207    tmp_event                pxss_page_stack:     18.
         144    tmp_ev_channel           pxss_page_stack:     13.
         146    tmp_ev_message           pxss_page_stack:     13.
         202    tmp_ring                 pxss_page_stack:     17.
         165    total_steps              pxss_page_stack:     15.
          21    unlock_unwired           lock_volmap:   39,   96.
          57    unlock_wired             lock_volmap:   43,  100,  183.
         103    unlock_wired_notify_retry      lock_volmap:  208,  215.
          64    unlock_wired_retry       lock_volmap:  190,  197.
           0    VOLMAP_ASYNC_IDLE        lock_volmap:  274,
                                         pvte:         138.
           1    VOLMAP_ASYNC_READ        pvte:         139.
           2    VOLMAP_ASYNC_WRITE       pvte:         140.
                volmap_lock_nowait_calls       lock_volmap:  120.
                volmap_lock_nowait_fails       lock_volmap:  126.
                volmap_lock_wait_calls   lock_volmap:  147.
                volmap_lock_wait_fails   lock_volmap:  153.
                volmap_mylock            lock_volmap:  261.
         224    volmap_page_temp         pxss_page_stack:     21.
         233    volmap_page_temp_1       pxss_page_stack:     24.
         142    volmap_save_ptr          pxss_page_stack:     12.
         162    volmap_save_sdw          pxss_page_stack:     14.
                volmap_stacq_fails       lock_volmap:  187,  299.
         140    volmap_temp              pxss_page_stack:     12.
         170    volmap_temp_1            pxss_page_stack:     15.
         171    volmap_temp_2            pxss_page_stack:     15.
         234    vtocx                    pxss_page_stack:     25.
                wait                     lock_volmap:   83.
           2    write_entry              page_info:     31.
         206    x5                       pxss_page_stack:     17.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
