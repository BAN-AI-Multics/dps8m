ASSEMBLY LISTING OF SEGMENT >spec>install>1110>integer_power_integer_.alm                                                                                                                           
ASSEMBLED ON:	11/11/89  0943.9 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  "	i ** j for integer i and j
                                    13  "		ldq	i
                                    14  "		epp1	j
                                    15  "		epp2	work
                                    16  "		tsp3	entry
                                    17  "
                                    18  "	Modified 770412 by PG to fix 1602 (indicators not reset before rpd)
                                    19  "	Modified 840123 by HH to work in both BFP and HFP modes.
                                    20  "
                        000000      21  	segdef	integer_power_integer_
                                    22  "
                        000000      23  	equ	i,0
                                    24  "
    000000                          25  integer_power_integer_:
    000000  aa  1 00000 2351 00     26  	lda	1|0		get j
    000001  aa  2 00000 7561 00     27  	stq	2|i
    000002  aa   000000 1160 07     28  	cmpq	0,dl		is i = 0
    000003  0a   000072 6000 00     29  	tze	test
    000004  aa   000000 1150 07     30  	cmpa	0,dl		is j = 0
    000005  0a   000055 6000 00     31  	tze	unity		j = 0 => answer = 1
    000006  0a   000061 6040 00     32  	tmi	clrt		j < 0, test i
    000007  0a   000062 7010 00     33  	tsx1	clrt+1		test i for -1
    000010  aa   000044 1150 07     34  	cmpa	36,dl		check for exponent too bit
    000011  0a   000046 6050 00     35  	tpl	bigexp		too big, unless abs(i) = 1 or 0
    000012  aa   000001 1750 07     36  	sba	1,dl
    000013  0a   000030 6000 00     37  	tze	done		j = i, answer = i
    000014  aa   000012 7350 00     38  	als	10		shift tally into position for rpdx: C(X0)0,7
    000015  aa   000005 6200 05     39  	eax0	5,al		set rpdx to terminate on all overflows or carry
    000016  aa   000000 6210 00     40  	eax1	i
    000017  aa   000043 6220 00     41  	eax2	35
    000020  aa   000044 7370 00     42  	lls	36
    000021  aa   000001 6140 04     43  	teo	1,ic		clear exponent overflow indicator
    000022  aa   000001 6170 04     44  	tov	1,ic		clear overflow indicator
                                    45  	odd
    000023  aa   000000 5602 00     46  	rpdx	0,0		repeat until overflow, carry, or tally runout
    000024  aa  2 00000 4011 11     47  	mpf	2|0,1
    000025  aa   000000 7370 12     48  	lls	0,2
    000026  0a   000032 6030 00     49  	trc	err3
    000027  aa   000044 7730 00     50  	lrl	36		result to q register
    000030  aa   000000 0760 07     51  done:	adq	0,dl		set indicators
    000031  aa  3 00000 7101 00     52  	tra	3|0
                                    53  "
    000032  aa  1 00000 2351 00     54  err3:	lda	1|0		get j, if j even, ans is o377...76
    000033  0a   000077 2360 00     55  	ldq	maxno
    000034  aa   000001 3150 07     56  	cana	1,dl		if i is +, ans is o377...76
    000035  0a   000041 6000 00     57  	tze	txtp1		if j is odd & i is (-1), ans is o400...02
    000036  aa  2 00000 2341 00     58  	szn	2|i
    000037  0a   000041 6050 00     59  	tpl	txtp1
    000040  0a   000077 3360 00     60  	lcq	maxno
    000041  aa  2 00000 7561 00     61  txtp1:	stq	2|i		err, save value to return
    000042  aa   000074 2360 07     62  	ldq	60,dl
    000043  4a  4 00010 7001 20     63  txtp2:	tsx0	<call_math_error_>|[call_math_error_]
    000044  aa  2 00000 2361 00     64  	ldq	2|i
    000045  aa  3 00000 7101 00     65  	tra	3|0
                                    66  "
    000046  aa   000007 2360 07     67  bigexp:	ldq	7,dl
    000047  4a  4 00010 7001 20     68  bigexp1:	tsx0	<call_math_error_>|[call_math_error_]
    000050  0a   000077 2360 00     69  	ldq	maxno
    000051  aa  3 00000 7101 00     70  	tra	3|0
                                    71  "
    000052  aa  2 00000 4501 00     72  err1:	stz	2|i		0 ** 0
    000053  aa   000001 2360 07     73  	ldq	1,dl
    000054  0a   000043 7100 00     74  	tra	txtp2
                                    75  "
    000055  aa   000001 2360 07     76  unity:	ldq	1,dl
    000056  aa  3 00000 7101 00     77  	tra	3|0
                                    78  "
    000057  aa   000000 2360 07     79  clear:	ldq	0,dl		return 0
    000060  aa  3 00000 7101 00     80  	tra	3|0
                                    81  "
    000061  0a   000057 6210 00     82  clrt:	eax1	clear
    000062  aa   000001 1160 07     83  	cmpq	1,dl		j < 0, if abs(i) > 1, ans = 0
    000063  0a   000055 6000 00     84  	tze	unity
    000064  0a   000100 1160 00     85  	cmpq	minus1
    000065  aa   000000 6010 11     86  	tnz	0,1
    000066  aa   000001 3150 07     87  	cana	1,dl		i = -1, ans = 1 if j even
    000067  0a   000055 6000 00     88  	tze	unity
    000070  aa   000001 3360 07     89  	lcq	1,dl
    000071  0a   000030 7100 00     90  	tra	done
                                    91  "
    000072  aa   000000 1150 07     92  test:	cmpa	0,dl		i = 0, if j = 0 error
    000073  0a   000052 6000 00     93  	tze	err1
    000074  0a   000057 6050 00     94  	tpl	clear
    000075  aa   000002 2360 07     95  	ldq	2,dl
    000076  0a   000047 7100 00     96  	tra	bigexp1
                                    97  "
    000077  aa   377777 777776      98  maxno:	oct	377777777776	avoid "noise" word
    000100  aa   777777 777777      99  minus1:	dec	-1
                                   100  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000102  5a   000003 000000 
    000103  5a   000034 600000 
    000104  aa   000000 000000 
    000105  55   000014 000002 
    000106  5a   000002 400003 
    000107  55   000006 000014 
    000110  aa  026 151 156 164
    000111  aa  145 147 145 162
    000112  aa  137 160 157 167
    000113  aa  145 162 137 151
    000114  aa  156 164 145 147
    000115  aa  145 162 137 000
    000116  55   000025 000003 
    000117  0a   000000 400000 
    000120  55   000017 000003 
    000121  aa  026 151 156 164         integer_power_integer_
    000122  aa  145 147 145 162
    000123  aa  137 160 157 167
    000124  aa  145 162 137 151
    000125  aa  156 164 145 147
    000126  aa  145 162 137 000
    000127  55   000002 000014 
    000130  6a   000000 400002 
    000131  55   000030 000003 
    000132  aa  014 163 171 155         symbol_table
    000133  aa  142 157 154 137
    000134  aa  164 141 142 154
    000135  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000136  aa   000000 000015 
    000137  aa   000000 000000 
    000140  aa   000000 000000 
    000141  aa   000000 000000 
    000142  aa   000000 000000 
    000143  aa   000000 000000 
    000144  aa   000000 000000 
    000145  5a   000025 000000 
    000146  aa   000000 000000 
    000147  aa   000000 000000 
    000150  5a   000014 000000 
    000151  aa   000000 000000 
    000152  aa   000000 000000 
    000153  aa   000000 000000 

EXTERNAL NAMES

    000154  aa  020 143 141 154         call_math_error_
    000155  aa  154 137 155 141
    000156  aa  164 150 137 145
    000157  aa  162 162 157 162
    000160  aa  137 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000161  aa   000004 000000 
    000162  55   000052 000052 
    000163  aa   000001 000000 
    000164  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000165  5a   000057 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000102 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000012 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         call_math_error_|call_math_error_
    000011  5a   000063 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   252757 531521 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000141 
    000020  aa   000000 000106 
    000021  aa   000123 000117 
    000022  aa   000133 000106 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000055 
    000067  aa   175453 017777 
    000070  aa   000000 117547 
    000071  aa   177003 400000 
    000072  aa   076163 160145          >spec>install>1110>integer_power_integer_.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061061 
    000076  aa   061060 076151 
    000077  aa   156164 145147 
    000100  aa   145162 137160 
    000101  aa   157167 145162 
    000102  aa   137151 156164 
    000103  aa   145147 145162 
    000104  aa   137056 141154 
    000105  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          46    bigexp                   integer_power_integer_:    35,   67.
          47    bigexp1                  integer_power_integer_:    68,   96.
                call_math_error_         integer_power_integer_:    63,   68.
          57    clear                    integer_power_integer_:    79,   82,   94.
          61    clrt                     integer_power_integer_:    32,   33,   82.
          30    done                     integer_power_integer_:    37,   51,   90.
          52    err1                     integer_power_integer_:    72,   93.
          32    err3                     integer_power_integer_:    49,   54.
           0    i                        integer_power_integer_:    23,   27,   40,   58,   61,   64,   72.
           0    integer_power_integer_   integer_power_integer_:    21,   25.
          77    maxno                    integer_power_integer_:    55,   60,   69,   98.
         100    minus1                   integer_power_integer_:    85,   99.
          72    test                     integer_power_integer_:    29,   92.
          41    txtp1                    integer_power_integer_:    57,   59,   61.
          43    txtp2                    integer_power_integer_:    63,   74.
          55    unity                    integer_power_integer_:    31,   76,   84,   88.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
