	COMPILATION LISTING OF SEGMENT bce_state
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1022.0 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 bce_state: proc (P_ss_info_ptr);
        9 
       10 /* Return state (collection_1_phase) for bce.  Keith Loepere, May 1984. */
       11 
       12 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
       13 
       14 dcl  P_ss_info_ptr		        ptr parameter;
       15 dcl  active_fnc_err_	        entry options (variable);
       16 dcl  active_function	        bit (1) aligned;	/* as opposed to command usage */
       17 dcl  af_return		        char (af_return_len) based (af_return_ptr) var; /* return for active function */
       18 dcl  af_return_len		        fixed bin (21);
       19 dcl  af_return_ptr		        ptr;
       20 dcl  arg_count		        fixed bin;
       21 dcl  code			        fixed bin (35);
       22 dcl  com_err_		        entry options (variable);
       23 dcl  cu_$af_return_arg_rel	        entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
       24 dcl  error		        variable entry options (variable);
       25 dcl  error_table_$not_act_fnc	        fixed bin (35) ext;
       26 dcl  ioa_			        entry options (variable);
       27 dcl  me			        char (9) init ("bce_state") static options (constant);/* program name */
       28 
       29 	ss_info_ptr = P_ss_info_ptr;
       30 	arg_list_ptr = ss_info.arg_list_ptr;
       31 	call cu_$af_return_arg_rel (arg_count, af_return_ptr, af_return_len, code, arg_list_ptr);
       32 	active_function = (code = 0);
       33 	if active_function then error = active_fnc_err_;
       34 	else error = com_err_;
       35 	if arg_count ^= 0 then do;
       36 	     call error (0, me, "Usage is: bce_state");
       37 	     return;
       38 	end;
       39 
       40 	if active_function then af_return = rtrim (COLLECTION_1_PHASE_NAMES (
       41 sys_info$collection_1_phase));
       42 	else call ioa_ ("^a", COLLECTION_1_PHASE_NAMES (sys_info$collection_1_phase));
       43 	return;
       44  /* Begin include file bce_subsystem_info_.incl.pl1 BIM 11/82 */
  1     2 
  1     3 /* format: style3 */
  1     4 
  1     5 /* Deleted unused items, Keith Loepere, 5/84 */
  1     6 
  1     7 
  1     8 /****^  HISTORY COMMENTS:
  1     9*  1) change(86-04-22,Farley), approve(86-07-18,MCR7439),
  1    10*     audit(86-10-08,Fawcett), install(86-10-20,MR12.0-1189):
  1    11*     Added request_handling_opr_aborts flag for save/restore.
  1    12*                                                   END HISTORY COMMENTS */
  1    13 
  1    14 declare	ss_info_ptr	pointer;
  1    15 declare	1 ss_info		aligned based (ss_info_ptr),
  1    16 	  2 request_table_ptr
  1    17 			pointer,
  1    18 	  2 abort_label	label,
  1    19 	  2 name		char (32) unaligned,
  1    20 	  2 arg_list_ptr	pointer,
  1    21 	  2 info_ptr	pointer,
  1    22 	  2 flags           aligned,
  1    23 	    3 forbid_semicolons bit (1) unaligned,
  1    24 	    3 request_handling_opr_aborts bit (1) unaligned;
  1    25 
  1    26 /* End include file bce_subsystem_info_ */
       44 
       45  /* BEGIN include file collection_1_phases.incl.pl1 */
  2     2 
  2     3 /* Symbolic names for the various collection1 phases.
  2     4*Keith Loepere, October 1983. */
  2     5 
  2     6 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
  2     7 
  2     8 dcl  sys_info$collection_1_phase	        fixed bin external static;
  2     9 
  2    10 dcl  EARLY_INITIALIZATION		        fixed bin init (1) static options (constant);  /* phase to find the config deck */
  2    11 dcl  BOOT_INITIALIZATION		        fixed bin init (2) static options (constant);  /* phase to setup up crash handler, bce */
  2    12 dcl  SERVICE_INITIALIZATION		        fixed bin init (3) static options (constant);  /* phase to set up for service */
  2    13 
  2    14 /* These first 3 (EARLY, BOOT and SERVICE) must be 1, 2, 3 in that order so
  2    15*programs can simply tell apart the booting phases from all others (crash or
  2    16*recovery type phases). */
  2    17 
  2    18 dcl  CRASH_INITIALIZATION		        fixed bin init (4) static options (constant);  /* phase to set up bce after crash/shut down */
  2    19 dcl  RE_EARLY_INITIALIZATION		        fixed bin init (5) static options (constant);  /* retry boot initialization given safe config to a new early level */
  2    20 dcl  BCE_CRASH_INITIALIZATION		        fixed bin init (6) static options (constant);  /* retry boot initialization to give a new boot level given a crash of bce */
  2    21 dcl  SHUT_INITIALIZATION		        fixed bin init (7) static options (constant);  /* same as boot but don't load new disk mpcs */
  2    22 
  2    23 dcl  COLLECTION_1_PHASE_NAMES		        (7) char (16) unal static options (constant) init
  2    24 				        ("early", "boot", "service", "crash", "re_early", "bce_crash", "shut");
  2    25 
  2    26 /* END include file collection_1_phases.incl.pl1 */
       45 
       46      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0826.3  bce_state.pl1                     >special_ldd>install>MR12.3-1114>bce_state.pl1
44           1    10/21/86  1251.6  bce_subsystem_info_.incl.pl1      >ldd>include>bce_subsystem_info_.incl.pl1
45           2    07/11/84  0937.3  collection_1_phases.incl.pl1      >ldd>include>collection_1_phases.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
COLLECTION_1_PHASE_NAMES        000000 constant        char(16)                 initial array packed unaligned dcl 2-23 set ref 40
                                                                                  42*
P_ss_info_ptr                          parameter       pointer                  dcl 14 ref 8 29
active_fnc_err_                 000010 constant        entry                    external dcl 15 ref 33
active_function                 000100 automatic       bit(1)                   dcl 16 set ref 32* 33 40
af_return                              based           varying char             dcl 17 set ref 40*
af_return_len                   000101 automatic       fixed bin(21,0)          dcl 18 set ref 31* 40
af_return_ptr                   000102 automatic       pointer                  dcl 19 set ref 31* 40
arg_count                       000104 automatic       fixed bin(17,0)          dcl 20 set ref 31* 35
arg_list_ptr             16            based           pointer                  level 2 dcl 1-15 set ref 30* 30 31*
code                            000105 automatic       fixed bin(35,0)          dcl 21 set ref 31* 32
com_err_                        000012 constant        entry                    external dcl 22 ref 34
cu_$af_return_arg_rel           000014 constant        entry                    external dcl 23 ref 31
error                           000106 automatic       entry variable           dcl 24 set ref 33* 34* 36
ioa_                            000016 constant        entry                    external dcl 26 ref 42
me                              000034 constant        char(9)                  initial packed unaligned dcl 27 set ref 36*
ss_info                                based           structure                level 1 dcl 1-15
ss_info_ptr                     000112 automatic       pointer                  dcl 1-14 set ref 29* 30 30 31
sys_info$collection_1_phase     000020 external static fixed bin(17,0)          dcl 2-8 ref 40 42

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
BCE_CRASH_INITIALIZATION               internal static fixed bin(17,0)          initial dcl 2-20
BOOT_INITIALIZATION                    internal static fixed bin(17,0)          initial dcl 2-11
CRASH_INITIALIZATION                   internal static fixed bin(17,0)          initial dcl 2-18
EARLY_INITIALIZATION                   internal static fixed bin(17,0)          initial dcl 2-10
RE_EARLY_INITIALIZATION                internal static fixed bin(17,0)          initial dcl 2-19
SERVICE_INITIALIZATION                 internal static fixed bin(17,0)          initial dcl 2-12
SHUT_INITIALIZATION                    internal static fixed bin(17,0)          initial dcl 2-21
error_table_$not_act_fnc               external static fixed bin(35,0)          dcl 25

NAME DECLARED BY EXPLICIT CONTEXT.
bce_state                       000055 constant        entry                    external dcl 8

NAME DECLARED BY CONTEXT OR IMPLICATION.
rtrim                                                  builtin function         ref 40

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       326         350     234         336
Length       562     234        22         176      72           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bce_state                           106 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bce_state                000100 active_function             bce_state
                         000101 af_return_len               bce_state
                         000102 af_return_ptr               bce_state
                         000104 arg_count                   bce_state
                         000105 code                        bce_state
                         000106 error                       bce_state
                         000112 ss_info_ptr                 bce_state

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              call_ent_var_desc   call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
active_fnc_err_               com_err_                      cu_$af_return_arg_rel         ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
sys_info$collection_1_phase




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      8 000052        29 000062        30 000066        31 000070        32 000106        33 000111        34 000120
     35 000125        36 000127        37 000153        40 000154        42 000211        43 000231


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
