	COMPILATION LISTING OF SEGMENT !BBBJZjXlNjpGgF
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1036.9 mst Sat
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 
       13 /* format: style3 */
       14 ast_lock_meter_seg:
       15      proc;					/* AST_LOCK_METER_SEG - Metering data for the Global AST Lock
       16*
       17*   Written November 1981 by J. Bongiovanni
       18*
       19**/
       20 
       21 /*  Automatic  */
       22 
       23 
       24 dcl	1 cdsa		aligned like cds_args;
       25 dcl	code		fixed bin (35);
       26 
       27 /*  Static  */
       28 
       29 dcl	EXCLUDE_PAD	(1) char (32) aligned int static options (constant) init ("pad*");
       30 dcl	MYNAME		char (32) int static options (constant) init ("ast_lock_meter_seg");
       31 
       32 
       33 /*  Entry  */
       34 
       35 dcl	com_err_		entry options (variable);
       36 dcl	create_data_segment_
       37 			entry (ptr, fixed bin (35));
       38 dcl	get_temp_segment_	entry (char (*), ptr, fixed bin (35));
       39 dcl	release_temp_segment_
       40 			entry (char (*), ptr, fixed bin (35));
       41 
       42 /*  Condition  */
       43 
       44 dcl	cleanup		condition;
       45 
       46 	ast_lock_meter_segp = null ();
       47 
       48 	on cleanup goto CLEAN_UP;
       49 
       50 	call get_temp_segment_ (MYNAME, ast_lock_meter_segp, code);
       51 	if code ^= 0
       52 	then do;
       53 		call com_err_ (code, MYNAME, "Getting temp segment");
       54 		return;
       55 	     end;
       56 
       57 	ast_lock_meters.n_entries = 1;
       58 	ast_lock_meters.max_n_entries = 1024;
       59 	ast_lock_meters.meters (1).caller = null ();
       60 
       61 	unspec (cdsa) = "0"b;
       62 	cdsa.sections (1).p = ast_lock_meter_segp;
       63 	cdsa.sections (1).len = currentsize (ast_lock_meters);
       64 	cdsa.sections (1).struct_name = "ast_lock_meters";
       65 
       66 	cdsa.seg_name = "ast_lock_meter_seg";
       67 	cdsa.num_exclude_names = 1;
       68 	cdsa.exclude_array_ptr = addr (EXCLUDE_PAD);
       69 
       70 	cdsa.switches.have_text = "1"b;
       71 
       72 	call create_data_segment_ (addr (cdsa), code);
       73 	if code ^= 0
       74 	then call com_err_ (code, MYNAME);
       75 
       76 CLEAN_UP:
       77 	if ast_lock_meter_segp ^= null ()
       78 	then call release_temp_segment_ (MYNAME, ast_lock_meter_segp, code);
       79 
       80 
       81 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       82 
       83 
  2     1 /*  START OF:	ast_lock_meters.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  2     2 
  2     3      dcl	   ast_lock_meter_seg$    external;
  2     4 
  2     5      dcl	   ast_lock_meter_segp    ptr;
  2     6 
  2     7      dcl	   1 ast_lock_meters      aligned based (ast_lock_meter_segp),
  2     8 	     2 n_entries	      fixed bin,
  2     9 	     2 max_n_entries      fixed bin,
  2    10 	     2 invalid	      fixed bin,
  2    11 	     2 last_locker	      fixed bin,
  2    12 	     2 last_lock_time     fixed bin (71),
  2    13 	     2 last_lock_vcpu     fixed bin (71),
  2    14 	     2 last_lock_pf	      fixed bin (35),
  2    15 	     2 meters	      (0 refer (ast_lock_meters.max_n_entries)) aligned like lock_meters;
  2    16 
  2    17      dcl	   1 lock_meters	      aligned based,
  2    18 	     2 caller	      ptr unal,
  2    19 	     2 n_calls	      fixed bin (35),
  2    20 	     2 time_locked	      fixed bin (71),
  2    21 	     2 vcpu_locked	      fixed bin (71),
  2    22 	     2 pf_locked	      fixed bin (35),
  2    23 	     2 pad	      fixed bin (35);
  2    24 	
  2    25 
  2    26 /*  END OF:	ast_lock_meters.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       85      end ast_lock_meter_seg;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0824.5  !BBBJZjXlNjpGgF.pl1               >special_ldd>install>MR12.3-1114>ast_lock_meter_seg.cds
82           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
84           2    02/02/82  2145.0  ast_lock_meters.incl.pl1          >ldd>include>ast_lock_meters.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
EXCLUDE_PAD                     000010 constant        char(32)                 initial array dcl 29 set ref 68
MYNAME                          000000 constant        char(32)                 initial packed unaligned dcl 30 set ref 50* 53* 73*
                                                                                  76*
ast_lock_meter_segp             000154 automatic       pointer                  dcl 2-5 set ref 46* 50* 57 58 59 62 63 76 76* 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7
ast_lock_meters                        based           structure                level 1 dcl 2-7 set ref 63
caller                   12            based           pointer                  array level 3 packed packed unaligned dcl 2-7 set
                                                                                  ref 59*
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000100 automatic       structure                level 1 dcl 24 set ref 61* 72 72
cleanup                         000146 stack reference condition                dcl 44 ref 48
code                            000145 automatic       fixed bin(35,0)          dcl 25 set ref 50* 51 53* 72* 73 73* 76*
com_err_                        000012 constant        entry                    external dcl 35 ref 53 73
create_data_segment_            000014 constant        entry                    external dcl 36 ref 72
exclude_array_ptr        42     000100 automatic       pointer                  level 2 dcl 24 set ref 68*
get_temp_segment_               000016 constant        entry                    external dcl 38 ref 50
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 24 set ref 70*
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 24 set ref 63*
lock_meters                            based           structure                level 1 dcl 2-17
max_n_entries             1            based           fixed bin(17,0)          level 2 dcl 2-7 set ref 58* 63 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7
meters                   12            based           structure                array level 2 dcl 2-7
n_entries                              based           fixed bin(17,0)          level 2 dcl 2-7 set ref 57*
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 24 set ref 67*
p                               000100 automatic       pointer                  array level 3 dcl 24 set ref 62*
release_temp_segment_           000020 constant        entry                    external dcl 39 ref 76
sections                        000100 automatic       structure                array level 2 dcl 24
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 24 set ref 66*
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 24 set ref 64*
switches                 44     000100 automatic       structure                level 2 dcl 24

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ast_lock_meter_seg$             000022 external static fixed bin(17,0)          dcl 2-3
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAMES DECLARED BY EXPLICIT CONTEXT.
CLEAN_UP                        000232 constant        label                    dcl 76 ref 48
ast_lock_meter_seg              000047 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 68 72 72
currentsize                                            builtin function         ref 63
null                                                   builtin function         ref 46 59 76
unspec                                                 builtin function         ref 61

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       370         414     261         400
Length      2006     261        24        1355     106           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
ast_lock_meter_seg                  140 external procedure  is an external procedure.  
on unit on line 48                   64 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
ast_lock_meter_seg       000100 cdsa                        ast_lock_meter_seg
                         000145 code                        ast_lock_meter_seg
                         000154 ast_lock_meter_segp         ast_lock_meter_seg

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          tra_ext_1           enable_op           ext_entry
int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_          get_temp_segment_             release_temp_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000046        46 000054        48 000056        50 000075        51 000116        53 000120        54 000144
     57 000145        58 000147        59 000152        61 000154        62 000157        63 000160        64 000164
     66 000167        67 000172        68 000174        70 000176        72 000200        73 000213        76 000232
     85 000257


Object Segment >special_ldd>install>MR12.3-1114>ast_lock_meter_seg
Created on 11/11/89  1037.0 mst Sat
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0   20012   20116   20126   20126
Length   21264   20012     104      10    1122       0


10 Definitions:


segname:    ast_lock_meter_seg

text|2          invalid
text|10         last_lock_pf
text|4          last_lock_time
text|6          last_lock_vcpu
text|3          last_locker
text|1          max_n_entries
text|12         meters
text|0          n_entries
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
