ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.3-1114>admin_gate_.alm                                                                                                                        
ASSEMBLED ON:	11/11/89  0955.5 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " Gate for Ring 1 Procedure which Call into Ring 0.
                                    13  " Origins lost in antiquity.
                                    14  " Modified February 1983 by Chris Jones for IOI rewrite.
                                    15  " Modified 830818 to delete (take give)_console entries... -E. A. Ranzenbach
                                    16  " Modified 831010 to add ocdcm_$console_free entry... -E. A. Ranzenbach
                                    17  " Modified January 1984 by Chris Jones to add ioi_(add delete)_device
                                    18  " Modified 07/16/84 by R. Michael Tague: changed $ips_wakeup to call
                                    19  "		tc_util$ips_wakeup instead of pxss$ips_wakeup.
                                    20  " Modified 1984-12-07 by EJ Sharpe for access audit entries
                                    21  " Modified 1985-01-21, BIM: added set_privileges and reset_privileges.
                                    22  " Modified 1985-03-11, EJSharpe: added ocdcm_reconfigure
                                    23  " Modified 1985-04-08: added admin_level_no_fs_audit
                                    24  " Modified 1985-05-08, EJSharpe: added mdir_status_priv, mdir_status_uid_priv and delete_master_dir_priv,
                                    25  "		deleted mdir_status_uid,
                                    26  "		changed target entries of delete_master_dir and decode_uidpath,
                                    27  
                                    28  	include	gate_macros
                                   1-1  " BEGIN INCLUDE FILE ...... gate_macros.incl.alm
                                   1-2  "   Last modified 6/77 by N. Morris, B. Greenberg, & T. VanVleck
                                   1-3  "   Modified 741212 by PG to inhibit while computing virtual CPU time
                                   1-4  "   Modified 83-03-14 by E. N. Kittlitz to clear IR
                                   1-5  "   Modified 83-06-01 BIM for ring alarm polling
                                   1-6  "   Modified 85-04-03 by Keith Loepere to make polling a little smarter.
                                   1-7  
                                   1-8  " This file contains several macros used when generating gate segments.
                                   1-9  " The major macros that are defined are:
                                  1-10  "
                                  1-11  "	gate_info		general setup code for normal gates
                                  1-12  "	hardcore_gate_info	general setup code for hardcore gates
                                  1-13  "	bad_dir_handler	setup and handler for bad_dir_ condition (goes at bottom)
                                  1-14  "	bad_dir_handler_entry	entrypoint for above (goes at top)
                                  1-15  "	gate		to define a normal gate
                                  1-16  "	hgate		to define a hardcore gate
                                  1-17  "	fgate		to define a fast hardcore gate
                                  1-18  "
                                  1-19  
                                  1-20  
    000000                        1-21  	maclist	off
                                  1-22  
                                  1-23  
                                  1-24  " HGATE - define a hardcore gate entry
                                  1-25  "
                                  1-26  "	hgate	gatename,procedure,entry,args{,bad_dir_trap}
                                  1-27  "
                                  1-28  " The entrypoint gatename is defined in the gate segment.  If args
                                  1-29  " is nonzero, the number of arguments passed to gatename must be
                                  1-30  " equal to args.  When gatename is called, it will in turn call
                                  1-31  " procedure$entry.
                                  1-32  "
                                  1-33  
                                  1-34  macro	hgate
                              1   1-35  	gentry	&1,&4*2,&1.t
                              2   1-36  	tsx2	.setup
                              3   1-37  &=&5,bad_dir_trap&[	tsx0	.set_dir_trap
                              4   1-38  &]	ldi	=0,dl
                              5   1-39  	short_call &2$&3(ap|0)
                              6   1-40  	eppbp	lp|&1.t
                              7   1-41  	tra	.return_code
                              8   1-42  	maclist	restore
                              9   1-43  	use	linkage
                             10   1-44  	even
                             11   1-45  	maclist	on,save
                             12   1-46  &1.t:
                             13   1-47  	bss	,gate_entry_data_size
                             14   1-48  
                             15   1-49  	maclist	restore
                             16   1-50  &end
                                  1-51  
                                  1-52  
                                  1-53  " FGATE - define a fast hardcore gate
                                  1-54  "
                                  1-55  "	fgate	gatename,procedure,entry
                                  1-56  "
                                  1-57  
                                  1-58  macro	fgate
                              1   1-59  	gentry	&1,0,0
                              2   1-60  	ldi	=0,dl
                              3   1-61  	epplp	.my_lp,*
                              4   1-62  	tra	&2$&3
                              5   1-63  
                              6   1-64  	maclist	off
                              7   1-65  &end
                                  1-66  
                                  1-67  
                                  1-68  " GATE - define a normal gate entry
                                  1-69  "
                                  1-70  "	gate	gatename,procedure,entry,args
                                  1-71  "
                                  1-72  
                                  1-73  macro	gate
                              1   1-74  	gentry	&1,&4*2,0
                              2   1-75  	tsx2	.setup
                              3   1-76  	ldi	=0,dl
                              4   1-77  	short_call &2$&3(ap|0)
                              5   1-78  	return
                              6   1-79  
                              7   1-80  	maclist	restore
                              8   1-81  &end
                                  1-82  
                                  1-83  
                                  1-84  
                                  1-85  macro	gentry
                              1   1-86  	maclist	on,save
                              2   1-87  	segdef	&1
                              3   1-88  	maclist	restore
                              4   1-89  	use	transfer_vector
                              5   1-90  	maclist	on,save
                              6   1-91  &1:
                              7   1-92  	tra	&1.e
                              8   1-93  	maclist	restore
                              9   1-94  	use	main
                             10   1-95  	maclist	on,save
                             11   1-96  	zero	&2,&3
                             12   1-97  &1.e:
                             13   1-98  &end
                                  1-99  
                                 1-100  
                                 1-101  " HARDCORE_GATE_INFO - general info for hardcore gates
                                 1-102  
                                 1-103  macro	hardcore_gate_info
                              1  1-104  	maclist	on,save
                              2  1-105  	name	&1
                              3  1-106  
                              4  1-107  	include	stack_header
                              5  1-108  
                              6  1-109  	include	stack_frame
                              7  1-110  	include	gate_data
                              8  1-111  
                              9  1-112  	maclist	restore
                             10  1-113  	eject
                             11  1-114  
                             12  1-115  	tempd	.temp
                             13  1-116  	tempd	.label_variable(0)
                             14  1-117  	tempd	.time1,.time2
                             15  1-118  	tempd	.unwinder_arglist(0)
                             16  1-119  	tempd	.on_unit(5)
                             17  1-120  	temp	.pf,.entryp
                             18  1-121  	tempd	.vfl_arglist(2)
                             19  1-122  	tempd	.mcptr
                             20  1-123  
                             21  1-124  	use	transfer_vector
                             22  1-125  	equ	.tv_begin,*
                             23  1-126  
                             24  1-127  	tra	.actor
                             25  1-128  
                             26  1-129  	use	tv_end
                             27  1-130  	entrybound
                             28  1-131  
                             29  1-132  	segdef	.tv_end
                             30  1-133  .tv_end:	vfd	14/(*-.tv_begin)
                             31  1-134  
                             32  1-135  	use	main
                             33  1-136  
                             34  1-137  	segdef	.my_lp
                             35  1-138  	even
                             36  1-139  .my_lp:	bss	,2
                             37  1-140  
                             38  1-141  	join	/text/transfer_vector,tv_end,main
                             39  1-142  
                             40  1-143  	use	linkage
                             41  1-144  	join	/link/linkage
                             42  1-145  
                             43  1-146  	use	main
                             44  1-147  
                             45  1-148  	maclist	restore
                             46  1-149  	eject
                             47  1-150  
                             48  1-151  .actor:	epplp	.my_lp,*
                             49  1-152  	maclist	restore
                             50  1-153  	gate_actor
                             51  1-154  
                             52  1-155  
                             53  1-156  
                             54  1-157  .setup:	push
                             55  1-158  	epplp	.my_lp,*
                             56  1-159  	sprilp	sp|stack_frame.lp_ptr
                             57  1-160  
                             58  1-161  	maclist	restore
                             59  1-162  	gcheck
                             60  1-163  
                             61  1-164  	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
                             62  1-165  	rccl	sys_info$clock_,*	calculate times
                             63  1-166  	sbaq	pds$cpu_time
                             64  1-167  	staq	.time1
                             65  1-168  	sbaq	pds$virtual_delta
                             66  1-169  	staq	.time2
                             67  1-170  	lda	pds$page_waits
                             68  1-171  	sta	.pf
                             69  1-172  	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
                             70  1-173  	tra	0,2
                             71  1-174  
                             72  1-175  	maclist	restore
                             73  1-176  	eject
                             74  1-177  
                             75  1-178  .return_code:
                             76  1-179  
                             77  1-180  	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
                             78  1-181  	rccl	sys_info$clock_,*	calculate times
                             79  1-182  	sbaq	pds$cpu_time
                             80  1-183  	staq	.temp
                             81  1-184  	sbaq	.time1
                             82  1-185  	adaq	bp|gate_entry_data.cpu_time
                             83  1-186  	staq	bp|gate_entry_data.cpu_time
                             84  1-187  	ldaq	.temp
                             85  1-188  	sbaq	pds$virtual_delta
                             86  1-189  	sbaq	.time2
                             87  1-190  	adaq	bp|gate_entry_data.vcpu_time
                             88  1-191  	staq	bp|gate_entry_data.vcpu_time
                             89  1-192  	lda	pds$page_waits
                             90  1-193  	sbla	.pf
                             91  1-194  	asa	bp|gate_entry_data.page_waits
                             92  1-195  	aos	bp|gate_entry_data.calls
                             93  1-196  	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
                             94  1-197  
                             95  1-198  			" Poll for ring alarms
                             96  1-199  	sra	.temp	Borrow from time calc
                             97  1-200  	szn	.temp	Zero?
                             98  1-201  	tze	.return_code_return
                             99  1-202  
                            100  1-203  	epp1	sp|stack_frame.prev_sp,*	"possible ring alarm
                            101  1-204  	epaq	pr1|stack_frame.return_ptr,*
                            102  1-205  	ana	7,dl	" ring number to which we return
                            103  1-206  	cmpa	.temp
                            104  1-207  	tpl	.ring_alarm	" ring alarm will occur
                            105  1-208  
                            106  1-209  .return_code_return:
                            107  1-210  	return
                            108  1-211  
                            109  1-212  .ring_alarm:		" perhaps we can handle without faults?
                            110  1-213  
                            111  1-214  	aos	bp|gate_entry_data.ring_alarms
                            112  1-215  	stz	.temp	" return argument for ring_alarm$poll
                            113  1-216  	ldaq	.one_arg_header
                            114  1-217  	staq	.ring_alarm_arg_list
                            115  1-218  	epp1	.temp
                            116  1-219  	spri1	.ring_alarm_arg_list+2
                            117  1-220  	eppap	.ring_alarm_arg_list
                            118  1-221  	short_call ring_alarm$poll
                            119  1-222  	szn	.temp
                            120  1-223  	tze	.return_code_return
                            121  1-224  	eppsp	sp|stack_frame.prev_sp,*
                            122  1-225  	sprisp	pds$pre_empt_poll_return          " short-return from here
                            123  1-226  	epp1	sb|stack_header.stack_begin_ptr,* " abandoning this stack frame.
                            124  1-227  	spri1	sb|stack_header.stack_end_ptr
                            125  1-228  " Leave SB as stack_0, so pxss can get to operators.
                            126  1-229  	tra	pxss$pre_empt_poll
                            127  1-230  
                            128  1-231  	tempd	.ring_alarm_arg_list(2)
                            129  1-232  	even
                            130  1-233  .one_arg_header:
                            131  1-234  	vfd	17/2,1/0,18/4
                            132  1-235  	vfd	18/0,18/0
                            133  1-236  
                            134  1-237  
                            135  1-238  	maclist	restore
                            136  1-239  	eject
                            137  1-240  	maclist	restore
                            138  1-241  &end
                                 1-242  
                                 1-243  
                                 1-244  " BAD_DIR_HANDLER - code to setup and handle bad_dir_ condition
                                 1-245  "			put this after the last hgate macro
                                 1-246  
                                 1-247  macro	bad_dir_handler
                              1  1-248  	maclist	on,save
                              2  1-249  
                              3  1-250  	include	on_unit
                              4  1-251  
                              5  1-252  	use	transfer_vector
                              6  1-253  .handler_entry:
                              7  1-254  	tra	.handler
                              8  1-255  .handler_restart_entry:
                              9  1-256  	tra	.handler_restart_point
                             10  1-257  
                             11  1-258  	use	main
                             12  1-259  .set_dir_trap:
                             13  1-260  	stx0	.entryp		save for restart
                             14  1-261  
                             15  1-262  	mlr	(),(pr),fill(000)
                             16  1-263  	desc9a	0,0
                             17  1-264  	desc9a	.on_unit,10*4
                             18  1-265  	eppbp	.bad_dir_name
                             19  1-266  	spribp	.on_unit+on_unit.name
                             20  1-267  	eppbp	.handler_entry
                             21  1-268  	spribp	.on_unit+on_unit.body
                             22  1-269  	lxl1	.bad_dir_desc
                             23  1-270  	sxl1	.on_unit+on_unit.size
                             24  1-271  	eaa	.on_unit		set up on-unit for bad_dir_
                             25  1-272  	sbla	sp|0,du		.. make rel to sp
                             26  1-273  	sta	sp|stack_frame.on_unit_rel_ptrs
                             27  1-274  	lda	stack_frame.condition_bit,dl
                             28  1-275  	orsa	sp|stack_frame.flag_word
                             29  1-276  	tra	0,0
                             30  1-277  
                             31  1-278  	string	bad_dir_
                             32  1-279  
                             33  1-280  
                             34  1-281  
                             35  1-282  .handler:	epaq	sp|0		verify that call came from ring 0
                             36  1-283  	cana	-1,dl		check ring number in AL
                             37  1-284  	tze	*+2
                             38  1-285  	zero	0		go way kid you bother me
                             39  1-286  
                             40  1-287  	push			" ok, we like the call
                             41  1-288  	epplp	.my_lp,*
                             42  1-289  	ldx0	ap|0		get display
                             43  1-290  	eppbp	ap|2,0*
                             44  1-291  	lda	bp|stack_frame.prev_sp
                             45  1-292  	cana	=o700000,dl	from another ring?
                             46  1-293  	tze	.continue_signal	if not, back to signal_
                             47  1-294  	eppap	ap|2,*		Get mcptr
                             48  1-295  	eppap	ap|0,*		..
                             49  1-296  	spriap	bp|.mcptr		.. save in gate frame
                             50  1-297  	spribp	.label_variable+2
                             51  1-298  	eppbp	.handler_restart_entry
                             52  1-299  	spribp	.label_variable
                             53  1-300  	eppbp	.label_variable
                             54  1-301  	spribp	.unwinder_arglist+2
                             55  1-302  	fld	=1b24,dl
                             56  1-303  	staq	.unwinder_arglist
                             57  1-304  	call	unwinder_$unwinder_(.unwinder_arglist)
                             58  1-305  
                             59  1-306  .continue_signal:
                             60  1-307  	lda	=o400000,du	"1"b
                             61  1-308  	sta	ap|10,*		set continue bit
                             62  1-309  	return
                             63  1-310  
                             64  1-311  .handler_restart_point:
                             65  1-312  	epaq	sp|0		check that call came from ring 0
                             66  1-313  	cana	-1,dl
                             67  1-314  	tze	*+2
                             68  1-315  	zero	1
                             69  1-316  	epplp	.my_lp,*
                             70  1-317  	lca	stack_frame.condition_bit+1,dl  Vanish on-unit
                             71  1-318  	ansa	sp|stack_frame.flag_word
                             72  1-319  	eppbp	.mcptr
                             73  1-320  	spribp	.vfl_arglist+2
                             74  1-321  	fld	=1b24,dl
                             75  1-322  	staq	.vfl_arglist
                             76  1-323  	short_call  verify_lock$verify_lock_bad_dir(.vfl_arglist)
                             77  1-324  	ldx0	.entryp
                             78  1-325  	eppap	sp|stack_frame.arg_ptr,*
                             79  1-326  	tra	0,0		retry the call
                             80  1-327  
                             81  1-328  	maclist	restore
                             82  1-329  	eject
                             83  1-330  	maclist	restore
                             84  1-331  &end
                                 1-332  
                                 1-333  
                                 1-334  " GATE_INFO - general info for non-hardcore gates
                                 1-335  
                                 1-336  macro	gate_info
                              1  1-337  	maclist	on,save
                              2  1-338  	use	transfer_vector
                              3  1-339  	tra	.actor
                              4  1-340  
                              5  1-341  	use	tv_end
                              6  1-342  	entrybound
                              7  1-343  
                              8  1-344  	use	main
                              9  1-345  	join	/text/transfer_vector,tv_end,main
                             10  1-346  
                             11  1-347  	maclist	restore
                             12  1-348  	eject
                             13  1-349  
                             14  1-350  .actor:	getlp
                             15  1-351  	maclist	restore
                             16  1-352  	gate_actor
                             17  1-353  
                             18  1-354  	maclist	restore
                             19  1-355  	eject
                             20  1-356  
                             21  1-357  .setup:	push
                             22  1-358  	getlp
                             23  1-359  	maclist	restore
                             24  1-360  	gcheck
                             25  1-361  	tra	0,2
                             26  1-362  
                             27  1-363  	maclist	restore
                             28  1-364  	eject
                             29  1-365  
                             30  1-366  	maclist	restore
                             31  1-367  &end
                                 1-368  
                                 1-369  
                                 1-370  " Macro to generate gate actor.
                                 1-371  
                                 1-372  macro	gate_actor
                              1  1-373  	maclist	on,save
                              2  1-374  	eppbp	ap|2,*
                              3  1-375  	lda	bp|-1		get length of string
                              4  1-376  	tze	.return_name	zero length => get name
                              5  1-377  
                              6  1-378  	adla	1,dl		include length of acc
                              7  1-379  	stz	ap|4,*
                              8  1-380  	tsx0	.search_defs
                              9  1-381  
                             10  1-382  	cmpc	(pr,rl),(pr,rl)	compare name
                             11  1-383  	desc9a	bp|-1(3),al
                             12  1-384  	desc9a	bb|0,al
                             13  1-385  	tnz	.next_def
                             14  1-386  
                             15  1-387  	lda	ab|1,2		return location
                             16  1-388  	arl	18
                             17  1-389  	sta	ap|4,*
                             18  1-390  
                             19  1-391  	short_return
                             20  1-392  
                             21  1-393  .return_name:
                             22  1-394  	lxl3	ap|4,*		get location
                             23  1-395  	tsx0	.search_defs
                             24  1-396  
                             25  1-397  	cmpx3	ab|1,2		compare location
                             26  1-398  	tnz	.next_def
                             27  1-399  
                             28  1-400  	lda	bb|0		get length of name
                             29  1-401  	arl	27
                             30  1-402  	sta	bp|-1		set length of varying string
                             31  1-403  	mlr	(pr,rl),(pr,rl)	return string
                             32  1-404  	desc9a	bb|0(1),al
                             33  1-405  	desc9a	bp|0,al
                             34  1-406  
                             35  1-407  	short_return
                             36  1-408  
                             37  1-409  .search_defs:
                             38  1-410  	eax2	0
                             39  1-411  	eppab	lp|0,*		ab -> defs
                             40  1-412  .defs_loop:
                             41  1-413  	lxl1	ab|1,2		get class and flags
                             42  1-414  	cmpx1	=o400000,du	must be class 0
                             43  1-415  	tnz	.next_def
                             44  1-416  
                             45  1-417  	ldx7	ab|2,2
                             46  1-418  	eppbb	ab|0,7		bb -> name
                             47  1-419  	tra	0,0		test definition
                             48  1-420  .next_def:
                             49  1-421  	ldx2	ab|0,2		chain to next def
                             50  1-422  	tnz	.defs_loop
                             51  1-423  
                             52  1-424  	short_return
                             53  1-425  
                             54  1-426  &end
                                 1-427  
                                 1-428  
                                 1-429  " Miscellaneous macros.
                                 1-430  
                                 1-431  macro	gcheck
                              1  1-432  	maclist	on,save
                              2  1-433  	ldx1	-2,2		get number of args expected
                              3  1-434  	tze	.no_gate_error	if zero, none or doesn't matter
                              4  1-435  	cmpx1	ap|0		compare against number given
                              5  1-436  	tze	.no_gate_error	args match, call procedure
                              6  1-437  
                              7  1-438  	call	signal_$signal_(signal_arglist)
                              8  1-439  	oct	0
                              9  1-440  
                             10  1-441  	even
                             11  1-442  signal_arglist:
                             12  1-443  	zero	2,4
                             13  1-444  	zero	2,0
                             14  1-445  	arg	.gate_errorname
                             15  1-446  	arg
                             16  1-447  	arg	.gate_errordesc
                             17  1-448  	arg
                             18  1-449  
                             19  1-450  	string	gate_error
                             20  1-451  
                             21  1-452  
                             22  1-453  .no_gate_error:
                             23  1-454  &end
                                 1-455  
                                 1-456  macro	string
                              1  1-457  .&1name:
                              2  1-458  	aci	"&1"
                              3  1-459  .&1desc:
                              4  1-460  	vfd	o9/525,o27/&l1
                              5  1-461  
                              6  1-462  &end
                                 1-463  
                                 1-464  macro	eject
                              1  1-465  	maclist	on,save
                              2  1-466  
                              3  1-467  &end
                                 1-468  
                                 1-469  " END INCLUDE FILE ...... gate_macros.incl.alm
                                 1-470  
                                 1-471  "  To arrange the return it wants to return, it will have to reach back  2 frames.
                                    29  
                                    30  	hardcore_gate_info	admin_gate_
    000000                              	name	admin_gate_
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        	include	stack_frame
                                   3-1  "
                                   3-2  "	BEGIN INCLUDE FILE ... stack_frame.incl.alm   6/72 RBS
                                   3-3  "
                                   3-4  " Modified: 16 Dec 1977, D. Levin - to add fio_ps_ptr
                                   3-5  " Modified:  3 Feb 1978, P. Krupp - to add run_unit_manager_bit & main_proc_bit
                                   3-6  " Modified: 21 March 1978, D. Levin - change fio_ps_ptr to support_ptr
                                   3-7  "
                        000020     3-8  	equ	stack_frame.prev_sp,16
                        000020     3-9  	equ	stack_frame.condition_word,16
                        000022    3-10  	equ	stack_frame.next_sp,18
                        000022    3-11  	equ	stack_frame.signaller_word,18
                        000024    3-12  	equ	stack_frame.return_ptr,20
                        000026    3-13  	equ	stack_frame.entry_ptr,22
                        000030    3-14  	equ	stack_frame.operator_ptr,24
                        000030    3-15  	equ	stack_frame.lp_ptr,24
                        000032    3-16  	equ	stack_frame.arg_ptr,26
                        000034    3-17  	equ	stack_frame.static_ptr,28
                        000035    3-18  	equ	stack_frame.support_ptr,29	" only used by fortran I/O
                        000036    3-19  	equ	stack_frame.on_unit_rel_ptrs,30
                        000037    3-20  	equ	stack_frame.operator_ret_ptr,31
                        000037    3-21  	equ	stack_frame.translator_id,31
                        000040    3-22  	equ	stack_frame.regs,32
                        000060    3-23  	equ	stack_frame.min_length,48
                        000020    3-24  	equ	stack_frame.flag_word,16
                        020000    3-25  	bool	stack_frame.main_proc_bit,020000	(DL)
                        010000    3-26  	bool	stack_frame.run_unit_manager,010000	(DL)
                        004000    3-27  	bool	stack_frame.signal_bit,004000		(DL)
                        002000    3-28  	bool	stack_frame.crawl_out_bit,002000	(DL)
                        001000    3-29  	bool	stack_frame.signaller_bit,001000	(DL)
                        000400    3-30  	bool	stack_frame.link_trap_bit,000400	(DL)
                        000200    3-31  	bool	stack_frame.support_bit,000200	(DL)
                        000100    3-32  	bool	stack_frame.condition_bit,000100	(DL)
                                  3-33  
                                  3-34  "
                                  3-35  "	END INCLUDE FILE  ... stack_frame.incl.alm
                                  3-36  "
                                        	include	gate_data
                                   4-1  
                                   4-2  
                                   4-3       "BEGIN INCLUDE FILE gate_data.incl.alm
                                   4-4  
                                   4-5  
                                   4-6  	"Created 11/07/83  0737.6 est Mon by convert_include_file,
                                   4-7  	"   Version of 11/07/82  1445.1 est Sun.
                                   4-8  
                                   4-9  	"Made from >user_dir_dir>Multics>Margulies>h>gate_data.incl.pl1,
                                  4-10  	"   modified 11/07/83  0737.5 est Mon
                                  4-11  
                                  4-12  "
                                  4-13  "	Structure gate_table
                                  4-14  "
                        000003    4-15  	equ	gate_table_size,3
                                  4-16  
                                  4-17  
                        000000    4-18  	equ	gate_table.entryp,0
                        000001    4-19  	equ	gate_table.entryl,1
                        000002    4-20  	equ	gate_table.datap,2
                                  4-21  
                                  4-22  "
                                  4-23  "	Structure gate_entry_data
                                  4-24  "
                        000010    4-25  	equ	gate_entry_data_size,8
                                  4-26  
                        000000    4-27  	equ	gate_entry_data.cpu_time,0	" DOUBLE
                        000002    4-28  	equ	gate_entry_data.vcpu_time,2	" DOUBLE
                        000004    4-29  	equ	gate_entry_data.page_waits,4
                        000005    4-30  	equ	gate_entry_data.calls,5
                        000006    4-31  	equ	gate_entry_data.ring_alarms,6
                                  4-32  
                                  4-33       "END INCLUDE FILE gate_data.incl.alm
                                        
                                        
                                        
                                        	tempd	.temp
                                        	tempd	.label_variable(0)
                                        	tempd	.time1,.time2
                                        	tempd	.unwinder_arglist(0)
                                        	tempd	.on_unit(5)
                                        	temp	.pf,.entryp
                                        	tempd	.vfl_arglist(2)
                                        	tempd	.mcptr
                                        
                                        	use	transfer_vector
                        000000          	equ	.tv_begin,*
                                        
    000000  0a   000106 7100 00         	tra	.actor
                                        
                                        	use	tv_end
                                        	entrybound
                                        
                        000102          	segdef	.tv_end
    000102  aa   002040 000000          .tv_end:	vfd	14/(*-.tv_begin)
                                        
                                        	use	main
                                        
                        000104          	segdef	.my_lp
                                        	even
    000104                              .my_lp:	bss	,2
                                        
                                        	join	/text/transfer_vector,tv_end,main
                                        
                                        	use	linkage
                                        	join	/link/linkage
                                        
                                        	use	main
                                        
                                        
                                        
    000106  0a   000104 3700 20         .actor:	epplp	.my_lp,*
    000107  aa  0 00002 3521 20         	eppbp	ap|2,*
    000110  aa  2 77777 2351 00         	lda	bp|-1		get length of string
    000111  0a   000125 6000 00         	tze	.return_name	zero length => get name
                                        
    000112  aa   000001 0350 07         	adla	1,dl		include length of acc
    000113  aa  0 00004 4501 20         	stz	ap|4,*
    000114  0a   000140 7000 00         	tsx0	.search_defs
                                        
    000115  aa  0 00140 1065 40         	cmpc	(pr,rl),(pr,rl)	compare name
    000116  aa   277777 600005          	desc9a	bp|-1(3),al
    000117  aa   300000 000005          	desc9a	bb|0,al
    000120  0a   000150 6010 00         	tnz	.next_def
                                        
    000121  aa  1 00001 2351 12         	lda	ab|1,2		return location
    000122  aa   000022 7710 00         	arl	18
    000123  aa  0 00004 7551 20         	sta	ap|4,*
                                        
    000124  aa  7 00044 7101 20         	short_return
                                        
    000125                              .return_name:
    000125  aa  0 00004 7231 20         	lxl3	ap|4,*		get location
    000126  0a   000140 7000 00         	tsx0	.search_defs
                                        
    000127  aa  1 00001 1031 12         	cmpx3	ab|1,2		compare location
    000130  0a   000150 6010 00         	tnz	.next_def
                                        
    000131  aa  3 00000 2351 00         	lda	bb|0		get length of name
    000132  aa   000033 7710 00         	arl	27
    000133  aa  2 77777 7551 00         	sta	bp|-1		set length of varying string
    000134  aa  0 00140 1005 40         	mlr	(pr,rl),(pr,rl)	return string
    000135  aa   300000 200005          	desc9a	bb|0(1),al
    000136  aa   200000 000005          	desc9a	bp|0,al
                                        
    000137  aa  7 00044 7101 20         	short_return
                                        
    000140                              .search_defs:
    000140  aa   000000 6220 00         	eax2	0
    000141  aa  4 00000 3515 20         	eppab	lp|0,*		ab -> defs
    000142                              .defs_loop:
    000142  aa  1 00001 7211 12         	lxl1	ab|1,2		get class and flags
    000143  aa   400000 1010 03         	cmpx1	=o400000,du	must be class 0
    000144  0a   000150 6010 00         	tnz	.next_def
                                        
    000145  aa  1 00002 2271 12         	ldx7	ab|2,2
    000146  aa  1 00000 3535 17         	eppbb	ab|0,7		bb -> name
    000147  aa   000000 7100 10         	tra	0,0		test definition
    000150                              .next_def:
    000150  aa  1 00000 2221 12         	ldx2	ab|0,2		chain to next def
    000151  0a   000142 6010 00         	tnz	.defs_loop
                                        
    000152  aa  7 00044 7101 20         	short_return
                                        
                                        
                                        
                                        
    000153  aa   000120 6270 00         .setup:	push
    000154  aa  7 00040 2721 20
    000155  0a   000104 3700 20         	epplp	.my_lp,*
    000156  aa  6 00030 6501 00         	sprilp	sp|stack_frame.lp_ptr
                                        
    000157  aa   777776 2210 12         	ldx1	-2,2		get number of args expected
    000160  0a   000206 6000 00         	tze	.no_gate_error	if zero, none or doesn't matter
    000161  aa  0 00000 1011 00         	cmpx1	ap|0		compare against number given
    000162  0a   000206 6000 00         	tze	.no_gate_error	args match, call procedure
                                        
    000163  aa  6 00000 2541 00         	call	signal_$signal_(signal_arglist)
    000164  0a   000174 3500 00
    000165  4a  4 00770 3521 20
    000166  aa  6 00040 7531 00
    000167  aa  7 00036 6701 20
    000170  aa  6 00000 1731 00
    000171  aa  6 00040 0731 00
    000172  aa   000000 000000          	oct	0
                                        
    000173  aa   000000 0110 03         	even
    000174                              signal_arglist:
    000174  aa   000002 000004          	zero	2,4
    000175  aa   000002 000000          	zero	2,0
    000176  0a   000202 0000 00         	arg	.gate_errorname
    000177  aa   000000 0000 00         	arg
    000200  0a   000205 0000 00         	arg	.gate_errordesc
    000201  aa   000000 0000 00         	arg
                                        
                                        	string	gate_error
    000202                              .gate_errorname:
    000202  aa  147 141 164 145         	aci	"gate_error"
    000203  aa  137 145 162 162
    000204  aa  157 162 000 000
    000205                              .gate_errordesc:
    000205  aa   525000 000010          	vfd	o9/525,o27/10
                                        
                                        
                                        
    000206                              .no_gate_error:
                                        
    000206                              	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
    000206  4a  4 00774 6333 20         	rccl	sys_info$clock_,*	calculate times
    000207  4a  4 00776 1773 20         	sbaq	pds$cpu_time
    000210  aa  6 00052 7573 00         	staq	.time1
    000211  4a  4 01000 1773 20         	sbaq	pds$virtual_delta
    000212  aa  6 00054 7573 00         	staq	.time2
    000213  4a  4 01002 2353 20         	lda	pds$page_waits
    000214  aa  6 00070 7553 00         	sta	.pf
    000215                              	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
    000215  aa   000000 7100 12         	tra	0,2
                                        
                                        
                                        
    000216                              .return_code:
                                        
    000216                              	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
    000216  4a  4 00774 6333 20         	rccl	sys_info$clock_,*	calculate times
    000217  4a  4 00776 1773 20         	sbaq	pds$cpu_time
    000220  aa  6 00050 7573 00         	staq	.temp
    000221  aa  6 00052 1773 00         	sbaq	.time1
    000222  aa  2 00000 0773 00         	adaq	bp|gate_entry_data.cpu_time
    000223  aa  2 00000 7573 00         	staq	bp|gate_entry_data.cpu_time
    000224  aa  6 00050 2373 00         	ldaq	.temp
    000225  4a  4 01000 1773 20         	sbaq	pds$virtual_delta
    000226  aa  6 00054 1773 00         	sbaq	.time2
    000227  aa  2 00002 0773 00         	adaq	bp|gate_entry_data.vcpu_time
    000230  aa  2 00002 7573 00         	staq	bp|gate_entry_data.vcpu_time
    000231  4a  4 01002 2353 20         	lda	pds$page_waits
    000232  aa  6 00070 1353 00         	sbla	.pf
    000233  aa  2 00004 0553 00         	asa	bp|gate_entry_data.page_waits
    000234  aa  2 00005 0543 00         	aos	bp|gate_entry_data.calls
    000235                              	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
                                        
                                        			" Poll for ring alarms
    000235  aa  6 00050 7545 00         	sra	.temp	Borrow from time calc
    000236  aa  6 00050 2341 00         	szn	.temp	Zero?
    000237  0a   000245 6000 00         	tze	.return_code_return
                                        
    000240  aa  6 00020 3515 20         	epp1	sp|stack_frame.prev_sp,*	"possible ring alarm
    000241  aa  1 00024 2131 20         	epaq	pr1|stack_frame.return_ptr,*
    000242  aa   000007 3750 07         	ana	7,dl	" ring number to which we return
    000243  aa  6 00050 1151 00         	cmpa	.temp
    000244  0a   000246 6050 00         	tpl	.ring_alarm	" ring alarm will occur
                                        
    000245                              .return_code_return:
    000245  aa  7 00042 7101 20         	return
                                        
    000246                              .ring_alarm:		" perhaps we can handle without faults?
                                        
    000246  aa  2 00006 0541 00         	aos	bp|gate_entry_data.ring_alarms
    000247  aa  6 00050 4501 00         	stz	.temp	" return argument for ring_alarm$poll
    000250  0a   000270 2370 00         	ldaq	.one_arg_header
    000251  aa  6 00100 7571 00         	staq	.ring_alarm_arg_list
    000252  aa  6 00050 3515 00         	epp1	.temp
    000253  aa  6 00102 2515 00         	spri1	.ring_alarm_arg_list+2
    000254  aa  6 00100 3501 00         	eppap	.ring_alarm_arg_list
    000255  4a  4 01004 3521 20         	short_call ring_alarm$poll
    000256  aa  7 00036 6701 20
    000257  aa  6 00030 3701 20
    000260  aa  6 00050 2341 00         	szn	.temp
    000261  0a   000245 6000 00         	tze	.return_code_return
    000262  aa  6 00020 3721 20         	eppsp	sp|stack_frame.prev_sp,*
    000263  4a  4 01006 6521 20         	sprisp	pds$pre_empt_poll_return          " short-return from here
    000264  aa  7 00022 3515 20         	epp1	sb|stack_header.stack_begin_ptr,* " abandoning this stack frame.
    000265  aa  7 00024 2515 00         	spri1	sb|stack_header.stack_end_ptr
                                        " Leave SB as stack_0, so pxss can get to operators.
    000266  4a  4 01010 7101 20         	tra	pxss$pre_empt_poll
                                        
                                        	tempd	.ring_alarm_arg_list(2)
    000267  aa   000000 0110 03         	even
    000270                              .one_arg_header:
    000270  aa   000004 000004          	vfd	17/2,1/0,18/4
    000271  aa   000000 000000          	vfd	18/0,18/0
                                        
                                        
                                        
                                    31  
                                    32  "	The following "acc_aud_*" entries are to be referenced only
                                    33  "		through the "access_audit_r1_$*" transfer vector entries
                                    34  	hgate	acc_aud_ck_general,access_audit_,check_general,3
                        000001          	segdef	acc_aud_ck_general
    000001                              acc_aud_ck_general:
    000001  0a   000273 7100 00         	tra	acc_aud_ck_general.e
    000272  a8   000006 000010          	zero	3*2,acc_aud_ck_general.t
    000273                              acc_aud_ck_general.e:
    000273  0a   000153 7020 00         	tsx2	.setup
    000274  aa   000000 6340 07         	ldi	=0,dl
    000275  4a  4 01012 3521 20         	short_call access_audit_$check_general(ap|0)
    000276  aa  7 00036 6701 20
    000277  aa  6 00030 3701 20
    000300  9a  4 00010 3521 00         	eppbp	lp|acc_aud_ck_general.t
    000301  0a   000216 7100 00         	tra	.return_code
    000010                              acc_aud_ck_general.t:
    000010                              	bss	,gate_entry_data_size
                                        
                                    35  	hgate	acc_aud_ck_general_user,access_audit_,check_general_user,5
                        000002          	segdef	acc_aud_ck_general_user
    000002                              acc_aud_ck_general_user:
    000002  0a   000303 7100 00         	tra	acc_aud_ck_general_user.e
    000302  a8   000012 000020          	zero	5*2,acc_aud_ck_general_user.t
    000303                              acc_aud_ck_general_user.e:
    000303  0a   000153 7020 00         	tsx2	.setup
    000304  aa   000000 6340 07         	ldi	=0,dl
    000305  4a  4 01014 3521 20         	short_call access_audit_$check_general_user(ap|0)
    000306  aa  7 00036 6701 20
    000307  aa  6 00030 3701 20
    000310  9a  4 00020 3521 00         	eppbp	lp|acc_aud_ck_general_user.t
    000311  0a   000216 7100 00         	tra	.return_code
    000020                              acc_aud_ck_general_user.t:
    000020                              	bss	,gate_entry_data_size
                                        
                                    36  	hgate	acc_aud_ck_class_range,access_audit_,check_obj_class_range,4
                        000003          	segdef	acc_aud_ck_class_range
    000003                              acc_aud_ck_class_range:
    000003  0a   000313 7100 00         	tra	acc_aud_ck_class_range.e
    000312  a8   000010 000030          	zero	4*2,acc_aud_ck_class_range.t
    000313                              acc_aud_ck_class_range.e:
    000313  0a   000153 7020 00         	tsx2	.setup
    000314  aa   000000 6340 07         	ldi	=0,dl
    000315  4a  4 01016 3521 20         	short_call access_audit_$check_obj_class_range(ap|0)
    000316  aa  7 00036 6701 20
    000317  aa  6 00030 3701 20
    000320  9a  4 00030 3521 00         	eppbp	lp|acc_aud_ck_class_range.t
    000321  0a   000216 7100 00         	tra	.return_code
    000030                              acc_aud_ck_class_range.t:
    000030                              	bss	,gate_entry_data_size
                                        
                                    37  	hgate	acc_aud_ck_class_range_user,access_audit_,check_obj_class_range_user,6
                        000004          	segdef	acc_aud_ck_class_range_user
    000004                              acc_aud_ck_class_range_user:
    000004  0a   000323 7100 00         	tra	acc_aud_ck_class_range_user.e
    000322  a8   000014 000040          	zero	6*2,acc_aud_ck_class_range_user.t
    000323                              acc_aud_ck_class_range_user.e:
    000323  0a   000153 7020 00         	tsx2	.setup
    000324  aa   000000 6340 07         	ldi	=0,dl
    000325  4a  4 01020 3521 20         	short_call access_audit_$check_obj_class_range_user(ap|0)
    000326  aa  7 00036 6701 20
    000327  aa  6 00030 3701 20
    000330  9a  4 00040 3521 00         	eppbp	lp|acc_aud_ck_class_range_user.t
    000331  0a   000216 7100 00         	tra	.return_code
    000040                              acc_aud_ck_class_range_user.t:
    000040                              	bss	,gate_entry_data_size
                                        
                                    38  	hgate	acc_aud_ck_class,access_audit_,check_obj_class,4
                        000005          	segdef	acc_aud_ck_class
    000005                              acc_aud_ck_class:
    000005  0a   000333 7100 00         	tra	acc_aud_ck_class.e
    000332  a8   000010 000050          	zero	4*2,acc_aud_ck_class.t
    000333                              acc_aud_ck_class.e:
    000333  0a   000153 7020 00         	tsx2	.setup
    000334  aa   000000 6340 07         	ldi	=0,dl
    000335  4a  4 01022 3521 20         	short_call access_audit_$check_obj_class(ap|0)
    000336  aa  7 00036 6701 20
    000337  aa  6 00030 3701 20
    000340  9a  4 00050 3521 00         	eppbp	lp|acc_aud_ck_class.t
    000341  0a   000216 7100 00         	tra	.return_code
    000050                              acc_aud_ck_class.t:
    000050                              	bss	,gate_entry_data_size
                                        
                                    39  	hgate	acc_aud_ck_class_user,access_audit_,check_obj_class_user,6
                        000006          	segdef	acc_aud_ck_class_user
    000006                              acc_aud_ck_class_user:
    000006  0a   000343 7100 00         	tra	acc_aud_ck_class_user.e
    000342  a8   000014 000060          	zero	6*2,acc_aud_ck_class_user.t
    000343                              acc_aud_ck_class_user.e:
    000343  0a   000153 7020 00         	tsx2	.setup
    000344  aa   000000 6340 07         	ldi	=0,dl
    000345  4a  4 01024 3521 20         	short_call access_audit_$check_obj_class_user(ap|0)
    000346  aa  7 00036 6701 20
    000347  aa  6 00030 3701 20
    000350  9a  4 00060 3521 00         	eppbp	lp|acc_aud_ck_class_user.t
    000351  0a   000216 7100 00         	tra	.return_code
    000060                              acc_aud_ck_class_user.t:
    000060                              	bss	,gate_entry_data_size
                                        
                                    40  	hgate	acc_aud_ck_path,access_audit_,check_obj_path,4,bad_dir_trap
                        000007          	segdef	acc_aud_ck_path
    000007                              acc_aud_ck_path:
    000007  0a   000353 7100 00         	tra	acc_aud_ck_path.e
    000352  a8   000010 000070          	zero	4*2,acc_aud_ck_path.t
    000353                              acc_aud_ck_path.e:
    000353  0a   000153 7020 00         	tsx2	.setup
    000354  0a   001300 7000 00         	tsx0	.set_dir_trap
    000355  aa   000000 6340 07         	ldi	=0,dl
    000356  4a  4 01026 3521 20         	short_call access_audit_$check_obj_path(ap|0)
    000357  aa  7 00036 6701 20
    000360  aa  6 00030 3701 20
    000361  9a  4 00070 3521 00         	eppbp	lp|acc_aud_ck_path.t
    000362  0a   000216 7100 00         	tra	.return_code
    000070                              acc_aud_ck_path.t:
    000070                              	bss	,gate_entry_data_size
                                        
                                    41  	hgate	acc_aud_ck_path_user,access_audit_,check_obj_path_user,6,bad_dir_trap
                        000010          	segdef	acc_aud_ck_path_user
    000010                              acc_aud_ck_path_user:
    000010  0a   000364 7100 00         	tra	acc_aud_ck_path_user.e
    000363  a8   000014 000100          	zero	6*2,acc_aud_ck_path_user.t
    000364                              acc_aud_ck_path_user.e:
    000364  0a   000153 7020 00         	tsx2	.setup
    000365  0a   001300 7000 00         	tsx0	.set_dir_trap
    000366  aa   000000 6340 07         	ldi	=0,dl
    000367  4a  4 01030 3521 20         	short_call access_audit_$check_obj_path_user(ap|0)
    000370  aa  7 00036 6701 20
    000371  aa  6 00030 3701 20
    000372  9a  4 00100 3521 00         	eppbp	lp|acc_aud_ck_path_user.t
    000373  0a   000216 7100 00         	tra	.return_code
    000100                              acc_aud_ck_path_user.t:
    000100                              	bss	,gate_entry_data_size
                                        
                                    42  	hgate	acc_aud_ck_ptr,access_audit_,check_obj_ptr,4,bad_dir_trap
                        000011          	segdef	acc_aud_ck_ptr
    000011                              acc_aud_ck_ptr:
    000011  0a   000375 7100 00         	tra	acc_aud_ck_ptr.e
    000374  a8   000010 000110          	zero	4*2,acc_aud_ck_ptr.t
    000375                              acc_aud_ck_ptr.e:
    000375  0a   000153 7020 00         	tsx2	.setup
    000376  0a   001300 7000 00         	tsx0	.set_dir_trap
    000377  aa   000000 6340 07         	ldi	=0,dl
    000400  4a  4 01032 3521 20         	short_call access_audit_$check_obj_ptr(ap|0)
    000401  aa  7 00036 6701 20
    000402  aa  6 00030 3701 20
    000403  9a  4 00110 3521 00         	eppbp	lp|acc_aud_ck_ptr.t
    000404  0a   000216 7100 00         	tra	.return_code
    000110                              acc_aud_ck_ptr.t:
    000110                              	bss	,gate_entry_data_size
                                        
                                    43  	hgate	acc_aud_ck_ptr_user,access_audit_,check_obj_ptr_user,6,bad_dir_trap
                        000012          	segdef	acc_aud_ck_ptr_user
    000012                              acc_aud_ck_ptr_user:
    000012  0a   000406 7100 00         	tra	acc_aud_ck_ptr_user.e
    000405  a8   000014 000120          	zero	6*2,acc_aud_ck_ptr_user.t
    000406                              acc_aud_ck_ptr_user.e:
    000406  0a   000153 7020 00         	tsx2	.setup
    000407  0a   001300 7000 00         	tsx0	.set_dir_trap
    000410  aa   000000 6340 07         	ldi	=0,dl
    000411  4a  4 01034 3521 20         	short_call access_audit_$check_obj_ptr_user(ap|0)
    000412  aa  7 00036 6701 20
    000413  aa  6 00030 3701 20
    000414  9a  4 00120 3521 00         	eppbp	lp|acc_aud_ck_ptr_user.t
    000415  0a   000216 7100 00         	tra	.return_code
    000120                              acc_aud_ck_ptr_user.t:
    000120                              	bss	,gate_entry_data_size
                                        
                                    44  	hgate	acc_aud_lg_general,access_audit_,log_general,0
                        000013          	segdef	acc_aud_lg_general
    000013                              acc_aud_lg_general:
    000013  0a   000417 7100 00         	tra	acc_aud_lg_general.e
    000416  a8   000000 000130          	zero	0*2,acc_aud_lg_general.t
    000417                              acc_aud_lg_general.e:
    000417  0a   000153 7020 00         	tsx2	.setup
    000420  aa   000000 6340 07         	ldi	=0,dl
    000421  4a  4 01036 3521 20         	short_call access_audit_$log_general(ap|0)
    000422  aa  7 00036 6701 20
    000423  aa  6 00030 3701 20
    000424  9a  4 00130 3521 00         	eppbp	lp|acc_aud_lg_general.t
    000425  0a   000216 7100 00         	tra	.return_code
    000130                              acc_aud_lg_general.t:
    000130                              	bss	,gate_entry_data_size
                                        
                                    45  	hgate	acc_aud_lg_general_user,access_audit_,log_general_user,0
                        000014          	segdef	acc_aud_lg_general_user
    000014                              acc_aud_lg_general_user:
    000014  0a   000427 7100 00         	tra	acc_aud_lg_general_user.e
    000426  a8   000000 000140          	zero	0*2,acc_aud_lg_general_user.t
    000427                              acc_aud_lg_general_user.e:
    000427  0a   000153 7020 00         	tsx2	.setup
    000430  aa   000000 6340 07         	ldi	=0,dl
    000431  4a  4 01040 3521 20         	short_call access_audit_$log_general_user(ap|0)
    000432  aa  7 00036 6701 20
    000433  aa  6 00030 3701 20
    000434  9a  4 00140 3521 00         	eppbp	lp|acc_aud_lg_general_user.t
    000435  0a   000216 7100 00         	tra	.return_code
    000140                              acc_aud_lg_general_user.t:
    000140                              	bss	,gate_entry_data_size
                                        
                                    46  	hgate	acc_aud_lg_class_range,access_audit_,log_obj_class_range,0
                        000015          	segdef	acc_aud_lg_class_range
    000015                              acc_aud_lg_class_range:
    000015  0a   000437 7100 00         	tra	acc_aud_lg_class_range.e
    000436  a8   000000 000150          	zero	0*2,acc_aud_lg_class_range.t
    000437                              acc_aud_lg_class_range.e:
    000437  0a   000153 7020 00         	tsx2	.setup
    000440  aa   000000 6340 07         	ldi	=0,dl
    000441  4a  4 01042 3521 20         	short_call access_audit_$log_obj_class_range(ap|0)
    000442  aa  7 00036 6701 20
    000443  aa  6 00030 3701 20
    000444  9a  4 00150 3521 00         	eppbp	lp|acc_aud_lg_class_range.t
    000445  0a   000216 7100 00         	tra	.return_code
    000150                              acc_aud_lg_class_range.t:
    000150                              	bss	,gate_entry_data_size
                                        
                                    47  	hgate	acc_aud_lg_class_range_user,access_audit_,log_obj_class_range_user,0
                        000016          	segdef	acc_aud_lg_class_range_user
    000016                              acc_aud_lg_class_range_user:
    000016  0a   000447 7100 00         	tra	acc_aud_lg_class_range_user.e
    000446  a8   000000 000160          	zero	0*2,acc_aud_lg_class_range_user.t
    000447                              acc_aud_lg_class_range_user.e:
    000447  0a   000153 7020 00         	tsx2	.setup
    000450  aa   000000 6340 07         	ldi	=0,dl
    000451  4a  4 01044 3521 20         	short_call access_audit_$log_obj_class_range_user(ap|0)
    000452  aa  7 00036 6701 20
    000453  aa  6 00030 3701 20
    000454  9a  4 00160 3521 00         	eppbp	lp|acc_aud_lg_class_range_user.t
    000455  0a   000216 7100 00         	tra	.return_code
    000160                              acc_aud_lg_class_range_user.t:
    000160                              	bss	,gate_entry_data_size
                                        
                                    48  	hgate	acc_aud_lg_class,access_audit_,log_obj_class,0
                        000017          	segdef	acc_aud_lg_class
    000017                              acc_aud_lg_class:
    000017  0a   000457 7100 00         	tra	acc_aud_lg_class.e
    000456  a8   000000 000170          	zero	0*2,acc_aud_lg_class.t
    000457                              acc_aud_lg_class.e:
    000457  0a   000153 7020 00         	tsx2	.setup
    000460  aa   000000 6340 07         	ldi	=0,dl
    000461  4a  4 01046 3521 20         	short_call access_audit_$log_obj_class(ap|0)
    000462  aa  7 00036 6701 20
    000463  aa  6 00030 3701 20
    000464  9a  4 00170 3521 00         	eppbp	lp|acc_aud_lg_class.t
    000465  0a   000216 7100 00         	tra	.return_code
    000170                              acc_aud_lg_class.t:
    000170                              	bss	,gate_entry_data_size
                                        
                                    49  	hgate	acc_aud_lg_class_user,access_audit_,log_obj_class_user,0
                        000020          	segdef	acc_aud_lg_class_user
    000020                              acc_aud_lg_class_user:
    000020  0a   000467 7100 00         	tra	acc_aud_lg_class_user.e
    000466  a8   000000 000200          	zero	0*2,acc_aud_lg_class_user.t
    000467                              acc_aud_lg_class_user.e:
    000467  0a   000153 7020 00         	tsx2	.setup
    000470  aa   000000 6340 07         	ldi	=0,dl
    000471  4a  4 01050 3521 20         	short_call access_audit_$log_obj_class_user(ap|0)
    000472  aa  7 00036 6701 20
    000473  aa  6 00030 3701 20
    000474  9a  4 00200 3521 00         	eppbp	lp|acc_aud_lg_class_user.t
    000475  0a   000216 7100 00         	tra	.return_code
    000200                              acc_aud_lg_class_user.t:
    000200                              	bss	,gate_entry_data_size
                                        
                                    50  	hgate	acc_aud_lg_path,access_audit_,log_obj_path,0,bad_dir_trap
                        000021          	segdef	acc_aud_lg_path
    000021                              acc_aud_lg_path:
    000021  0a   000477 7100 00         	tra	acc_aud_lg_path.e
    000476  a8   000000 000210          	zero	0*2,acc_aud_lg_path.t
    000477                              acc_aud_lg_path.e:
    000477  0a   000153 7020 00         	tsx2	.setup
    000500  0a   001300 7000 00         	tsx0	.set_dir_trap
    000501  aa   000000 6340 07         	ldi	=0,dl
    000502  4a  4 01052 3521 20         	short_call access_audit_$log_obj_path(ap|0)
    000503  aa  7 00036 6701 20
    000504  aa  6 00030 3701 20
    000505  9a  4 00210 3521 00         	eppbp	lp|acc_aud_lg_path.t
    000506  0a   000216 7100 00         	tra	.return_code
    000210                              acc_aud_lg_path.t:
    000210                              	bss	,gate_entry_data_size
                                        
                                    51  	hgate	acc_aud_lg_path_user,access_audit_,log_obj_path_user,0,bad_dir_trap
                        000022          	segdef	acc_aud_lg_path_user
    000022                              acc_aud_lg_path_user:
    000022  0a   000510 7100 00         	tra	acc_aud_lg_path_user.e
    000507  a8   000000 000220          	zero	0*2,acc_aud_lg_path_user.t
    000510                              acc_aud_lg_path_user.e:
    000510  0a   000153 7020 00         	tsx2	.setup
    000511  0a   001300 7000 00         	tsx0	.set_dir_trap
    000512  aa   000000 6340 07         	ldi	=0,dl
    000513  4a  4 01054 3521 20         	short_call access_audit_$log_obj_path_user(ap|0)
    000514  aa  7 00036 6701 20
    000515  aa  6 00030 3701 20
    000516  9a  4 00220 3521 00         	eppbp	lp|acc_aud_lg_path_user.t
    000517  0a   000216 7100 00         	tra	.return_code
    000220                              acc_aud_lg_path_user.t:
    000220                              	bss	,gate_entry_data_size
                                        
                                    52  	hgate	acc_aud_lg_ptr,access_audit_,log_obj_ptr,0,bad_dir_trap
                        000023          	segdef	acc_aud_lg_ptr
    000023                              acc_aud_lg_ptr:
    000023  0a   000521 7100 00         	tra	acc_aud_lg_ptr.e
    000520  a8   000000 000230          	zero	0*2,acc_aud_lg_ptr.t
    000521                              acc_aud_lg_ptr.e:
    000521  0a   000153 7020 00         	tsx2	.setup
    000522  0a   001300 7000 00         	tsx0	.set_dir_trap
    000523  aa   000000 6340 07         	ldi	=0,dl
    000524  4a  4 01056 3521 20         	short_call access_audit_$log_obj_ptr(ap|0)
    000525  aa  7 00036 6701 20
    000526  aa  6 00030 3701 20
    000527  9a  4 00230 3521 00         	eppbp	lp|acc_aud_lg_ptr.t
    000530  0a   000216 7100 00         	tra	.return_code
    000230                              acc_aud_lg_ptr.t:
    000230                              	bss	,gate_entry_data_size
                                        
                                    53  	hgate	acc_aud_lg_ptr_user,access_audit_,log_obj_ptr_user,0,bad_dir_trap
                        000024          	segdef	acc_aud_lg_ptr_user
    000024                              acc_aud_lg_ptr_user:
    000024  0a   000532 7100 00         	tra	acc_aud_lg_ptr_user.e
    000531  a8   000000 000240          	zero	0*2,acc_aud_lg_ptr_user.t
    000532                              acc_aud_lg_ptr_user.e:
    000532  0a   000153 7020 00         	tsx2	.setup
    000533  0a   001300 7000 00         	tsx0	.set_dir_trap
    000534  aa   000000 6340 07         	ldi	=0,dl
    000535  4a  4 01060 3521 20         	short_call access_audit_$log_obj_ptr_user(ap|0)
    000536  aa  7 00036 6701 20
    000537  aa  6 00030 3701 20
    000540  9a  4 00240 3521 00         	eppbp	lp|acc_aud_lg_ptr_user.t
    000541  0a   000216 7100 00         	tra	.return_code
    000240                              acc_aud_lg_ptr_user.t:
    000240                              	bss	,gate_entry_data_size
                                        
                                    54  	hgate	acc_aud_lg_no_process,access_audit_,log_no_process,0
                        000025          	segdef	acc_aud_lg_no_process
    000025                              acc_aud_lg_no_process:
    000025  0a   000543 7100 00         	tra	acc_aud_lg_no_process.e
    000542  a8   000000 000250          	zero	0*2,acc_aud_lg_no_process.t
    000543                              acc_aud_lg_no_process.e:
    000543  0a   000153 7020 00         	tsx2	.setup
    000544  aa   000000 6340 07         	ldi	=0,dl
    000545  4a  4 01062 3521 20         	short_call access_audit_$log_no_process(ap|0)
    000546  aa  7 00036 6701 20
    000547  aa  6 00030 3701 20
    000550  9a  4 00250 3521 00         	eppbp	lp|acc_aud_lg_no_process.t
    000551  0a   000216 7100 00         	tra	.return_code
    000250                              acc_aud_lg_no_process.t:
    000250                              	bss	,gate_entry_data_size
                                        
                                    55  	hgate	acc_aud_get_flags,access_audit_util_,get_audit_flags,1
                        000026          	segdef	acc_aud_get_flags
    000026                              acc_aud_get_flags:
    000026  0a   000553 7100 00         	tra	acc_aud_get_flags.e
    000552  a8   000002 000260          	zero	1*2,acc_aud_get_flags.t
    000553                              acc_aud_get_flags.e:
    000553  0a   000153 7020 00         	tsx2	.setup
    000554  aa   000000 6340 07         	ldi	=0,dl
    000555  4a  4 01064 3521 20         	short_call access_audit_util_$get_audit_flags(ap|0)
    000556  aa  7 00036 6701 20
    000557  aa  6 00030 3701 20
    000560  9a  4 00260 3521 00         	eppbp	lp|acc_aud_get_flags.t
    000561  0a   000216 7100 00         	tra	.return_code
    000260                              acc_aud_get_flags.t:
    000260                              	bss	,gate_entry_data_size
                                        
                                    56  	hgate	acc_aud_set_flags,access_audit_util_,set_audit_flags,1
                        000027          	segdef	acc_aud_set_flags
    000027                              acc_aud_set_flags:
    000027  0a   000563 7100 00         	tra	acc_aud_set_flags.e
    000562  a8   000002 000270          	zero	1*2,acc_aud_set_flags.t
    000563                              acc_aud_set_flags.e:
    000563  0a   000153 7020 00         	tsx2	.setup
    000564  aa   000000 6340 07         	ldi	=0,dl
    000565  4a  4 01066 3521 20         	short_call access_audit_util_$set_audit_flags(ap|0)
    000566  aa  7 00036 6701 20
    000567  aa  6 00030 3701 20
    000570  9a  4 00270 3521 00         	eppbp	lp|acc_aud_set_flags.t
    000571  0a   000216 7100 00         	tra	.return_code
    000270                              acc_aud_set_flags.t:
    000270                              	bss	,gate_entry_data_size
                                        
                                    57  	fgate	admin_level_no_fs_audit,level,set_admin_gate
                        000030          	segdef	admin_level_no_fs_audit
    000030                              admin_level_no_fs_audit:
    000030  0a   000573 7100 00         	tra	admin_level_no_fs_audit.e
    000572  aa   000000 000000          	zero	0,0
    000573                              admin_level_no_fs_audit.e:
    000573  aa   000000 6340 07         	ldi	=0,dl
    000574  0a   000104 3700 20         	epplp	.my_lp,*
    000575  4a  4 01070 7101 20         	tra	level$set_admin_gate
                                        
                                    58  	hgate	admin_ring_zero_peek_,ring_0_peek,ring_0_peek,3
                        000031          	segdef	admin_ring_zero_peek_
    000031                              admin_ring_zero_peek_:
    000031  0a   000577 7100 00         	tra	admin_ring_zero_peek_.e
    000576  a8   000006 000300          	zero	3*2,admin_ring_zero_peek_.t
    000577                              admin_ring_zero_peek_.e:
    000577  0a   000153 7020 00         	tsx2	.setup
    000600  aa   000000 6340 07         	ldi	=0,dl
    000601  4a  4 01072 3521 20         	short_call ring_0_peek$ring_0_peek(ap|0)
    000602  aa  7 00036 6701 20
    000603  aa  6 00030 3701 20
    000604  9a  4 00300 3521 00         	eppbp	lp|admin_ring_zero_peek_.t
    000605  0a   000216 7100 00         	tra	.return_code
    000300                              admin_ring_zero_peek_.t:
    000300                              	bss	,gate_entry_data_size
                                        
                                    59  	hgate	append_master_dir,append,master_dir,6,bad_dir_trap
                        000032          	segdef	append_master_dir
    000032                              append_master_dir:
    000032  0a   000607 7100 00         	tra	append_master_dir.e
    000606  a8   000014 000310          	zero	6*2,append_master_dir.t
    000607                              append_master_dir.e:
    000607  0a   000153 7020 00         	tsx2	.setup
    000610  0a   001300 7000 00         	tsx0	.set_dir_trap
    000611  aa   000000 6340 07         	ldi	=0,dl
    000612  4a  4 01074 3521 20         	short_call append$master_dir(ap|0)
    000613  aa  7 00036 6701 20
    000614  aa  6 00030 3701 20
    000615  9a  4 00310 3521 00         	eppbp	lp|append_master_dir.t
    000616  0a   000216 7100 00         	tra	.return_code
    000310                              append_master_dir.t:
    000310                              	bss	,gate_entry_data_size
                                        
                                    60  	hgate	attach_lv,private_logical_volume,connect,2
                        000033          	segdef	attach_lv
    000033                              attach_lv:
    000033  0a   000620 7100 00         	tra	attach_lv.e
    000617  a8   000004 000320          	zero	2*2,attach_lv.t
    000620                              attach_lv.e:
    000620  0a   000153 7020 00         	tsx2	.setup
    000621  aa   000000 6340 07         	ldi	=0,dl
    000622  4a  4 01076 3521 20         	short_call private_logical_volume$connect(ap|0)
    000623  aa  7 00036 6701 20
    000624  aa  6 00030 3701 20
    000625  9a  4 00320 3521 00         	eppbp	lp|attach_lv.t
    000626  0a   000216 7100 00         	tra	.return_code
    000320                              attach_lv.t:
    000320                              	bss	,gate_entry_data_size
                                        
                                    61  	hgate	comm_chan_star_list,get_mcm_meters,chan_star_list,5
                        000034          	segdef	comm_chan_star_list
    000034                              comm_chan_star_list:
    000034  0a   000630 7100 00         	tra	comm_chan_star_list.e
    000627  a8   000012 000330          	zero	5*2,comm_chan_star_list.t
    000630                              comm_chan_star_list.e:
    000630  0a   000153 7020 00         	tsx2	.setup
    000631  aa   000000 6340 07         	ldi	=0,dl
    000632  4a  4 01100 3521 20         	short_call get_mcm_meters$chan_star_list(ap|0)
    000633  aa  7 00036 6701 20
    000634  aa  6 00030 3701 20
    000635  9a  4 00330 3521 00         	eppbp	lp|comm_chan_star_list.t
    000636  0a   000216 7100 00         	tra	.return_code
    000330                              comm_chan_star_list.t:
    000330                              	bss	,gate_entry_data_size
                                        
                                    62  	hgate	console_free,ocdcm_,console_free,2
                        000035          	segdef	console_free
    000035                              console_free:
    000035  0a   000640 7100 00         	tra	console_free.e
    000637  a8   000004 000340          	zero	2*2,console_free.t
    000640                              console_free.e:
    000640  0a   000153 7020 00         	tsx2	.setup
    000641  aa   000000 6340 07         	ldi	=0,dl
    000642  4a  4 01102 3521 20         	short_call ocdcm_$console_free(ap|0)
    000643  aa  7 00036 6701 20
    000644  aa  6 00030 3701 20
    000645  9a  4 00340 3521 00         	eppbp	lp|console_free.t
    000646  0a   000216 7100 00         	tra	.return_code
    000340                              console_free.t:
    000340                              	bss	,gate_entry_data_size
                                        
                                    63  	hgate	decode_uidpath,uid_path_util,decode_uidpath_priv,4
                        000036          	segdef	decode_uidpath
    000036                              decode_uidpath:
    000036  0a   000650 7100 00         	tra	decode_uidpath.e
    000647  a8   000010 000350          	zero	4*2,decode_uidpath.t
    000650                              decode_uidpath.e:
    000650  0a   000153 7020 00         	tsx2	.setup
    000651  aa   000000 6340 07         	ldi	=0,dl
    000652  4a  4 01104 3521 20         	short_call uid_path_util$decode_uidpath_priv(ap|0)
    000653  aa  7 00036 6701 20
    000654  aa  6 00030 3701 20
    000655  9a  4 00350 3521 00         	eppbp	lp|decode_uidpath.t
    000656  0a   000216 7100 00         	tra	.return_code
    000350                              decode_uidpath.t:
    000350                              	bss	,gate_entry_data_size
                                        
                                    64  	hgate	delentry_file,level_0_,delentry_file,3,bad_dir_trap
                        000037          	segdef	delentry_file
    000037                              delentry_file:
    000037  0a   000660 7100 00         	tra	delentry_file.e
    000657  a8   000006 000360          	zero	3*2,delentry_file.t
    000660                              delentry_file.e:
    000660  0a   000153 7020 00         	tsx2	.setup
    000661  0a   001300 7000 00         	tsx0	.set_dir_trap
    000662  aa   000000 6340 07         	ldi	=0,dl
    000663  4a  4 01106 3521 20         	short_call level_0_$delentry_file(ap|0)
    000664  aa  7 00036 6701 20
    000665  aa  6 00030 3701 20
    000666  9a  4 00360 3521 00         	eppbp	lp|delentry_file.t
    000667  0a   000216 7100 00         	tra	.return_code
    000360                              delentry_file.t:
    000360                              	bss	,gate_entry_data_size
                                        
                                    65  	hgate	delete_master_dir,delentry,duid_mdir,3,bad_dir_trap
                        000040          	segdef	delete_master_dir
    000040                              delete_master_dir:
    000040  0a   000671 7100 00         	tra	delete_master_dir.e
    000670  a8   000006 000370          	zero	3*2,delete_master_dir.t
    000671                              delete_master_dir.e:
    000671  0a   000153 7020 00         	tsx2	.setup
    000672  0a   001300 7000 00         	tsx0	.set_dir_trap
    000673  aa   000000 6340 07         	ldi	=0,dl
    000674  4a  4 01110 3521 20         	short_call delentry$duid_mdir(ap|0)
    000675  aa  7 00036 6701 20
    000676  aa  6 00030 3701 20
    000677  9a  4 00370 3521 00         	eppbp	lp|delete_master_dir.t
    000700  0a   000216 7100 00         	tra	.return_code
    000370                              delete_master_dir.t:
    000370                              	bss	,gate_entry_data_size
                                        
                                    66  	hgate	delete_master_dir_priv,delentry,duid_mdir_priv,3,bad_dir_trap
                        000041          	segdef	delete_master_dir_priv
    000041                              delete_master_dir_priv:
    000041  0a   000702 7100 00         	tra	delete_master_dir_priv.e
    000701  a8   000006 000400          	zero	3*2,delete_master_dir_priv.t
    000702                              delete_master_dir_priv.e:
    000702  0a   000153 7020 00         	tsx2	.setup
    000703  0a   001300 7000 00         	tsx0	.set_dir_trap
    000704  aa   000000 6340 07         	ldi	=0,dl
    000705  4a  4 01112 3521 20         	short_call delentry$duid_mdir_priv(ap|0)
    000706  aa  7 00036 6701 20
    000707  aa  6 00030 3701 20
    000710  9a  4 00400 3521 00         	eppbp	lp|delete_master_dir_priv.t
    000711  0a   000216 7100 00         	tra	.return_code
    000400                              delete_master_dir_priv.t:
    000400                              	bss	,gate_entry_data_size
                                        
                                    67  	hgate	detach_lv,private_logical_volume,disconnect,2
                        000042          	segdef	detach_lv
    000042                              detach_lv:
    000042  0a   000713 7100 00         	tra	detach_lv.e
    000712  a8   000004 000410          	zero	2*2,detach_lv.t
    000713                              detach_lv.e:
    000713  0a   000153 7020 00         	tsx2	.setup
    000714  aa   000000 6340 07         	ldi	=0,dl
    000715  4a  4 01114 3521 20         	short_call private_logical_volume$disconnect(ap|0)
    000716  aa  7 00036 6701 20
    000717  aa  6 00030 3701 20
    000720  9a  4 00410 3521 00         	eppbp	lp|detach_lv.t
    000721  0a   000216 7100 00         	tra	.return_code
    000410                              detach_lv.t:
    000410                              	bss	,gate_entry_data_size
                                        
                                    68  	hgate	fs_get_ex_mode,fs_get,ex_mode_name,6
                        000043          	segdef	fs_get_ex_mode
    000043                              fs_get_ex_mode:
    000043  0a   000723 7100 00         	tra	fs_get_ex_mode.e
    000722  a8   000014 000420          	zero	6*2,fs_get_ex_mode.t
    000723                              fs_get_ex_mode.e:
    000723  0a   000153 7020 00         	tsx2	.setup
    000724  aa   000000 6340 07         	ldi	=0,dl
    000725  4a  4 01116 3521 20         	short_call fs_get$ex_mode_name(ap|0)
    000726  aa  7 00036 6701 20
    000727  aa  6 00030 3701 20
    000730  9a  4 00420 3521 00         	eppbp	lp|fs_get_ex_mode.t
    000731  0a   000216 7100 00         	tra	.return_code
    000420                              fs_get_ex_mode.t:
    000420                              	bss	,gate_entry_data_size
                                        
                                    69  	hgate	get_comm_meters,get_mcm_meters,get_mcm_meters,3
                        000044          	segdef	get_comm_meters
    000044                              get_comm_meters:
    000044  0a   000733 7100 00         	tra	get_comm_meters.e
    000732  a8   000006 000430          	zero	3*2,get_comm_meters.t
    000733                              get_comm_meters.e:
    000733  0a   000153 7020 00         	tsx2	.setup
    000734  aa   000000 6340 07         	ldi	=0,dl
    000735  4a  4 01120 3521 20         	short_call get_mcm_meters$get_mcm_meters(ap|0)
    000736  aa  7 00036 6701 20
    000737  aa  6 00030 3701 20
    000740  9a  4 00430 3521 00         	eppbp	lp|get_comm_meters.t
    000741  0a   000216 7100 00         	tra	.return_code
    000430                              get_comm_meters.t:
    000430                              	bss	,gate_entry_data_size
                                        
                                    70  	hgate	get_tuning_parameter,hc_tune,get,7
                        000045          	segdef	get_tuning_parameter
    000045                              get_tuning_parameter:
    000045  0a   000743 7100 00         	tra	get_tuning_parameter.e
    000742  a8   000016 000440          	zero	7*2,get_tuning_parameter.t
    000743                              get_tuning_parameter.e:
    000743  0a   000153 7020 00         	tsx2	.setup
    000744  aa   000000 6340 07         	ldi	=0,dl
    000745  4a  4 01122 3521 20         	short_call hc_tune$get(ap|0)
    000746  aa  7 00036 6701 20
    000747  aa  6 00030 3701 20
    000750  9a  4 00440 3521 00         	eppbp	lp|get_tuning_parameter.t
    000751  0a   000216 7100 00         	tra	.return_code
    000440                              get_tuning_parameter.t:
    000440                              	bss	,gate_entry_data_size
                                        
                                    71  	hgate	get_uidpath,uid_path_util,get_uidpath,4
                        000046          	segdef	get_uidpath
    000046                              get_uidpath:
    000046  0a   000753 7100 00         	tra	get_uidpath.e
    000752  a8   000010 000450          	zero	4*2,get_uidpath.t
    000753                              get_uidpath.e:
    000753  0a   000153 7020 00         	tsx2	.setup
    000754  aa   000000 6340 07         	ldi	=0,dl
    000755  4a  4 01124 3521 20         	short_call uid_path_util$get_uidpath(ap|0)
    000756  aa  7 00036 6701 20
    000757  aa  6 00030 3701 20
    000760  9a  4 00450 3521 00         	eppbp	lp|get_uidpath.t
    000761  0a   000216 7100 00         	tra	.return_code
    000450                              get_uidpath.t:
    000450                              	bss	,gate_entry_data_size
                                        
                                    72  	hgate	guaranteed_eligibility_off,pxss,guaranteed_eligibility_off,0
                        000047          	segdef	guaranteed_eligibility_off
    000047                              guaranteed_eligibility_off:
    000047  0a   000763 7100 00         	tra	guaranteed_eligibility_off.e
    000762  a8   000000 000460          	zero	0*2,guaranteed_eligibility_off.t
    000763                              guaranteed_eligibility_off.e:
    000763  0a   000153 7020 00         	tsx2	.setup
    000764  aa   000000 6340 07         	ldi	=0,dl
    000765  4a  4 01126 3521 20         	short_call pxss$guaranteed_eligibility_off(ap|0)
    000766  aa  7 00036 6701 20
    000767  aa  6 00030 3701 20
    000770  9a  4 00460 3521 00         	eppbp	lp|guaranteed_eligibility_off.t
    000771  0a   000216 7100 00         	tra	.return_code
    000460                              guaranteed_eligibility_off.t:
    000460                              	bss	,gate_entry_data_size
                                        
                                    73  	hgate	guaranteed_eligibility_on,pxss,guaranteed_eligibility_on,0
                        000050          	segdef	guaranteed_eligibility_on
    000050                              guaranteed_eligibility_on:
    000050  0a   000773 7100 00         	tra	guaranteed_eligibility_on.e
    000772  a8   000000 000470          	zero	0*2,guaranteed_eligibility_on.t
    000773                              guaranteed_eligibility_on.e:
    000773  0a   000153 7020 00         	tsx2	.setup
    000774  aa   000000 6340 07         	ldi	=0,dl
    000775  4a  4 01130 3521 20         	short_call pxss$guaranteed_eligibility_on(ap|0)
    000776  aa  7 00036 6701 20
    000777  aa  6 00030 3701 20
    001000  9a  4 00470 3521 00         	eppbp	lp|guaranteed_eligibility_on.t
    001001  0a   000216 7100 00         	tra	.return_code
    000470                              guaranteed_eligibility_on.t:
    000470                              	bss	,gate_entry_data_size
                                        
                                    74  	hgate	ioi_add_device,ioi_assignment,add_device,2
                        000051          	segdef	ioi_add_device
    000051                              ioi_add_device:
    000051  0a   001003 7100 00         	tra	ioi_add_device.e
    001002  a8   000004 000500          	zero	2*2,ioi_add_device.t
    001003                              ioi_add_device.e:
    001003  0a   000153 7020 00         	tsx2	.setup
    001004  aa   000000 6340 07         	ldi	=0,dl
    001005  4a  4 01132 3521 20         	short_call ioi_assignment$add_device(ap|0)
    001006  aa  7 00036 6701 20
    001007  aa  6 00030 3701 20
    001010  9a  4 00500 3521 00         	eppbp	lp|ioi_add_device.t
    001011  0a   000216 7100 00         	tra	.return_code
    000500                              ioi_add_device.t:
    000500                              	bss	,gate_entry_data_size
                                        
                                    75  	hgate	ioi_attach,ioi_assignment,assign,5
                        000052          	segdef	ioi_attach
    000052                              ioi_attach:
    000052  0a   001013 7100 00         	tra	ioi_attach.e
    001012  a8   000012 000510          	zero	5*2,ioi_attach.t
    001013                              ioi_attach.e:
    001013  0a   000153 7020 00         	tsx2	.setup
    001014  aa   000000 6340 07         	ldi	=0,dl
    001015  4a  4 01134 3521 20         	short_call ioi_assignment$assign(ap|0)
    001016  aa  7 00036 6701 20
    001017  aa  6 00030 3701 20
    001020  9a  4 00510 3521 00         	eppbp	lp|ioi_attach.t
    001021  0a   000216 7100 00         	tra	.return_code
    000510                              ioi_attach.t:
    000510                              	bss	,gate_entry_data_size
                                        
                                    76  	hgate	ioi_delete_device,ioi_assignment,delete_device,2
                        000053          	segdef	ioi_delete_device
    000053                              ioi_delete_device:
    000053  0a   001023 7100 00         	tra	ioi_delete_device.e
    001022  a8   000004 000520          	zero	2*2,ioi_delete_device.t
    001023                              ioi_delete_device.e:
    001023  0a   000153 7020 00         	tsx2	.setup
    001024  aa   000000 6340 07         	ldi	=0,dl
    001025  4a  4 01136 3521 20         	short_call ioi_assignment$delete_device(ap|0)
    001026  aa  7 00036 6701 20
    001027  aa  6 00030 3701 20
    001030  9a  4 00520 3521 00         	eppbp	lp|ioi_delete_device.t
    001031  0a   000216 7100 00         	tra	.return_code
    000520                              ioi_delete_device.t:
    000520                              	bss	,gate_entry_data_size
                                        
                                    77  	hgate	ioi_detach,ioi_assignment,unassign,2
                        000054          	segdef	ioi_detach
    000054                              ioi_detach:
    000054  0a   001033 7100 00         	tra	ioi_detach.e
    001032  a8   000004 000530          	zero	2*2,ioi_detach.t
    001033                              ioi_detach.e:
    001033  0a   000153 7020 00         	tsx2	.setup
    001034  aa   000000 6340 07         	ldi	=0,dl
    001035  4a  4 01140 3521 20         	short_call ioi_assignment$unassign(ap|0)
    001036  aa  7 00036 6701 20
    001037  aa  6 00030 3701 20
    001040  9a  4 00530 3521 00         	eppbp	lp|ioi_detach.t
    001041  0a   000216 7100 00         	tra	.return_code
    000530                              ioi_detach.t:
    000530                              	bss	,gate_entry_data_size
                                        
                                    78  	hgate	ioi_promote,ioi_set,level,3
                        000055          	segdef	ioi_promote
    000055                              ioi_promote:
    000055  0a   001043 7100 00         	tra	ioi_promote.e
    001042  a8   000006 000540          	zero	3*2,ioi_promote.t
    001043                              ioi_promote.e:
    001043  0a   000153 7020 00         	tsx2	.setup
    001044  aa   000000 6340 07         	ldi	=0,dl
    001045  4a  4 01142 3521 20         	short_call ioi_set$level(ap|0)
    001046  aa  7 00036 6701 20
    001047  aa  6 00030 3701 20
    001050  9a  4 00540 3521 00         	eppbp	lp|ioi_promote.t
    001051  0a   000216 7100 00         	tra	.return_code
    000540                              ioi_promote.t:
    000540                              	bss	,gate_entry_data_size
                                        
                                    79  	hgate	ioi_set_to_max,ioi_set,max_timeout,3
                        000056          	segdef	ioi_set_to_max
    000056                              ioi_set_to_max:
    000056  0a   001053 7100 00         	tra	ioi_set_to_max.e
    001052  a8   000006 000550          	zero	3*2,ioi_set_to_max.t
    001053                              ioi_set_to_max.e:
    001053  0a   000153 7020 00         	tsx2	.setup
    001054  aa   000000 6340 07         	ldi	=0,dl
    001055  4a  4 01144 3521 20         	short_call ioi_set$max_timeout(ap|0)
    001056  aa  7 00036 6701 20
    001057  aa  6 00030 3701 20
    001060  9a  4 00550 3521 00         	eppbp	lp|ioi_set_to_max.t
    001061  0a   000216 7100 00         	tra	.return_code
    000550                              ioi_set_to_max.t:
    000550                              	bss	,gate_entry_data_size
                                        
                                    80  	hgate	ioi_set_ws_max,ioi_set,max_workspace,3
                        000057          	segdef	ioi_set_ws_max
    000057                              ioi_set_ws_max:
    000057  0a   001063 7100 00         	tra	ioi_set_ws_max.e
    001062  a8   000006 000560          	zero	3*2,ioi_set_ws_max.t
    001063                              ioi_set_ws_max.e:
    001063  0a   000153 7020 00         	tsx2	.setup
    001064  aa   000000 6340 07         	ldi	=0,dl
    001065  4a  4 01146 3521 20         	short_call ioi_set$max_workspace(ap|0)
    001066  aa  7 00036 6701 20
    001067  aa  6 00030 3701 20
    001070  9a  4 00560 3521 00         	eppbp	lp|ioi_set_ws_max.t
    001071  0a   000216 7100 00         	tra	.return_code
    000560                              ioi_set_ws_max.t:
    000560                              	bss	,gate_entry_data_size
                                        
                                    81  	hgate	ips_wakeup,tc_util,ips_wakeup,2
                        000060          	segdef	ips_wakeup
    000060                              ips_wakeup:
    000060  0a   001073 7100 00         	tra	ips_wakeup.e
    001072  a8   000004 000570          	zero	2*2,ips_wakeup.t
    001073                              ips_wakeup.e:
    001073  0a   000153 7020 00         	tsx2	.setup
    001074  aa   000000 6340 07         	ldi	=0,dl
    001075  4a  4 01150 3521 20         	short_call tc_util$ips_wakeup(ap|0)
    001076  aa  7 00036 6701 20
    001077  aa  6 00030 3701 20
    001100  9a  4 00570 3521 00         	eppbp	lp|ips_wakeup.t
    001101  0a   000216 7100 00         	tra	.return_code
    000570                              ips_wakeup.t:
    000570                              	bss	,gate_entry_data_size
                                        
                                    82  	hgate	list_tuning_parameters,hc_tune,list,4
                        000061          	segdef	list_tuning_parameters
    000061                              list_tuning_parameters:
    000061  0a   001103 7100 00         	tra	list_tuning_parameters.e
    001102  a8   000010 000600          	zero	4*2,list_tuning_parameters.t
    001103                              list_tuning_parameters.e:
    001103  0a   000153 7020 00         	tsx2	.setup
    001104  aa   000000 6340 07         	ldi	=0,dl
    001105  4a  4 01152 3521 20         	short_call hc_tune$list(ap|0)
    001106  aa  7 00036 6701 20
    001107  aa  6 00030 3701 20
    001110  9a  4 00600 3521 00         	eppbp	lp|list_tuning_parameters.t
    001111  0a   000216 7100 00         	tra	.return_code
    000600                              list_tuning_parameters.t:
    000600                              	bss	,gate_entry_data_size
                                        
                                    83  	hgate	make_uid,getuid,getuid,1
                        000062          	segdef	make_uid
    000062                              make_uid:
    000062  0a   001113 7100 00         	tra	make_uid.e
    001112  a8   000002 000610          	zero	1*2,make_uid.t
    001113                              make_uid.e:
    001113  0a   000153 7020 00         	tsx2	.setup
    001114  aa   000000 6340 07         	ldi	=0,dl
    001115  4a  4 01154 3521 20         	short_call getuid$getuid(ap|0)
    001116  aa  7 00036 6701 20
    001117  aa  6 00030 3701 20
    001120  9a  4 00610 3521 00         	eppbp	lp|make_uid.t
    001121  0a   000216 7100 00         	tra	.return_code
    000610                              make_uid.t:
    000610                              	bss	,gate_entry_data_size
                                        
                                    84  	hgate	mdir_status,status_,get_mdir_status,6,bad_dir_trap
                        000063          	segdef	mdir_status
    000063                              mdir_status:
    000063  0a   001123 7100 00         	tra	mdir_status.e
    001122  a8   000014 000620          	zero	6*2,mdir_status.t
    001123                              mdir_status.e:
    001123  0a   000153 7020 00         	tsx2	.setup
    001124  0a   001300 7000 00         	tsx0	.set_dir_trap
    001125  aa   000000 6340 07         	ldi	=0,dl
    001126  4a  4 01156 3521 20         	short_call status_$get_mdir_status(ap|0)
    001127  aa  7 00036 6701 20
    001130  aa  6 00030 3701 20
    001131  9a  4 00620 3521 00         	eppbp	lp|mdir_status.t
    001132  0a   000216 7100 00         	tra	.return_code
    000620                              mdir_status.t:
    000620                              	bss	,gate_entry_data_size
                                        
                                    85  	hgate	mdir_status_priv,status_,get_mdir_status_priv,6,bad_dir_trap
                        000064          	segdef	mdir_status_priv
    000064                              mdir_status_priv:
    000064  0a   001134 7100 00         	tra	mdir_status_priv.e
    001133  a8   000014 000630          	zero	6*2,mdir_status_priv.t
    001134                              mdir_status_priv.e:
    001134  0a   000153 7020 00         	tsx2	.setup
    001135  0a   001300 7000 00         	tsx0	.set_dir_trap
    001136  aa   000000 6340 07         	ldi	=0,dl
    001137  4a  4 01160 3521 20         	short_call status_$get_mdir_status_priv(ap|0)
    001140  aa  7 00036 6701 20
    001141  aa  6 00030 3701 20
    001142  9a  4 00630 3521 00         	eppbp	lp|mdir_status_priv.t
    001143  0a   000216 7100 00         	tra	.return_code
    000630                              mdir_status_priv.t:
    000630                              	bss	,gate_entry_data_size
                                        
                                    86  	hgate	mdir_status_uid_priv,status_,get_mdir_status_uid_priv,6,bad_dir_trap
                        000065          	segdef	mdir_status_uid_priv
    000065                              mdir_status_uid_priv:
    000065  0a   001145 7100 00         	tra	mdir_status_uid_priv.e
    001144  a8   000014 000640          	zero	6*2,mdir_status_uid_priv.t
    001145                              mdir_status_uid_priv.e:
    001145  0a   000153 7020 00         	tsx2	.setup
    001146  0a   001300 7000 00         	tsx0	.set_dir_trap
    001147  aa   000000 6340 07         	ldi	=0,dl
    001150  4a  4 01162 3521 20         	short_call status_$get_mdir_status_uid_priv(ap|0)
    001151  aa  7 00036 6701 20
    001152  aa  6 00030 3701 20
    001153  9a  4 00640 3521 00         	eppbp	lp|mdir_status_uid_priv.t
    001154  0a   000216 7100 00         	tra	.return_code
    000640                              mdir_status_uid_priv.t:
    000640                              	bss	,gate_entry_data_size
                                        
                                    87  	hgate	ocdcm_reconfigure,ocdcm_,reconfigure,3
                        000066          	segdef	ocdcm_reconfigure
    000066                              ocdcm_reconfigure:
    000066  0a   001156 7100 00         	tra	ocdcm_reconfigure.e
    001155  a8   000006 000650          	zero	3*2,ocdcm_reconfigure.t
    001156                              ocdcm_reconfigure.e:
    001156  0a   000153 7020 00         	tsx2	.setup
    001157  aa   000000 6340 07         	ldi	=0,dl
    001160  4a  4 01164 3521 20         	short_call ocdcm_$reconfigure(ap|0)
    001161  aa  7 00036 6701 20
    001162  aa  6 00030 3701 20
    001163  9a  4 00650 3521 00         	eppbp	lp|ocdcm_reconfigure.t
    001164  0a   000216 7100 00         	tra	.return_code
    000650                              ocdcm_reconfigure.t:
    000650                              	bss	,gate_entry_data_size
                                        
                                    88  	hgate	quota_set,quota,qset,3,bad_dir_trap
                        000067          	segdef	quota_set
    000067                              quota_set:
    000067  0a   001166 7100 00         	tra	quota_set.e
    001165  a8   000006 000660          	zero	3*2,quota_set.t
    001166                              quota_set.e:
    001166  0a   000153 7020 00         	tsx2	.setup
    001167  0a   001300 7000 00         	tsx0	.set_dir_trap
    001170  aa   000000 6340 07         	ldi	=0,dl
    001171  4a  4 01166 3521 20         	short_call quota$qset(ap|0)
    001172  aa  7 00036 6701 20
    001173  aa  6 00030 3701 20
    001174  9a  4 00660 3521 00         	eppbp	lp|quota_set.t
    001175  0a   000216 7100 00         	tra	.return_code
    000660                              quota_set.t:
    000660                              	bss	,gate_entry_data_size
                                        
                                    89  	hgate	reclassify_sys_seg,reclassify,sys_seg,4,bad_dir_trap
                        000070          	segdef	reclassify_sys_seg
    000070                              reclassify_sys_seg:
    000070  0a   001177 7100 00         	tra	reclassify_sys_seg.e
    001176  a8   000010 000670          	zero	4*2,reclassify_sys_seg.t
    001177                              reclassify_sys_seg.e:
    001177  0a   000153 7020 00         	tsx2	.setup
    001200  0a   001300 7000 00         	tsx0	.set_dir_trap
    001201  aa   000000 6340 07         	ldi	=0,dl
    001202  4a  4 01170 3521 20         	short_call reclassify$sys_seg(ap|0)
    001203  aa  7 00036 6701 20
    001204  aa  6 00030 3701 20
    001205  9a  4 00670 3521 00         	eppbp	lp|reclassify_sys_seg.t
    001206  0a   000216 7100 00         	tra	.return_code
    000670                              reclassify_sys_seg.t:
    000670                              	bss	,gate_entry_data_size
                                        
                                    90  	hgate	reset_privileges,set_privileges,admin_reset,1
                        000071          	segdef	reset_privileges
    000071                              reset_privileges:
    000071  0a   001210 7100 00         	tra	reset_privileges.e
    001207  a8   000002 000700          	zero	1*2,reset_privileges.t
    001210                              reset_privileges.e:
    001210  0a   000153 7020 00         	tsx2	.setup
    001211  aa   000000 6340 07         	ldi	=0,dl
    001212  4a  4 01172 3521 20         	short_call set_privileges$admin_reset(ap|0)
    001213  aa  7 00036 6701 20
    001214  aa  6 00030 3701 20
    001215  9a  4 00700 3521 00         	eppbp	lp|reset_privileges.t
    001216  0a   000216 7100 00         	tra	.return_code
    000700                              reset_privileges.t:
    000700                              	bss	,gate_entry_data_size
                                        
                                    91  	hgate	set_mdir_quota,quota,mdir_set,3,bad_dir_trap
                        000072          	segdef	set_mdir_quota
    000072                              set_mdir_quota:
    000072  0a   001220 7100 00         	tra	set_mdir_quota.e
    001217  a8   000006 000710          	zero	3*2,set_mdir_quota.t
    001220                              set_mdir_quota.e:
    001220  0a   000153 7020 00         	tsx2	.setup
    001221  0a   001300 7000 00         	tsx0	.set_dir_trap
    001222  aa   000000 6340 07         	ldi	=0,dl
    001223  4a  4 01174 3521 20         	short_call quota$mdir_set(ap|0)
    001224  aa  7 00036 6701 20
    001225  aa  6 00030 3701 20
    001226  9a  4 00710 3521 00         	eppbp	lp|set_mdir_quota.t
    001227  0a   000216 7100 00         	tra	.return_code
    000710                              set_mdir_quota.t:
    000710                              	bss	,gate_entry_data_size
                                        
                                    92  	hgate	set_sons_lvid,set_sons_lvid,set_sons_lvid,4
                        000073          	segdef	set_sons_lvid
    000073                              set_sons_lvid:
    000073  0a   001231 7100 00         	tra	set_sons_lvid.e
    001230  a8   000010 000720          	zero	4*2,set_sons_lvid.t
    001231                              set_sons_lvid.e:
    001231  0a   000153 7020 00         	tsx2	.setup
    001232  aa   000000 6340 07         	ldi	=0,dl
    001233  4a  4 01176 3521 20         	short_call set_sons_lvid$set_sons_lvid(ap|0)
    001234  aa  7 00036 6701 20
    001235  aa  6 00030 3701 20
    001236  9a  4 00720 3521 00         	eppbp	lp|set_sons_lvid.t
    001237  0a   000216 7100 00         	tra	.return_code
    000720                              set_sons_lvid.t:
    000720                              	bss	,gate_entry_data_size
                                        
                                    93  	hgate	set_privileges,set_privileges,admin_set,2
                        000074          	segdef	set_privileges
    000074                              set_privileges:
    000074  0a   001241 7100 00         	tra	set_privileges.e
    001240  a8   000004 000730          	zero	2*2,set_privileges.t
    001241                              set_privileges.e:
    001241  0a   000153 7020 00         	tsx2	.setup
    001242  aa   000000 6340 07         	ldi	=0,dl
    001243  4a  4 01200 3521 20         	short_call set_privileges$admin_set(ap|0)
    001244  aa  7 00036 6701 20
    001245  aa  6 00030 3701 20
    001246  9a  4 00730 3521 00         	eppbp	lp|set_privileges.t
    001247  0a   000216 7100 00         	tra	.return_code
    000730                              set_privileges.t:
    000730                              	bss	,gate_entry_data_size
                                        
                                    94  	hgate	syserr,syserr_real,ring1,0
                        000075          	segdef	syserr
    000075                              syserr:
    000075  0a   001251 7100 00         	tra	syserr.e
    001250  a8   000000 000740          	zero	0*2,syserr.t
    001251                              syserr.e:
    001251  0a   000153 7020 00         	tsx2	.setup
    001252  aa   000000 6340 07         	ldi	=0,dl
    001253  4a  4 01202 3521 20         	short_call syserr_real$ring1(ap|0)
    001254  aa  7 00036 6701 20
    001255  aa  6 00030 3701 20
    001256  9a  4 00740 3521 00         	eppbp	lp|syserr.t
    001257  0a   000216 7100 00         	tra	.return_code
    000740                              syserr.t:
    000740                              	bss	,gate_entry_data_size
                                        
                                    95  	hgate	syserr_binary,syserr_real,ring1_binary,0
                        000076          	segdef	syserr_binary
    000076                              syserr_binary:
    000076  0a   001261 7100 00         	tra	syserr_binary.e
    001260  a8   000000 000750          	zero	0*2,syserr_binary.t
    001261                              syserr_binary.e:
    001261  0a   000153 7020 00         	tsx2	.setup
    001262  aa   000000 6340 07         	ldi	=0,dl
    001263  4a  4 01204 3521 20         	short_call syserr_real$ring1_binary(ap|0)
    001264  aa  7 00036 6701 20
    001265  aa  6 00030 3701 20
    001266  9a  4 00750 3521 00         	eppbp	lp|syserr_binary.t
    001267  0a   000216 7100 00         	tra	.return_code
    000750                              syserr_binary.t:
    000750                              	bss	,gate_entry_data_size
                                        
                                    96  	hgate	syserr_error_code,syserr_real,ring1_error_code,0
                        000077          	segdef	syserr_error_code
    000077                              syserr_error_code:
    000077  0a   001271 7100 00         	tra	syserr_error_code.e
    001270  a8   000000 000760          	zero	0*2,syserr_error_code.t
    001271                              syserr_error_code.e:
    001271  0a   000153 7020 00         	tsx2	.setup
    001272  aa   000000 6340 07         	ldi	=0,dl
    001273  4a  4 01206 3521 20         	short_call syserr_real$ring1_error_code(ap|0)
    001274  aa  7 00036 6701 20
    001275  aa  6 00030 3701 20
    001276  9a  4 00760 3521 00         	eppbp	lp|syserr_error_code.t
    001277  0a   000216 7100 00         	tra	.return_code
    000760                              syserr_error_code.t:
    000760                              	bss	,gate_entry_data_size
                                        
                                    97  
                                    98  	bad_dir_handler
                                        
                                        	include	on_unit
                                   5-1  "
                                   5-2  "	BEGIN INCLUDE FILE --- on_unit.incl.alm	5/75 RAB
                                   5-3  "
                        000000     5-4  	equ	on_unit.name,0
                        000002     5-5  	equ	on_unit.body,2
                        000004     5-6  	equ	on_unit.size,4
                        000005     5-7  	equ	on_unit.next,5	upper	offset relative to stack FRAME
                        000005     5-8  	equ	on_unit.flags,5	lower
                        000006     5-9  	equ	on_unit.file,6
                        000010    5-10  	equ	on_unit.file_copy,8
                                  5-11  "
                                  5-12  "	END INCLUDE FILE --- on_unit.incl.alm
                                  5-13  "
                                        
                                        	use	transfer_vector
    000100                              .handler_entry:
    000100  0a   001323 7100 00         	tra	.handler
    000101                              .handler_restart_entry:
    000101  0a   001363 7100 00         	tra	.handler_restart_point
                                        
                                        	use	main
    001300                              .set_dir_trap:
    001300  aa  6 00071 7401 00         	stx0	.entryp		save for restart
                                        
    001301  aa   000100 1004 00         	mlr	(),(pr),fill(000)
    001302  aa   000000 000000          	desc9a	0,0
    001303  aa   600056 000050          	desc9a	.on_unit,10*4
    001304  0a   001320 3520 00         	eppbp	.bad_dir_name
    001305  aa  6 00056 2521 00         	spribp	.on_unit+on_unit.name
    001306  0a   000100 3520 00         	eppbp	.handler_entry
    001307  aa  6 00060 2521 00         	spribp	.on_unit+on_unit.body
    001310  0a   001322 7210 00         	lxl1	.bad_dir_desc
    001311  aa  6 00062 4411 00         	sxl1	.on_unit+on_unit.size
    001312  aa  6 00056 6351 00         	eaa	.on_unit		set up on-unit for bad_dir_
    001313  aa  6 00000 1351 03         	sbla	sp|0,du		.. make rel to sp
    001314  aa  6 00036 7551 00         	sta	sp|stack_frame.on_unit_rel_ptrs
    001315  aa   000100 2350 07         	lda	stack_frame.condition_bit,dl
    001316  aa  6 00020 2551 00         	orsa	sp|stack_frame.flag_word
    001317  aa   000000 7100 10         	tra	0,0
                                        
                                        	string	bad_dir_
    001320                              .bad_dir_name:
    001320  aa  142 141 144 137         	aci	"bad_dir_"
    001321  aa  144 151 162 137
    001322                              .bad_dir_desc:
    001322  aa   525000 000010          	vfd	o9/525,o27/8
                                        
                                        
                                        
                                        
    001323  aa  6 00000 2131 00         .handler:	epaq	sp|0		verify that call came from ring 0
    001324  aa   777777 3150 07         	cana	-1,dl		check ring number in AL
    001325  0a   001327 6000 00         	tze	*+2
    001326  aa   000000 000000          	zero	0		go way kid you bother me
                                        
    001327  aa   000120 6270 00         	push			" ok, we like the call
    001330  aa  7 00040 2721 20
    001331  0a   000104 3700 20         	epplp	.my_lp,*
    001332  aa  0 00000 2201 00         	ldx0	ap|0		get display
    001333  aa  0 00002 3521 30         	eppbp	ap|2,0*
    001334  aa  2 00020 2351 00         	lda	bp|stack_frame.prev_sp
    001335  aa   700000 3150 07         	cana	=o700000,dl	from another ring?
    001336  0a   001360 6000 00         	tze	.continue_signal	if not, back to signal_
    001337  aa  0 00002 3501 20         	eppap	ap|2,*		Get mcptr
    001340  aa  0 00000 3501 20         	eppap	ap|0,*		..
    001341  aa  2 00076 2501 00         	spriap	bp|.mcptr		.. save in gate frame
    001342  aa  6 00054 2521 00         	spribp	.label_variable+2
    001343  0a   000101 3520 00         	eppbp	.handler_restart_entry
    001344  aa  6 00052 2521 00         	spribp	.label_variable
    001345  aa  6 00052 3521 00         	eppbp	.label_variable
    001346  aa  6 00060 2521 00         	spribp	.unwinder_arglist+2
    001347  aa   004000 4310 07         	fld	=1b24,dl
    001350  aa  6 00056 7571 00         	staq	.unwinder_arglist
    001351  aa  6 00000 2541 00         	call	unwinder_$unwinder_(.unwinder_arglist)
    001352  aa  6 00056 3501 00
    001353  4a  4 00772 3521 20
    001354  aa  6 00040 7531 00
    001355  aa  7 00036 6701 20
    001356  aa  6 00000 1731 00
    001357  aa  6 00040 0731 00
                                        
    001360                              .continue_signal:
    001360  aa   400000 2350 03         	lda	=o400000,du	"1"b
    001361  aa  0 00012 7551 20         	sta	ap|10,*		set continue bit
    001362  aa  7 00042 7101 20         	return
                                        
    001363                              .handler_restart_point:
    001363  aa  6 00000 2131 00         	epaq	sp|0		check that call came from ring 0
    001364  aa   777777 3150 07         	cana	-1,dl
    001365  0a   001367 6000 00         	tze	*+2
    001366  aa   000001 000000          	zero	1
    001367  0a   000104 3700 20         	epplp	.my_lp,*
    001370  aa   000101 3350 07         	lca	stack_frame.condition_bit+1,dl  Vanish on-unit
    001371  aa  6 00020 3551 00         	ansa	sp|stack_frame.flag_word
    001372  aa  6 00076 3521 00         	eppbp	.mcptr
    001373  aa  6 00074 2521 00         	spribp	.vfl_arglist+2
    001374  aa   004000 4310 07         	fld	=1b24,dl
    001375  aa  6 00072 7571 00         	staq	.vfl_arglist
    001376  4a  4 01210 3521 20         	short_call  verify_lock$verify_lock_bad_dir(.vfl_arglist)
    001377  aa  7 00036 6701 20
    001400  aa  6 00030 3701 20
    001401  aa  6 00071 2201 00         	ldx0	.entryp
    001402  aa  6 00032 3501 20         	eppap	sp|stack_frame.arg_ptr,*
    001403  aa   000000 7100 10         	tra	0,0		retry the call
                                        
                                        
                                    99  
                                   100  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001404  5a   000003 000000 
    001405  5a   001002 600000 
    001406  aa   000000 000000 
    001407  55   000011 000002 
    001410  5a   000002 400003 
    001411  55   000006 000011 
    001412  aa  013 141 144 155
    001413  aa  151 156 137 147
    001414  aa  141 164 145 137
    001415  55   000021 000003 
    001416  0a   000077 400000 
    001417  55   000014 000003 
    001420  aa  021 163 171 163         syserr_error_code
    001421  aa  145 162 162 137
    001422  aa  145 162 162 157
    001423  aa  162 137 143 157
    001424  aa  144 145 000 000
    001425  55   000030 000011 
    001426  0a   000076 400000 
    001427  55   000024 000003 
    001430  aa  015 163 171 163         syserr_binary
    001431  aa  145 162 162 137
    001432  aa  142 151 156 141
    001433  aa  162 171 000 000
    001434  55   000035 000021 
    001435  0a   000075 400000 
    001436  55   000033 000003 
    001437  aa  006 163 171 163         syserr
    001440  aa  145 162 162 000
    001441  55   000044 000030 
    001442  0a   000074 400000 
    001443  55   000040 000003 
    001444  aa  016 163 145 164         set_privileges
    001445  aa  137 160 162 151
    001446  aa  166 151 154 145
    001447  aa  147 145 163 000
    001450  55   000053 000035 
    001451  0a   000073 400000 
    001452  55   000047 000003 
    001453  aa  015 163 145 164         set_sons_lvid
    001454  aa  137 163 157 156
    001455  aa  163 137 154 166
    001456  aa  151 144 000 000
    001457  55   000062 000044 
    001460  0a   000072 400000 
    001461  55   000056 000003 
    001462  aa  016 163 145 164         set_mdir_quota
    001463  aa  137 155 144 151
    001464  aa  162 137 161 165
    001465  aa  157 164 141 000
    001466  55   000072 000053 
    001467  0a   000071 400000 
    001470  55   000065 000003 
    001471  aa  020 162 145 163         reset_privileges
    001472  aa  145 164 137 160
    001473  aa  162 151 166 151
    001474  aa  154 145 147 145
    001475  aa  163 000 000 000
    001476  55   000102 000062 
    001477  0a   000070 400000 
    001500  55   000075 000003 
    001501  aa  022 162 145 143         reclassify_sys_seg
    001502  aa  154 141 163 163
    001503  aa  151 146 171 137
    001504  aa  163 171 163 137
    001505  aa  163 145 147 000
    001506  55   000110 000072 
    001507  0a   000067 400000 
    001510  55   000105 000003 
    001511  aa  011 161 165 157         quota_set
    001512  aa  164 141 137 163
    001513  aa  145 164 000 000
    001514  55   000120 000102 
    001515  0a   000066 400000 
    001516  55   000113 000003 
    001517  aa  021 157 143 144         ocdcm_reconfigure
    001520  aa  143 155 137 162
    001521  aa  145 143 157 156
    001522  aa  146 151 147 165
    001523  aa  162 145 000 000
    001524  55   000131 000110 
    001525  0a   000065 400000 
    001526  55   000123 000003 
    001527  aa  024 155 144 151         mdir_status_uid_priv
    001530  aa  162 137 163 164
    001531  aa  141 164 165 163
    001532  aa  137 165 151 144
    001533  aa  137 160 162 151
    001534  aa  166 000 000 000
    001535  55   000141 000120 
    001536  0a   000064 400000 
    001537  55   000134 000003 
    001540  aa  020 155 144 151         mdir_status_priv
    001541  aa  162 137 163 164
    001542  aa  141 164 165 163
    001543  aa  137 160 162 151
    001544  aa  166 000 000 000
    001545  55   000147 000131 
    001546  0a   000063 400000 
    001547  55   000144 000003 
    001550  aa  013 155 144 151         mdir_status
    001551  aa  162 137 163 164
    001552  aa  141 164 165 163
    001553  55   000155 000141 
    001554  0a   000062 400000 
    001555  55   000152 000003 
    001556  aa  010 155 141 153         make_uid
    001557  aa  145 137 165 151
    001560  aa  144 000 000 000
    001561  55   000166 000147 
    001562  0a   000061 400000 
    001563  55   000160 000003 
    001564  aa  026 154 151 163         list_tuning_parameters
    001565  aa  164 137 164 165
    001566  aa  156 151 156 147
    001567  aa  137 160 141 162
    001570  aa  141 155 145 164
    001571  aa  145 162 163 000
    001572  55   000174 000155 
    001573  0a   000060 400000 
    001574  55   000171 000003 
    001575  aa  012 151 160 163         ips_wakeup
    001576  aa  137 167 141 153
    001577  aa  145 165 160 000
    001600  55   000203 000166 
    001601  0a   000057 400000 
    001602  55   000177 000003 
    001603  aa  016 151 157 151         ioi_set_ws_max
    001604  aa  137 163 145 164
    001605  aa  137 167 163 137
    001606  aa  155 141 170 000
    001607  55   000212 000174 
    001610  0a   000056 400000 
    001611  55   000206 000003 
    001612  aa  016 151 157 151         ioi_set_to_max
    001613  aa  137 163 145 164
    001614  aa  137 164 157 137
    001615  aa  155 141 170 000
    001616  55   000220 000203 
    001617  0a   000055 400000 
    001620  55   000215 000003 
    001621  aa  013 151 157 151         ioi_promote
    001622  aa  137 160 162 157
    001623  aa  155 157 164 145
    001624  55   000226 000212 
    001625  0a   000054 400000 
    001626  55   000223 000003 
    001627  aa  012 151 157 151         ioi_detach
    001630  aa  137 144 145 164
    001631  aa  141 143 150 000
    001632  55   000236 000220 
    001633  0a   000053 400000 
    001634  55   000231 000003 
    001635  aa  021 151 157 151         ioi_delete_device
    001636  aa  137 144 145 154
    001637  aa  145 164 145 137
    001640  aa  144 145 166 151
    001641  aa  143 145 000 000
    001642  55   000244 000226 
    001643  0a   000052 400000 
    001644  55   000241 000003 
    001645  aa  012 151 157 151         ioi_attach
    001646  aa  137 141 164 164
    001647  aa  141 143 150 000
    001650  55   000253 000236 
    001651  0a   000051 400000 
    001652  55   000247 000003 
    001653  aa  016 151 157 151         ioi_add_device
    001654  aa  137 141 144 144
    001655  aa  137 144 145 166
    001656  aa  151 143 145 000
    001657  55   000265 000244 
    001660  0a   000050 400000 
    001661  55   000256 000003 
    001662  aa  031 147 165 141         guaranteed_eligibility_on
    001663  aa  162 141 156 164
    001664  aa  145 145 144 137
    001665  aa  145 154 151 147
    001666  aa  151 142 151 154
    001667  aa  151 164 171 137
    001670  aa  157 156 000 000
    001671  55   000277 000253 
    001672  0a   000047 400000 
    001673  55   000270 000003 
    001674  aa  032 147 165 141         guaranteed_eligibility_off
    001675  aa  162 141 156 164
    001676  aa  145 145 144 137
    001677  aa  145 154 151 147
    001700  aa  151 142 151 154
    001701  aa  151 164 171 137
    001702  aa  157 146 146 000
    001703  55   000305 000265 
    001704  0a   000046 400000 
    001705  55   000302 000003 
    001706  aa  013 147 145 164         get_uidpath
    001707  aa  137 165 151 144
    001710  aa  160 141 164 150
    001711  55   000316 000277 
    001712  0a   000045 400000 
    001713  55   000310 000003 
    001714  aa  024 147 145 164         get_tuning_parameter
    001715  aa  137 164 165 156
    001716  aa  151 156 147 137
    001717  aa  160 141 162 141
    001720  aa  155 145 164 145
    001721  aa  162 000 000 000
    001722  55   000325 000305 
    001723  0a   000044 400000 
    001724  55   000321 000003 
    001725  aa  017 147 145 164         get_comm_meters
    001726  aa  137 143 157 155
    001727  aa  155 137 155 145
    001730  aa  164 145 162 163
    001731  55   000334 000316 
    001732  0a   000043 400000 
    001733  55   000330 000003 
    001734  aa  016 146 163 137         fs_get_ex_mode
    001735  aa  147 145 164 137
    001736  aa  145 170 137 155
    001737  aa  157 144 145 000
    001740  55   000342 000325 
    001741  0a   000042 400000 
    001742  55   000337 000003 
    001743  aa  011 144 145 164         detach_lv
    001744  aa  141 143 150 137
    001745  aa  154 166 000 000
    001746  55   000353 000334 
    001747  0a   000041 400000 
    001750  55   000345 000003 
    001751  aa  026 144 145 154         delete_master_dir_priv
    001752  aa  145 164 145 137
    001753  aa  155 141 163 164
    001754  aa  145 162 137 144
    001755  aa  151 162 137 160
    001756  aa  162 151 166 000
    001757  55   000363 000342 
    001760  0a   000040 400000 
    001761  55   000356 000003 
    001762  aa  021 144 145 154         delete_master_dir
    001763  aa  145 164 145 137
    001764  aa  155 141 163 164
    001765  aa  145 162 137 144
    001766  aa  151 162 000 000
    001767  55   000372 000353 
    001770  0a   000037 400000 
    001771  55   000366 000003 
    001772  aa  015 144 145 154         delentry_file
    001773  aa  145 156 164 162
    001774  aa  171 137 146 151
    001775  aa  154 145 000 000
    001776  55   000401 000363 
    001777  0a   000036 400000 
    002000  55   000375 000003 
    002001  aa  016 144 145 143         decode_uidpath
    002002  aa  157 144 145 137
    002003  aa  165 151 144 160
    002004  aa  141 164 150 000
    002005  55   000410 000372 
    002006  0a   000035 400000 
    002007  55   000404 000003 
    002010  aa  014 143 157 156         console_free
    002011  aa  163 157 154 145
    002012  aa  137 146 162 145
    002013  aa  145 000 000 000
    002014  55   000420 000401 
    002015  0a   000034 400000 
    002016  55   000413 000003 
    002017  aa  023 143 157 155         comm_chan_star_list
    002020  aa  155 137 143 150
    002021  aa  141 156 137 163
    002022  aa  164 141 162 137
    002023  aa  154 151 163 164
    002024  55   000426 000410 
    002025  0a   000033 400000 
    002026  55   000423 000003 
    002027  aa  011 141 164 164         attach_lv
    002030  aa  141 143 150 137
    002031  aa  154 166 000 000
    002032  55   000436 000420 
    002033  0a   000032 400000 
    002034  55   000431 000003 
    002035  aa  021 141 160 160         append_master_dir
    002036  aa  145 156 144 137
    002037  aa  155 141 163 164
    002040  aa  145 162 137 144
    002041  aa  151 162 000 000
    002042  55   000447 000426 
    002043  0a   000031 400000 
    002044  55   000441 000003 
    002045  aa  025 141 144 155         admin_ring_zero_peek_
    002046  aa  151 156 137 162
    002047  aa  151 156 147 137
    002050  aa  172 145 162 157
    002051  aa  137 160 145 145
    002052  aa  153 137 000 000
    002053  55   000460 000436 
    002054  0a   000030 400000 
    002055  55   000452 000003 
    002056  aa  027 141 144 155         admin_level_no_fs_audit
    002057  aa  151 156 137 154
    002060  aa  145 166 145 154
    002061  aa  137 156 157 137
    002062  aa  146 163 137 141
    002063  aa  165 144 151 164
    002064  55   000470 000447 
    002065  0a   000027 400000 
    002066  55   000463 000003 
    002067  aa  021 141 143 143         acc_aud_set_flags
    002070  aa  137 141 165 144
    002071  aa  137 163 145 164
    002072  aa  137 146 154 141
    002073  aa  147 163 000 000
    002074  55   000500 000460 
    002075  0a   000026 400000 
    002076  55   000473 000003 
    002077  aa  021 141 143 143         acc_aud_get_flags
    002100  aa  137 141 165 144
    002101  aa  137 147 145 164
    002102  aa  137 146 154 141
    002103  aa  147 163 000 000
    002104  55   000511 000470 
    002105  0a   000025 400000 
    002106  55   000503 000003 
    002107  aa  025 141 143 143         acc_aud_lg_no_process
    002110  aa  137 141 165 144
    002111  aa  137 154 147 137
    002112  aa  156 157 137 160
    002113  aa  162 157 143 145
    002114  aa  163 163 000 000
    002115  55   000521 000500 
    002116  0a   000024 400000 
    002117  55   000514 000003 
    002120  aa  023 141 143 143         acc_aud_lg_ptr_user
    002121  aa  137 141 165 144
    002122  aa  137 154 147 137
    002123  aa  160 164 162 137
    002124  aa  165 163 145 162
    002125  55   000530 000511 
    002126  0a   000023 400000 
    002127  55   000524 000003 
    002130  aa  016 141 143 143         acc_aud_lg_ptr
    002131  aa  137 141 165 144
    002132  aa  137 154 147 137
    002133  aa  160 164 162 000
    002134  55   000541 000521 
    002135  0a   000022 400000 
    002136  55   000533 000003 
    002137  aa  024 141 143 143         acc_aud_lg_path_user
    002140  aa  137 141 165 144
    002141  aa  137 154 147 137
    002142  aa  160 141 164 150
    002143  aa  137 165 163 145
    002144  aa  162 000 000 000
    002145  55   000550 000530 
    002146  0a   000021 400000 
    002147  55   000544 000003 
    002150  aa  017 141 143 143         acc_aud_lg_path
    002151  aa  137 141 165 144
    002152  aa  137 154 147 137
    002153  aa  160 141 164 150
    002154  55   000561 000541 
    002155  0a   000020 400000 
    002156  55   000553 000003 
    002157  aa  025 141 143 143         acc_aud_lg_class_user
    002160  aa  137 141 165 144
    002161  aa  137 154 147 137
    002162  aa  143 154 141 163
    002163  aa  163 137 165 163
    002164  aa  145 162 000 000
    002165  55   000571 000550 
    002166  0a   000017 400000 
    002167  55   000564 000003 
    002170  aa  020 141 143 143         acc_aud_lg_class
    002171  aa  137 141 165 144
    002172  aa  137 154 147 137
    002173  aa  143 154 141 163
    002174  aa  163 000 000 000
    002175  55   000603 000561 
    002176  0a   000016 400000 
    002177  55   000574 000003 
    002200  aa  033 141 143 143         acc_aud_lg_class_range_user
    002201  aa  137 141 165 144
    002202  aa  137 154 147 137
    002203  aa  143 154 141 163
    002204  aa  163 137 162 141
    002205  aa  156 147 145 137
    002206  aa  165 163 145 162
    002207  55   000614 000571 
    002210  0a   000015 400000 
    002211  55   000606 000003 
    002212  aa  026 141 143 143         acc_aud_lg_class_range
    002213  aa  137 141 165 144
    002214  aa  137 154 147 137
    002215  aa  143 154 141 163
    002216  aa  163 137 162 141
    002217  aa  156 147 145 000
    002220  55   000625 000603 
    002221  0a   000014 400000 
    002222  55   000617 000003 
    002223  aa  027 141 143 143         acc_aud_lg_general_user
    002224  aa  137 141 165 144
    002225  aa  137 154 147 137
    002226  aa  147 145 156 145
    002227  aa  162 141 154 137
    002230  aa  165 163 145 162
    002231  55   000635 000614 
    002232  0a   000013 400000 
    002233  55   000630 000003 
    002234  aa  022 141 143 143         acc_aud_lg_general
    002235  aa  137 141 165 144
    002236  aa  137 154 147 137
    002237  aa  147 145 156 145
    002240  aa  162 141 154 000
    002241  55   000645 000625 
    002242  0a   000012 400000 
    002243  55   000640 000003 
    002244  aa  023 141 143 143         acc_aud_ck_ptr_user
    002245  aa  137 141 165 144
    002246  aa  137 143 153 137
    002247  aa  160 164 162 137
    002250  aa  165 163 145 162
    002251  55   000654 000635 
    002252  0a   000011 400000 
    002253  55   000650 000003 
    002254  aa  016 141 143 143         acc_aud_ck_ptr
    002255  aa  137 141 165 144
    002256  aa  137 143 153 137
    002257  aa  160 164 162 000
    002260  55   000665 000645 
    002261  0a   000010 400000 
    002262  55   000657 000003 
    002263  aa  024 141 143 143         acc_aud_ck_path_user
    002264  aa  137 141 165 144
    002265  aa  137 143 153 137
    002266  aa  160 141 164 150
    002267  aa  137 165 163 145
    002270  aa  162 000 000 000
    002271  55   000674 000654 
    002272  0a   000007 400000 
    002273  55   000670 000003 
    002274  aa  017 141 143 143         acc_aud_ck_path
    002275  aa  137 141 165 144
    002276  aa  137 143 153 137
    002277  aa  160 141 164 150
    002300  55   000705 000665 
    002301  0a   000006 400000 
    002302  55   000677 000003 
    002303  aa  025 141 143 143         acc_aud_ck_class_user
    002304  aa  137 141 165 144
    002305  aa  137 143 153 137
    002306  aa  143 154 141 163
    002307  aa  163 137 165 163
    002310  aa  145 162 000 000
    002311  55   000715 000674 
    002312  0a   000005 400000 
    002313  55   000710 000003 
    002314  aa  020 141 143 143         acc_aud_ck_class
    002315  aa  137 141 165 144
    002316  aa  137 143 153 137
    002317  aa  143 154 141 163
    002320  aa  163 000 000 000
    002321  55   000727 000705 
    002322  0a   000004 400000 
    002323  55   000720 000003 
    002324  aa  033 141 143 143         acc_aud_ck_class_range_user
    002325  aa  137 141 165 144
    002326  aa  137 143 153 137
    002327  aa  143 154 141 163
    002330  aa  163 137 162 141
    002331  aa  156 147 145 137
    002332  aa  165 163 145 162
    002333  55   000740 000715 
    002334  0a   000003 400000 
    002335  55   000732 000003 
    002336  aa  026 141 143 143         acc_aud_ck_class_range
    002337  aa  137 141 165 144
    002340  aa  137 143 153 137
    002341  aa  143 154 141 163
    002342  aa  163 137 162 141
    002343  aa  156 147 145 000
    002344  55   000751 000727 
    002345  0a   000002 400000 
    002346  55   000743 000003 
    002347  aa  027 141 143 143         acc_aud_ck_general_user
    002350  aa  137 141 165 144
    002351  aa  137 143 153 137
    002352  aa  147 145 156 145
    002353  aa  162 141 154 137
    002354  aa  165 163 145 162
    002355  55   000761 000740 
    002356  0a   000001 400000 
    002357  55   000754 000003 
    002360  aa  022 141 143 143         acc_aud_ck_general
    002361  aa  137 141 165 144
    002362  aa  137 143 153 137
    002363  aa  147 145 156 145
    002364  aa  162 141 154 000
    002365  55   000766 000751 
    002366  0a   000104 400000 
    002367  55   000764 000003 
    002370  aa  006 056 155 171         .my_lp
    002371  aa  137 154 160 000
    002372  55   000773 000761 
    002373  0a   000102 400000 
    002374  55   000771 000003 
    002375  aa  007 056 164 166         .tv_end
    002376  aa  137 145 156 144
    002377  55   000002 000766 
    002400  6a   000000 400002 
    002401  55   000776 000003 
    002402  aa  014 163 171 155         symbol_table
    002403  aa  142 157 154 137
    002404  aa  164 141 142 154
    002405  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002406  aa   000000 000131 
    002407  5a   000372 000000 
    002410  5a   000410 000000 
    002411  5a   000511 000000 
    002412  5a   000062 000000 
    002413  5a   000635 000000 
    002414  5a   000603 000000 
    002415  5a   000727 000000 
    002416  5a   000102 000000 
    002417  5a   000773 000000 
    002420  aa   000000 000000 
    002421  aa   000000 000000 
    002422  aa   000000 000000 
    002423  aa   000000 000000 
    002424  aa   000000 000000 
    002425  aa   000000 000000 
    002426  aa   000000 000000 
    002427  5a   000141 000000 
    002430  5a   000353 000000 
    002431  5a   000426 000000 
    002432  5a   000166 000000 
    002433  5a   000521 000000 
    002434  5a   000645 000000 
    002435  aa   000000 000000 
    002436  5a   000460 000000 
    002437  5a   000470 000000 
    002440  5a   000447 000000 
    002441  5a   000253 000000 
    002442  aa   000000 000000 
    002443  aa   000000 000000 
    002444  5a   000766 000000 
    002445  5a   000530 000000 
    002446  5a   000220 000000 
    002447  5a   000236 000000 
    002450  5a   000325 000000 
    002451  5a   000420 000000 
    002452  5a   000334 000000 
    002453  5a   000044 000000 
    002454  5a   000110 000000 
    002455  5a   000120 000000 
    002456  5a   000277 000000 
    002457  5a   000021 000000 
    002460  5a   000614 000000 
    002461  5a   000654 000000 
    002462  5a   000740 000000 
    002463  5a   000401 000000 
    002464  aa   000000 000000 
    002465  aa   000000 000000 
    002466  aa   000000 000000 
    002467  5a   000541 000000 
    002470  5a   000665 000000 
    002471  5a   000436 000000 
    002472  5a   000072 000000 
    002473  5a   000155 000000 
    002474  aa   000000 000000 
    002475  aa   000000 000000 
    002476  5a   000625 000000 
    002477  5a   000751 000000 
    002500  aa   000000 000000 
    002501  5a   000265 000000 
    002502  5a   000305 000000 
    002503  aa   000000 000000 
    002504  aa   000000 000000 
    002505  5a   000500 000000 
    002506  5a   000212 000000 
    002507  5a   000550 000000 
    002510  5a   000674 000000 
    002511  5a   000363 000000 
    002512  5a   000761 000000 
    002513  5a   000035 000000 
    002514  5a   000053 000000 
    002515  5a   000174 000000 
    002516  5a   000203 000000 
    002517  5a   000244 000000 
    002520  aa   000000 000000 
    002521  aa   000000 000000 
    002522  aa   000000 000000 
    002523  5a   000571 000000 
    002524  5a   000147 000000 
    002525  5a   000226 000000 
    002526  5a   000011 000000 
    002527  5a   000316 000000 
    002530  5a   000561 000000 
    002531  5a   000705 000000 
    002532  5a   000030 000000 
    002533  5a   000715 000000 
    002534  aa   000000 000000 
    002535  aa   000000 000000 
    002536  5a   000131 000000 
    002537  5a   000342 000000 

EXTERNAL NAMES

    002540  aa  023 166 145 162         verify_lock_bad_dir
    002541  aa  151 146 171 137
    002542  aa  154 157 143 153
    002543  aa  137 142 141 144
    002544  aa  137 144 151 162
    002545  aa  013 166 145 162         verify_lock
    002546  aa  151 146 171 137
    002547  aa  154 157 143 153
    002550  aa  020 162 151 156         ring1_error_code
    002551  aa  147 061 137 145
    002552  aa  162 162 157 162
    002553  aa  137 143 157 144
    002554  aa  145 000 000 000
    002555  aa  014 162 151 156         ring1_binary
    002556  aa  147 061 137 142
    002557  aa  151 156 141 162
    002560  aa  171 000 000 000
    002561  aa  005 162 151 156         ring1
    002562  aa  147 061 000 000
    002563  aa  013 163 171 163         syserr_real
    002564  aa  145 162 162 137
    002565  aa  162 145 141 154
    002566  aa  011 141 144 155         admin_set
    002567  aa  151 156 137 163
    002570  aa  145 164 000 000
    002571  aa  010 155 144 151         mdir_set
    002572  aa  162 137 163 145
    002573  aa  164 000 000 000
    002574  aa  013 141 144 155         admin_reset
    002575  aa  151 156 137 162
    002576  aa  145 163 145 164
    002577  aa  007 163 171 163         sys_seg
    002600  aa  137 163 145 147
    002601  aa  012 162 145 143         reclassify
    002602  aa  154 141 163 163
    002603  aa  151 146 171 000
    002604  aa  004 161 163 145         qset
    002605  aa  164 000 000 000
    002606  aa  005 161 165 157         quota
    002607  aa  164 141 000 000
    002610  aa  013 162 145 143         reconfigure
    002611  aa  157 156 146 151
    002612  aa  147 165 162 145
    002613  aa  030 147 145 164         get_mdir_status_uid_priv
    002614  aa  137 155 144 151
    002615  aa  162 137 163 164
    002616  aa  141 164 165 163
    002617  aa  137 165 151 144
    002620  aa  137 160 162 151
    002621  aa  166 000 000 000
    002622  aa  024 147 145 164         get_mdir_status_priv
    002623  aa  137 155 144 151
    002624  aa  162 137 163 164
    002625  aa  141 164 165 163
    002626  aa  137 160 162 151
    002627  aa  166 000 000 000
    002630  aa  017 147 145 164         get_mdir_status
    002631  aa  137 155 144 151
    002632  aa  162 137 163 164
    002633  aa  141 164 165 163
    002634  aa  007 163 164 141         status_
    002635  aa  164 165 163 137
    002636  aa  006 147 145 164         getuid
    002637  aa  165 151 144 000
    002640  aa  004 154 151 163         list
    002641  aa  164 000 000 000
    002642  aa  007 164 143 137         tc_util
    002643  aa  165 164 151 154
    002644  aa  015 155 141 170         max_workspace
    002645  aa  137 167 157 162
    002646  aa  153 163 160 141
    002647  aa  143 145 000 000
    002650  aa  013 155 141 170         max_timeout
    002651  aa  137 164 151 155
    002652  aa  145 157 165 164
    002653  aa  007 151 157 151         ioi_set
    002654  aa  137 163 145 164
    002655  aa  010 165 156 141         unassign
    002656  aa  163 163 151 147
    002657  aa  156 000 000 000
    002660  aa  015 144 145 154         delete_device
    002661  aa  145 164 145 137
    002662  aa  144 145 166 151
    002663  aa  143 145 000 000
    002664  aa  006 141 163 163         assign
    002665  aa  151 147 156 000
    002666  aa  012 141 144 144         add_device
    002667  aa  137 144 145 166
    002670  aa  151 143 145 000
    002671  aa  016 151 157 151         ioi_assignment
    002672  aa  137 141 163 163
    002673  aa  151 147 156 155
    002674  aa  145 156 164 000
    002675  aa  003 147 145 164         get
    002676  aa  007 150 143 137         hc_tune
    002677  aa  164 165 156 145
    002700  aa  014 145 170 137         ex_mode_name
    002701  aa  155 157 144 145
    002702  aa  137 156 141 155
    002703  aa  145 000 000 000
    002704  aa  006 146 163 137         fs_get
    002705  aa  147 145 164 000
    002706  aa  012 144 151 163         disconnect
    002707  aa  143 157 156 156
    002710  aa  145 143 164 000
    002711  aa  016 144 165 151         duid_mdir_priv
    002712  aa  144 137 155 144
    002713  aa  151 162 137 160
    002714  aa  162 151 166 000
    002715  aa  011 144 165 151         duid_mdir
    002716  aa  144 137 155 144
    002717  aa  151 162 000 000
    002720  aa  010 144 145 154         delentry
    002721  aa  145 156 164 162
    002722  aa  171 000 000 000
    002723  aa  010 154 145 166         level_0_
    002724  aa  145 154 137 060
    002725  aa  137 000 000 000
    002726  aa  023 144 145 143         decode_uidpath_priv
    002727  aa  157 144 145 137
    002730  aa  165 151 144 160
    002731  aa  141 164 150 137
    002732  aa  160 162 151 166
    002733  aa  015 165 151 144         uid_path_util
    002734  aa  137 160 141 164
    002735  aa  150 137 165 164
    002736  aa  151 154 000 000
    002737  aa  006 157 143 144         ocdcm_
    002740  aa  143 155 137 000
    002741  aa  016 143 150 141         chan_star_list
    002742  aa  156 137 163 164
    002743  aa  141 162 137 154
    002744  aa  151 163 164 000
    002745  aa  016 147 145 164         get_mcm_meters
    002746  aa  137 155 143 155
    002747  aa  137 155 145 164
    002750  aa  145 162 163 000
    002751  aa  007 143 157 156         connect
    002752  aa  156 145 143 164
    002753  aa  026 160 162 151         private_logical_volume
    002754  aa  166 141 164 145
    002755  aa  137 154 157 147
    002756  aa  151 143 141 154
    002757  aa  137 166 157 154
    002760  aa  165 155 145 000
    002761  aa  012 155 141 163         master_dir
    002762  aa  164 145 162 137
    002763  aa  144 151 162 000
    002764  aa  006 141 160 160         append
    002765  aa  145 156 144 000
    002766  aa  013 162 151 156         ring_0_peek
    002767  aa  147 137 060 137
    002770  aa  160 145 145 153
    002771  aa  016 163 145 164         set_admin_gate
    002772  aa  137 141 144 155
    002773  aa  151 156 137 147
    002774  aa  141 164 145 000
    002775  aa  005 154 145 166         level
    002776  aa  145 154 000 000
    002777  aa  017 163 145 164         set_audit_flags
    003000  aa  137 141 165 144
    003001  aa  151 164 137 146
    003002  aa  154 141 147 163
    003003  aa  017 147 145 164         get_audit_flags
    003004  aa  137 141 165 144
    003005  aa  151 164 137 146
    003006  aa  154 141 147 163
    003007  aa  022 141 143 143         access_audit_util_
    003010  aa  145 163 163 137
    003011  aa  141 165 144 151
    003012  aa  164 137 165 164
    003013  aa  151 154 137 000
    003014  aa  016 154 157 147         log_no_process
    003015  aa  137 156 157 137
    003016  aa  160 162 157 143
    003017  aa  145 163 163 000
    003020  aa  020 154 157 147         log_obj_ptr_user
    003021  aa  137 157 142 152
    003022  aa  137 160 164 162
    003023  aa  137 165 163 145
    003024  aa  162 000 000 000
    003025  aa  013 154 157 147         log_obj_ptr
    003026  aa  137 157 142 152
    003027  aa  137 160 164 162
    003030  aa  021 154 157 147         log_obj_path_user
    003031  aa  137 157 142 152
    003032  aa  137 160 141 164
    003033  aa  150 137 165 163
    003034  aa  145 162 000 000
    003035  aa  014 154 157 147         log_obj_path
    003036  aa  137 157 142 152
    003037  aa  137 160 141 164
    003040  aa  150 000 000 000
    003041  aa  022 154 157 147         log_obj_class_user
    003042  aa  137 157 142 152
    003043  aa  137 143 154 141
    003044  aa  163 163 137 165
    003045  aa  163 145 162 000
    003046  aa  015 154 157 147         log_obj_class
    003047  aa  137 157 142 152
    003050  aa  137 143 154 141
    003051  aa  163 163 000 000
    003052  aa  030 154 157 147         log_obj_class_range_user
    003053  aa  137 157 142 152
    003054  aa  137 143 154 141
    003055  aa  163 163 137 162
    003056  aa  141 156 147 145
    003057  aa  137 165 163 145
    003060  aa  162 000 000 000
    003061  aa  023 154 157 147         log_obj_class_range
    003062  aa  137 157 142 152
    003063  aa  137 143 154 141
    003064  aa  163 163 137 162
    003065  aa  141 156 147 145
    003066  aa  020 154 157 147         log_general_user
    003067  aa  137 147 145 156
    003070  aa  145 162 141 154
    003071  aa  137 165 163 145
    003072  aa  162 000 000 000
    003073  aa  013 154 157 147         log_general
    003074  aa  137 147 145 156
    003075  aa  145 162 141 154
    003076  aa  022 143 150 145         check_obj_ptr_user
    003077  aa  143 153 137 157
    003100  aa  142 152 137 160
    003101  aa  164 162 137 165
    003102  aa  163 145 162 000
    003103  aa  015 143 150 145         check_obj_ptr
    003104  aa  143 153 137 157
    003105  aa  142 152 137 160
    003106  aa  164 162 000 000
    003107  aa  023 143 150 145         check_obj_path_user
    003110  aa  143 153 137 157
    003111  aa  142 152 137 160
    003112  aa  141 164 150 137
    003113  aa  165 163 145 162
    003114  aa  016 143 150 145         check_obj_path
    003115  aa  143 153 137 157
    003116  aa  142 152 137 160
    003117  aa  141 164 150 000
    003120  aa  024 143 150 145         check_obj_class_user
    003121  aa  143 153 137 157
    003122  aa  142 152 137 143
    003123  aa  154 141 163 163
    003124  aa  137 165 163 145
    003125  aa  162 000 000 000
    003126  aa  017 143 150 145         check_obj_class
    003127  aa  143 153 137 157
    003130  aa  142 152 137 143
    003131  aa  154 141 163 163
    003132  aa  032 143 150 145         check_obj_class_range_user
    003133  aa  143 153 137 157
    003134  aa  142 152 137 143
    003135  aa  154 141 163 163
    003136  aa  137 162 141 156
    003137  aa  147 145 137 165
    003140  aa  163 145 162 000
    003141  aa  025 143 150 145         check_obj_class_range
    003142  aa  143 153 137 157
    003143  aa  142 152 137 143
    003144  aa  154 141 163 163
    003145  aa  137 162 141 156
    003146  aa  147 145 000 000
    003147  aa  022 143 150 145         check_general_user
    003150  aa  143 153 137 147
    003151  aa  145 156 145 162
    003152  aa  141 154 137 165
    003153  aa  163 145 162 000
    003154  aa  015 143 150 145         check_general
    003155  aa  143 153 137 147
    003156  aa  145 156 145 162
    003157  aa  141 154 000 000
    003160  aa  015 141 143 143         access_audit_
    003161  aa  145 163 163 137
    003162  aa  141 165 144 151
    003163  aa  164 137 000 000
    003164  aa  015 160 162 145         pre_empt_poll
    003165  aa  137 145 155 160
    003166  aa  164 137 160 157
    003167  aa  154 154 000 000
    003170  aa  004 160 170 163         pxss
    003171  aa  163 000 000 000
    003172  aa  024 160 162 145         pre_empt_poll_return
    003173  aa  137 145 155 160
    003174  aa  164 137 160 157
    003175  aa  154 154 137 162
    003176  aa  145 164 165 162
    003177  aa  156 000 000 000
    003200  aa  004 160 157 154         poll
    003201  aa  154 000 000 000
    003202  aa  012 162 151 156         ring_alarm
    003203  aa  147 137 141 154
    003204  aa  141 162 155 000
    003205  aa  012 160 141 147         page_waits
    003206  aa  145 137 167 141
    003207  aa  151 164 163 000
    003210  aa  015 166 151 162         virtual_delta
    003211  aa  164 165 141 154
    003212  aa  137 144 145 154
    003213  aa  164 141 000 000
    003214  aa  010 143 160 165         cpu_time
    003215  aa  137 164 151 155
    003216  aa  145 000 000 000
    003217  aa  003 160 144 163         pds
    003220  aa  006 143 154 157         clock_
    003221  aa  143 153 137 000
    003222  aa  010 163 171 163         sys_info
    003223  aa  137 151 156 146
    003224  aa  157 000 000 000
    003225  aa  011 165 156 167         unwinder_
    003226  aa  151 156 144 145
    003227  aa  162 137 000 000
    003230  aa  007 163 151 147         signal_
    003231  aa  156 141 154 137

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    003232  aa   000004 000000 
    003233  55   001141 001134 
    003234  aa   000004 000000 
    003235  55   001157 001144 
    003236  aa   000004 000000 
    003237  55   001157 001151 
    003240  aa   000004 000000 
    003241  55   001157 001155 
    003242  aa   000004 000000 
    003243  55   000040 001162 
    003244  aa   000004 000000 
    003245  55   000047 000047 
    003246  aa   000004 000000 
    003247  55   001202 001165 
    003250  aa   000004 000000 
    003251  55   000040 001170 
    003252  aa   000004 000000 
    003253  55   001175 001173 
    003254  aa   000004 000000 
    003255  55   001202 001200 
    003256  aa   000004 000000 
    003257  55   001333 001204 
    003260  aa   000004 000000 
    003261  55   001230 001207 
    003262  aa   000004 000000 
    003263  55   001230 001216 
    003264  aa   000004 000000 
    003265  55   001230 001224 
    003266  aa   000004 000000 
    003267  55   001232 001232 
    003270  aa   000004 000000 
    003271  55   001272 001234 
    003272  aa   000004 000000 
    003273  55   001236 000171 
    003274  aa   000004 000000 
    003275  55   001247 001240 
    003276  aa   000004 000000 
    003277  55   001247 001244 
    003300  aa   000004 000000 
    003301  55   001247 001371 
    003302  aa   000004 000000 
    003303  55   001265 001251 
    003304  aa   000004 000000 
    003305  55   001265 001254 
    003306  aa   000004 000000 
    003307  55   001265 001260 
    003310  aa   000004 000000 
    003311  55   001265 001262 
    003312  aa   000004 000000 
    003313  55   001564 000256 
    003314  aa   000004 000000 
    003315  55   001564 000270 
    003316  aa   000004 000000 
    003317  55   001327 000302 
    003320  aa   000004 000000 
    003321  55   001272 001271 
    003322  aa   000004 000000 
    003323  55   001341 001341 
    003324  aa   000004 000000 
    003325  55   001300 001274 
    003326  aa   000004 000000 
    003327  55   001347 001302 
    003330  aa   000004 000000 
    003331  55   001314 001305 
    003332  aa   000004 000000 
    003333  55   001314 001311 
    003334  aa   000004 000000 
    003335  55   001317 000366 
    003336  aa   000004 000000 
    003337  55   001327 001322 
    003340  aa   000004 000000 
    003341  55   001333 000404 
    003342  aa   000004 000000 
    003343  55   001341 001335 
    003344  aa   000004 000000 
    003345  55   001347 001345 
    003346  aa   000004 000000 
    003347  55   001360 001355 
    003350  aa   000004 000000 
    003351  55   001362 001362 
    003352  aa   000004 000000 
    003353  55   001371 001365 
    003354  aa   000004 000000 
    003355  55   001403 001373 
    003356  aa   000004 000000 
    003357  55   001403 001377 
    003360  aa   000004 000000 
    003361  55   001554 001410 
    003362  aa   000004 000000 
    003363  55   001554 001414 
    003364  aa   000004 000000 
    003365  55   001554 001421 
    003366  aa   000004 000000 
    003367  55   001554 001424 
    003370  aa   000004 000000 
    003371  55   001554 001431 
    003372  aa   000004 000000 
    003373  55   001554 001435 
    003374  aa   000004 000000 
    003375  55   001554 001442 
    003376  aa   000004 000000 
    003377  55   001554 001446 
    003400  aa   000004 000000 
    003401  55   001554 001455 
    003402  aa   000004 000000 
    003403  55   001554 001462 
    003404  aa   000004 000000 
    003405  55   001554 001467 
    003406  aa   000004 000000 
    003407  55   001554 001472 
    003410  aa   000004 000000 
    003411  55   001554 001477 
    003412  aa   000004 000000 
    003413  55   001554 001503 
    003414  aa   000004 000000 
    003415  55   001554 001510 
    003416  aa   000004 000000 
    003417  55   001554 001514 
    003420  aa   000004 000000 
    003421  55   001554 001522 
    003422  aa   000004 000000 
    003423  55   001554 001526 
    003424  aa   000004 000000 
    003425  55   001554 001535 
    003426  aa   000004 000000 
    003427  55   001554 001543 
    003430  aa   000004 000000 
    003431  55   001554 001550 
    003432  aa   000004 000000 
    003433  55   001564 001560 
    003434  aa   000004 000000 
    003435  55   001613 001566 
    003436  aa   000004 000000 
    003437  55   001576 001574 
    003440  aa   000004 000000 
    003441  55   001613 001601 
    003442  aa   000004 000000 
    003443  55   001613 001604 
    003444  aa   000004 000000 
    003445  55   001613 001610 
    003446  aa   000004 000000 
    003447  55   001616 001614 
    003450  aa   000004 000000 
    003451  55   001621 001621 
    003452  aa   000004 000000 
    003453  55   001624 001624 
    003454  aa   000001 000000 
    003455  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    003456  5a   001626 000000 
    003457  5a   001630 000000 
    003460  5a   001632 000000 
    003461  5a   001634 000000 
    003462  5a   001636 000000 
    003463  5a   001640 000000 
    003464  5a   001642 000000 
    003465  5a   001644 000000 
    003466  5a   001646 000000 
    003467  5a   001650 000000 
    003470  5a   001652 000000 
    003471  5a   001654 000000 
    003472  5a   001656 000000 
    003473  5a   001660 000000 
    003474  5a   001662 000000 
    003475  5a   001664 000000 
    003476  5a   001666 000000 
    003477  5a   001670 000000 
    003500  5a   001672 000000 
    003501  5a   001674 000000 
    003502  5a   001676 000000 
    003503  5a   001700 000000 
    003504  5a   001702 000000 
    003505  5a   001704 000000 
    003506  5a   001706 000000 
    003507  5a   001710 000000 
    003510  5a   001712 000000 
    003511  5a   001714 000000 
    003512  5a   001716 000000 
    003513  5a   001720 000000 
    003514  5a   001722 000000 
    003515  5a   001724 000000 
    003516  5a   001726 000000 
    003517  5a   001730 000000 
    003520  5a   001732 000000 
    003521  5a   001734 000000 
    003522  5a   001736 000000 
    003523  5a   001740 000000 
    003524  5a   001742 000000 
    003525  5a   001744 000000 
    003526  5a   001746 000000 
    003527  5a   001750 000000 
    003530  5a   001752 000000 
    003531  5a   001754 000000 
    003532  5a   001756 000000 
    003533  5a   001760 000000 
    003534  5a   001762 000000 
    003535  5a   001764 000000 
    003536  5a   001766 000000 
    003537  5a   001770 000000 
    003540  5a   001772 000000 
    003541  5a   001774 000000 
    003542  5a   001776 000000 
    003543  5a   002000 000000 
    003544  5a   002002 000000 
    003545  5a   002004 000000 
    003546  5a   002006 000000 
    003547  5a   002010 000000 
    003550  5a   002012 000000 
    003551  5a   002014 000000 
    003552  5a   002016 000000 
    003553  5a   002020 000000 
    003554  5a   002022 000000 
    003555  5a   002024 000000 
    003556  5a   002026 000000 
    003557  5a   002030 000000 
    003560  5a   002032 000000 
    003561  5a   002034 000000 
    003562  5a   002036 000000 
    003563  5a   002040 000000 
    003564  5a   002042 000000 
    003565  5a   002044 000000 
    003566  5a   002046 000000 
    003567  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001404 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000770 001212 
    000007  a2   000000 000760 
    000770  9a   777010 0000 46         signal_|signal_
    000771  5a   002162 0000 00
    000772  9a   777006 0000 46         unwinder_|unwinder_
    000773  5a   002161 0000 00
    000774  9a   777004 0000 46         sys_info|clock_
    000775  5a   002160 0000 20
    000776  9a   777002 0000 46         pds|cpu_time
    000777  5a   002157 0000 00
    001000  9a   777000 0000 46         pds|virtual_delta
    001001  5a   002156 0000 00
    001002  9a   776776 0000 46         pds|page_waits
    001003  5a   002155 0000 00
    001004  9a   776774 0000 46         ring_alarm|poll
    001005  5a   002154 0000 00
    001006  9a   776772 0000 46         pds|pre_empt_poll_return
    001007  5a   002153 0000 00
    001010  9a   776770 0000 46         pxss|pre_empt_poll
    001011  5a   002152 0000 00
    001012  9a   776766 0000 46         access_audit_|check_general
    001013  5a   002151 0000 00
    001014  9a   776764 0000 46         access_audit_|check_general_user
    001015  5a   002150 0000 00
    001016  9a   776762 0000 46         access_audit_|check_obj_class_range
    001017  5a   002147 0000 00
    001020  9a   776760 0000 46         access_audit_|check_obj_class_range_user
    001021  5a   002146 0000 00
    001022  9a   776756 0000 46         access_audit_|check_obj_class
    001023  5a   002145 0000 00
    001024  9a   776754 0000 46         access_audit_|check_obj_class_user
    001025  5a   002144 0000 00
    001026  9a   776752 0000 46         access_audit_|check_obj_path
    001027  5a   002143 0000 00
    001030  9a   776750 0000 46         access_audit_|check_obj_path_user
    001031  5a   002142 0000 00
    001032  9a   776746 0000 46         access_audit_|check_obj_ptr
    001033  5a   002141 0000 00
    001034  9a   776744 0000 46         access_audit_|check_obj_ptr_user
    001035  5a   002140 0000 00
    001036  9a   776742 0000 46         access_audit_|log_general
    001037  5a   002137 0000 00
    001040  9a   776740 0000 46         access_audit_|log_general_user
    001041  5a   002136 0000 00
    001042  9a   776736 0000 46         access_audit_|log_obj_class_range
    001043  5a   002135 0000 00
    001044  9a   776734 0000 46         access_audit_|log_obj_class_range_user
    001045  5a   002134 0000 00
    001046  9a   776732 0000 46         access_audit_|log_obj_class
    001047  5a   002133 0000 00
    001050  9a   776730 0000 46         access_audit_|log_obj_class_user
    001051  5a   002132 0000 00
    001052  9a   776726 0000 46         access_audit_|log_obj_path
    001053  5a   002131 0000 00
    001054  9a   776724 0000 46         access_audit_|log_obj_path_user
    001055  5a   002130 0000 00
    001056  9a   776722 0000 46         access_audit_|log_obj_ptr
    001057  5a   002127 0000 00
    001060  9a   776720 0000 46         access_audit_|log_obj_ptr_user
    001061  5a   002126 0000 00
    001062  9a   776716 0000 46         access_audit_|log_no_process
    001063  5a   002125 0000 00
    001064  9a   776714 0000 46         access_audit_util_|get_audit_flags
    001065  5a   002124 0000 00
    001066  9a   776712 0000 46         access_audit_util_|set_audit_flags
    001067  5a   002123 0000 00
    001070  9a   776710 0000 46         level|set_admin_gate
    001071  5a   002122 0000 00
    001072  9a   776706 0000 46         ring_0_peek|ring_0_peek
    001073  5a   002121 0000 00
    001074  9a   776704 0000 46         append|master_dir
    001075  5a   002120 0000 00
    001076  9a   776702 0000 46         private_logical_volume|connect
    001077  5a   002117 0000 00
    001100  9a   776700 0000 46         get_mcm_meters|chan_star_list
    001101  5a   002116 0000 00
    001102  9a   776676 0000 46         ocdcm_|console_free
    001103  5a   002115 0000 00
    001104  9a   776674 0000 46         uid_path_util|decode_uidpath_priv
    001105  5a   002114 0000 00
    001106  9a   776672 0000 46         level_0_|delentry_file
    001107  5a   002113 0000 00
    001110  9a   776670 0000 46         delentry|duid_mdir
    001111  5a   002112 0000 00
    001112  9a   776666 0000 46         delentry|duid_mdir_priv
    001113  5a   002111 0000 00
    001114  9a   776664 0000 46         private_logical_volume|disconnect
    001115  5a   002110 0000 00
    001116  9a   776662 0000 46         fs_get|ex_mode_name
    001117  5a   002107 0000 00
    001120  9a   776660 0000 46         get_mcm_meters|get_mcm_meters
    001121  5a   002106 0000 00
    001122  9a   776656 0000 46         hc_tune|get
    001123  5a   002105 0000 00
    001124  9a   776654 0000 46         uid_path_util|get_uidpath
    001125  5a   002104 0000 00
    001126  9a   776652 0000 46         pxss|guaranteed_eligibility_off
    001127  5a   002103 0000 00
    001130  9a   776650 0000 46         pxss|guaranteed_eligibility_on
    001131  5a   002102 0000 00
    001132  9a   776646 0000 46         ioi_assignment|add_device
    001133  5a   002101 0000 00
    001134  9a   776644 0000 46         ioi_assignment|assign
    001135  5a   002100 0000 00
    001136  9a   776642 0000 46         ioi_assignment|delete_device
    001137  5a   002077 0000 00
    001140  9a   776640 0000 46         ioi_assignment|unassign
    001141  5a   002076 0000 00
    001142  9a   776636 0000 46         ioi_set|level
    001143  5a   002075 0000 00
    001144  9a   776634 0000 46         ioi_set|max_timeout
    001145  5a   002074 0000 00
    001146  9a   776632 0000 46         ioi_set|max_workspace
    001147  5a   002073 0000 00
    001150  9a   776630 0000 46         tc_util|ips_wakeup
    001151  5a   002072 0000 00
    001152  9a   776626 0000 46         hc_tune|list
    001153  5a   002071 0000 00
    001154  9a   776624 0000 46         getuid|getuid
    001155  5a   002070 0000 00
    001156  9a   776622 0000 46         status_|get_mdir_status
    001157  5a   002067 0000 00
    001160  9a   776620 0000 46         status_|get_mdir_status_priv
    001161  5a   002066 0000 00
    001162  9a   776616 0000 46         status_|get_mdir_status_uid_priv
    001163  5a   002065 0000 00
    001164  9a   776614 0000 46         ocdcm_|reconfigure
    001165  5a   002064 0000 00
    001166  9a   776612 0000 46         quota|qset
    001167  5a   002063 0000 00
    001170  9a   776610 0000 46         reclassify|sys_seg
    001171  5a   002062 0000 00
    001172  9a   776606 0000 46         set_privileges|admin_reset
    001173  5a   002061 0000 00
    001174  9a   776604 0000 46         quota|mdir_set
    001175  5a   002060 0000 00
    001176  9a   776602 0000 46         set_sons_lvid|set_sons_lvid
    001177  5a   002057 0000 00
    001200  9a   776600 0000 46         set_privileges|admin_set
    001201  5a   002056 0000 00
    001202  9a   776576 0000 46         syserr_real|ring1
    001203  5a   002055 0000 00
    001204  9a   776574 0000 46         syserr_real|ring1_binary
    001205  5a   002054 0000 00
    001206  9a   776572 0000 46         syserr_real|ring1_error_code
    001207  5a   002053 0000 00
    001210  9a   776570 0000 46         verify_lock|verify_lock_bad_dir
    001211  5a   002052 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   260127 462161 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000653 
    000020  aa   000000 000205 
    000021  aa   000432 000343 
    000022  aa   000641 000205 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000006 
    000066  aa   000116 000060 
    000067  aa   175453 020754 
    000070  aa   000000 117547 
    000071  aa   207363 000000 
    000072  aa   000132 000041 
    000073  aa   134571 651553 
    000074  aa   000000 113462 
    000075  aa   317506 600000 
    000076  aa   000143 000042 
    000077  aa   147777 464111 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   000154 000041 
    000103  aa   052721 247134 
    000104  aa   000000 105272 
    000105  aa   317215 400000 
    000106  aa   000165 000037 
    000107  aa   127236 043523 
    000110  aa   000000 112724 
    000111  aa   701744 400000 
    000112  aa   000175 000035 
    000113  aa   043243 130223 
    000114  aa   000000 102727 
    000115  aa   712743 600000 
    000116  aa   076163 160145          >special_ldd>install>MR12.3-1114>admin_gate_.alm
    000117  aa   143151 141154 
    000120  aa   137154 144144 
    000121  aa   076151 156163 
    000122  aa   164141 154154 
    000123  aa   076115 122061 
    000124  aa   062056 063055 
    000125  aa   061061 061064 
    000126  aa   076141 144155 
    000127  aa   151156 137147 
    000130  aa   141164 145137 
    000131  aa   056141 154155 
    000132  aa   076154 144144          >ldd>include>gate_macros.incl.alm
    000133  aa   076151 156143 
    000134  aa   154165 144145 
    000135  aa   076147 141164 
    000136  aa   145137 155141 
    000137  aa   143162 157163 
    000140  aa   056151 156143 
    000141  aa   154056 141154 
    000142  aa   155040 040040 
    000143  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000144  aa   076151 156143 
    000145  aa   154165 144145 
    000146  aa   076163 164141 
    000147  aa   143153 137150 
    000150  aa   145141 144145 
    000151  aa   162056 151156 
    000152  aa   143154 056141 
    000153  aa   154155 040040 
    000154  aa   076154 144144          >ldd>include>stack_frame.incl.alm
    000155  aa   076151 156143 
    000156  aa   154165 144145 
    000157  aa   076163 164141 
    000160  aa   143153 137146 
    000161  aa   162141 155145 
    000162  aa   056151 156143 
    000163  aa   154056 141154 
    000164  aa   155040 040040 
    000165  aa   076154 144144          >ldd>include>gate_data.incl.alm
    000166  aa   076151 156143 
    000167  aa   154165 144145 
    000170  aa   076147 141164 
    000171  aa   145137 144141 
    000172  aa   164141 056151 
    000173  aa   156143 154056 
    000174  aa   141154 155040 
    000175  aa   076154 144144          >ldd>include>on_unit.incl.alm
    000176  aa   076151 156143 
    000177  aa   154165 144145 
    000200  aa   076157 156137 
    000201  aa   165156 151164 
    000202  aa   056151 156143 
    000203  aa   154056 141154 
    000204  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         106    .actor                   admin_gate_:   30.
        1322    .bad_dir_desc            admin_gate_:   98.
        1320    .bad_dir_name            admin_gate_:   98.
        1360    .continue_signal         admin_gate_:   98.
         142    .defs_loop               admin_gate_:   30.
          71    .entryp                  admin_gate_:   30,   98.
         205    .gate_errordesc          admin_gate_:   30.
         202    .gate_errorname          admin_gate_:   30.
        1323    .handler                 admin_gate_:   98.
         100    .handler_entry           admin_gate_:   98.
         101    .handler_restart_entry   admin_gate_:   98.
        1363    .handler_restart_point   admin_gate_:   98.
          52    .label_variable          admin_gate_:   30,   98.
          76    .mcptr                   admin_gate_:   30,   98.
         104    .my_lp                   admin_gate_:   30,   57,   98.
         150    .next_def                admin_gate_:   30.
         206    .no_gate_error           admin_gate_:   30.
         270    .one_arg_header          admin_gate_:   30.
          56    .on_unit                 admin_gate_:   30,   98.
          70    .pf                      admin_gate_:   30.
         216    .return_code             admin_gate_:   30,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
                                                        45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
                                                        70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,
                                                        82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
                                                        94,   95,   96.
         245    .return_code_return      admin_gate_:   30.
         125    .return_name             admin_gate_:   30.
         246    .ring_alarm              admin_gate_:   30.
         100    .ring_alarm_arg_list     admin_gate_:   30.
         140    .search_defs             admin_gate_:   30.
         153    .setup                   admin_gate_:   30,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
                                                        45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
                                                        70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,
                                                        82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
                                                        94,   95,   96.
        1300    .set_dir_trap            admin_gate_:   40,   41,   42,   43,   50,   51,   52,   53,   59,   64,   65,   66,
                                                        84,   85,   86,   88,   89,   91,   98.
          50    .temp                    admin_gate_:   30.
          52    .time1                   admin_gate_:   30.
          54    .time2                   admin_gate_:   30.
           0    .tv_begin                admin_gate_:   30.
         102    .tv_end                  admin_gate_:   30.
          56    .unwinder_arglist        admin_gate_:   30,   98.
          72    .vfl_arglist             admin_gate_:   30,   98.
                access_audit_            admin_gate_:   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
                                                        46,   47,   48,   49,   50,   51,   52,   53,   54.
                access_audit_util_       admin_gate_:   55,   56.
           5    acc_aud_ck_class         admin_gate_:   38.
         333    acc_aud_ck_class.e       admin_gate_:   38.
          50    acc_aud_ck_class.t       admin_gate_:   38.
           3    acc_aud_ck_class_range   admin_gate_:   36.
         313    acc_aud_ck_class_range.e       admin_gate_:   36.
          30    acc_aud_ck_class_range.t       admin_gate_:   36.
           4    acc_aud_ck_class_range_user    admin_gate_:   37.
         323    acc_aud_ck_class_range_user.e  admin_gate_:   37.
          40    acc_aud_ck_class_range_user.t  admin_gate_:   37.
           6    acc_aud_ck_class_user    admin_gate_:   39.
         343    acc_aud_ck_class_user.e  admin_gate_:   39.
          60    acc_aud_ck_class_user.t  admin_gate_:   39.
           1    acc_aud_ck_general       admin_gate_:   34.
         273    acc_aud_ck_general.e     admin_gate_:   34.
          10    acc_aud_ck_general.t     admin_gate_:   34.
           2    acc_aud_ck_general_user  admin_gate_:   35.
         303    acc_aud_ck_general_user.e      admin_gate_:   35.
          20    acc_aud_ck_general_user.t      admin_gate_:   35.
           7    acc_aud_ck_path          admin_gate_:   40.
         353    acc_aud_ck_path.e        admin_gate_:   40.
          70    acc_aud_ck_path.t        admin_gate_:   40.
          10    acc_aud_ck_path_user     admin_gate_:   41.
         364    acc_aud_ck_path_user.e   admin_gate_:   41.
         100    acc_aud_ck_path_user.t   admin_gate_:   41.
          11    acc_aud_ck_ptr           admin_gate_:   42.
         375    acc_aud_ck_ptr.e         admin_gate_:   42.
         110    acc_aud_ck_ptr.t         admin_gate_:   42.
          12    acc_aud_ck_ptr_user      admin_gate_:   43.
         406    acc_aud_ck_ptr_user.e    admin_gate_:   43.
         120    acc_aud_ck_ptr_user.t    admin_gate_:   43.
          26    acc_aud_get_flags        admin_gate_:   55.
         553    acc_aud_get_flags.e      admin_gate_:   55.
         260    acc_aud_get_flags.t      admin_gate_:   55.
          17    acc_aud_lg_class         admin_gate_:   48.
         457    acc_aud_lg_class.e       admin_gate_:   48.
         170    acc_aud_lg_class.t       admin_gate_:   48.
          15    acc_aud_lg_class_range   admin_gate_:   46.
         437    acc_aud_lg_class_range.e       admin_gate_:   46.
         150    acc_aud_lg_class_range.t       admin_gate_:   46.
          16    acc_aud_lg_class_range_user    admin_gate_:   47.
         447    acc_aud_lg_class_range_user.e  admin_gate_:   47.
         160    acc_aud_lg_class_range_user.t  admin_gate_:   47.
          20    acc_aud_lg_class_user    admin_gate_:   49.
         467    acc_aud_lg_class_user.e  admin_gate_:   49.
         200    acc_aud_lg_class_user.t  admin_gate_:   49.
          13    acc_aud_lg_general       admin_gate_:   44.
         417    acc_aud_lg_general.e     admin_gate_:   44.
         130    acc_aud_lg_general.t     admin_gate_:   44.
          14    acc_aud_lg_general_user  admin_gate_:   45.
         427    acc_aud_lg_general_user.e      admin_gate_:   45.
         140    acc_aud_lg_general_user.t      admin_gate_:   45.
          25    acc_aud_lg_no_process    admin_gate_:   54.
         543    acc_aud_lg_no_process.e  admin_gate_:   54.
         250    acc_aud_lg_no_process.t  admin_gate_:   54.
          21    acc_aud_lg_path          admin_gate_:   50.
         477    acc_aud_lg_path.e        admin_gate_:   50.
         210    acc_aud_lg_path.t        admin_gate_:   50.
          22    acc_aud_lg_path_user     admin_gate_:   51.
         510    acc_aud_lg_path_user.e   admin_gate_:   51.
         220    acc_aud_lg_path_user.t   admin_gate_:   51.
          23    acc_aud_lg_ptr           admin_gate_:   52.
         521    acc_aud_lg_ptr.e         admin_gate_:   52.
         230    acc_aud_lg_ptr.t         admin_gate_:   52.
          24    acc_aud_lg_ptr_user      admin_gate_:   53.
         532    acc_aud_lg_ptr_user.e    admin_gate_:   53.
         240    acc_aud_lg_ptr_user.t    admin_gate_:   53.
          27    acc_aud_set_flags        admin_gate_:   56.
         563    acc_aud_set_flags.e      admin_gate_:   56.
         270    acc_aud_set_flags.t      admin_gate_:   56.
                add_device               admin_gate_:   74.
          30    admin_level_no_fs_audit  admin_gate_:   57.
         573    admin_level_no_fs_audit.e      admin_gate_:   57.
                admin_reset              admin_gate_:   90.
          31    admin_ring_zero_peek_    admin_gate_:   58.
         577    admin_ring_zero_peek_.e  admin_gate_:   58.
         300    admin_ring_zero_peek_.t  admin_gate_:   58.
                admin_set                admin_gate_:   93.
                append                   admin_gate_:   59.
          32    append_master_dir        admin_gate_:   59.
         607    append_master_dir.e      admin_gate_:   59.
         310    append_master_dir.t      admin_gate_:   59.
                assign                   admin_gate_:   75.
          33    attach_lv                admin_gate_:   60.
         620    attach_lv.e              admin_gate_:   60.
         320    attach_lv.t              admin_gate_:   60.
        1170    call_offset              stack_header:        80.
                chan_star_list           admin_gate_:   61.
                check_general            admin_gate_:   34.
                check_general_user       admin_gate_:   35.
                check_obj_class          admin_gate_:   38.
                check_obj_class_range    admin_gate_:   36.
                check_obj_class_range_user     admin_gate_:   37.
                check_obj_class_user     admin_gate_:   39.
                check_obj_path           admin_gate_:   40.
                check_obj_path_user      admin_gate_:   41.
                check_obj_ptr            admin_gate_:   42.
                check_obj_ptr_user       admin_gate_:   43.
                clock_                   admin_gate_:   30.
          34    comm_chan_star_list      admin_gate_:   61.
         630    comm_chan_star_list.e    admin_gate_:   61.
         330    comm_chan_star_list.t    admin_gate_:   61.
                connect                  admin_gate_:   60.
          35    console_free             admin_gate_:   62.
         640    console_free.e           admin_gate_:   62.
         340    console_free.t           admin_gate_:   62.
                cpu_time                 admin_gate_:   30.
          36    decode_uidpath           admin_gate_:   63.
         650    decode_uidpath.e         admin_gate_:   63.
         350    decode_uidpath.t         admin_gate_:   63.
                decode_uidpath_priv      admin_gate_:   63.
                delentry                 admin_gate_:   65,   66.
          37    delentry_file            admin_gate_:   64.
         660    delentry_file.e          admin_gate_:   64.
         360    delentry_file.t          admin_gate_:   64.
                delete_device            admin_gate_:   76.
          40    delete_master_dir        admin_gate_:   65.
         671    delete_master_dir.e      admin_gate_:   65.
         370    delete_master_dir.t      admin_gate_:   65.
          41    delete_master_dir_priv   admin_gate_:   66.
         702    delete_master_dir_priv.e       admin_gate_:   66.
         400    delete_master_dir_priv.t       admin_gate_:   66.
          42    detach_lv                admin_gate_:   67.
         713    detach_lv.e              admin_gate_:   67.
         410    detach_lv.t              admin_gate_:   67.
                disconnect               admin_gate_:   67.
                duid_mdir                admin_gate_:   65.
                duid_mdir_priv           admin_gate_:   66.
        1174    entry_offset             stack_header:        84.
                ex_mode_name             admin_gate_:   68.
                fs_get                   admin_gate_:   68.
          43    fs_get_ex_mode           admin_gate_:   68.
         723    fs_get_ex_mode.e         admin_gate_:   68.
         420    fs_get_ex_mode.t         admin_gate_:   68.
           5    gate_entry_data.calls    admin_gate_:   30,
                                         gate_data:     30.
           0    gate_entry_data.cpu_time       admin_gate_:   30,
                                               gate_data:     27.
           4    gate_entry_data.page_waits     admin_gate_:   30,
                                               gate_data:     29.
           6    gate_entry_data.ring_alarms    admin_gate_:   30,
                                               gate_data:     31.
           2    gate_entry_data.vcpu_time      admin_gate_:   30,
                                               gate_data:     28.
          10    gate_entry_data_size     admin_gate_:   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
                                                        46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,   58,
                                                        59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
                                                        71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,   82,
                                                        83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,   94,
                                                        95,   96,
                                         gate_data:     25.
           2    gate_table.datap         gate_data:     20.
           1    gate_table.entryl        gate_data:     19.
           0    gate_table.entryp        gate_data:     18.
           3    gate_table_size          gate_data:     15.
                get                      admin_gate_:   70.
                getuid                   admin_gate_:   83.
                get_audit_flags          admin_gate_:   55.
          44    get_comm_meters          admin_gate_:   69.
         733    get_comm_meters.e        admin_gate_:   69.
         430    get_comm_meters.t        admin_gate_:   69.
                get_mcm_meters           admin_gate_:   61,   69.
                get_mdir_status          admin_gate_:   84.
                get_mdir_status_priv     admin_gate_:   85.
                get_mdir_status_uid_priv       admin_gate_:   86.
          45    get_tuning_parameter     admin_gate_:   70.
         743    get_tuning_parameter.e   admin_gate_:   70.
         440    get_tuning_parameter.t   admin_gate_:   70.
          46    get_uidpath              admin_gate_:   71.
         753    get_uidpath.e            admin_gate_:   71.
         450    get_uidpath.t            admin_gate_:   71.
          47    guaranteed_eligibility_off     admin_gate_:   72.
         763    guaranteed_eligibility_off.e   admin_gate_:   72.
         460    guaranteed_eligibility_off.t   admin_gate_:   72.
          50    guaranteed_eligibility_on      admin_gate_:   73.
         773    guaranteed_eligibility_on.e    admin_gate_:   73.
         470    guaranteed_eligibility_on.t    admin_gate_:   73.
                hc_tune                  admin_gate_:   70,   82.
          51    ioi_add_device           admin_gate_:   74.
        1003    ioi_add_device.e         admin_gate_:   74.
         500    ioi_add_device.t         admin_gate_:   74.
                ioi_assignment           admin_gate_:   74,   75,   76,   77.
          52    ioi_attach               admin_gate_:   75.
        1013    ioi_attach.e             admin_gate_:   75.
         510    ioi_attach.t             admin_gate_:   75.
          53    ioi_delete_device        admin_gate_:   76.
        1023    ioi_delete_device.e      admin_gate_:   76.
         520    ioi_delete_device.t      admin_gate_:   76.
          54    ioi_detach               admin_gate_:   77.
        1033    ioi_detach.e             admin_gate_:   77.
         530    ioi_detach.t             admin_gate_:   77.
          55    ioi_promote              admin_gate_:   78.
        1043    ioi_promote.e            admin_gate_:   78.
         540    ioi_promote.t            admin_gate_:   78.
                ioi_set                  admin_gate_:   78,   79,   80.
          56    ioi_set_to_max           admin_gate_:   79.
        1053    ioi_set_to_max.e         admin_gate_:   79.
         550    ioi_set_to_max.t         admin_gate_:   79.
          57    ioi_set_ws_max           admin_gate_:   80.
        1063    ioi_set_ws_max.e         admin_gate_:   80.
         560    ioi_set_ws_max.t         admin_gate_:   80.
          60    ips_wakeup               admin_gate_:   81.
        1073    ips_wakeup.e             admin_gate_:   81.
         570    ips_wakeup.t             admin_gate_:   81.
                level                    admin_gate_:   57,   78.
                level_0_                 admin_gate_:   64.
          10    linkage                  admin_gate_:   30,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
                                                        45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,
                                                        70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,
                                                        82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,
                                                        94,   95,   96.
                list                     admin_gate_:   82.
          61    list_tuning_parameters   admin_gate_:   82.
        1103    list_tuning_parameters.e       admin_gate_:   82.
         600    list_tuning_parameters.t       admin_gate_:   82.
                log_general              admin_gate_:   44.
                log_general_user         admin_gate_:   45.
                log_no_process           admin_gate_:   54.
                log_obj_class            admin_gate_:   48.
                log_obj_class_range      admin_gate_:   46.
                log_obj_class_range_user       admin_gate_:   47.
                log_obj_class_user       admin_gate_:   49.
                log_obj_path             admin_gate_:   50.
                log_obj_path_user        admin_gate_:   51.
                log_obj_ptr              admin_gate_:   52.
                log_obj_ptr_user         admin_gate_:   53.
         104    main                     admin_gate_:   30,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
                                                        45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
                                                        69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,
                                                        81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
                                                        93,   94,   95,   96,   98.
          62    make_uid                 admin_gate_:   83.
        1113    make_uid.e               admin_gate_:   83.
         610    make_uid.t               admin_gate_:   83.
                master_dir               admin_gate_:   59.
                max_timeout              admin_gate_:   79.
                max_workspace            admin_gate_:   80.
                mdir_set                 admin_gate_:   91.
          63    mdir_status              admin_gate_:   84.
        1123    mdir_status.e            admin_gate_:   84.
         620    mdir_status.t            admin_gate_:   84.
          64    mdir_status_priv         admin_gate_:   85.
        1134    mdir_status_priv.e       admin_gate_:   85.
         630    mdir_status_priv.t       admin_gate_:   85.
          65    mdir_status_uid_priv     admin_gate_:   86.
        1145    mdir_status_uid_priv.e   admin_gate_:   86.
         640    mdir_status_uid_priv.t   admin_gate_:   86.
                ocdcm_                   admin_gate_:   62,   87.
          66    ocdcm_reconfigure        admin_gate_:   87.
        1156    ocdcm_reconfigure.e      admin_gate_:   87.
         650    ocdcm_reconfigure.t      admin_gate_:   87.
           2    on_unit.body             admin_gate_:   98,
                                         on_unit:        5.
           6    on_unit.file             on_unit:        9.
          10    on_unit.file_copy        on_unit:       10.
           5    on_unit.flags            on_unit:        8.
           0    on_unit.name             admin_gate_:   98,
                                         on_unit:        4.
           5    on_unit.next             on_unit:        7.
           4    on_unit.size             admin_gate_:   98,
                                         on_unit:        6.
                page_waits               admin_gate_:   30.
                pds                      admin_gate_:   30.
                poll                     admin_gate_:   30.
                pre_empt_poll            admin_gate_:   30.
                pre_empt_poll_return     admin_gate_:   30.
                private_logical_volume   admin_gate_:   60,   67.
        1171    push_offset              stack_header:        81.
                pxss                     admin_gate_:   30,   72,   73.
                qset                     admin_gate_:   88.
                quota                    admin_gate_:   88,   91.
          67    quota_set                admin_gate_:   88.
        1166    quota_set.e              admin_gate_:   88.
         660    quota_set.t              admin_gate_:   88.
                reclassify               admin_gate_:   89.
          70    reclassify_sys_seg       admin_gate_:   89.
        1177    reclassify_sys_seg.e     admin_gate_:   89.
         670    reclassify_sys_seg.t     admin_gate_:   89.
                reconfigure              admin_gate_:   87.
          71    reset_privileges         admin_gate_:   90.
        1210    reset_privileges.e       admin_gate_:   90.
         700    reset_privileges.t       admin_gate_:   90.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                ring1                    admin_gate_:   94.
                ring1_binary             admin_gate_:   95.
                ring1_error_code         admin_gate_:   96.
                ring_0_peek              admin_gate_:   58.
                ring_alarm               admin_gate_:   30.
                set_admin_gate           admin_gate_:   57.
                set_audit_flags          admin_gate_:   56.
          72    set_mdir_quota           admin_gate_:   91.
        1220    set_mdir_quota.e         admin_gate_:   91.
         710    set_mdir_quota.t         admin_gate_:   91.
          74    set_privileges           admin_gate_:   90,   93.
        1241    set_privileges.e         admin_gate_:   93.
         730    set_privileges.t         admin_gate_:   93.
          73    set_sons_lvid            admin_gate_:   92.
        1231    set_sons_lvid.e          admin_gate_:   92.
         720    set_sons_lvid.t          admin_gate_:   92.
                signal_                  admin_gate_:   30.
         174    signal_arglist           admin_gate_:   30.
          73    stach_header.trace_top_ptr     stack_header:        62.
          32    stack_frame.arg_ptr      admin_gate_:   98,
                                         stack_frame:   16.
         100    stack_frame.condition_bit      admin_gate_:   98,
                                               stack_frame:   32.
          20    stack_frame.condition_word     stack_frame:    9.
        2000    stack_frame.crawl_out_bit      stack_frame:   28.
          26    stack_frame.entry_ptr    stack_frame:   13.
          20    stack_frame.flag_word    admin_gate_:   98,
                                         stack_frame:   24.
         400    stack_frame.link_trap_bit      stack_frame:   30.
          30    stack_frame.lp_ptr       admin_gate_:   30,
                                         stack_frame:   15.
       20000    stack_frame.main_proc_bit      stack_frame:   25.
          60    stack_frame.min_length   stack_frame:   23.
          22    stack_frame.next_sp      stack_frame:   10.
          36    stack_frame.on_unit_rel_ptrs   admin_gate_:   98,
                                               stack_frame:   19.
          30    stack_frame.operator_ptr       stack_frame:   14.
          37    stack_frame.operator_ret_ptr   stack_frame:   20.
          20    stack_frame.prev_sp      admin_gate_:   30,   98,
                                         stack_frame:    8.
          40    stack_frame.regs         stack_frame:   22.
          24    stack_frame.return_ptr   admin_gate_:   30,
                                         stack_frame:   12.
       10000    stack_frame.run_unit_manager   stack_frame:   26.
        1000    stack_frame.signaller_bit      stack_frame:   29.
          22    stack_frame.signaller_word     stack_frame:   11.
        4000    stack_frame.signal_bit   stack_frame:   27.
          34    stack_frame.static_ptr   stack_frame:   17.
         200    stack_frame.support_bit  stack_frame:   31.
          35    stack_frame.support_ptr  stack_frame:   18.
          37    stack_frame.translator_id      stack_frame:   21.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   admin_gate_:   30,
                                               stack_header:        37.
          24    stack_header.stack_end_ptr     admin_gate_:   30,
                                               stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
                status_                  admin_gate_:   84,   85,   86.
          75    syserr                   admin_gate_:   94.
        1251    syserr.e                 admin_gate_:   94.
         740    syserr.t                 admin_gate_:   94.
          76    syserr_binary            admin_gate_:   95.
        1261    syserr_binary.e          admin_gate_:   95.
         750    syserr_binary.t          admin_gate_:   95.
          77    syserr_error_code        admin_gate_:   96.
        1271    syserr_error_code.e      admin_gate_:   96.
         760    syserr_error_code.t      admin_gate_:   96.
                syserr_real              admin_gate_:   94,   95,   96.
                sys_info                 admin_gate_:   30.
                sys_seg                  admin_gate_:   89.
                tc_util                  admin_gate_:   81.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
           0    transfer_vector          admin_gate_:   30,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
                                                        45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,
                                                        69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,
                                                        81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,
                                                        93,   94,   95,   96,   98.
         102    tv_end                   admin_gate_:   30.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
                uid_path_util            admin_gate_:   63,   71.
                unassign                 admin_gate_:   77.
                unwinder_                admin_gate_:   98.
                verify_lock              admin_gate_:   98.
                verify_lock_bad_dir      admin_gate_:   98.
                virtual_delta            admin_gate_:   30.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
