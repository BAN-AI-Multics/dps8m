	COMPILATION LISTING OF SEGMENT !BBBJNnWCLNPMDC
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 06/04/84  1241.1 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 bce_probe_data: proc;
        7 
        8 /* Data needed by parts of bce_probe */
        9 
       10 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
       11 
       12 dcl  PADSTAR		        (1) char (32) init ("pad*") int static options (constant);
       13 dcl  1 cds_data		        aligned like cds_args;
       14 dcl  code			        fixed bin (35);
       15 dcl  com_err_		        entry () options (variable);
       16 dcl  create_data_segment_	        entry (ptr, fixed bin (35));
       17 dcl  (null, size)		        builtin;
       18 
       19 dcl  1 bce_probe_data	        aligned,
       20        2 nt_seg_info_ptr	        ptr,		/* to seg_info describing current name_table */
       21        2 slt_seg_info_ptr	        ptr,		/* to seg_info describing current slt */
       22        2 my_seg_info_ptr	        ptr,		/* current seg_info */
       23        2 last_segnum	        fixed bin (15),	/* highest segnum valid for this dbr */
       24        2 address		        aligned like bce_probe_data$address;  /* current address */
       25 
       26 	unspec (cds_data) = "0"b;
       27 	cds_data.sections (1).p = addr (bce_probe_data);
       28 	cds_data.sections (1).len = size (bce_probe_data);
       29 	cds_data.sections (1).struct_name = "bce_probe_data";
       30 	cds_data.seg_name = "bce_probe_data";
       31 	cds_data.num_exclude_names = 1;
       32 	cds_data.exclude_array_ptr = addr (PADSTAR);
       33 	cds_data.have_text = "1"b;
       34 
       35 	call create_data_segment_ (addr (cds_data), code);
       36 	if code ^= 0
       37 	then call com_err_ (code, "bce_probe_data");
       38 	return;
       39  /* BEGIN bce_probe_data_.incl.pl1 */
  1     2 
  1     3 /* Data needed by various bce_probe utilities.
  1     4*Keith Loepere, December 1983. */
  1     5 
  1     6 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
  1     7 
  1     8 dcl  1 bce_probe_data$address         aligned ext,	/* description of the current (or whatever) address */
  1     9        2 type		        fixed bin,
  1    10        2 pvtx		        fixed bin,		/* for disk address */
  1    11        2 record_num		        fixed bin (18),
  1    12        2 pad		        bit (36),
  1    13        2 reg_ptr		        ptr,		/* addr of register (in toehold or breakpoint_page) */
  1    14        2 segnum		        fixed bin (15),	/* for virtual */
  1    15        2 wordnum		        fixed bin (26),	/* either way */
  1    16        2 default_mode	        fixed bin,
  1    17        2 default_len	        fixed bin (24),	/* in bits */
  1    18        2 error_name		        char (32) unal;	/* used in error msgs */
  1    19 
  1    20 dcl  bce_probe_data$last_segnum       fixed bin (15) ext;	/* highest segnum valid for this dbr */
  1    21 dcl  bce_probe_data$my_seg_info_ptr   ptr ext;		/* to current seg_info */
  1    22 dcl  bce_probe_data$nt_seg_info_ptr   ptr ext;		/* to seg_info describing current name_table */
  1    23 dcl  bce_probe_data$slt_seg_info_ptr  ptr ext;		/* to seg_info describing current slt */
  1    24 
  1    25 /* Address modes */
  1    26 
  1    27 dcl  Absolute		        fixed bin static options (constant) init (1); /* address */
  1    28 dcl  Disk			        fixed bin static options (constant) init (4); /* address */
  1    29 dcl  Register		        fixed bin static options (constant) init (3); /* address */
  1    30 dcl  Virtual		        fixed bin static options (constant) init (5); /* address */
  1    31 
  1    32 /* END include file bce_probe_data_.incl.pl1 */
       39 
       40  /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       40 
       41      end bce_probe_data;
       42 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    06/01/84  1452.5  !BBBJNnWCLNPMDC.pl1               >spec>temp>bce>40-00>bce_probe_data.cds
39           1    06/01/84  1100.4  bce_probe_data_.incl.pl1          >spec>temp>bce>40-00>bce_probe_data_.incl.pl1
40           2    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
PADSTAR                         000000 constant        char(32)                 initial array unaligned dcl 12 set ref 32
bce_probe_data                  000146 automatic       structure                level 1 dcl 19 set ref 27 28
bce_probe_data$address          000016 external static structure                level 1 dcl 1-8
cds_args                               based           structure                level 1 dcl 2-3
cds_data                        000100 automatic       structure                level 1 dcl 13 set ref 26* 35 35
code                            000145 automatic       fixed bin(35,0)          dcl 14 set ref 35* 36 36*
com_err_                        000012 constant        entry                    external dcl 15 ref 36
create_data_segment_            000014 constant        entry                    external dcl 16 ref 35
exclude_array_ptr        42     000100 automatic       pointer                  level 2 dcl 13 set ref 32*
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed unaligned dcl 13 set ref 33*
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 13 set ref 28*
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 13 set ref 31*
p                               000100 automatic       pointer                  array level 3 dcl 13 set ref 27*
sections                        000100 automatic       structure                array level 2 dcl 13
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 13 set ref 30*
size                                                   builtin function         dcl 17 ref 28
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 13 set ref 29*
switches                 44     000100 automatic       structure                level 2 dcl 13

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Absolute                               constant        fixed bin(17,0)          initial dcl 1-27
Disk                                   constant        fixed bin(17,0)          initial dcl 1-28
Register                               constant        fixed bin(17,0)          initial dcl 1-29
Virtual                                constant        fixed bin(17,0)          initial dcl 1-30
bce_probe_data$last_segnum      000020 external static fixed bin(15,0)          dcl 1-20
bce_probe_data$my_seg_info_ptr  000022 external static pointer                  dcl 1-21
bce_probe_data$nt_seg_info_ptr  000024 external static pointer                  dcl 1-22
bce_probe_data$slt_seg_info_ptr 000026 external static pointer                  dcl 1-23
exclude_names                          based           char(32)                 array unaligned dcl 2-18
null                                                   builtin function         dcl 17

NAME DECLARED BY EXPLICIT CONTEXT.
bce_probe_data                  000017 constant        entry                    external dcl 6

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 27 32 35 35
unspec                                                 builtin function         ref 26

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       222         252     105         232
Length      1546     105        30        1257     114           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bce_probe_data                      146 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bce_probe_data           000100 cds_data                    bce_probe_data
                         000145 code                        bce_probe_data
                         000146 bce_probe_data              bce_probe_data

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
bce_probe_data$address        bce_probe_data$last_segnum    bce_probe_data$my_seg_info_ptr
bce_probe_data$nt_seg_info_ptr                              bce_probe_data$slt_seg_info_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000016        26 000024        27 000027        28 000031        29 000033        30 000036        31 000041
     32 000043        33 000045        35 000047        36 000061        38 000104


Object Segment >spec>temp>bce>40-00>bce_probe_data
Created on 06/04/84  1241.2 mst Mon
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Monday, August 15, 1983

        Object    Text    Defs    Link    Symb  Static
Start        0       0      32     114     124     124
Length     312      32      62      10     152       0


7 Definitions:


segname:    bce_probe_data

text|10         address
text|6          last_segnum
text|4          my_seg_info_ptr
text|0          nt_seg_info_ptr
text|2          slt_seg_info_ptr
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
