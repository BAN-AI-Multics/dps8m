ASSEMBLY LISTING OF SEGMENT >spec>install>1111>move_r_or_t_.alm                                                                                                                                     
ASSEMBLED ON:	11/11/89  0932.5 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " This procedure is called by numeric_to_ascii_ to move a float dec(59)
                                    13  " value with rounding or truncation to specified number of digits
                                    14  "
                                    15  " Usage:
                                    16  "		dcl move_r_or_t_ entry(float dec(59),float dec(59),fixed bin)
                                    17  "		call move_r_or_t_(target,source,precision)
                                    18  "
                                    19  " precision = 0	straight move
                                    20  "	  < 0	truncate
                                    21  "	  > 0	round
                                    22  "
                                    23  " This routine runs in the stack frame of its caller.
                                    24  "
                                    25  " Initial Version: 29 January 1974 by Barry L. Wolman
                                    26  "
                        000000      27  	segdef	move_r_or_t_
                                    28  "
                        000002      29  	equ	target,2
                        000004      30  	equ	source,4
                        000006      31  	equ	precision,6
                                    32  "
    000000                          33  move_r_or_t_:
    000000  aa  0 00002 3515 20     34  	epp1	ap|target,*	get target ptr
    000001  aa  0 00004 3521 20     35  	epp2	ap|source,*	get source ptr
    000002  aa   000000 6200 00     36  	eax0	0		assume rounding
    000003  aa  0 00006 2351 20     37  	lda	ap|precision,*	get desired precision
    000004  0a   000022 6000 00     38  	tze	dont_care		easy if zero
    000005  aa   000003 6050 04     39  	tpl	3,ic		skip if rounding
    000006  aa   000001 6200 00     40  	eax0	1		set truncate
    000007  aa   000000 5310 00     41  	neg	0		and get abs value
    000010  aa   000073 1150 07     42  	cmpa	59,dl		easy if greater than 59 wanted
    000011  0a   000022 6050 00     43  	tpl	dont_care
    000012  aa   000002 0750 07     44  	ada	2,dl		get length for descriptor
    000013  0a   000026 7160 10     45  	xec	mvn,0		move with round|truncate
    000014  aa   200000 000075      46  	desc9fl	2|0,61		source
    000015  aa   100000 000005      47  	desc9fl	1|0,al		target
    000016  aa  0 00100 3005 40     48  	mvn	(pr,rl),(pr)	move back to full length
    000017  aa   100000 000005      49  	desc9fl	1|0,al
    000020  aa   100000 000075      50  	desc9fl	1|0,61
    000021  aa  7 00044 7101 20     51  	short_return
                                    52  "
    000022                          53  dont_care:
    000022  aa  0 00100 3005 00     54  	mvn	(pr),(pr)
    000023  aa   200000 000075      55  	desc9fl	2|0,61
    000024  aa   100000 000075      56  	desc9fl	1|0,61
    000025  aa  7 00044 7101 20     57  	short_return
                                    58  "
    000026  aa  0 00340 3005 00     59  mvn:	mvn	(pr),(pr,rl),round
    000027  aa  0 00140 3005 00     60  	mvn	(pr),(pr,rl)
                                    61  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000030  5a   000003 000000 
    000031  5a   000030 600000 
    000032  aa   000000 000000 
    000033  55   000012 000002 
    000034  5a   000002 400003 
    000035  55   000006 000012 
    000036  aa  014 155 157 166
    000037  aa  145 137 162 137
    000040  aa  157 162 137 164
    000041  aa  137 000 000 000
    000042  55   000021 000003 
    000043  0a   000000 400000 
    000044  55   000015 000003 
    000045  aa  014 155 157 166         move_r_or_t_
    000046  aa  145 137 162 137
    000047  aa  157 162 137 164
    000050  aa  137 000 000 000
    000051  55   000002 000012 
    000052  6a   000000 400002 
    000053  55   000024 000003 
    000054  aa  014 163 171 155         symbol_table
    000055  aa  142 157 154 137
    000056  aa  164 141 142 154
    000057  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000060  aa   000000 000015 
    000061  aa   000000 000000 
    000062  aa   000000 000000 
    000063  aa   000000 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  aa   000000 000000 
    000067  5a   000021 000000 
    000070  aa   000000 000000 
    000071  aa   000000 000000 
    000072  aa   000000 000000 
    000073  5a   000012 000000 
    000074  aa   000000 000000 
    000075  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000076  aa   000001 000000 
    000077  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000030 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   245716 420046 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000127 
    000020  aa   000000 000103 
    000021  aa   000112 000107 
    000022  aa   000121 000103 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000043 
    000067  aa   175453 017470 
    000070  aa   000000 117547 
    000071  aa   176163 000000 
    000072  aa   076163 160145          >spec>install>1111>move_r_or_t_.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061061 
    000076  aa   061061 076155 
    000077  aa   157166 145137 
    000100  aa   162137 157162 
    000101  aa   137164 137056 
    000102  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          22    dont_care                move_r_or_t_:        38,   43,   53.
           0    move_r_or_t_             move_r_or_t_:        27,   33.
          26    mvn                      move_r_or_t_:        45,   59.
           6    precision                move_r_or_t_:        31,   37.
           4    source                   move_r_or_t_:        30,   35.
           2    target                   move_r_or_t_:        29,   34.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
