	COMPILATION LISTING OF SEGMENT !BBBJZjXjcLNBgd
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1004.8 mst Sat
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 /* TC_DATA - This is the Traffic Controller Database. */
       13 /* Last modified (Date and reason):
       14*   2/6/76	by S. Webber Initial coding  
       15*   6/20/79 by Mike Grady to init max_maxe
       16*   3/4/81 by J. Bongiovanni not to set prds_length (it's done from the header
       17*         or the TBLS Config Card)
       18*   3/21/81 by J. Bongiovanni for max_stopped_stack_0, initialization NTO,
       19*         response time metering
       20*   6/27/81 by J. Bongiovanni for tuning parameter changes (-tcpu, +pre_empt_sample_time,
       21*         gp_at_notify and gp_at_ptlnotify off by default
       22*   1/82 BIM for stk truncation tuning parms.
       23*   4/27/82 by J. Bongiovanni to change post_purge to OFF
       24*   August 1982, J. Bongiovanni, for realtime_io parameters
       25*   830916 to replace tty_polling_time with opc_polling_time... -E. A. Ranzenbach
       26*   840120 to initialize apt_size by Keith Loepere
       27*   841029 by M. Pandolf to init tc_suspend_lock
       28*   841206 for next_ring0_timer by Keith Loepere.
       29**/
       30 
       31 tc_data: proc;
       32 
       33 /* This program creates the tc_data base */
       34 
       35 /* Automatic */
       36 
       37 dcl 1 cdsa aligned like cds_args;
       38 dcl  code fixed bin (35);
       39 dcl  big_time fixed bin (71);
       40 
       41 /* Based */
       42 
       43 dcl 1 tc_data aligned like tcm based (tcmp);
       44 
       45 /* Static */
       46 
       47 dcl  exclude_pad (1) char (32) aligned static options (constant) init ("pad*");
       48 
       49 /* Builtins */
       50 
       51 dcl (addr, bin, null, rel, size, string, unspec) builtin;
       52 
       53 /* Entries */
       54 
       55 dcl  com_err_ entry options (variable);
       56 dcl  create_data_segment_ entry (ptr, fixed bin (35));
       57 dcl  get_temp_segment_ entry (char (*), ptr, fixed bin (35));
       58 dcl  release_temp_segment_ entry (char (*), ptr, fixed bin (35));
       59 
       60 
       61 
       62 
       63 	call get_temp_segment_ ("tc_data", tcmp, code);
       64 
       65 /* Check offsets assumed by BOS */
       66 
       67 	call check_offset_for_bos (addr (tc_data.apt_offset), 171, "apt_offset");
       68 	call check_offset_for_bos (addr (tc_data.apt_size), 203, "apt_size");
       69 	call check_offset_for_bos (addr (tc_data.apt_entry_size), 215, "apt_entry_size");
       70 
       71 
       72 	tc_data.apt_offset = rel (addr (tc_data.apt));
       73 	tc_data.apt_lock = -1;			/* -1 = unlocked */
       74 	tc_data.metering_lock = -1;			/* 0 = locked */
       75 	tc_data.working_set_factor = 1;
       76 	tc_data.ncpu = 0;
       77 	tc_data.itt_size = 155;
       78 	tc_data.dst_size = 155;
       79 	tc_data.apt_size = 40;
       80 	tc_data.initializer_id = (36)"1"b;
       81 	tc_data.max_eligible = 6*262144;
       82 	tc_data.max_max_eligible = 16*262144;
       83 	tc_data.max_stopped_stack_0 = 4;
       84 	tc_data.apt_entry_size = size (apte);
       85 	tc_data.pds_length = 1024;
       86 
       87 	tc_data.interactive_q.fp = rel (addr (tc_data.interactive_q));
       88 	tc_data.interactive_q.bp = rel (addr (tc_data.interactive_q));
       89 	tc_data.interactive_q.sentinel = (36)"1"b;
       90 
       91 	tc_data.max_hproc_segno = 191;		/* largest (default) hardcore segment number */
       92 	tc_data.dst_ptr = null;
       93 	tc_data.old_user = null;
       94 	tc_data.tefirst = 2000000;
       95 	tc_data.telast = 2000000;
       96 	tc_data.timax = 8000000;
       97 	tc_data.process_initial_quantum = 2000000;
       98 	tc_data.gp_at_notify = 0;			/* off by default */
       99 	tc_data.gp_at_ptlnotify = 0;			/* off by default */
      100 	tc_data.pre_empt_sample_time = 40000;		/* 40 milliseconds */
      101 	tc_data.max_timer_register = 40000;
      102 
      103 	tc_data.tc_suspend_lock = ""b;
      104 
      105 	tc_data.sort_to_elhead = 1;
      106 	tc_data.auto_tune_ws = 1;
      107 	tc_data.ocore = .01b;
      108 	tc_data.stk_truncate = "1"b;
      109 	tc_data.stk_truncate_always = "0"b;
      110 
      111 /* See fast_hc_ipc, but the rolling average of steps/block is calculated */
      112 /* as NEW_AVERAGE = factor*NEW_VALUE + (1-factor)*OLD_AVERAGE */
      113 
      114 	tc_data.stk_trunc_avg_f1 = 0.9375; /* 15/16 */
      115 	tc_data.stk_trunc_avg_f2 = 1b - tc_data.stk_trunc_avg_f1;
      116 
      117 	tc_data.lock_error_severity = 1; /* CRASH */
      118 
      119 	tc_data.realtime_q.fp = rel (addr (tc_data.realtime_q));
      120 	tc_data.realtime_q.bp = rel (addr (tc_data.realtime_q));
      121 	tc_data.realtime_q.sentinel = (36)"1"b;
      122 
      123 	tc_data.eligible_q_head.fp = rel (addr (tc_data.eligible_q_tail));
      124 	tc_data.eligible_q_head.bp = "0"b;
      125 	tc_data.eligible_q_head.sentinel = (36)"1"b;
      126 
      127 	tc_data.eligible_q_tail.fp = rel (addr (tc_data.idle_tail));
      128 	tc_data.eligible_q_tail.bp = rel (addr (tc_data.eligible_q_head));
      129 	tc_data.eligible_q_tail.sentinel = (36)"1"b;
      130 
      131 	tc_data.idle_tail.fp = "0"b;
      132 	tc_data.idle_tail.bp = rel (addr (tc_data.eligible_q_tail));
      133 	tc_data.idle_tail.sentinel = (36)"1"b;
      134 
      135 	tc_data.min_eligible = 2*262144;
      136 	tc_data.guaranteed_elig_inc = 250000;
      137 	tc_data.priority_sched_inc = 80000000;
      138 	tc_data.int_q_enabled = 1;
      139 	tc_data.fnp_buffer_threshold = 30;		/* fnp tries to keep > this many free buff */
      140 
      141 	unspec (big_time) = "000000000000000000001111111111111111111111111111111111111111111111111111"b;
      142 	tc_data.end_of_time = big_time;
      143 	tc_data.next_alarm_time = big_time;		/* gets zeroed by tc_init$part_2 */
      144 	tc_data.priority_sched_time = big_time;
      145 	tc_data.opc_polling_time = big_time;
      146 	tc_data.disk_polling_time = big_time;
      147 	tc_data.tape_polling_time = big_time;
      148 	tc_data.imp_polling_time = big_time;
      149 	tc_data.mos_polling_time = big_time;
      150 	tc_data.volmap_polling_time = big_time;
      151 	tc_data.next_ring0_timer = big_time;
      152 	tc_data.realtime_io_deadline = 0;
      153 	tc_data.realtime_io_quantum = 5000;		/* 5 milliseconds */
      154 
      155 	tc_data.max_channels = 6;
      156 
      157 	tc_data.init_wait_timeout = 5000000;		/* 5 second NTO during initialization		*/
      158 	tc_data.init_timeout_severity = 0;		/* beep					*/
      159 	tc_data.vcpu_response_bounds_size = VCPU_RESPONSE_BOUNDS;
      160 	tc_data.vcpu_response_bounds (1) = 500000;	/* 1/2 second				*/
      161 	tc_data.vcpu_response_bounds (2) = 1000000;	/* 1 second				*/
      162 	tc_data.vcpu_response_bounds (3) = 10000000;	/* 10 seconds				*/
      163 	
      164 
      165 	tc_data.default_procs_required = (8) "1"b;	/* all CPUs */
      166 /* Now set up call to create data base */
      167 
      168 	cdsa.sections (1).p = addr (tc_data);
      169 	cdsa.sections (1).len = size (tc_data);
      170 	cdsa.sections (1).struct_name = "tc_data";
      171 
      172 	cdsa.seg_name = "tc_data";
      173 	cdsa.num_exclude_names = 1;
      174 	cdsa.exclude_array_ptr = addr (exclude_pad);
      175 
      176 	string (cdsa.switches) = "0"b;
      177 	cdsa.switches.have_text = "1"b;
      178 
      179 	call create_data_segment_ (addr (cdsa), code);
      180 
      181 	call release_temp_segment_ ("tc_data", tcmp, code);
      182 
      183 
      184 check_offset_for_bos:
      185 	proc (item_ptr, bos_offset, item_name);
      186 	
      187 	dcl item_ptr ptr;				/* pointer to item in tc_data			*/
      188 	dcl bos_offset fixed bin (18);		/* location assumed by BOS			*/
      189 	dcl item_name char (*);			/* name of item in structure			*/
      190 	
      191 	if bin (rel (item_ptr)) ^= bos_offset
      192 	     then call com_err_ (0, "tc_data", "^a not at BOS-assumed offset (^d=^oo)",
      193 	     item_name, bos_offset, bos_offset);
      194 	
      195 	
      196      end check_offset_for_bos;
      197      
      198 	
      199 	
      200 
      201 
      202 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      203 
      204 
      205 
      206 
  2     1 /*  BEGIN INCLUDE FILE ... apte.incl.pl1 */
  2     2 
  2     3 /* Modified 1984-11-11 by E. Swenson for IPC event channel validation. */
  2     4 
  2     5 dcl  aptep pointer;
  2     6 
  2     7 dcl 1 apte based (aptep) aligned,			/* APT entry declaration for an active (known) process */
  2     8     2 thread unaligned,				/* List thread */
  2     9       3 fp bit (18),				/* Forward pointer */
  2    10       3 bp bit (18),				/* Backward pointer */
  2    11     2 flags unaligned,				/* Flags and miscellaneous */
  2    12       3 mbz bit (1),				/* This bit must be zero (sentinel bit) */
  2    13       3 wakeup_waiting bit (1),			/* ON if process has received wakeup */
  2    14       3 stop_pending bit (1),				/* ON if process has received stop connect */
  2    15       3 pre_empted bit (1),				/* ON if process is being pre-empted by get_processor */
  2    16       3 hproc bit (1),				/* ON if process is hardcore process */
  2    17       3 loaded bit (1),				/* ON if required per-process pages are in memory and wired */
  2    18       3 eligible bit (1),				/* ON if process is eligible */
  2    19       3 idle bit (1),				/* ON if  this is an idle process */
  2    20       3 interaction bit (1),				/* ON if process has interacted recently */
  2    21       3 pre_empt_pending bit (1),			/* ON if process has received pre-empt connect */
  2    22       3 default_procs_required bit (1),			/* ON if apte.procs_required is system default */
  2    23       3 realtime_burst bit (1),			/* ON if next eligibility is realtime */
  2    24       3 always_loaded bit (1),			/* ON if process is not to be unloaded */
  2    25       3 dbr_loaded bit (1),				/* ON if DBR is loaded on some CPU */
  2    26       3 being_loaded bit (1),				/* ON if somebody loading this process */
  2    27       3 shared_stack_0 bit (1),			/* ON if a shared stack_0 is assigned */
  2    28       3 page_wait_flag bit (1),			/* flag ON if waiting for page */
  2    29       3 firstsw bit (1),				/* OFF until process is intialized */
  2    30       3 state bit (18),				/* execution state */
  2    31     2 page_faults fixed bin (35),			/* total page faults for the process */
  2    32     2 processid bit (36),				/* bit 0-17: offset of ATPE */
  2    33 						/* bit 18-35: sequential number */
  2    34     2 te fixed bin (35),				/* virtual time since eligibility award */
  2    35     2 ts fixed bin (35),				/* virtual time since scheduling */
  2    36     2 ti fixed bin (35),				/* virtual time since interaction */
  2    37     2 timax fixed bin (35),				/* maximum value allowed for apte.ti */
  2    38 
  2    39 /* * * * * * * * */
  2    40 
  2    41     2 ipc_pointers unaligned,
  2    42       3 event_thread bit (18),			/* relative pointer to ITT list */
  2    43       3 pad3 bit (18),
  2    44     2 ips_message bit (36),				/* IPS signals pending */
  2    45     2 asteps unaligned,				/* relative ASTE pointers */
  2    46       3 pds bit (18),				/* PDS (per-process) */
  2    47       3 dseg bit (18),				/* DSEG (per-process) */
  2    48       3 prds bit (18),				/* PRDS (per-processor) */
  2    49     2 savex7 bit (18) unaligned,			/* x7 at call to getwork (return point in pxss) */
  2    50     2 term_processid bit (36),			/* process to send wakeup at temination */
  2    51     2 lock_id bit (36),				/* File System unqieu ID associated with process */
  2    52     2 time_used_clock fixed bin (71),			/* Total CPU time when process last lost CPU */
  2    53 
  2    54 /* * * * * * * * */
  2    55 
  2    56     2 wait_event bit (36) aligned,			/* Event ID process awaiting */
  2    57     2 wct_index bit (18) unaligned,			/* rel offset of WCTE */
  2    58     2 flags2 unaligned,
  2    59       3 priority_scheduling bit (1),			/* ON if guaranteed eligibility */
  2    60       3 special_wakeups bit (6),			/* Special wakeup channels */
  2    61       3 pad7 bit (7),
  2    62       3 batch bit (1),				/* ON if absentee */
  2    63       3 pr_tag bit (3),				/* CPU tag running or last run */
  2    64     2 state_change_time fixed bin (71),			/* Time apte.state last changed */
  2    65     2 alarm_event fixed bin (71),			/* wakeup event for alarm clock manager */
  2    66     2 alarm_time_thread bit (18) unaligned,		/* thread of processes with pending alarms */
  2    67     2 alarm_time bit (54) unaligned,			/* wakeup time for alarm */
  2    68 
  2    69 /* * * * * * */
  2    70 
  2    71     2 term_channel fixed bin (71),			/* wakeup event for account overflow */
  2    72     2 ws_size fixed bin,				/* working set estimate for the process */
  2    73     2 temax fixed bin (35),				/* maximum eligibility slice (vcpu) */
  2    74     2 deadline fixed bin (71),			/* time of next run */
  2    75     2 lock bit (18) unaligned,			/* 0 => APTE locked, unlocked => return point of last unlock */
  2    76     2 unusable bit (18) unaligned,			/* locking routines destroy */
  2    77     2 cpu_monitor fixed bin (35),			/* if not 0, send wakeup to term_processid when virtual cpu
  2    78*						/* reaches this (units = 1/1024 sec) */
  2    79     2 paging_measure fixed bin (71),			/* cumulative memory units */
  2    80     2 access_authorization bit (72),			/* authorization of this process */
  2    81     2 dbr fixed bin (71),				/* DBR value (constant since DSEG entry-held) */
  2    82 
  2    83     2 virtual_cpu_time fixed bin (71),			/* cumulative virtual CPU time for the process */
  2    84     2 ittes_sent fixed bin (18),			/* Unprocessed ITTs sent by this process */
  2    85     2 ittes_got fixed bin (18),			/* Unprocessed ITTs received by this process */
  2    86 
  2    87 /*  Cells used to drive and instrument finite-state model for response time
  2    88*    measurement. Maintained by meter_response_time */
  2    89 
  2    90     2 current_response_state fixed bin (17) unaligned,	/* Process state in modle */
  2    91     2 pad18 bit (18) unaligned,
  2    92     2 number_processing fixed bin (35),			/* Number interactions */
  2    93     2 last_response_state_time fixed bin (71),		/* Clock time at last response state change */
  2    94     2 total_processing_time fixed bin (71),		/* Total interaction processing time */
  2    95 
  2    96 /* * * * * * */
  2    97 
  2    98     2 begin_interaction_vcpu fixed bin (71),		/* Virtual cpu at beginning of last interaction */
  2    99 
  2   100 /*  End of cells for finite-state model */
  2   101 
  2   102     2 saved_temax fixed bin (35),			/* temax at eligibility award */
  2   103     2 procs_required bit (8) unaligned,			/* bit mask of CPUs this process can run */
  2   104     2 pad4 bit (28) unaligned,
  2   105     2 ipc_r_offset fixed bin (18) unsigned,
  2   106     2 ipc_r_factor fixed bin (35) unsigned,
  2   107     2 apad (10) fixed bin (35);
  2   108 
  2   109 /*  END INCLUDE FILE ... apte.incl.pl1 */
      207 
      208 
      209 
      210 
  3     1 /* BEGIN INCLUDE FILE ... tcm.incl.pl1 ... used to generate tc_data cds */
  3     2 /* NOTE -- This include file has TWO counterparts in ALM: tc_meters.incl.alm and */
  3     3 /* wcte.incl.alm. They cannot be produced with cif, and must be kept up to date manually. */
  3     4 /* Modified 830914 to replace tty_polling_time with opc_polling_time... -E. A. Ranzenbach */
  3     5 /* Modified 1984.05.21 by M. Pandolf to add tc_suspend_lock */
  3     6 /* Modified 1984.11.26 by Keith Loepere for uid_array. */
  3     7 /* Modified 1984.12.06 by Keith Loepere for page create delaying. */
  3     8 
  3     9 dcl  tcmp ptr;
  3    10 
  3    11 dcl 1 tcm aligned based (tcmp),
  3    12     2 tc_suspend_lock like lock,			/* when locked, tc is suspended */
  3    13     2 cid2 fixed bin (18),
  3    14     2 cid3 fixed bin (18),
  3    15     2 cid4 fixed bin (18),
  3    16     2 depth_count fixed bin (18),			/* depth last process run */
  3    17     2 loadings fixed bin (18),			/* number of process loadings */
  3    18 
  3    19     2 blocks fixed bin (18),				/* number of calls to block */
  3    20     2 wakeups fixed bin (18),				/* number of calls to wakeup */
  3    21     2 waits fixed bin (18),				/* number of calls to wait */
  3    22     2 notifies fixed bin (18),			/* number of calls to notify */
  3    23     2 schedulings fixed bin (18),
  3    24     2 interactions fixed bin (18),			/* number of interactive schedulings */
  3    25     2 avequeue fixed bin (35, 18),			/* recent time average of number in queue */
  3    26     2 te_wait fixed bin (18),				/* times te called from wait */
  3    27 
  3    28     2 te_block fixed bin (18),			/* times te updated from block */
  3    29     2 te_i_stop fixed bin (18),			/* times te updated from i_stop */
  3    30     2 te_pre_empt fixed bin (18),			/* times te updated from pre_empt */
  3    31     2 p_interactions fixed bin,			/* times interaction bit turned off because of high priority */
  3    32     2 idle fixed bin (71),				/* total idle time */
  3    33     2 mp_idle fixed bin (71),				/* multi-programming idle */
  3    34 
  3    35     2 nmp_idle fixed bin (71),			/* non-multi-programming idle time */
  3    36     2 zero_idle fixed bin (71),			/* zero idle time */
  3    37     2 last_time fixed bin (71),			/* last time a process was run */
  3    38     2 loop_locks fixed bin (18),			/* times looped on the APT lock */
  3    39     2 loop_lock_time fixed bin (18),			/* time looping on the APT lock */
  3    40     2 ave_eligible fixed bin (35, 18),			/* average length of eligible queue */
  3    41     2 sort_to_elhead fixed bin (18),			/* 0=> no one,1 => int've only, 2 => everybody */
  3    42     2 processor_time fixed bin (71),			/* total processor time on system */
  3    43     2 response_time fixed bin (71),			/* estimate of response time */
  3    44     2 eligible_time fixed bin (71),			/* estimate of eligible time */
  3    45     2 response_count fixed bin,			/* count of response meters */
  3    46     2 eligible_count fixed bin,			/* count of eligible meters */
  3    47     2 quit_counts (0:5) fixed bin,			/* array of buckets indexed by state */
  3    48     2 loading_idle fixed bin (71),			/* loading_idle time */
  3    49     2 delta_vcpu fixed bin (71),			/* delta virtual CPU time for the system */
  3    50     2 post_purge_switch fixed bin,			/* ON if post purging is to be done */
  3    51     2 time_out_severity fixed bin,			/* syserr first arg for notify time outs */
  3    52     2 notify_check fixed bin,				/* obsolete */
  3    53     2 quit_priority fixed bin,			/* factor for scheduler quit response */
  3    54     2 iobm_polling_time fixed bin (71),			/* time to poll iobm */
  3    55     2 end_of_time fixed bin (71),			/* very large time */
  3    56     2 gp_at_notify fixed bin (18),			/* 0 => just do get_idle_processor */
  3    57     2 gp_at_ptlnotify fixed bin (18),			/* 0 => just do get_idle_processor */
  3    58     2 int_q_enabled fixed bin (18),			/* 0 => no intv q in percent mode */
  3    59     2 fnp_buffer_threshold fixed bin (18),		/* if fewer free buffs then stingy alloc strategy */
  3    60 						/* set this to >= half n_ttylines/fnp for safety */
  3    61 
  3    62 /* 100 octal */
  3    63 
  3    64     2 depths (8) fixed bin (18),			/* histogram of run depths */
  3    65     2 tdepths (8) fixed bin (71),			/* histogram of times run per depth */
  3    66     2 pfdepth (8) fixed bin (18),			/* histogram of page faults per depth */
  3    67 
  3    68     2 ptl_not_waits fixed bin (18),			/* times ptl_wait noticed ptl was unlocked */
  3    69     2 gw_gp_window_count fixed bin (18),		/* times window noticed */
  3    70     2 metering_lock fixed bin (18),			/* 0=locked, else unlocked */
  3    71     2 ptl_waits fixed bin (18),			/* num calls to ptl_wait */
  3    72     2 gp_start_count fixed bin (18),			/*  to detect gw_gp window lossage */
  3    73     2 gp_done_count fixed bin (18),
  3    74     2 nto_check_time fixed bin (71),			/* next time at which nto code will be called */
  3    75     2 nto_delta fixed bin (35),			/* microsec between nto checks */
  3    76     2 nto_count fixed bin (18),			/* number of times nto detected */
  3    77     2 tcpu_scheduling fixed bin (18),			/* obsolete				*/
  3    78     2 nto_event bit (36),				/* last event which NTO'd */
  3    79     2 page_notifies fixed bin (18),
  3    80     2 notify_nobody_count fixed bin (18),
  3    81     2 notify_nobody_event bit (36),
  3    82     2 system_type fixed bin,				/* used to be tcm.inter */
  3    83 
  3    84     2 stat (0:15) fixed bin (18),			/* num apte's in each state */
  3    85 
  3    86 /* 200 octal */
  3    87 
  3    88     2 wait (8),
  3    89       3 time fixed bin (18),				/* histogram of page fault waiting times versus did */
  3    90       3 count fixed bin (18),
  3    91 
  3    92     2 ready (8),
  3    93       3 time fixed bin (18),				/* histogram of times in ready queue */
  3    94       3 count fixed bin (18),
  3    95 
  3    96     2 total_pf_time fixed bin (71),			/* total time spent from start to end of
  3    97*						   all page faults */
  3    98     2 total_pf_count fixed bin (18),			/* total number of page faults metered */
  3    99     2 auto_tune_ws fixed bin (18),			/* 0=> dont, atherwise compensate for quantum len */
  3   100     2 ocore_delta fixed bin (18),			/* number of pages reserved for int users */
  3   101     2 ws_sum fixed bin (18),				/* total of eligible's ws_sizes */
  3   102     2 nonidle_force_count fixed bin (18),		/* count of eligibilities forced */
  3   103     2 itt_list_lock bit (36) aligned,			/* Lock on ITT free list */
  3   104     2 cpu_pf_time fixed bin (71),			/* total cpu time spent handling page faults */
  3   105     2 cpu_pf_count fixed bin (18),			/* total count of cpu time meterings */
  3   106     2 special_offsets unaligned,
  3   107       3 apt_offset bit (18),
  3   108       3 pad bit (18),
  3   109     2 getwork_time fixed bin (71),			/* total time spent in getwork */
  3   110     2 getwork_count fixed bin (18),			/* total times through getwork */
  3   111     2 short_pf_count fixed bin (18),			/* number of short page faults */
  3   112     2 interrupt_time fixed bin (71),			/* total time spent in interrupt */
  3   113     2 interrupt_count fixed bin (71),			/* total number of metered interrupts */
  3   114     2 ocore fixed bin (35, 18),			/* fraction of core for int've users */
  3   115     2 pre_empt_flag bit (36) aligned,			/* controls whether preempting at done time */
  3   116     2 cumulative_memory_usage fixed binary (71),		/* total number of memory usage units */
  3   117     2 processor_time_at_define_wc fixed bin (71),		/* value of processor_time when WC's last defined */
  3   118     2 boost_priority fixed bin,			/* number of times priority process given high priority */
  3   119     2 lost_priority fixed bin,			/* number of times priority process lost eligibility */
  3   120     2 total_clock_lag fixed bin (71),			/* sum of all simulated clock delays */
  3   121     2 clock_simulations fixed bin,			/* number of times alarm clock interrupt was simulated */
  3   122     2 max_clock_lag fixed bin,			/* largest simulated alarm clock delay */
  3   123 
  3   124 /* 300 octal */
  3   125 
  3   126     2 pdscopyl fixed bin (18),			/* amount of pds to copy for new process */
  3   127     2 max_hproc_segno fixed bin,			/* largest allowed hardcore segment number */
  3   128     2 prds_length fixed bin (18),			/* length of PRDS */
  3   129     2 pds_length fixed bin (18),			/* length of PDS */
  3   130     2 lock fixed bin (18),				/* process id generator lock */
  3   131     2 id bit (36) aligned,				/* next uid to be added to uid_array */
  3   132     2 system_shutdown fixed bin (18),
  3   133     2 working_set_factor fixed bin (35, 18),		/* working set factor */
  3   134 
  3   135     2 ncpu fixed bin (18),				/* number of processors currently being used */
  3   136     2 last_eligible bit (18),				/* last process to gain eligibility */
  3   137     2 apt_lock fixed bin (35),			/* + write; 0 hidden; -1 unlocked; -(N+1) Nreaders */
  3   138     2 apt_size fixed bin (18),			/* number of APT entries */
  3   139     2 realtime_q aligned like based_sentinel,		/* processes with realtime deadlines */
  3   140     2 aht_size fixed bin (18),			/* APT hash table size */
  3   141     2 itt_size fixed bin (18),			/* number of ITT entries */
  3   142 
  3   143     2 dst_size fixed bin (18),			/* number of allowed DST entries */
  3   144     2 itt_free_list bit (18),				/* pointer to ITT free list */
  3   145     2 used_itt fixed bin (18),			/* number of used ITT entries */
  3   146     2 initializer_id bit (36) aligned,			/* process id of initializer */
  3   147     2 n_eligible fixed bin (18),			/* number of processes eligible */
  3   148     2 max_eligible fixed bin (30),			/* maximum allowed number of eligible processes */
  3   149     2 wait_enable fixed bin (18),			/* turned on when waiting mechanism works */
  3   150     2 apt_entry_size fixed bin (18),			/* size of an APT entry */
  3   151 
  3   152     2 interactive_q aligned like based_sentinel,		/* head of interactive queue */
  3   153     2 dst_ptr ptr,					/* pointer to device signal table */
  3   154     2 old_user ptr,					/* last process to run (apt ptr ) */
  3   155     2 initialize_time fixed bin (71),			/* time of initialization */
  3   156 
  3   157     2 init_event fixed bin (18),			/* wait event during initialization */
  3   158     2 oldt fixed bin (18),				/* timer reading from previous process */
  3   159     2 newt fixed bin (18),				/* timer setting for new process */
  3   160     2 tefirst fixed bin (30),				/* first eligible time */
  3   161     2 telast fixed bin (30),				/* last eligible time */
  3   162     2 timax fixed bin (35),				/* time in queue for lowest level */
  3   163     2 empty_q bit (18),				/* thread of empty APT entries */
  3   164     2 working_set_addend fixed bin (18),		/* additive working set parameter */
  3   165     2 ready_q_head bit (0) aligned,			/* for added segdef */
  3   166     2 eligible_q_head aligned like based_sentinel,	/* head of eligible queue */
  3   167     2 ready_q_tail bit (0) aligned,			/* for added segdef */
  3   168     2 eligible_q_tail aligned like based_sentinel,	/* tail of eligible queue */
  3   169     2 idle_tail aligned like based_sentinel,		/* tail of idle list */
  3   170     2 min_eligible fixed bin (30),
  3   171     2 alarm_timer_list bit (18) aligned,		/* rel pointer to apt entry for next alarm timer */
  3   172     2 guaranteed_elig_inc fixed bin (35),		/* amount of guaranteed eligibility time in microsecs. */
  3   173     2 priority_sched_inc fixed bin (35),		/* amount of block time before process is given priority */
  3   174     2 next_alarm_time fixed bin (71),			/* clock time for next alarm timer */
  3   175     2 priority_sched_time fixed bin (71),		/* time for priority process to be given priority */
  3   176     2 opc_polling_time fixed bin (71),			/* time to poll console DIM */
  3   177     2 disk_polling_time fixed bin (71),			/* time to poll disk DIM */
  3   178     2 tape_polling_time fixed bin (71),			/* time to poll tape DIM */
  3   179     2 imp_polling_time fixed bin (71),			/* time to poll imp */
  3   180     2 imp_polling_lock fixed bin (18),			/* do not poll if lock set */
  3   181     2 max_channels fixed bin (18),			/* num special channels per process */
  3   182 
  3   183 /* 400 octal */
  3   184 
  3   185     2 system_virtual_time fixed bin (71),		/* non-idle virtual time */
  3   186     2 credit_bank fixed bin (71),			/* credits not yet passed out */
  3   187     2 min_wct_index bit (18) aligned,			/* offset of initializer work class table entry */
  3   188     2 max_wct_index bit (18) aligned,			/* offset of highest wcte currently defined */
  3   189     2 delta_vt fixed bin (71),			/* temp used by pxss.compute_virtual_clocks */
  3   190     2 gross_idle_time fixed bin (71),			/* idle time_used_clock */
  3   191     2 credits_per_scatter fixed bin (35),		/* total number of credits awarded at once */
  3   192     2 best_credit_value fixed bin (18),			/* temp for pxss.find_next_eligible */
  3   193     2 define_wc_time fixed bin (71),			/* clock time when workclasses last degined */
  3   194     2 max_batch_elig fixed bin (35),
  3   195     2 num_batch_elig fixed bin (35),
  3   196     2 deadline_mode fixed bin (35),			/* 0=> ti sorts, else deadline sorts */
  3   197     2 credits_scattered fixed bin (35),
  3   198     2 max_max_eligible fixed bin (30),			/* Maximum of maxe */
  3   199     2 max_stopped_stack_0 fixed bin (35),		/* Maximum stack_0's suspended by stopped procs	*/
  3   200     2 stopped_stack_0 fixed bin (35),			/* Number stack_0's suspended by stopped procs	*/
  3   201     2 mos_polling_interval fixed bin (35),		/* for heals */
  3   202     2 mos_polling_time fixed bin (71),			/* for heals */
  3   203     2 vcpu_response_bounds (VCPU_RESPONSE_BOUNDS) fixed bin (35),
  3   204     2 vcpu_response_bounds_size fixed bin (35),
  3   205     2 meter_response_time_calls fixed bin (35),
  3   206     2 meter_response_time_invalid fixed bin (35),
  3   207     2 meter_response_time_overhead fixed bin (71),
  3   208     2 init_wait_time fixed bin (71),			/* used by wait/notify during initialization	*/
  3   209     2 init_wait_timeout fixed bin (71),			/* notify-timeout interval during initialization	*/
  3   210     2 init_timeout_severity fixed bin,			/* notify-timeout severity during initialization	*/
  3   211     2 init_timeout_recurse fixed bin,			/* count of NTO recursion during initialization	*/
  3   212     2 max_timer_register fixed bin (71),		/* max cpu burst = # cpus x pre_empt_sample_time	*/
  3   213     2 pre_empt_sample_time fixed bin (35),		/* tuning parameter - max time between samples	*/
  3   214     2 governing_credit_bank fixed bin (35),		/* used for limiting eligibility on governed work classes*/
  3   215     2 process_initial_quantum fixed bin (35),		/* eligibility quantum first eligibility	*/
  3   216     2 default_procs_required bit (8) aligned,		/* default mask of CPUs required */
  3   217     2 work_class_idle fixed bin (71),			/* idle time due to work class restrictions */
  3   218 
  3   219 /* Tuning Parameters for Stack Truncation */
  3   220 
  3   221     2 stk_truncate bit (1) aligned,
  3   222     2 stk_truncate_always bit (1) aligned,
  3   223     2 stk_trunc_avg_f1 fixed bin (35, 18),
  3   224     2 stk_trunc_avg_f2 fixed bin (35, 18),
  3   225     2 lock_error_severity fixed bin,                        /* syserr severity */
  3   226 
  3   227     2 gv_integration fixed bin (35),			/* Integration interval for governing */
  3   228     2 gv_integration_set bit (1) aligned,		/* ON => gv_integration set by ctp */
  3   229     2 pauses fixed bin (35),				/* Calls to pause (reschedule) */
  3   230     2 volmap_polling_time fixed bin (71),
  3   231     2 next_ring0_timer fixed bin (71),			/* next time that ring 0 timer goes off */
  3   232     2 realtime_io_priority_switch fixed bin,		/* 0 => give I/O interrupt wakeups realtime priotiry */
  3   233     2 realtime_io_deadline fixed bin (35),		/* Delta to clock for I/O realtime deadline */
  3   234     2 realtime_io_quantum fixed bin (35),		/* Quantum for I/O realtime burst */
  3   235     2 realtime_priorities fixed bin (35),		/* Count for metering */
  3   236     2 relinquishes fixed bin (35),			/* Calls to relinquish_priority */
  3   237     2 abort_ips_mask bit (36) aligned,			/* IPS mask for tc_util$check_abort */
  3   238 
  3   239 /* 500 octal */
  3   240 
  3   241     2 uid_array (0:15) bit (36) aligned,		/* array from which a uid is chosen (randomly) */
  3   242     2 pad5 (176) fixed bin (35),			/* room for expansion compatibly		*/
  3   243 
  3   244 /* 1000 octal */
  3   245 
  3   246     2 pad7 (64) fixed bin (35),
  3   247 
  3   248 /* 1100 octal */
  3   249 
  3   250     2 pad6 (8) fixed bin (35),
  3   251     2 work_class_table aligned,			/* array of per workclass information */
  3   252       3 wcte (0:16) aligned like wct_entry,
  3   253 
  3   254 /* 3000 octal */
  3   255 
  3   256     2 apt fixed bin;
  3   257 
  3   258 dcl  wctep ptr;
  3   259 
  3   260 dcl 1 wct_entry aligned based (wctep),			/* Work class entry */
  3   261     2 thread unaligned,				/* Ready list */
  3   262       3 fp bit (18),				/* Head of ready list */
  3   263       3 bp bit (18),				/* Tail of ready list */
  3   264     2 flags unaligned,
  3   265       3 mnbz bit (1),				/* Sentinel bit must not be zero. */
  3   266       3 defined bit (1),
  3   267       3 io_priority bit (1),
  3   268       3 governed bit (1),
  3   269       3 interactive_q bit (1),
  3   270       3 pad bit (31),
  3   271     2 credits fixed bin (35),				/* Current worthiness of group */
  3   272     2 minf fixed bin (35),				/* min fraction of cpu */
  3   273     2 pin_weight fixed bin (35),			/* number of cycles to pin pages */
  3   274     2 eligibilities fixed bin (35),			/* Count of eligibilities awarded */
  3   275     2 cpu_sum fixed bin (71),				/* CPU used by members */
  3   276     2 resp1 fixed bin (71),
  3   277     2 resp2 fixed bin (71),
  3   278     2 quantum1 fixed bin (35),
  3   279     2 quantum2 fixed bin (35),
  3   280     2 rmeter1 fixed bin (71),
  3   281     2 rmeter2 fixed bin (71),
  3   282     2 rcount1 fixed bin (35),
  3   283     2 rcount2 fixed bin (35),
  3   284     2 realtime fixed bin (35),
  3   285     2 purging fixed bin (35),
  3   286     2 maxel fixed bin (35),
  3   287     2 nel fixed bin (35),
  3   288     2 number_thinks fixed bin (35),			/* number times process entered "think" state	*/
  3   289     2 number_queues fixed bin (35),			/* number times process entered "queued" state	*/
  3   290     2 total_think_time fixed bin (71),
  3   291     2 total_queue_time fixed bin (71),
  3   292 
  3   293 /*  The next three arrays  correspond to the array vcpu_response_bounds				*/
  3   294 
  3   295     2 number_processing (VCPU_RESPONSE_BOUNDS+1) fixed bin (35), /* number times entered "processing" state	*/
  3   296     2 total_processing_time (VCPU_RESPONSE_BOUNDS+1) fixed bin (71),
  3   297     2 total_vcpu_time (VCPU_RESPONSE_BOUNDS+1) fixed bin (71),
  3   298     2 maxf fixed bin (35),				/* maximum fraction of cpu time		*/
  3   299     2 governing_credits fixed bin (35),			/* for limiting cpu resources			*/
  3   300     2 pad1 (4) fixed bin (35);
  3   301 	
  3   302 
  3   303 dcl 1 based_sentinel aligned based,			/* format of pxss-style sentinel */
  3   304     2 fp bit (18) unal,
  3   305     2 bp bit (18) unal,
  3   306     2 sentinel bit (36) aligned;
  3   307 
  3   308 dcl VCPU_RESPONSE_BOUNDS fixed bin init (3) int static options (constant);
  3   309 
  3   310 /* END INCLUDE FILE tcm.incl.pl1 */
      211 
      212 
      213 
      214 
  4     1 /* Begin include file hc_lock.incl.pl1 BIM 2/82 */
  4     2 /* Replaced by hc_fast_lock.incl.pl1 RSC 11/84 because name of structure
  4     3*   encourages name conflicts.
  4     4*   USE HC_FAST_LOCK INSTEAD!
  4     5**/
  4     6 
  4     7 /* Lock format suitable for use with lock$lock_fast, unlock_fast */
  4     8 
  4     9 /* format: style3 */
  4    10 
  4    11 declare	lock_ptr		pointer;
  4    12 declare	1 lock		aligned based (lock_ptr),
  4    13 	  2 pid		bit (36) aligned,		/* holder of lock */
  4    14 	  2 event		bit (36) aligned,		/* event associated with lock */
  4    15 	  2 flags		aligned,
  4    16 	    3 notify_sw	bit (1) unaligned,
  4    17 	    3 pad		bit (35) unaligned;		/* certain locks use this pad, like dirs */
  4    18 
  4    19 /* End include file hc_lock.incl.pl1 */
      215 
      216 
      217      end tc_data;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0859.4  !BBBJZjXjcLNBgd.pl1               >spec>install>1115>tc_data.cds
203          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
207          2    01/06/85  1422.2  apte.incl.pl1                     >ldd>include>apte.incl.pl1
211          3    01/30/85  1523.9  tcm.incl.pl1                      >ldd>include>tcm.incl.pl1
215          4    01/06/85  1422.1  hc_lock.incl.pl1                  >ldd>include>hc_lock.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
VCPU_RESPONSE_BOUNDS            004326 constant        fixed bin(17,0)          initial dcl 3-308 ref 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 72 72 72 72 97 100
                                                                                  101 108 109 114 115 115 117 150 151 152 153 157
                                                                                  158 159 159 165 169 169 169 169 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260 3-260 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260
addr                                                   builtin function         dcl 51 ref 67 67 68 68 69 69 72 87 88 119 120 123
                                                                                  127 128 132 168 174 179 179
apt                                    based           fixed bin(17,0)          level 2 dcl 43 set ref 72
apt_entry_size          327            based           fixed bin(18,0)          level 2 dcl 43 set ref 69 69 84*
apt_lock                312            based           fixed bin(35,0)          level 2 dcl 43 set ref 73*
apt_offset              253            based           bit(18)                  level 3 packed packed unaligned dcl 43 set ref 67 67
                                                                                  72*
apt_size                313            based           fixed bin(18,0)          level 2 dcl 43 set ref 68 68 79*
apte                                   based           structure                level 1 dcl 2-7 ref 84
aptep                           000150 automatic       pointer                  dcl 2-5 ref 84 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
                                                                                  2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7 2-7
auto_tune_ws            243            based           fixed bin(18,0)          level 2 dcl 43 set ref 106*
based_sentinel                         based           structure                level 1 dcl 3-303
big_time                        000146 automatic       fixed bin(71,0)          dcl 39 set ref 141* 142 143 144 145 146 147 148 149
                                                                                  150 151
bin                                                    builtin function         dcl 51 ref 191
bos_offset                             parameter       fixed bin(18,0)          dcl 188 set ref 184 191 191* 191*
bp                      352(18)        based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  128*
bp                      314(18)        based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  120*
bp                      350(18)        based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  124*
bp                      354(18)        based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  132*
bp                      330(18)        based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  88*
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000100 automatic       structure                level 1 dcl 37 set ref 179 179
code                            000145 automatic       fixed bin(35,0)          dcl 38 set ref 63* 179* 181*
com_err_                        000012 constant        entry                    external dcl 55 ref 191
create_data_segment_            000014 constant        entry                    external dcl 56 ref 179
default_procs_required                 based           bit(8)                   level 2 dcl 43 set ref 165*
disk_polling_time       370            based           fixed bin(71,0)          level 2 dcl 43 set ref 146*
dst_ptr                 332            based           pointer                  level 2 dcl 43 set ref 92*
dst_size                320            based           fixed bin(18,0)          level 2 dcl 43 set ref 78*
eligible_q_head         350            based           structure                level 2 dcl 43 set ref 128
eligible_q_tail         352            based           structure                level 2 dcl 43 set ref 123 132
end_of_time              72            based           fixed bin(71,0)          level 2 dcl 43 set ref 142*
exclude_array_ptr        42     000100 automatic       pointer                  level 2 dcl 37 set ref 174*
exclude_pad                     000000 constant        char(32)                 initial array dcl 47 set ref 174
fnp_buffer_threshold     77            based           fixed bin(18,0)          level 2 dcl 43 set ref 139*
fp                      330            based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  87*
fp                      350            based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  123*
fp                      354            based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  131*
fp                      352            based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  127*
fp                      314            based           bit(18)                  level 3 in structure "tc_data" packed packed
                                                                                  unaligned dcl 43 in procedure "tc_data" set ref
                                                                                  119*
get_temp_segment_               000016 constant        entry                    external dcl 57 ref 63
gp_at_notify             74            based           fixed bin(18,0)          level 2 dcl 43 set ref 98*
gp_at_ptlnotify          75            based           fixed bin(18,0)          level 2 dcl 43 set ref 99*
guaranteed_elig_inc     360            based           fixed bin(35,0)          level 2 dcl 43 set ref 136*
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 37 set ref 177*
idle_tail               354            based           structure                level 2 dcl 43 set ref 127
imp_polling_time        374            based           fixed bin(71,0)          level 2 dcl 43 set ref 148*
init_timeout_severity                  based           fixed bin(17,0)          level 2 dcl 43 set ref 158*
init_wait_timeout                      based           fixed bin(71,0)          level 2 dcl 43 set ref 157*
initializer_id          323            based           bit(36)                  level 2 dcl 43 set ref 80*
int_q_enabled            76            based           fixed bin(18,0)          level 2 dcl 43 set ref 138*
interactive_q           330            based           structure                level 2 dcl 43 set ref 87 88
item_name                              parameter       char                     packed unaligned dcl 189 set ref 184 191*
item_ptr                               parameter       pointer                  dcl 187 ref 184 191
itt_size                317            based           fixed bin(18,0)          level 2 dcl 43 set ref 77*
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 37 set ref 169*
lock                                   based           structure                level 1 dcl 4-12
lock_error_severity                    based           fixed bin(17,0)          level 2 dcl 43 set ref 117*
lock_ptr                        000156 automatic       pointer                  dcl 4-11 ref 4-12 4-12 4-12 4-12 4-12 4-12
max_channels            377            based           fixed bin(18,0)          level 2 dcl 43 set ref 155*
max_eligible            325            based           fixed bin(30,0)          level 2 dcl 43 set ref 81*
max_hproc_segno         301            based           fixed bin(17,0)          level 2 dcl 43 set ref 91*
max_max_eligible        422            based           fixed bin(30,0)          level 2 dcl 43 set ref 82*
max_stopped_stack_0     423            based           fixed bin(35,0)          level 2 dcl 43 set ref 83*
max_timer_register                     based           fixed bin(71,0)          level 2 dcl 43 set ref 101*
metering_lock           142            based           fixed bin(18,0)          level 2 dcl 43 set ref 74*
min_eligible            356            based           fixed bin(30,0)          level 2 dcl 43 set ref 135*
mos_polling_time        426            based           fixed bin(71,0)          level 2 dcl 43 set ref 149*
ncpu                    310            based           fixed bin(18,0)          level 2 dcl 43 set ref 76*
next_alarm_time         362            based           fixed bin(71,0)          level 2 dcl 43 set ref 143*
next_ring0_timer                       based           fixed bin(71,0)          level 2 dcl 43 set ref 151*
null                                                   builtin function         dcl 51 ref 92 93
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 37 set ref 173*
ocore                   264            based           fixed bin(35,18)         level 2 dcl 43 set ref 107*
old_user                334            based           pointer                  level 2 dcl 43 set ref 93*
opc_polling_time        366            based           fixed bin(71,0)          level 2 dcl 43 set ref 145*
p                               000100 automatic       pointer                  array level 3 dcl 37 set ref 168*
pds_length              303            based           fixed bin(18,0)          level 2 dcl 43 set ref 85*
pre_empt_sample_time                   based           fixed bin(35,0)          level 2 dcl 43 set ref 100*
priority_sched_inc      361            based           fixed bin(35,0)          level 2 dcl 43 set ref 137*
priority_sched_time     364            based           fixed bin(71,0)          level 2 dcl 43 set ref 144*
process_initial_quantum                based           fixed bin(35,0)          level 2 dcl 43 set ref 97*
realtime_io_deadline                   based           fixed bin(35,0)          level 2 dcl 43 set ref 152*
realtime_io_quantum                    based           fixed bin(35,0)          level 2 dcl 43 set ref 153*
realtime_q              314            based           structure                level 2 dcl 43 set ref 119 120
rel                                                    builtin function         dcl 51 ref 72 87 88 119 120 123 127 128 132 191
release_temp_segment_           000020 constant        entry                    external dcl 58 ref 181
sections                        000100 automatic       structure                array level 2 dcl 37
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 37 set ref 172*
sentinel                315            based           bit(36)                  level 3 in structure "tc_data" dcl 43 in procedure
                                                                                  "tc_data" set ref 121*
sentinel                353            based           bit(36)                  level 3 in structure "tc_data" dcl 43 in procedure
                                                                                  "tc_data" set ref 129*
sentinel                331            based           bit(36)                  level 3 in structure "tc_data" dcl 43 in procedure
                                                                                  "tc_data" set ref 89*
sentinel                351            based           bit(36)                  level 3 in structure "tc_data" dcl 43 in procedure
                                                                                  "tc_data" set ref 125*
sentinel                355            based           bit(36)                  level 3 in structure "tc_data" dcl 43 in procedure
                                                                                  "tc_data" set ref 133*
size                                                   builtin function         dcl 51 ref 84 169
sort_to_elhead           41            based           fixed bin(18,0)          level 2 dcl 43 set ref 105*
special_offsets         253            based           structure                level 2 packed packed unaligned dcl 43
stk_trunc_avg_f1                       based           fixed bin(35,18)         level 2 dcl 43 set ref 114* 115
stk_trunc_avg_f2                       based           fixed bin(35,18)         level 2 dcl 43 set ref 115*
stk_truncate                           based           bit(1)                   level 2 dcl 43 set ref 108*
stk_truncate_always                    based           bit(1)                   level 2 dcl 43 set ref 109*
string                                                 builtin function         dcl 51 set ref 176*
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 37 set ref 170*
switches                 44     000100 automatic       structure                level 2 dcl 37 set ref 176*
tape_polling_time       372            based           fixed bin(71,0)          level 2 dcl 43 set ref 147*
tc_data                                based           structure                level 1 dcl 43 set ref 168 169
tc_suspend_lock                        based           structure                level 2 dcl 43 set ref 103*
tcm                                    based           structure                level 1 dcl 3-11
tcmp                            000152 automatic       pointer                  dcl 3-9 set ref 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43
                                                                                  43 43 43 43 43 43 43 43 43 43 43 43 63* 67 67 68
                                                                                  68 69 69 72 72 73 74 75 76 77 78 79 80 81 82 83 84
                                                                                  85 87 87 88 88 89 91 92 93 94 95 96 97 98 99 100
                                                                                  101 103 105 106 107 108 109 114 115 115 117 119
                                                                                  119 120 120 121 123 123 124 125 127 127 128 128
                                                                                  129 131 132 132 133 135 136 137 138 139 142 143
                                                                                  144 145 146 147 148 149 150 151 152 153 155 157
                                                                                  158 159 160 161 162 165 168 169 181* 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
                                                                                  3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11 3-11
tefirst                 343            based           fixed bin(30,0)          level 2 dcl 43 set ref 94*
telast                  344            based           fixed bin(30,0)          level 2 dcl 43 set ref 95*
timax                   345            based           fixed bin(35,0)          level 2 dcl 43 set ref 96*
unspec                                                 builtin function         dcl 51 set ref 141*
vcpu_response_bounds    430            based           fixed bin(35,0)          array level 2 dcl 43 set ref 160* 161* 162*
vcpu_response_bounds_size              based           fixed bin(35,0)          level 2 dcl 43 set ref 159*
volmap_polling_time                    based           fixed bin(71,0)          level 2 dcl 43 set ref 150*
wct_entry                              based           structure                level 1 dcl 3-260
wctep                           000154 automatic       pointer                  dcl 3-258 ref 3-260 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260 3-260 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260 3-260 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260 3-260 3-260 3-260 3-260 3-260 3-260
                                                                                  3-260 3-260 3-260 3-260 3-260 3-260 3-260 3-260
working_set_factor      307            based           fixed bin(35,18)         level 2 dcl 43 set ref 75*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAMES DECLARED BY EXPLICIT CONTEXT.
check_offset_for_bos            004163 constant        entry                    internal dcl 184 ref 67 68 69
tc_data                         003222 constant        entry                    external dcl 31

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      4422        4444    4330        4432
Length     21450    4330        22       14770      72           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
tc_data                             194 external procedure  is an external procedure.  
check_offset_for_bos                    internal procedure  shares stack frame of external procedure tc_data.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
tc_data                  000100 cdsa                        tc_data
                         000145 code                        tc_data
                         000146 big_time                    tc_data
                         000150 aptep                       tc_data
                         000152 tcmp                        tc_data
                         000154 wctep                       tc_data
                         000156 lock_ptr                    tc_data

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry           int_entry           trunc_fx2

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_          get_temp_segment_             release_temp_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     31 003221        63 003227        67 003251        68 003265        69 003277        72 003315        73 003357
     74 003361        75 003363        76 003365        77 003366        78 003370        79 003371        80 003373
     81 003375        82 003377        83 003401        84 003403        85 003405        87 003407        88 003412
     89 003416        91 003420        92 003422        93 003424        94 003425        95 003427        96 003430
     97 003432        98 003443        99 003444       100 003445       101 003456       103 003467       105 003475
    106 003477       107 003500       108 003502       109 003515       114 003527       115 003543       117 003577
    119 003613       120 003620       121 003626       123 003630       124 003635       125 003637       127 003641
    128 003646       129 003654       131 003656       132 003660       133 003666       135 003670       136 003672
    137 003674       138 003676       139 003700       141 003702       142 003704       143 003706       144 003707
    145 003710       146 003711       147 003712       148 003713       149 003714       150 003715       151 003734
    152 003753       153 003770       155 004007       157 004011       158 004017       159 004023       160 004025
    161 004027       162 004031       165 004033       168 004043       169 004044       170 004104       172 004107
    173 004112       174 004114       176 004116       177 004117       179 004121       181 004137       217 004162
    184 004163       191 004174       196 004251


Object Segment >spec>install>1115>tc_data
Created on 11/11/89  1005.5 mst Sat
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0    3002    5512    5522    5522
Length    6332    3002    2510      10     574       0


196 Definitions:


segname:    tc_data

text|477        abort_ips_mask
text|316        aht_size
text|357        alarm_timer_list
text|3000       apt
text|327        apt_entry_size
text|312        apt_lock
text|313        apt_size
text|243        auto_tune_ws
text|40         ave_eligible
text|16         avequeue
text|413        best_credit_value
text|10         blocks
text|272        boost_priority
text|3          cid2
text|4          cid3
text|5          cid4
text|276        clock_simulations
text|252        cpu_pf_count
text|250        cpu_pf_time
text|402        credit_bank
text|412        credits_per_scatter
text|421        credits_scattered
text|266        cumulative_memory_usage
text|420        deadline_mode
text|453        default_procs_required
text|414        define_wc_time
text|62         delta_vcpu
text|406        delta_vt
text|6          depth_count
text|100        depths
text|370        disk_polling_time
text|332        dst_ptr
text|320        dst_size
text|51         eligible_count
text|350        eligible_q_head
text|352        eligible_q_tail
text|46         eligible_time
text|346        empty_q
text|72         end_of_time
text|77         fnp_buffer_threshold
text|256        getwork_count
text|254        getwork_time
text|451        governing_credit_bank
text|74         gp_at_notify
text|75         gp_at_ptlnotify
text|145        gp_done_count
text|144        gp_start_count
text|410        gross_idle_time
text|360        guaranteed_elig_inc
text|463        gv_integration
text|464        gv_integration_set
text|141        gw_gp_window_count
text|305        id
text|24         idle
text|354        idle_tail
text|376        imp_polling_lock
text|374        imp_polling_time
text|340        init_event
text|445        init_timeout_recurse
text|444        init_timeout_severity
text|440        init_wait_time
text|442        init_wait_timeout
text|336        initialize_time
text|323        initializer_id
text|76         int_q_enabled
text|15         interactions
text|330        interactive_q
text|262        interrupt_count
text|260        interrupt_time
text|70         iobm_polling_time
text|321        itt_free_list
text|247        itt_list_lock
text|317        itt_size
text|311        last_eligible
text|34         last_time
text|60         loading_idle
text|7          loadings
text|304        lock
text|462        lock_error_severity
text|37         loop_lock_time
text|36         loop_locks
text|273        lost_priority
text|416        max_batch_elig
text|377        max_channels
text|277        max_clock_lag
text|325        max_eligible
text|301        max_hproc_segno
text|422        max_max_eligible
text|423        max_stopped_stack_0
text|446        max_timer_register
text|405        max_wct_index
text|434        meter_response_time_calls
text|435        meter_response_time_invalid
text|436        meter_response_time_overhead
text|142        metering_lock
text|356        min_eligible
text|404        min_wct_index
text|425        mos_polling_interval
text|426        mos_polling_time
text|26         mp_idle
text|324        n_eligible
text|310        ncpu
text|342        newt
text|362        next_alarm_time
text|470        next_ring0_timer
text|30         nmp_idle
text|246        nonidle_force_count
text|13         notifies
text|66         notify_check
text|155        notify_nobody_count
text|156        notify_nobody_event
text|146        nto_check_time
text|151        nto_count
text|150        nto_delta
text|153        nto_event
text|417        num_batch_elig
text|264        ocore
text|244        ocore_delta
text|334        old_user
text|341        oldt
text|366        opc_polling_time
text|23         p_interactions
text|154        page_notifies
text|465        pauses
text|303        pds_length
text|300        pdscopyl
text|130        pfdepth
text|64         post_purge_switch
text|302        prds_length
text|265        pre_empt_flag
text|450        pre_empt_sample_time
text|361        priority_sched_inc
text|364        priority_sched_time
text|452        process_initial_quantum
text|42         processor_time
text|270        processor_time_at_define_wc
text|140        ptl_not_waits
text|143        ptl_waits
text|52         quit_counts
text|67         quit_priority
text|220        ready
text|350        ready_q_head
text|352        ready_q_tail
text|473        realtime_io_deadline
text|472        realtime_io_priority_switch
text|474        realtime_io_quantum
text|475        realtime_priorities
text|314        realtime_q
text|476        relinquishes
text|50         response_count
text|44         response_time
text|14         schedulings
text|257        short_pf_count
text|41         sort_to_elhead
text|253        special_offsets
text|160        stat
text|460        stk_trunc_avg_f1
text|461        stk_trunc_avg_f2
text|456        stk_truncate
text|457        stk_truncate_always
text|424        stopped_stack_0
symb|0          symbol_table
text|306        system_shutdown
text|157        system_type
text|400        system_virtual_time
text|372        tape_polling_time
text|0          tc_suspend_lock
text|152        tcpu_scheduling
text|110        tdepths
text|20         te_block
text|21         te_i_stop
text|22         te_pre_empt
text|17         te_wait
text|343        tefirst
text|344        telast
text|345        timax
text|65         time_out_severity
text|274        total_clock_lag
text|242        total_pf_count
text|240        total_pf_time
text|500        uid_array
text|322        used_itt
text|430        vcpu_response_bounds
text|433        vcpu_response_bounds_size
text|466        volmap_polling_time
text|200        wait
text|326        wait_enable
text|12         waits
text|11         wakeups
text|454        work_class_idle
text|1110       work_class_table
text|347        working_set_addend
text|307        working_set_factor
text|245        ws_sum
text|32         zero_idle


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
