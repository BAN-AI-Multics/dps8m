ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.3-1114>bootload_error.alm                                                                                                                     
ASSEMBLED ON:	11/11/89  0936.9 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " ***********************************************************
                                     8  
                                     9  " HISTORY COMMENTS:
                                    10  "  1) change(86-05-13,GJohnson), approve(86-05-13,MCR7387),
                                    11  "     audit(86-05-13,Martinson), install(86-05-14,MR12.0-1056):
                                    12  "     Correct error message documentation.
                                    13  "                                                      END HISTORY COMMENTS
                                    14  
                                    15  
                                    16  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " 
                                    17  "
                                    18  "         BOOTLOAD_ERROR
                                    19  "
                                    20  "         This program is entered to report an error. It saves all registers,
                                    21  "         and prints a message, possibly including the invalid data. For the
                                    22  "         unexpected_fault entry, it also describes the fault.
                                    23  "
                                    24  "	Modified 9/83 by Keith Loepere for adp.
                                    25  "
                                    26  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " 
    000000                          27  	name	bootload_error
                                    28  
                                    29  	include		adp_scu
                                   1-1  
                                   1-2  
                                   1-3       "BEGIN INCLUDE FILE adp_scu.incl.alm
                                   1-4  
                                   1-5  
                                   1-6  	"Created 09/18/83  1804.5 edt Sun by convert_include_file,
                                   1-7  	"   Version of 11/07/82  1545.1 edt Sun.
                                   1-8  
                                   1-9  	"Made from >bootload>update>incl>adp_scu.incl.pl1,
                                  1-10  	"   modified 09/18/83  1804.5 edt Sun
                                  1-11  
                                  1-12  "
                                  1-13  "	Structure adp_scu
                                  1-14  "
                        000010    1-15  	equ	adp_scu_size,8
                                  1-16  
                        000000    1-17  	equ	adp_scu.unknown1_word,0
                        000026    1-18  	equ	adp_scu.unknown1_shift,22
                        037777    1-19  	bool	adp_scu.unknown1_mask,037777
                        000000    1-20  	equ	adp_scu.itc_word,0
                        000022    1-21  	equ	adp_scu.itc_shift,18
                        000017    1-22  	bool	adp_scu.itc_mask,000017
                        000000    1-23  	equ	adp_scu.op_code_word,0
                        000010    1-24  	equ	adp_scu.op_code_shift,8
                        001777    1-25  	bool	adp_scu.op_code_mask,001777
                        000000    1-26  	equ	adp_scu.i_word,0
                        000200    1-27  	bool	adp_scu.i,000200		" DL
                        000000    1-28  	equ	adp_scu.a_word,0
                        000100    1-29  	bool	adp_scu.a,000100		" DL
                        000000    1-30  	equ	adp_scu.tag_word,0
                        000000    1-31  	equ	adp_scu.tag_shift,0
                        000077    1-32  	bool	adp_scu.tag_mask,000077
                                  1-33  
                        000001    1-34  	equ	adp_scu.iro_word,1
                        400000    1-35  	bool	adp_scu.iro,400000		" DU
                        000001    1-36  	equ	adp_scu.oeb_word,1
                        200000    1-37  	bool	adp_scu.oeb,200000		" DU
                        000001    1-38  	equ	adp_scu.e_off_word,1
                        100000    1-39  	bool	adp_scu.e_off,100000	" DU
                        000001    1-40  	equ	adp_scu.orb_word,1
                        040000    1-41  	bool	adp_scu.orb,040000		" DU
                        000001    1-42  	equ	adp_scu.r_off_word,1
                        020000    1-43  	bool	adp_scu.r_off,020000	" DU
                        000001    1-44  	equ	adp_scu.owb_word,1
                        010000    1-45  	bool	adp_scu.owb,010000		" DU
                        000001    1-46  	equ	adp_scu.w_off_word,1
                        004000    1-47  	bool	adp_scu.w_off,004000	" DU
                        000001    1-48  	equ	adp_scu.no_ga_word,1
                        002000    1-49  	bool	adp_scu.no_ga,002000	" DU
                        000001    1-50  	equ	adp_scu.ocb_word,1
                        001000    1-51  	bool	adp_scu.ocb,001000		" DU
                        000001    1-52  	equ	adp_scu.ocall_word,1
                        000400    1-53  	bool	adp_scu.ocall,000400	" DU
                        000001    1-54  	equ	adp_scu.boc_word,1
                        000200    1-55  	bool	adp_scu.boc,000200		" DU
                        000001    1-56  	equ	adp_scu.zero1_word,1
                        000100    1-57  	bool	adp_scu.zero1,000100	" DU
                        000001    1-58  	equ	adp_scu.crt_word,1
                        000040    1-59  	bool	adp_scu.crt,000040		" DU
                        000001    1-60  	equ	adp_scu.ralr_word,1
                        000020    1-61  	bool	adp_scu.ralr,000020		" DU
                        000001    1-62  	equ	adp_scu.zero2_word,1
                        000010    1-63  	bool	adp_scu.zero2,000010	" DU
                        000001    1-64  	equ	adp_scu.oosb_word,1
                        000004    1-65  	bool	adp_scu.oosb,000004		" DU
                        000001    1-66  	equ	adp_scu.zero3_word,1
                        000002    1-67  	bool	adp_scu.zero3,000002	" DU
                        000001    1-68  	equ	adp_scu.zero4_word,1
                        000001    1-69  	bool	adp_scu.zero4,000001	" DU
                        000001    1-70  	equ	adp_scu.ioc_word,1
                        400000    1-71  	bool	adp_scu.ioc,400000		" DL
                        000001    1-72  	equ	adp_scu.it_word,1
                        200000    1-73  	bool	adp_scu.it,200000		" DL
                        000001    1-74  	equ	adp_scu.im_word,1
                        100000    1-75  	bool	adp_scu.im,100000		" DL
                        000001    1-76  	equ	adp_scu.if_word,1
                        040000    1-77  	bool	adp_scu.if,040000		" DL
                        000001    1-78  	equ	adp_scu.zero5_word,1
                        020000    1-79  	bool	adp_scu.zero5,020000	" DL
                        000001    1-80  	equ	adp_scu.fsdw_word,1
                        010000    1-81  	bool	adp_scu.fsdw,010000		" DL
                        000001    1-82  	equ	adp_scu.zero6_word,1
                        004000    1-83  	bool	adp_scu.zero6,004000	" DL
                        000001    1-84  	equ	adp_scu.ied_word,1
                        002000    1-85  	bool	adp_scu.ied,002000		" DL
                        000001    1-86  	equ	adp_scu.unknown2_word,1
                        000006    1-87  	equ	adp_scu.unknown2_shift,6
                        000017    1-88  	bool	adp_scu.unknown2_mask,000017
                        000001    1-89  	equ	adp_scu.hw_ind_word,1
                        000000    1-90  	equ	adp_scu.hw_ind_shift,0
                        000077    1-91  	bool	adp_scu.hw_ind_mask,000077
                                  1-92  
                        000002    1-93  	equ	adp_scu.hw_info2,2
                        000003    1-94  	equ	adp_scu.hw_info3,3
                                  1-95  
                        000004    1-96  	equ	adp_scu.ilc,4		" UPPER
                        000004    1-97  	equ	adp_scu.ir,4		" LOWER
                                  1-98  
                        000005    1-99  	equ	adp_scu.unknown3_word,5
                        000033   1-100  	equ	adp_scu.unknown3_shift,27
                        000777   1-101  	bool	adp_scu.unknown3_mask,000777
                        000005   1-102  	equ	adp_scu.tprv_word,5
                        000400   1-103  	bool	adp_scu.tprv,000400		" DU
                        000005   1-104  	equ	adp_scu.zero7_word,5
                        000200   1-105  	bool	adp_scu.zero7,000200	" DU
                        000005   1-106  	equ	adp_scu.fi_flag_word,5
                        000100   1-107  	bool	adp_scu.fi_flag,000100	" DU
                        000005   1-108  	equ	adp_scu.fi_num_word,5
                        000023   1-109  	equ	adp_scu.fi_num_shift,19
                        000037   1-110  	bool	adp_scu.fi_num_mask,000037
                        000005   1-111  	equ	adp_scu.zero8_word,5
                        000001   1-112  	bool	adp_scu.zero8,000001	" DU
                        000005   1-113  	equ	adp_scu.unknown4_word,5
                        000020   1-114  	equ	adp_scu.unknown4_shift,16
                        000003   1-115  	bool	adp_scu.unknown4_mask,000003
                        000005   1-116  	equ	adp_scu.cpu_no_word,5
                        000016   1-117  	equ	adp_scu.cpu_no_shift,14
                        000003   1-118  	bool	adp_scu.cpu_no_mask,000003
                        000005   1-119  	equ	adp_scu.unknown5_word,5
                        000000   1-120  	equ	adp_scu.unknown5_shift,0
                        037777   1-121  	bool	adp_scu.unknown5_mask,037777
                                 1-122  
                        000006   1-123  	equ	adp_scu.zero9_word,6
                        000041   1-124  	equ	adp_scu.zero9_shift,33
                        000007   1-125  	bool	adp_scu.zero9_mask,000007
                        000006   1-126  	equ	adp_scu.psr_word,6
                        000022   1-127  	equ	adp_scu.psr_shift,18
                        077777   1-128  	bool	adp_scu.psr_mask,077777
                        000006   1-129  	equ	adp_scu.prr_word,6
                        000017   1-130  	equ	adp_scu.prr_shift,15
                        000007   1-131  	bool	adp_scu.prr_mask,000007
                        000006   1-132  	equ	adp_scu.zero10_word,6
                        000013   1-133  	equ	adp_scu.zero10_shift,11
                        000017   1-134  	bool	adp_scu.zero10_mask,000017
                        000006   1-135  	equ	adp_scu.p_word,6
                        002000   1-136  	bool	adp_scu.p,002000		" DL
                        000006   1-137  	equ	adp_scu.zero11_word,6
                        000006   1-138  	equ	adp_scu.zero11_shift,6
                        000017   1-139  	bool	adp_scu.zero11_mask,000017
                        000006   1-140  	equ	adp_scu.tag43_word,6
                        000000   1-141  	equ	adp_scu.tag43_shift,0
                        000077   1-142  	bool	adp_scu.tag43_mask,000077
                                 1-143  
                        000007   1-144  	equ	adp_scu.trr_word,7
                        000041   1-145  	equ	adp_scu.trr_shift,33
                        000007   1-146  	bool	adp_scu.trr_mask,000007
                        000007   1-147  	equ	adp_scu.tsr_word,7
                        000022   1-148  	equ	adp_scu.tsr_shift,18
                        077777   1-149  	bool	adp_scu.tsr_mask,077777
                        000007   1-150  	equ	adp_scu.ca,7		" LOWER
                                 1-151  
                                 1-152       "END INCLUDE FILE adp_scu.incl.alm
                                    30            include             bootload_equs
                                   2-1  " BEGIN INCLUDE FILE bootload_equs.incl.alm
                                   2-2  " Created 10/04/80 W. Olin Sibert, mostly from bootstrap1
                                   2-3  " Modified by almost everyone, it seems.
                                   2-4  " Last modified for MR11 bootload Multics addresses starting in 1983 by
                                   2-5  "     Keith Loepere.
                                   2-6  "
                                   2-7  " This include file describes various things used by the programs in
                                   2-8  " bound_bootload_0.
                                   2-9  
                                  2-10  " Default pointer register usage:
                                  2-11  
                        000000    2-12  	equ	ds,0		" Descriptor segment
                        000001    2-13  	equ	seg2,1		" Another temporary
                        000002    2-14  	equ	mb,2		" IOM mailbox
                        000003    2-15  	equ	slt,3		" Segment loading table (SLT)
                        000004    2-16  	equ	nt,4		" Name_table
                        000005    2-17  	equ	prb,5		" Physical_record_buffer
                        000006    2-18  	equ	seg,6		" Temporary
                        000007    2-19  	equ	fv,7		" Interrupt and fault vectors
                                  2-20  
                                  2-21  " Macros
                                  2-22  
                                  2-23  	macro	equ_o
                              1   2-24  	maclist	off,save
                              2   2-25  	bool	&U,&2
                              3   2-26  	equ	&1,&U
                              4   2-27  	maclist	restore
                              5   2-28  &end
                                  2-29  
                                  2-30  	macro	set_o
                              1   2-31  	maclist	off,save
                              2   2-32  	bool	&U,&2
                              3   2-33  	set	&1,&U
                              4   2-34  	maclist	restore
                              5   2-35  &end
                                  2-36  
                                  2-37  	macro	include_nolist
                              1   2-38  	maclist	off,save
                              2   2-39  	include	&1
                              3   2-40  	maclist	restore
                              4   2-41  &end
                                  2-42  
                                  2-43  	macro	Bpush
                              1   2-44  	stx2	bootload_0$entry_stack_ptr,id
                              2   2-45  	ttn	bootload_error$out_of_stack
                              3   2-46  &end
                                  2-47  
                                  2-48  " 	Breturn	offset-from-return-point
                                  2-49  
                                  2-50  	macro	Breturn
                              1   2-51  	ldx2	bootload_0$entry_stack_ptr,di
                              2   2-52  	tra	0+&1,x2
                              3   2-53  &end
                                  2-54  
                                  2-55  "	Bentry	name,offset-from-return-point
                                  2-56  
                                  2-57  	macro	Bentry
                              1   2-58  	segdef	&1
                              2   2-59  	macro	&1_return
                              3   2-60  	Breturn	&<&K,2&[0&;&2&]
                              4   2-61  &&end
                              5   2-62  &end
                                  2-63  
                                  2-64  " 	Bentry_internal	name,offset_from_return_point
                                  2-65  
                                  2-66  	macro	Bentry_internal
                              1   2-67  	macro	&1_return	
                              2   2-68  	Breturn	&<&K,2&[0&;&2&]
                              3   2-69  &&end
                              4   2-70  &end
                                  2-71  
                                  2-72  
                                  2-73  " Definitions
                                  2-74  
                                  2-75  	equ_o	bostoe_absloc,10000		" bos_teohold
                                  2-76  	equ_o	bostoe_lth,2000
                                  2-77  
                                  2-78  	equ_o	fgbx_absloc,24000		" now in bce toehold
                                  2-79  	equ_o	fgbx_lth,2000
                                  2-80  
                                  2-81  	equ_o	toe_absloc,24000		" bootload Multics toehold
                                  2-82  	equ_o	toe_lth,4000		" This starts at a 0 mod 4 
                                  2-83  					" page address.  It is 
                                  2-84  					" bound as first element
                                  2-85  					" of bound_bootload_0.
                                  2-86  
                                  2-87  	equ_o	bbl0_absloc,24000		" bound_bootload_0 location
                                  2-88  	equ_o	bbl0_lth,22000		" and length.
                                  2-89  
                                  2-90  	equ_o	toedata_absloc,46000	" toehold_data
                                  2-91  	equ_o	toedata_lth,4000
                                  2-92  
                                  2-93  	equ_o	upt_absloc,52000		" unpaged_page_tables
                                  2-94  	equ_o	upt_lth,2000
                                  2-95  
                                  2-96  	equ_o	iupt_absloc,54000		" init_unpaged_page_tables
                                  2-97  	equ_o	iupt_lth,2000
                                  2-98  
                                  2-99  	equ_o	bkpt_absloc,56000		" breakpoint_page
                                 2-100  	equ_o	bkpt_lth,2000
                                 2-101  
                                 2-102  	equ_o	prb_absloc,60000		" physical_record_buffer
                                 2-103  	equ_o	prb_lth,6000		" memory past here up for 
                                 2-104  					" grabs
                                 2-105  
                                 2-106  " END INCLUDE FILE bootload_equs.incl.alm
                                    31  	include_nolist	bootload_formline
                                    32  	include		coll0_segnos
                                   4-1  " BEGIN INCLUDE FILE coll0_segnos.incl.alm
                                   4-2  " Modified in '83 for new bce segments, Keith Loepere.
                                   4-3  
                        000000     4-4  	equ	ds_segno_,0	" dseg
                        000001     4-5  	equ	toehold_segno_,1	" bos_toehold
                        000002     4-6  	equ	config_segno_,2	" config_deck
                        000003     4-7  	equ	dn355_mbx_segno_,3	" dn355_mailbox
                        000004     4-8  	equ	fv_segno_,4	" fault_vector
                        000005     4-9  	equ	fgbx_segno_,5	" flagbox
                        000006    4-10  	equ	nt_segno_,6	" name_table
                        000007    4-11  	equ	slt_segno_,7	" slt
                        000010    4-12  	equ	toehold_data_segno_,8 " toehold_data
                        000011    4-13  	equ	iom_mbx_segno_,9	" iom_mailbox
                        000012    4-14  	equ	upt_segno_,10	" unpaged_page_tables
                        000013    4-15  	equ	toe_segno_,11	" (bce) toehold
                                  4-16  
                        000400    4-17  	equ	bbl0_segno_,256	" bound_bootload_0
                        000401    4-18  	equ	prb_segno_,257	" physical_record_buffer
                        000402    4-19  	equ	abs_seg0_segno_,258	" abs_seg0
                        000403    4-20  	equ	iupt_segno_,259	" int_unpaged_page_tables
                        000404    4-21  	equ	ed_segno_,260	" early_dump (used for early dump save to tape)
                                  4-22  
                                  4-23  " END INCLUDE FILE coll0_segnos.incl.alm
                                    33  	include		fault_vector
                                   5-1  
                                   5-2  
                                   5-3       "BEGIN INCLUDE FILE fault_vector.incl.alm
                                   5-4  
                                   5-5  "	Modified February 1981 by J. Bongiovanni to add fault types
                                   5-6  
                                   5-7  "
                                   5-8  "	Structure fv
                                   5-9  "
                        000600    5-10  	equ	fv_size,384
                                  5-11  
                                  5-12  
                        000000    5-13  	equ	fv.ipair,0		"LEVEL 2
                                  5-14  
                        000000    5-15  	equ	fv.ipair.scu,0
                        000001    5-16  	equ	fv.ipair.tra,1
                        000100    5-17  	equ	fv.fpair,64		"LEVEL 2
                                  5-18  
                        000100    5-19  	equ	fv.fpair.scu,64
                        000101    5-20  	equ	fv.fpair.tra,65
                        000200    5-21  	equ	fv.i_tra_ptr,128
                        000300    5-22  	equ	fv.i_scu_ptr,192
                        000400    5-23  	equ	fv.f_tra_ptr,256
                        000500    5-24  	equ	fv.f_scu_ptr,320
                                  5-25  
                        000000    5-26  	equ	FAULT_NO_SDF,0		" Shutdown
                        000001    5-27  	equ	FAULT_NO_STR,1		" Store
                        000002    5-28  	equ	FAULT_NO_MME,2		" Master Mode Entry 1
                        000003    5-29  	equ	FAULT_NO_F1,3		" Fault Tag 1
                        000004    5-30  	equ	FAULT_NO_TRO,4		" Timer Runout
                        000005    5-31  	equ	FAULT_NO_CMD,5		" Command
                        000006    5-32  	equ	FAULT_NO_DRL,6		" Derail
                        000007    5-33  	equ	FAULT_NO_LUF,7		" Lockup
                        000010    5-34  	equ	FAULT_NO_CON,8		" Connect
                        000011    5-35  	equ	FAULT_NO_PAR,9		" Parity
                        000012    5-36  	equ	FAULT_NO_IPR,10		" Illegal Procedure
                        000013    5-37  	equ	FAULT_NO_ONC,11		" Operation Not Complete
                        000014    5-38  	equ	FAULT_NO_SUF,12		" Startup
                        000015    5-39  	equ	FAULT_NO_OFL,13		" Overflow
                        000016    5-40  	equ	FAULT_NO_DIV,14		" Divide Check
                        000017    5-41  	equ	FAULT_NO_EXF,15		" Execute
                        000020    5-42  	equ	FAULT_NO_DF0,16		" Directed Fault 0 (Segment Fault)
                        000021    5-43  	equ	FAULT_NO_DF1,17		" Directed FAult 1 (Page Fault)
                        000022    5-44  	equ	FAULT_NO_DF2,18		" Directed Fault 2
                        000023    5-45  	equ	FAULT_NO_DF3,19		" Directed Fault 3
                        000024    5-46  	equ	FAULT_NO_ACV,20		" Access Violation
                        000025    5-47  	equ	FAULT_NO_MME2,21		" Master Mode Entry 2
                        000026    5-48  	equ	FAULT_NO_MME3,22		" Master Mode Entry 3
                        000027    5-49  	equ	FAULT_NO_MME4,23		" Master Mode Entry 4
                        000030    5-50  	equ	FAULT_NO_F2,24		" Fault Tag 2 (Linkage Fault)
                        000031    5-51  	equ	FAULT_NO_F3,25		" Fault Tag 3
                                  5-52  					" Fault No. 26-30 are Undefined
                        000037    5-53  	equ	FAULT_NO_TRB,31		" Trouble
                                  5-54  
                                  5-55       "END INCLUDE FILE fault_vector.incl.alm
                                    34  	include		flagbox
                                   6-1  
                                   6-2  
                                   6-3       "BEGIN INCLUDE FILE flagbox.incl.alm
                                   6-4  
                                   6-5  
                                   6-6  " HISTORY COMMENTS:
                                   6-7  "  1) change(87-03-03,Farley), approve(87-04-15,MCR7661),
                                   6-8  "     audit(87-04-21,Fawcett), install(87-04-28,MR12.1-1028):
                                   6-9  "     Added io_reconfig flag to inhibit BCE from attempting an emergency
                                  6-10  "     shutdown when the data in memory could be corrupted.
                                  6-11  "                                                      END HISTORY COMMENTS
                                  6-12  
                                  6-13  
                                  6-14  
                                  6-15  
                                  6-16  	"Created 03/03/87  1026.3 mst Tue by convert_include_file,
                                  6-17  	"   Version of 01/09/85  0754.4 mst Wed.
                                  6-18  
                                  6-19  	"Made from >udd>m>Farley>install_dir>rcf>flagbox.incl.pl1,
                                  6-20  	"   modified 02/26/87  1355.3 mst Thu
                                  6-21  
                                  6-22  "
                                  6-23  "	Structure fgbx
                                  6-24  "
                        000140    6-25  	equ	fgbx_size,96
                                  6-26  
                                  6-27  
                        000000    6-28  	equ	fgbx.toehold_used,0
                                  6-29  
                        000040    6-30  	equ	fgbx.flags_word,32
                        400000    6-31  	bool	fgbx.flags,400000		" DU
                                  6-32  
                        000041    6-33  	equ	fgbx.slt_segno,33		" UPPER
                                  6-34  
                        000043    6-35  	equ	fgbx.rtb,35		" LEVEL 2
                                  6-36  
                        400000    6-37  	bool	fgbx.ssenb,400000		" DU
                        200000    6-38  	bool	fgbx.call_bce,200000	" DU
                        100000    6-39  	bool	fgbx.shut,100000		" DU
                        040000    6-40  	bool	fgbx.mess,040000		" DU
                        020000    6-41  	bool	fgbx.alert,020000		" DU
                        010000    6-42  	bool	fgbx.breakpoint,010000	" DU
                        004000    6-43  	bool	fgbx.manual_crash,004000	" DU
                        002000    6-44  	bool	fgbx.io_reconfig,002000	" DU
                        000001    6-45  	equ	fgbx.bce_entry_shift,1
                        000077    6-46  	bool	fgbx.bce_entry_mask,000077
                                  6-47  
                        000044    6-48  	equ	fgbx.sentinel,36
                        000054    6-49  	equ	fgbx.sst_sdw,44		" DOUBLE
                        000056    6-50  	equ	fgbx.hc_dbr,46		" DOUBLE
                        000060    6-51  	equ	fgbx.message,48
                        000100    6-52  	equ	fgbx.return_to_bce_command,64
                                  6-53  
                                  6-54       "END INCLUDE FILE flagbox.incl.alm
                                    35  	include_nolist	slte
                                    36  	include		system_types
                                   8-1  
                                   8-2  
                                   8-3       "BEGIN INCLUDE FILE system_types.incl.alm
                                   8-4  
                                   8-5  
                                   8-6  	"Created 04/05/81  2144.9 est Sun by convert_include_file,
                                   8-7  	"   Version of 04/05/81  1606.8 est Sun.
                                   8-8  
                                   8-9  	"Made from >udd>Multics>nss>new_pc>include>system_types.incl.pl1,
                                  8-10  	"   modified 03/21/81  2300.0 est Sat
                                  8-11  
                                  8-12  
                        000001    8-13  	equ	L68_SYSTEM,1		" MANIFEST
                        000002    8-14  	equ	ADP_SYSTEM,2		" MANIFEST
                                  8-15  
                                  8-16       "END INCLUDE FILE system_types.incl.alm
                                    37  	include		toe_hold
                                   9-1  
                                   9-2  
                                   9-3       "BEGIN INCLUDE FILE toe_hold.incl.alm
                                   9-4  
                                   9-5  
                                   9-6  	"Created 04/16/84  1150.7 est Mon by convert_include_file,
                                   9-7  	"   Version of 11/07/82  1445.1 est Sun.
                                   9-8  
                                   9-9  	"Made from >cdd>incl>x>toe_hold.incl.pl1,
                                  9-10  	"   modified 04/16/84  1150.7 est Mon
                                  9-11  
                                  9-12  "
                                  9-13  "	Structure toe_hold
                                  9-14  "
                        004000    9-15  	equ	toe_hold_size,2048
                                  9-16  
                                  9-17  
                        000000    9-18  	equ	toe_hold.entry_sequences,0	" DOUBLE
                        000040    9-19  	equ	toe_hold.flagbox,32
                        000220    9-20  	equ	toe_hold.paths,144		" LEVEL 2
                                  9-21  
                        000240    9-22  	equ	toe_hold.n_paths_used,160
                        000241    9-23  	equ	toe_hold.memory_state,161
                        000242    9-24  	equ	toe_hold.bce_dbr,162	" DOUBLE
                        002760    9-25  	equ	toe_hold.multics_state,1520	" LEVEL 2
                                  9-26  
                                  9-27  
                                  9-28  "
                                  9-29  "	Structure io_path
                                  9-30  "
                        000004    9-31  	equ	io_path_size,4
                                  9-32  
                        000000    9-33  	equ	io_path.pcw,0		" DOUBLE
                                  9-34  
                        000002    9-35  	equ	io_path.port_number_word,2
                        000041    9-36  	equ	io_path.port_number_shift,33
                        000007    9-37  	bool	io_path.port_number_mask,000007
                        000002    9-38  	equ	io_path.iom_number_word,2
                        000022    9-39  	equ	io_path.iom_number_shift,18
                        077777    9-40  	bool	io_path.iom_number_mask,077777
                        000002    9-41  	equ	io_path.channel_number,2	" LOWER
                                  9-42  
                        000000    9-43  	equ	TOE_HOLD_CRASH_ENTRY,0	" MANIFEST
                        000001    9-44  	equ	TOE_HOLD_ESD_ENTRY,1	" MANIFEST
                        000002    9-45  	equ	TOE_HOLD_DUMP_ENTRY,2	" MANIFEST
                        000003    9-46  	equ	TOE_HOLD_MULTICS_ENTRY,3	" MANIFEST
                        000004    9-47  	equ	TOE_HOLD_RESTART_ENTRY,4	" MANIFEST
                        000005    9-48  	equ	TOE_HOLD_BOOT_ENTRY,5	" MANIFEST
                        000014    9-49  	equ	TOE_HOLD_BOS_ENTRY,12	" MANIFEST
                        000015    9-50  	equ	TOE_HOLD_BOS_NO_SAVE_ENTRY,13	" MANIFEST
                        000016    9-51  	equ	TOE_HOLD_BOS_MULTICS_ENTRY,14	" MANIFEST
                                  9-52  
                                  9-53  "
                                  9-54  "	Structure mc_state
                                  9-55  "
                        001020    9-56  	equ	mc_state_size,528
                                  9-57  
                        000000    9-58  	equ	mc_state.mc_,0		" LEVEL 2
                                  9-59  
                        000060    9-60  	equ	mc_state.masks,48
                        000100    9-61  	equ	mc_state.interrupt,64	" DOUBLE
                        000102    9-62  	equ	mc_state.mode_reg,66
                        000103    9-63  	equ	mc_state.cache_mode_reg,67
                        000104    9-64  	equ	mc_state.dbr,68		" DOUBLE
                        000106    9-65  	equ	mc_state.cfg,70		" DOUBLE
                        000110    9-66  	equ	mc_state.bar,72
                        000111    9-67  	equ	mc_state.old_memory_state,73
                        000120    9-68  	equ	mc_state.ou_history_registers,80 " DOUBLE
                        000160    9-69  	equ	mc_state.cu_history_registers,112 " DOUBLE
                        000220    9-70  	equ	mc_state.du_history_registers,144 " DOUBLE
                        000260    9-71  	equ	mc_state.apu_history_registers,176 " DOUBLE
                        000320    9-72  	equ	mc_state.ptwam_ptrs,208
                        000420    9-73  	equ	mc_state.ptwam_regs,272
                        000520    9-74  	equ	mc_state.sdwam_ptrs,336
                        000620    9-75  	equ	mc_state.sdwam_regs,400	" DOUBLE
                                  9-76  
                        000000    9-77  	equ	Initial_undefined,0		" MANIFEST
                        000001    9-78  	equ	At_bce__early,1		" MANIFEST
                        000002    9-79  	equ	At_bce__boot,2		" MANIFEST
                        000003    9-80  	equ	Multics,3			" MANIFEST
                        000004    9-81  	equ	Undefined_saving_state,4	" MANIFEST
                        000005    9-82  	equ	Undefined_reading_bce,5	" MANIFEST
                        000006    9-83  	equ	At_bce__crash,6		" MANIFEST
                        000007    9-84  	equ	At_bce__shutdown,7		" MANIFEST
                        000010    9-85  	equ	Undefined_continue,8	" MANIFEST
                        000011    9-86  	equ	Undefined_saving_mem,9	" MANIFEST
                                  9-87  
                                  9-88  "
                                  9-89  "	Structure mc
                                  9-90  "
                        000060    9-91  	equ	mc_size,48
                                  9-92  
                        000000    9-93  	equ	mc.prs,0
                                  9-94  
                        000020    9-95  	equ	mc.regs_word,16
                        001532    9-96  	equ	mc.regs_shift,858
                        000020    9-97  	equ	mc.x,16			" UPPER
                                  9-98  
                        000024    9-99  	equ	mc.a,20
                        000025   9-100  	equ	mc.q,21
                                 9-101  
                        000026   9-102  	equ	mc.e_word,22
                        000034   9-103  	equ	mc.e_shift,28
                        000377   9-104  	bool	mc.e_mask,000377
                                 9-105  
                        000027   9-106  	equ	mc.t_word,23
                        000011   9-107  	equ	mc.t_shift,9
                        000027   9-108  	equ	mc.ralr_word,23
                        000000   9-109  	equ	mc.ralr_shift,0
                        000007   9-110  	bool	mc.ralr_mask,000007
                                 9-111  
                        000030   9-112  	equ	mc.scu,24
                        000040   9-113  	equ	mc.mask,32		" DOUBLE
                        000042   9-114  	equ	mc.ips_temp,34
                                 9-115  
                        000043   9-116  	equ	mc.errcode_word,35
                        000000   9-117  	equ	mc.errcode_shift,0
                                 9-118  
                        000044   9-119  	equ	mc.fim_temp_word,36
                        000000   9-120  	equ	mc.fim_temp_shift,0
                        000044   9-121  	equ	mc.unique_index,36		" UPPER
                        000044   9-122  	equ	mc.resignal_word,36
                        400000   9-123  	bool	mc.resignal,400000		" DL
                        000044   9-124  	equ	mc.fcode_word,36
                        000000   9-125  	equ	mc.fcode_shift,0
                        377777   9-126  	bool	mc.fcode_mask,377777
                                 9-127  
                        000045   9-128  	equ	mc.fault_reg,37
                                 9-129  
                        000046   9-130  	equ	mc.cpu_type_word,38
                        000041   9-131  	equ	mc.cpu_type_shift,33
                        000003   9-132  	bool	mc.cpu_type_mask,000003
                        000046   9-133  	equ	mc.ext_fault_reg_word,38
                        000022   9-134  	equ	mc.ext_fault_reg_shift,18
                        077777   9-135  	bool	mc.ext_fault_reg_mask,077777
                                 9-136  
                        000046   9-137  	equ	mc.fault_time,38		" DOUBLE
                        000050   9-138  	equ	mc.eis_info,40
                                 9-139  
                        000000   9-140  	equ	apx,0			" MANIFEST
                        000001   9-141  	equ	abx,1			" MANIFEST
                        000002   9-142  	equ	bpx,2			" MANIFEST
                        000003   9-143  	equ	bbx,3			" MANIFEST
                        000004   9-144  	equ	lpx,4			" MANIFEST
                        000005   9-145  	equ	lbx,5			" MANIFEST
                        000006   9-146  	equ	spx,6			" MANIFEST
                        000007   9-147  	equ	sbx,7			" MANIFEST
                                 9-148  
                                 9-149  "
                                 9-150  "	Structure scu
                                 9-151  "
                        000010   9-152  	equ	scu_size,8
                                 9-153  
                        000000   9-154  	equ	scu.ppr_word,0
                        000021   9-155  	equ	scu.ppr_shift,17
                        000041   9-156  	equ	scu.prr_shift,33
                        000007   9-157  	bool	scu.prr_mask,000007
                        000022   9-158  	equ	scu.psr_shift,18
                        077777   9-159  	bool	scu.psr_mask,077777
                        400000   9-160  	bool	scu.p,400000		" DL
                        000000   9-161  	equ	scu.apu_word,0
                        000003   9-162  	equ	scu.apu_shift,3
                        037777   9-163  	bool	scu.apu_mask,037777
                        200000   9-164  	bool	scu.xsf,200000		" DL
                        100000   9-165  	bool	scu.sdwm,100000		" DL
                        040000   9-166  	bool	scu.sd_on,040000		" DL
                        020000   9-167  	bool	scu.ptwm,020000		" DL
                        010000   9-168  	bool	scu.pt_on,010000		" DL
                        004000   9-169  	bool	scu.pi_ap,004000		" DL
                        002000   9-170  	bool	scu.dsptw,002000		" DL
                        001000   9-171  	bool	scu.sdwnp,001000		" DL
                        000400   9-172  	bool	scu.sdwp,000400		" DL
                        000200   9-173  	bool	scu.ptw,000200		" DL
                        000100   9-174  	bool	scu.ptw2,000100		" DL
                        000040   9-175  	bool	scu.fap,000040		" DL
                        000020   9-176  	bool	scu.fanp,000020		" DL
                        000010   9-177  	bool	scu.fabs,000010		" DL
                        000000   9-178  	equ	scu.fault_cntr_word,0
                        000000   9-179  	equ	scu.fault_cntr_shift,0
                        000007   9-180  	bool	scu.fault_cntr_mask,000007
                                 9-181  
                        000001   9-182  	equ	scu.fd_word,1
                        000020   9-183  	equ	scu.fd_shift,16
                        000001   9-184  	equ	scu.iro_word,1
                        400000   9-185  	bool	scu.iro,400000		" DU
                        000001   9-186  	equ	scu.oeb_word,1
                        200000   9-187  	bool	scu.oeb,200000		" DU
                        000001   9-188  	equ	scu.e_off_word,1
                        100000   9-189  	bool	scu.e_off,100000		" DU
                        000001   9-190  	equ	scu.orb_word,1
                        040000   9-191  	bool	scu.orb,040000		" DU
                        000001   9-192  	equ	scu.r_off_word,1
                        020000   9-193  	bool	scu.r_off,020000		" DU
                        000001   9-194  	equ	scu.owb_word,1
                        010000   9-195  	bool	scu.owb,010000		" DU
                        000001   9-196  	equ	scu.w_off_word,1
                        004000   9-197  	bool	scu.w_off,004000		" DU
                        000001   9-198  	equ	scu.no_ga_word,1
                        002000   9-199  	bool	scu.no_ga,002000		" DU
                        000001   9-200  	equ	scu.ocb_word,1
                        001000   9-201  	bool	scu.ocb,001000		" DU
                        000001   9-202  	equ	scu.ocall_word,1
                        000400   9-203  	bool	scu.ocall,000400		" DU
                        000001   9-204  	equ	scu.boc_word,1
                        000200   9-205  	bool	scu.boc,000200		" DU
                        000001   9-206  	equ	scu.inret_word,1
                        000100   9-207  	bool	scu.inret,000100		" DU
                        000001   9-208  	equ	scu.crt_word,1
                        000040   9-209  	bool	scu.crt,000040		" DU
                        000001   9-210  	equ	scu.ralr_word,1
                        000020   9-211  	bool	scu.ralr,000020		" DU
                        000001   9-212  	equ	scu.am_er_word,1
                        000010   9-213  	bool	scu.am_er,000010		" DU
                        000001   9-214  	equ	scu.oosb_word,1
                        000004   9-215  	bool	scu.oosb,000004		" DU
                        000001   9-216  	equ	scu.paru_word,1
                        000002   9-217  	bool	scu.paru,000002		" DU
                        000001   9-218  	equ	scu.parl_word,1
                        000001   9-219  	bool	scu.parl,000001		" DU
                        000001   9-220  	equ	scu.onc_1_word,1
                        400000   9-221  	bool	scu.onc_1,400000		" DL
                        000001   9-222  	equ	scu.onc_2_word,1
                        200000   9-223  	bool	scu.onc_2,200000		" DL
                        000001   9-224  	equ	scu.port_stat_word,1
                        000006   9-225  	equ	scu.port_stat_shift,6
                        001777   9-226  	bool	scu.port_stat_mask,001777
                        000001   9-227  	equ	scu.ial_word,1
                        000014   9-228  	equ	scu.ial_shift,12
                        000017   9-229  	bool	scu.ial_mask,000017
                        000001   9-230  	equ	scu.iac_word,1
                        000011   9-231  	equ	scu.iac_shift,9
                        000007   9-232  	bool	scu.iac_mask,000007
                        000001   9-233  	equ	scu.con_chan_word,1
                        000006   9-234  	equ	scu.con_chan_shift,6
                        000007   9-235  	bool	scu.con_chan_mask,000007
                        000001   9-236  	equ	scu.fi_num_word,1
                        000001   9-237  	equ	scu.fi_num_shift,1
                        000037   9-238  	bool	scu.fi_num_mask,000037
                        000001   9-239  	equ	scu.fi_flag_word,1
                        000001   9-240  	bool	scu.fi_flag,000001		" DL
                                 9-241  
                        000002   9-242  	equ	scu.tpr,2			" UPPER
                        000002   9-243  	equ	scu.trr_word,2
                        000041   9-244  	equ	scu.trr_shift,33
                        000007   9-245  	bool	scu.trr_mask,000007
                        000002   9-246  	equ	scu.tsr_word,2
                        000022   9-247  	equ	scu.tsr_shift,18
                        077777   9-248  	bool	scu.tsr_mask,077777
                        000002   9-249  	equ	scu.cpu_no_word,2
                        000006   9-250  	equ	scu.cpu_no_shift,6
                        000007   9-251  	bool	scu.cpu_no_mask,000007
                        000002   9-252  	equ	scu.delta_word,2
                        000000   9-253  	equ	scu.delta_shift,0
                        000077   9-254  	bool	scu.delta_mask,000077
                                 9-255  
                        000003   9-256  	equ	scu.word3,3		" UPPER
                        000003   9-257  	equ	scu.tsr_stat_word,3
                        000006   9-258  	equ	scu.tsr_stat_shift,6
                        007777   9-259  	bool	scu.tsr_stat_mask,007777
                        000003   9-260  	equ	scu.tsna_word,3
                        000016   9-261  	equ	scu.tsna_shift,14
                        000017   9-262  	bool	scu.tsna_mask,000017
                        000003   9-263  	equ	scu.tsnb_word,3
                        000012   9-264  	equ	scu.tsnb_shift,10
                        000017   9-265  	bool	scu.tsnb_mask,000017
                        000003   9-266  	equ	scu.tsnc_word,3
                        000006   9-267  	equ	scu.tsnc_shift,6
                        000017   9-268  	bool	scu.tsnc_mask,000017
                        000003   9-269  	equ	scu.tpr_tbr_word,3
                        000000   9-270  	equ	scu.tpr_tbr_shift,0
                        000077   9-271  	bool	scu.tpr_tbr_mask,000077
                                 9-272  
                        000004   9-273  	equ	scu.ilc,4			" UPPER
                        000004   9-274  	equ	scu.ir,4			" LOWER
                        000004   9-275  	equ	scu.zero_word,4
                        400000   9-276  	bool	scu.zero,400000		" DL
                        000004   9-277  	equ	scu.neg_word,4
                        200000   9-278  	bool	scu.neg,200000		" DL
                        000004   9-279  	equ	scu.carry_word,4
                        100000   9-280  	bool	scu.carry,100000		" DL
                        000004   9-281  	equ	scu.ovfl_word,4
                        040000   9-282  	bool	scu.ovfl,040000		" DL
                        000004   9-283  	equ	scu.eovf_word,4
                        020000   9-284  	bool	scu.eovf,020000		" DL
                        000004   9-285  	equ	scu.eufl_word,4
                        010000   9-286  	bool	scu.eufl,010000		" DL
                        000004   9-287  	equ	scu.oflm_word,4
                        004000   9-288  	bool	scu.oflm,004000		" DL
                        000004   9-289  	equ	scu.tro_word,4
                        002000   9-290  	bool	scu.tro,002000		" DL
                        000004   9-291  	equ	scu.par_word,4
                        001000   9-292  	bool	scu.par,001000		" DL
                        000004   9-293  	equ	scu.parm_word,4
                        000400   9-294  	bool	scu.parm,000400		" DL
                        000004   9-295  	equ	scu.bm_word,4
                        000200   9-296  	bool	scu.bm,000200		" DL
                        000004   9-297  	equ	scu.tru_word,4
                        000100   9-298  	bool	scu.tru,000100		" DL
                        000004   9-299  	equ	scu.mif_word,4
                        000040   9-300  	bool	scu.mif,000040		" DL
                        000004   9-301  	equ	scu.abs_word,4
                        000020   9-302  	bool	scu.abs,000020		" DL
                        000004   9-303  	equ	scu.hex_word,4
                        000010   9-304  	bool	scu.hex,000010		" DL
                                 9-305  
                        000005   9-306  	equ	scu.ca,5			" UPPER
                        000005   9-307  	equ	scu.cu_word,5
                        000006   9-308  	equ	scu.cu_shift,6
                        007777   9-309  	bool	scu.cu_mask,007777
                        000005   9-310  	equ	scu.rf_word,5
                        400000   9-311  	bool	scu.rf,400000		" DL
                        000005   9-312  	equ	scu.rpt_word,5
                        200000   9-313  	bool	scu.rpt,200000		" DL
                        000005   9-314  	equ	scu.rd_word,5
                        100000   9-315  	bool	scu.rd,100000		" DL
                        000005   9-316  	equ	scu.rl_word,5
                        040000   9-317  	bool	scu.rl,040000		" DL
                        000005   9-318  	equ	scu.pot_word,5
                        020000   9-319  	bool	scu.pot,020000		" DL
                        000005   9-320  	equ	scu.pon_word,5
                        010000   9-321  	bool	scu.pon,010000		" DL
                        000005   9-322  	equ	scu.xde_word,5
                        004000   9-323  	bool	scu.xde,004000		" DL
                        000005   9-324  	equ	scu.xdo_word,5
                        002000   9-325  	bool	scu.xdo,002000		" DL
                        000005   9-326  	equ	scu.poa_word,5
                        001000   9-327  	bool	scu.poa,001000		" DL
                        000005   9-328  	equ	scu.rfi_word,5
                        000400   9-329  	bool	scu.rfi,000400		" DL
                        000005   9-330  	equ	scu.its_word,5
                        000200   9-331  	bool	scu.its,000200		" DL
                        000005   9-332  	equ	scu.if_word,5
                        000100   9-333  	bool	scu.if,000100		" DL
                        000005   9-334  	equ	scu.cpu_tag_word,5
                        000000   9-335  	equ	scu.cpu_tag_shift,0
                        000077   9-336  	bool	scu.cpu_tag_mask,000077
                                 9-337  
                        000006   9-338  	equ	scu.even_inst,6
                        000007   9-339  	equ	scu.odd_inst,7
                                 9-340  
                                 9-341  "
                                 9-342  "	Structure scux
                                 9-343  "
                        000010   9-344  	equ	scux_size,8
                                 9-345  
                                 9-346  
                        000001   9-347  	equ	scux.fd_word,1
                        000000   9-348  	equ	scux.fd_shift,0
                        000001   9-349  	equ	scux.isn_word,1
                        400000   9-350  	bool	scux.isn,400000		" DU
                        000001   9-351  	equ	scux.ioc_word,1
                        200000   9-352  	bool	scux.ioc,200000		" DU
                        000001   9-353  	equ	scux.ia_am_word,1
                        100000   9-354  	bool	scux.ia_am,100000		" DU
                        000001   9-355  	equ	scux.isp_word,1
                        040000   9-356  	bool	scux.isp,040000		" DU
                        000001   9-357  	equ	scux.ipr_word,1
                        020000   9-358  	bool	scux.ipr,020000		" DU
                        000001   9-359  	equ	scux.nea_word,1
                        010000   9-360  	bool	scux.nea,010000		" DU
                        000001   9-361  	equ	scux.oobb_word,1
                        004000   9-362  	bool	scux.oobb,004000		" DU
                                 9-363  
                        000003   9-364  	equ	scux.tsr_stat_word,3
                        000006   9-365  	equ	scux.tsr_stat_shift,6
                        007777   9-366  	bool	scux.tsr_stat_mask,007777
                                 9-367  
                        000006   9-368  	equ	scux.instr,6
                                 9-369  
                                 9-370       "END INCLUDE FILE toe_hold.incl.alm
                                    38  
                                    39  " RECURSION PROTECTION -- in case an error encounters processing an error.
                                    40  " set nonzero when any entrypoint here is entered.
                                    41  
    000000                          42  	bss	in_bootload_error,1
                                    43  
    000001                          44            inhibit   on        <+><+><+><+><+><+><+><+><+><+><+><+><+><+><+>
                                    45  "
                                    46  " This code all runs inhibited, just in case.
                                    47  "
                                    48  
                                    49  " Called as 
                                    50  "		tsx2	write_message
                                    51  "
                                    52  " writes message currently in message buffer to console, if there is one.
                                    53  "
                                    54  
    000001                          55  write_message:
                                    56  	Bpush
    000001  4a  4 00010 7423 20         	stx2	bootload_0$entry_stack_ptr,id
    000002  4a  4 00012 6067 20         	ttn	bootload_error$out_of_stack
                                    57  
    000003  4a  4 00014 7023 20     58  	tsx2	bootload_console$write
    000004  0a   000044 0002 00     59  	arg	message_buffer
    000005  0a   000070 0002 00     60  	arg	message_length
    000006                          61  write_message.return:
                                    62  	Breturn
    000006  4a  4 00016 2223 20         	ldx2	bootload_0$entry_stack_ptr,di
    000007  aa   000000 7102 12         	tra	0+,x2
                                    63  
                                    64  
                                    65  " This location shows what error we came in on in the case of a failure.
                                    66  
                        000010      67  	segdef	current_error_number
                                    68  
    000010                          69  	bss	current_error_number,1
                                    70  
                                    71  " When calling error_common, x2 is first saved here so it can
                                    72  " be put into the machine conditions.
                                    73  
    000011                          74  	bss	save_x2,1
                                    75  
                                    76  "
                                    77  " Stores machine conditions as available for most errors
                                    78  " Assumption is that there is a unique entrypoint for each
                                    79  " error call, so that entry via tra is reasonable.
                                    80  " 
                                    81  "  Called by:
                                    82  "
                                    83  "	tsx2	error_common
                                    84  "
    000012                          85  error_common:
                                    86  	Bpush
    000012  4a  4 00010 7423 20         	stx2	bootload_0$entry_stack_ptr,id
    000013  4a  4 00012 6067 20         	ttn	bootload_error$out_of_stack
    000014  0a   000100 2542 00     87  	spri	mc_area+mc.prs	" Save everything
    000015  0a   000011 2222 00     88  	ldx2	save_x2
    000016  0a   000120 7532 00     89  	sreg	mc_area+mc.regs_word
    000017  0a   000150 4476 00     90  	spl	mc_area+mc.eis_info
    000020  aa   400000 2352 03     91  	lda	=o400000,du
    000021  0a   000000 7552 00     92  	sta	in_bootload_error
    000022  0a   001603 7022 00     93            tsx2      save_rest_of_registers
    000023  0a   000071 7022 00     94  	tsx2	clear_buffer
    000024  4a  4 00020 7023 20     95  	tsx2	bootload_console$write_nl
    000025  4a  4 00022 7023 20     96  	tsx2	bootload_console$write_alert
                                    97  
    000026                          98  error_common.return:
                                    99  	Breturn
    000026  4a  4 00016 2223 20         	ldx2	bootload_0$entry_stack_ptr,di
    000027  aa   000000 7102 12         	tra	0+,x2
                                   100  
                                   101  
                                   102  	macro	IOA
                              1    103  	maclist	off,save
                              2    104  	formline	(^A&1),
                              3    105  		message_buffer,80,bootload_0_string&>&K,1&[,
                              4    106  		&Fq2&]
                              5    107  	sta	message_length
                              6    108  	tsx2	write_message
                              7    109  	maclist	restore
                              8    110  	&end
                                   111  
                        000000     112  	set	unique_errorx,0
                                   113  
                                   114  	macro	error_comment
                              1    115  	maclist	on
                              2    116  	null	***** ERROR &1 error number is &2
                              3    117  	maclist	off
                              4    118  &end
                                   119  	
                                   120            macro     error
                              1    121  	maclist	off,save
                              2    122  	equ	&1_errorx,unique_errorx
                              3    123  	error_comment &1,unique_errorx
                              4    124  
                              5    125            segdef    &1
                              6    126  &1:	szn	in_bootload_error
                              7    127  	tze	&U.okay
                              8    128  
                              9    129  	staq	disaster_AQ
                             10    130  	lda	&1_errorx,dl
                             11    131  	tra	recursion.die	
                             12    132  &U.okay:
                             13    133  
                             14    134  	stx2	save_x2		" so that it can be put in machine 
                             15    135  				" conditions.
                             16    136  	ldx2	unique_errorx,du
                             17    137  	stx2	current_error_number
                             18    138  	tsx2	error_common
                             19    139  	IOA	&Fq2
                             20    140  	lda	unique_errorx,dl
                             21    141            tra       finish_with_error
                             22    142  
                             23    143  
                             24    144  	set	unique_errorx,unique_errorx+1
                             25    145  	maclist	restore
                             26    146  &end
                                   147  
                                   148  " disaster_AQ is used to safe_store the AQ on a recursive error.
                                   149  
    000030                         150  recursion.die:
    000030  0a   000036 2772 00    151  	oraq	RECURSION_PATTERN
                                   152  	odd
    000031  0a   000031 6162 00    153  	dis	*
    000032  aa   777777 7102 04    154  	tra	-1,ic
                                   155  
    000033  aa   000000 0112 03    156  	even
                        000034     157  	segdef	disaster_AQ
    000034                         158  	bss	disaster_AQ,2
    000036                         159  RECURSION_PATTERN:
    000036  aa   666666 000000     160  	oct	666666000000
    000037  aa   666666 000000     161  	oct	666666000000
                                   162  
                                   163  	macro	warning
                              1    164  	maclist	off,save
                              2    165  	segdef	&1
                              3    166  &1:
                              4    167  	Bpush
                              5    168  	IOA	&Fq2
                              6    169  	tsx2	bootload_console$write_nl
                              7    170  	Breturn
                              8    171  	maclist	restore
                              9    172  	&end
                                   173  
                                   174  	macro	warning_nnl
                              1    175  	maclist	off,save
                              2    176  	segdef	&1
                              3    177  &1:
                              4    178  	Bpush
                              5    179  	IOA	&Fq2
                              6    180  	Breturn
                              7    181  	maclist	restore
                              8    182  	&end
                                   183  
    000040                         184  bootload_0_string:
    000040  aa  014 142 157 157    185  	acc	"bootload_0: "
    000041  aa  164 154 157 141
    000042  aa  144 137 060 072
    000043  aa  040 000 000 000
    000044                         186  message_buffer:
    000044  aa  040 040 040 040    187  	aci	"",80
    000045  aa  040 040 040 040
    000046  aa  040 040 040 040
    000047  aa  040 040 040 040
    000050  aa  040 040 040 040
    000051  aa  040 040 040 040
    000052  aa  040 040 040 040
    000053  aa  040 040 040 040
    000054  aa  040 040 040 040
    000055  aa  040 040 040 040
    000056  aa  040 040 040 040
    000057  aa  040 040 040 040
    000060  aa  040 040 040 040
    000061  aa  040 040 040 040
    000062  aa  040 040 040 040
    000063  aa  040 040 040 040
    000064  aa  040 040 040 040
    000065  aa  040 040 040 040
    000066  aa  040 040 040 040
    000067  aa  040 040 040 040
    000070                         188  message_length:
    000070                         189  	bss	,1
                                   190  
    000071                         191  clear_buffer:
                                   192  	Bpush
    000071  4a  4 00010 7423 20         	stx2	bootload_0$entry_stack_ptr,id
    000072  4a  4 00012 6067 20         	ttn	bootload_error$out_of_stack
    000073  aa   000000 1006 00    193  	mlr	(),(),fill(000)
    000074  aa   000000 000000     194  	desc9a	0,0
    000075  0a   000044 000120     195  	desc9a	message_buffer,80
                                   196  	Breturn
    000076  4a  4 00016 2223 20         	ldx2	bootload_0$entry_stack_ptr,di
    000077  aa   000000 7102 12         	tra	0+,x2
                                   197  " 
                                   198            mod       16                  " Data areas for error status
                        000100     199  	segdef	mc
    000100                         200  mc:
    000100                         201  mc_area:            bss       ,48
                        000060     202            equ       mc_area_size,*-mc_area
                                   203  
                                   204  
                        000160     205            segdef    unexpected_scu      " Must be externally addressable
    000160                         206  unexpected_scu:     bss       ,8        " Data is copied from here into mc_area
                                   207  
                        000170     208  	segdef	current_segment
    000170                         209  current_segment:	bss	,1	" Segno of current segment being loaded
                                   210  
                                   211  " 
                                   212  
                                   213  " OUT_OF_STACK is handled specially. There is no stack left
                                   214  " for internal calls, so we do the best we can
                                   215  
                        000171     216  	segdef	out_of_stack
                                   217  
    000171                         218  out_of_stack:
    000171  0a   000176 2772 00    219  	oraq	OUT_OF_STACK_PATTERN
    000172  aa   000000 0112 03    220  	odd
    000173  0a   000173 6162 00    221  	dis	*
    000174  aa   777777 7102 04    222  	tra	-1,ic
                                   223  
    000175  aa   000000 0112 03    224  	even
    000176                         225  OUT_OF_STACK_PATTERN:
    000176  aa   555555 000000     226  	oct	555555000000
    000177  aa   555555 000000     227  	oct	555555000000
                                   228  " 
                                   229  
                                   230  " ORDINARY ERRORS
                                   231  
                                   232  	error	shutdown,(Shutdown)
    000200                              	null	***** ERROR shutdown error number is unique_errorx
    000211  4a  4 00024 7023 20
    000212  0a   000220 0002 00
    000213  0a   000044 0002 00
    000214  aa   000000 000120 
    000215  aa   000000 000001 
    000216  0a   000040 0002 00
    000217  0a   000223 7102 00
    000220                     
    000220  aa  012 136 101 123
    000221  aa  150 165 164 144
    000222  aa  157 167 156 000
    000223                     
                                   233  
                                   234  	error	console_failure,(Console status ^w ^w),
                                   235  		bootload_console$last_console_status,
                                   236  		bootload_console$last_console_status+1
    000227                              	null	***** ERROR console_failure error number is unique_errorx
    000240  4a  4 00024 7023 20
    000241  0a   000251 0002 00
    000242  0a   000044 0002 00
    000243  aa   000000 000120 
    000244  aa   000000 000003 
    000245  0a   000040 0002 00
    000246  4a  4 00026 0003 20
    000247  4a  4 00030 0003 20
    000250  0a   000257 7102 00
    000251                     
    000251  aa  026 136 101 103
    000252  aa  157 156 163 157
    000253  aa  154 145 040 163
    000254  aa  164 141 164 165
    000255  aa  163 040 136 167
    000256  aa  040 136 167 000
    000257                     
                                   237  
                                   238            error     bad_cw,(Unexpected control word on tape.)
    000263                              	null	***** ERROR bad_cw error number is unique_errorx
    000274  4a  4 00024 7023 20
    000275  0a   000303 0002 00
    000276  0a   000044 0002 00
    000277  aa   000000 000120 
    000300  aa   000000 000001 
    000301  0a   000040 0002 00
    000302  0a   000314 7102 00
    000303                     
    000303  aa  042 136 101 125
    000304  aa  156 145 170 160
    000305  aa  145 143 164 145
    000306  aa  144 040 143 157
    000307  aa  156 164 162 157
    000310  aa  154 040 167 157
    000311  aa  162 144 040 157
    000312  aa  156 040 164 141
    000313  aa  160 145 056 000
    000314                     
                                   239  
                                   240  	error	tape_error,(Tape read error: ^w ^w),
                                   241                      bootload_loader$tape_status,
                                   242                      bootload_loader$tape_status+1
    000320                              	null	***** ERROR tape_error error number is unique_errorx
    000331  4a  4 00024 7023 20
    000332  0a   000342 0002 00
    000333  0a   000044 0002 00
    000334  aa   000000 000120 
    000335  aa   000000 000003 
    000336  0a   000040 0002 00
    000337  4a  4 00032 0003 20
    000340  4a  4 00034 0003 20
    000341  0a   000351 7102 00
    000342                     
    000342  aa  030 136 101 124
    000343  aa  141 160 145 040
    000344  aa  162 145 141 144
    000345  aa  040 145 162 162
    000346  aa  157 162 072 040
    000347  aa  136 167 040 136
    000350  aa  167 000 000 000
    000351                     
                                   243  
                                   244            error     bad_mst,(Bad MST format.)
    000355                              	null	***** ERROR bad_mst error number is unique_errorx
    000366  4a  4 00024 7023 20
    000367  0a   000375 0002 00
    000370  0a   000044 0002 00
    000371  aa   000000 000120 
    000372  aa   000000 000001 
    000373  0a   000040 0002 00
    000374  0a   000402 7102 00
    000375                     
    000375  aa  021 136 101 102
    000376  aa  141 144 040 115
    000377  aa  123 124 040 146
    000400  aa  157 162 155 141
    000401  aa  164 056 000 000
    000402                     
                                   245  
                                   246            error     bad_sequence,(Improper text/link/def sequence for seg ^o),
                                   247                      current_segment
    000406                              	null	***** ERROR bad_sequence error number is unique_errorx
    000417  4a  4 00024 7023 20
    000420  0a   000427 0002 00
    000421  0a   000044 0002 00
    000422  aa   000000 000120 
    000423  aa   000000 000002 
    000424  0a   000040 0002 00
    000425  0a   000170 0002 00
    000426  0a   000443 7102 00
    000427                     
    000427  aa  054 136 101 111
    000430  aa  155 160 162 157
    000431  aa  160 145 162 040
    000432  aa  164 145 170 164
    000433  aa  057 154 151 156
    000434  aa  153 057 144 145
    000435  aa  146 040 163 145
    000436  aa  161 165 145 156
    000437  aa  143 145 040 146
    000440  aa  157 162 040 163
    000441  aa  145 147 040 136
    000442  aa  157 000 000 000
    000443                     
                                   248  
                                   249            error     out_of_main_memory,(Out of main memory for seg ^o),
                                   250                      current_segment
    000447                              	null	***** ERROR out_of_main_memory error number is unique_errorx
    000460  4a  4 00024 7023 20
    000461  0a   000470 0002 00
    000462  0a   000044 0002 00
    000463  aa   000000 000120 
    000464  aa   000000 000002 
    000465  0a   000040 0002 00
    000466  0a   000170 0002 00
    000467  0a   000500 7102 00
    000470                     
    000470  aa  037 136 101 117
    000471  aa  165 164 040 157
    000472  aa  146 040 155 141
    000473  aa  151 156 040 155
    000474  aa  145 155 157 162
    000475  aa  171 040 146 157
    000476  aa  162 040 163 145
    000477  aa  147 040 136 157
    000500                     
                                   251  
                                   252  	error	too_many_segs,(Too many supervisor segments.)
    000504                              	null	***** ERROR too_many_segs error number is unique_errorx
    000515  4a  4 00024 7023 20
    000516  0a   000524 0002 00
    000517  0a   000044 0002 00
    000520  aa   000000 000120 
    000521  aa   000000 000001 
    000522  0a   000040 0002 00
    000523  0a   000534 7102 00
    000524                     
    000524  aa  037 136 101 124
    000525  aa  157 157 040 155
    000526  aa  141 156 171 040
    000527  aa  163 165 160 145
    000530  aa  162 166 151 163
    000531  aa  157 162 040 163
    000532  aa  145 147 155 145
    000533  aa  156 164 163 056
    000534                     
                                   253  
                                   254  	error	upt_overflow,(An unpaged page table overflowed for seg ^o),
                                   255  		current_segment
    000540                              	null	***** ERROR upt_overflow error number is unique_errorx
    000551  4a  4 00024 7023 20
    000552  0a   000561 0002 00
    000553  0a   000044 0002 00
    000554  aa   000000 000120 
    000555  aa   000000 000002 
    000556  0a   000040 0002 00
    000557  0a   000170 0002 00
    000560  0a   000575 7102 00
    000561                     
    000561  aa  055 136 101 101
    000562  aa  156 040 165 156
    000563  aa  160 141 147 145
    000564  aa  144 040 160 141
    000565  aa  147 145 040 164
    000566  aa  141 142 154 145
    000567  aa  040 157 166 145
    000570  aa  162 146 154 157
    000571  aa  167 145 144 040
    000572  aa  146 157 162 040
    000573  aa  163 145 147 040
    000574  aa  136 157 000 000
    000575                     
                                   256  
                                   257            warning	first_message,(Booting system ^a^a generated ^a^a ^a^a ^a ^a.),
                                   258  		bootload_info$sysid,
                                   259  		bootload_info$sysid+1,
                                   260  		bootload_info$creation_time_string,
                                   261  		bootload_info$creation_time_string+1,
                                   262  		bootload_info$creation_time_string+2,
                                   263  		bootload_info$creation_time_string+3,
                                   264  		bootload_info$creation_time_string+4,
                                   265  		bootload_info$creation_time_string+5
    000603  4a  4 00024 7023 20
    000604  0a   000622 0002 00
    000605  0a   000044 0002 00
    000606  aa   000000 000120 
    000607  aa   000000 000011 
    000610  0a   000040 0002 00
    000611  4a  4 00036 0003 20
    000612  4a  4 00040 0003 20
    000613  4a  4 00042 0003 20
    000614  4a  4 00044 0003 20
    000615  4a  4 00046 0003 20
    000616  4a  4 00050 0003 20
    000617  4a  4 00052 0003 20
    000620  4a  4 00054 0003 20
    000621  0a   000637 7102 00
    000622                     
    000622  aa  060 136 101 102
    000623  aa  157 157 164 151
    000624  aa  156 147 040 163
    000625  aa  171 163 164 145
    000626  aa  155 040 136 141
    000627  aa  136 141 040 147
    000630  aa  145 156 145 162
    000631  aa  141 164 145 144
    000632  aa  040 136 141 136
    000633  aa  141 040 136 141
    000634  aa  136 141 040 136
    000635  aa  141 040 136 141
    000636  aa  056 000 000 000
    000637                     
                                   266  
                                   267  	warning_nnl tape_fw_prompt,(Enter boot tape MPC model: )
    000646  4a  4 00024 7023 20
    000647  0a   000655 0002 00
    000650  0a   000044 0002 00
    000651  aa   000000 000120 
    000652  aa   000000 000001 
    000653  0a   000040 0002 00
    000654  0a   000665 7102 00
    000655                     
    000655  aa  035 136 101 105
    000656  aa  156 164 145 162
    000657  aa  040 142 157 157
    000660  aa  164 040 164 141
    000661  aa  160 145 040 115
    000662  aa  120 103 040 155
    000663  aa  157 144 145 154
    000664  aa  072 040 000 000
    000665                     
                                   268  
                                   269  	warning_nnl early_dump_prompt,(Enter tape drive number for memory dump: )
    000673  4a  4 00024 7023 20
    000674  0a   000702 0002 00
    000675  0a   000044 0002 00
    000676  aa   000000 000120 
    000677  aa   000000 000001 
    000700  0a   000040 0002 00
    000701  0a   000715 7102 00
    000702                     
    000702  aa  053 136 101 105
    000703  aa  156 164 145 162
    000704  aa  040 164 141 160
    000705  aa  145 040 144 162
    000706  aa  151 166 145 040
    000707  aa  156 165 155 142
    000710  aa  145 162 040 146
    000711  aa  157 162 040 155
    000712  aa  145 155 157 162
    000713  aa  171 040 144 165
    000714  aa  155 160 072 040
    000715                     
                                   270  
                                   271  	warning	early_dump_done,(Early dump finished.)
    000723  4a  4 00024 7023 20
    000724  0a   000732 0002 00
    000725  0a   000044 0002 00
    000726  aa   000000 000120 
    000727  aa   000000 000001 
    000730  0a   000040 0002 00
    000731  0a   000740 7102 00
    000732                     
    000732  aa  026 136 101 105
    000733  aa  141 162 154 171
    000734  aa  040 144 165 155
    000735  aa  160 040 146 151
    000736  aa  156 151 163 150
    000737  aa  145 144 056 000
    000740                     
                                   272  
                                   273  	warning	tape_mpc_help_1,(Enter controller type as Annn.)
    000747  4a  4 00024 7023 20
    000750  0a   000756 0002 00
    000751  0a   000044 0002 00
    000752  aa   000000 000120 
    000753  aa   000000 000001 
    000754  0a   000040 0002 00
    000755  0a   000767 7102 00
    000756                     
    000756  aa  040 136 101 105
    000757  aa  156 164 145 162
    000760  aa  040 143 157 156
    000761  aa  164 162 157 154
    000762  aa  154 145 162 040
    000763  aa  164 171 160 145
    000764  aa  040 141 163 040
    000765  aa  101 156 156 156
    000766  aa  056 000 000 000
    000767                     
                                   274  	warning	tape_mpc_help_2,(For list of controller types enter '?'.)
    000776  4a  4 00024 7023 20
    000777  0a   001005 0002 00
    001000  0a   000044 0002 00
    001001  aa   000000 000120 
    001002  aa   000000 000001 
    001003  0a   000040 0002 00
    001004  0a   001020 7102 00
    001005                     
    001005  aa  051 136 101 106
    001006  aa  157 162 040 154
    001007  aa  151 163 164 040
    001010  aa  157 146 040 143
    001011  aa  157 156 164 162
    001012  aa  157 154 154 145
    001013  aa  162 040 164 171
    001014  aa  160 145 163 040
    001015  aa  145 156 164 145
    001016  aa  162 040 047 077
    001017  aa  047 056 000 000
    001020                     
                                   275  	warning	tape_mpc_type_list,(Valid controller types are:)
    001027  4a  4 00024 7023 20
    001030  0a   001036 0002 00
    001031  0a   000044 0002 00
    001032  aa   000000 000120 
    001033  aa   000000 000001 
    001034  0a   000040 0002 00
    001035  0a   001046 7102 00
    001036                     
    001036  aa  035 136 101 126
    001037  aa  141 154 151 144
    001040  aa  040 143 157 156
    001041  aa  164 162 157 154
    001042  aa  154 145 162 040
    001043  aa  164 171 160 145
    001044  aa  163 040 141 162
    001045  aa  145 072 000 000
    001046                     
                                   276  
                                   277  	warning	no_such_tape_fw,(Unknown tape MPC model ^a),
                                   278  		bootload_info$tape_mpc_fw_name
    001055  4a  4 00024 7023 20
    001056  0a   001065 0002 00
    001057  0a   000044 0002 00
    001060  aa   000000 000120 
    001061  aa   000000 000002 
    001062  0a   000040 0002 00
    001063  4a  4 00056 0003 20
    001064  0a   001074 7102 00
    001065                     
    001065  aa  033 136 101 125
    001066  aa  156 153 156 157
    001067  aa  167 156 040 164
    001070  aa  141 160 145 040
    001071  aa  115 120 103 040
    001072  aa  155 157 144 145
    001073  aa  154 040 136 141
    001074                     
                                   279  
                                   280  	warning	booting_tape_mpc,(Booting ^a ^a ^d. with ^b ^b firmware.),
                                   281  		bootload_info$tape_mpc_fw_name,
                                   282  		bootload_tape_fw$iom_name,
                                   283  		bootload_info$tape_channel_number,
                                   284  		bootload_tape_fw$fwid,
                                   285  		bootload_tape_fw$fwrev
    001103  4a  4 00024 7023 20
    001104  0a   001117 0002 00
    001105  0a   000044 0002 00
    001106  aa   000000 000120 
    001107  aa   000000 000006 
    001110  0a   000040 0002 00
    001111  4a  4 00056 0003 20
    001112  4a  4 00060 0003 20
    001113  4a  4 00062 0003 20
    001114  4a  4 00064 0003 20
    001115  4a  4 00066 0003 20
    001116  0a   001132 7102 00
    001117                     
    001117  aa  050 136 101 102
    001120  aa  157 157 164 151
    001121  aa  156 147 040 136
    001122  aa  141 040 136 141
    001123  aa  040 136 144 056
    001124  aa  040 167 151 164
    001125  aa  150 040 136 142
    001126  aa  040 136 142 040
    001127  aa  146 151 162 155
    001130  aa  167 141 162 145
    001131  aa  056 000 000 000
    001132                     
                                   286  
                                   287  	warning	booted_tape_mpc,(Booted tape MPC.)
    001141  4a  4 00024 7023 20
    001142  0a   001150 0002 00
    001143  0a   000044 0002 00
    001144  aa   000000 000120 
    001145  aa   000000 000001 
    001146  0a   000040 0002 00
    001147  0a   001155 7102 00
    001150                     
    001150  aa  022 136 101 102
    001151  aa  157 157 164 145
    001152  aa  144 040 164 141
    001153  aa  160 145 040 115
    001154  aa  120 103 056 000
    001155                     
                                   288  
                                   289  	warning	tape_mpc_boot_error,(Error status ^w ^w booting ^a firmware.),
                                   290  		bootload_tape_fw$erstat,
                                   291  		bootload_tape_fw$erstat+1,
                                   292  		bootload_tape_fw$fwtype
    001164  4a  4 00024 7023 20
    001165  0a   001176 0002 00
    001166  0a   000044 0002 00
    001167  aa   000000 000120 
    001170  aa   000000 000004 
    001171  0a   000040 0002 00
    001172  4a  4 00070 0003 20
    001173  4a  4 00072 0003 20
    001174  4a  4 00074 0003 20
    001175  0a   001211 7102 00
    001176                     
    001176  aa  051 136 101 105
    001177  aa  162 162 157 162
    001200  aa  040 163 164 141
    001201  aa  164 165 163 040
    001202  aa  136 167 040 136
    001203  aa  167 040 142 157
    001204  aa  157 164 151 156
    001205  aa  147 040 136 141
    001206  aa  040 146 151 162
    001207  aa  155 167 141 162
    001210  aa  145 056 000 000
    001211                     
                                   293  
                                   294  	warning	tape_dump_error,(Excessive tape errors: status ^w ^w.),
                                   295  		bootload_tape_fw$erstat,
                                   296  		bootload_tape_fw$erstat+1
    001220  4a  4 00024 7023 20
    001221  0a   001231 0002 00
    001222  0a   000044 0002 00
    001223  aa   000000 000120 
    001224  aa   000000 000003 
    001225  0a   000040 0002 00
    001226  4a  4 00070 0003 20
    001227  4a  4 00072 0003 20
    001230  0a   001243 7102 00
    001231                     
    001231  aa  046 136 101 105
    001232  aa  170 143 145 163
    001233  aa  163 151 166 145
    001234  aa  040 164 141 160
    001235  aa  145 040 145 162
    001236  aa  162 157 162 163
    001237  aa  072 040 163 164
    001240  aa  141 164 165 163
    001241  aa  040 136 167 040
    001242  aa  136 167 056 000
    001243                     
                                   297  
                                   298  	warning	flagbox_message,(^A),
                                   299  		bootload_early_dump$flagbox_message
    001252  4a  4 00024 7023 20
    001253  0a   001262 0002 00
    001254  0a   000044 0002 00
    001255  aa   000000 000120 
    001256  aa   000000 000002 
    001257  0a   000040 0002 00
    001260  4a  4 00076 0003 20
    001261  0a   001264 7102 00
    001262                     
    001262  aa  004 136 101 136
    001263  aa  101 000 000 000
    001264                     
                                   300  
                                   301  	warning	no_sym,(External symbol not found: ^a^a^a^a^a^a^a^a$^a^a^a^a^a^a^a^a.),
                                   302  		bootload_linker$segname,
                                   303  		bootload_linker$segname+1,
                                   304  		bootload_linker$segname+2,
                                   305  		bootload_linker$segname+3,
                                   306  		bootload_linker$segname+4,
                                   307  		bootload_linker$segname+5,
                                   308  		bootload_linker$segname+6,
                                   309  		bootload_linker$segname+7,
                                   310  		bootload_linker$ename,
                                   311  		bootload_linker$ename+1,
                                   312  		bootload_linker$ename+2,
                                   313  		bootload_linker$ename+3,
                                   314  		bootload_linker$ename+4,
                                   315  		bootload_linker$ename+5,
                                   316  		bootload_linker$ename+6,
                                   317  		bootload_linker$ename+7
    001273  4a  4 00024 7023 20
    001274  0a   001322 0002 00
    001275  0a   000044 0002 00
    001276  aa   000000 000120 
    001277  aa   000000 000021 
    001300  0a   000040 0002 00
    001301  4a  4 00100 0003 20
    001302  4a  4 00102 0003 20
    001303  4a  4 00104 0003 20
    001304  4a  4 00106 0003 20
    001305  4a  4 00110 0003 20
    001306  4a  4 00112 0003 20
    001307  4a  4 00114 0003 20
    001310  4a  4 00116 0003 20
    001311  4a  4 00120 0003 20
    001312  4a  4 00122 0003 20
    001313  4a  4 00124 0003 20
    001314  4a  4 00126 0003 20
    001315  4a  4 00130 0003 20
    001316  4a  4 00132 0003 20
    001317  4a  4 00134 0003 20
    001320  4a  4 00136 0003 20
    001321  0a   001342 7102 00
    001322                     
    001322  aa  077 136 101 105
    001323  aa  170 164 145 162
    001324  aa  156 141 154 040
    001325  aa  163 171 155 142
    001326  aa  157 154 040 156
    001327  aa  157 164 040 146
    001330  aa  157 165 156 144
    001331  aa  072 040 136 141
    001332  aa  136 141 136 141
    001333  aa  136 141 136 141
    001334  aa  136 141 136 141
    001335  aa  136 141 044 136
    001336  aa  141 136 141 136
    001337  aa  141 136 141 136
    001340  aa  141 136 141 136
    001341  aa  141 136 141 056
    001342                     
                                   318  " 
                                   319  
                        001347     320  	segdef	unexpected_fault		" This entry is special, and does its own saving
    001347                         321  unexpected_fault:
    001347  0a   000000 2342 00    322  	szn	in_bootload_error
    001350  0a   001353 6002 00    323  	tze	unexpected_fault.okay
                                   324  
                                   325  	odd
    001351  0a   001351 6162 00    326  	dis	*
    001352  0a   001351 7102 00    327  	tra	*-1
                                   328  
    001353                         329  unexpected_fault.okay:
    001353  0a   000100 2542 00    330  	spri	mc_area+mc.prs
    001354  0a   000120 7532 00    331  	sreg	mc_area+mc.regs_word
    001355  0a   000150 4476 00    332  	spl	mc_area+mc.eis_info
                                   333  
    001356  aa   400000 2352 03    334  	lda	=o400000,du
    001357  0a   000000 7552 00    335  	sta	in_bootload_error
    001360  aa   777777 2222 03    336  	ldx2	-1,du
    001361  0a   000010 7422 00    337  	stx2	current_error_number	" -1 = fault
                                   338  	
    001362  0a   001603 7022 00    339  	tsx2	save_rest_of_registers	" Put anything else interesting in
                                   340  
    001363  aa   000000 1006 00    341  	mlr	(),()			" Copy in the SCU data
    001364  0a   000160 000040     342  	desc9a	unexpected_scu,8*4
    001365  0a   000130 000040     343  	desc9a	mc_area+mc.scu,8*4
                                   344  
    001366  4a  4 00140 7023 20    345  	tsx2	bootload_abs_mode$initial_prs	" restore the PR's
                                   346  
    001367  4a  4 00020 7023 20    347  	tsx2	bootload_console$write_nl	" In case of mid-line
                                   348  
    001370  4a  4 00142 2353 20    349  	lda	bootload_info$system_type
    001371  aa   000002 1152 07    350  	cmpa	ADP_SYSTEM,dl
    001372  0a   001405 6002 00    351  	tze	adp_fault_name
                                   352  
    001373  0a   000131 2352 00    353  	lda	mc_area+mc.scu+1		" Get the fault/interrupt number
    001374  aa   000037 3752 07    354  	ana	scu.fi_num_mask,dl
    001375  aa   000001 7312 00    355  	ars	scu.fi_num_shift
    001376  0a   001574 7552 00    356  	sta	fault_number
                                   357  
    001377  0a   000131 2362 00    358  	ldq	mc_area+mc.scu+1		" See if the fault flag is set
    001400  aa   000001 3762 07    359  	anq	scu.fi_flag,dl	 	" If not, print a different message
    001401  0a   001442 6002 00    360  	tze	unexpected_interrupt_actually " otherwise, skip it
                                   361  
    001402  aa   000001 7352 00    362  	als	1			" double fault number (still in A)
    001403  4a  4 00144 2373 20    363  	ldaq	bootload_info$l68_fault_names,al
    001404  0a   001416 7102 00    364  	tra	have_fault_name
                                   365  
    001405                         366  adp_fault_name:
    001405  0a   000135 2352 00    367  	lda	mc_area+mc.scu+adp_scu.fi_num_word " Get the fault/interrupt number
    001406  aa   000037 3752 03    368  	ana	adp_scu.fi_num_mask,du
    001407  aa   000023 7312 00    369  	ars	adp_scu.fi_num_shift
    001410  0a   001574 7552 00    370  	sta	fault_number
                                   371  
    001411  0a   000135 2362 00    372  	ldq	mc_area+mc.scu+adp_scu.fi_flag_word " See if the fault flag is set
    001412  aa   000100 3762 03    373  	anq	adp_scu.fi_flag,du	 	" If not, print a different message
    001413  0a   001442 6012 00    374  	tnz	unexpected_interrupt_actually " otherwise, skip it
                                   375  
    001414  aa   000001 7352 00    376  	als	1			" double fault number (still in A)
    001415  4a  4 00146 2373 20    377  	ldaq	bootload_info$adp_fault_names,al
                                   378  
    001416                         379  have_fault_name:
    001416  0a   001572 7572 00    380  	staq	fault_name		" store it so it can be printed
                                   381  	IOA	(Unexpected ^a^a fault.),fault_name,fault_name+1
    001417  4a  4 00024 7023 20
    001420  0a   001430 0002 00
    001421  0a   000044 0002 00
    001422  aa   000000 000120 
    001423  aa   000000 000003 
    001424  0a   000040 0002 00
    001425  0a   001572 0002 00
    001426  0a   001573 0002 00
    001427  0a   001437 7102 00
    001430                     
    001430  aa  030 136 101 125
    001431  aa  156 145 170 160
    001432  aa  145 143 164 145
    001433  aa  144 040 136 141
    001434  aa  136 141 040 146
    001435  aa  141 165 154 164
    001436  aa  056 000 000 000
    001437                     
    001441  0a   001465 7102 00    382  	tra	describe_unexpected_fault
                                   383  
    001442                         384  unexpected_interrupt_actually:
                                   385  	IOA	(Uexpected interrupt number ^oo.),fault_number
    001442  4a  4 00024 7023 20
    001443  0a   001452 0002 00
    001444  0a   000044 0002 00
    001445  aa   000000 000120 
    001446  aa   000000 000002 
    001447  0a   000040 0002 00
    001450  0a   001574 0002 00
    001451  0a   001463 7102 00
    001452                     
    001452  aa  041 136 101 125
    001453  aa  145 170 160 145
    001454  aa  143 164 145 144
    001455  aa  040 151 156 164
    001456  aa  145 162 162 165
    001457  aa  160 164 040 156
    001460  aa  165 155 142 145
    001461  aa  162 040 136 157
    001462  aa  157 056 000 000
    001463                     
                                   386  
                                   387  " 
    001465                         388  describe_unexpected_fault:
    001465  4a  4 00020 7023 20    389  	tsx2	bootload_console$write_nl
                                   390  
    001466  4a  4 00142 2353 20    391  	lda	bootload_info$system_type
    001467  aa   000002 1152 07    392  	cmpa	ADP_SYSTEM,dl
    001470  0a   001510 6002 00    393  	tze	adp_scu_data
                                   394  
    001471  0a   000130 2352 00    395  	lda	mc_area+mc.scu+scu.ppr_word	" Get the PSR
    001472  aa   077777 3752 03    396  	ana	scu.psr_mask,du
    001473  aa   000022 7312 00    397  	ars	scu.psr_shift
    001474  0a   001575 7552 00    398  	sta	args.ppr.psr
                                   399  
    001475  0a   000134 2352 00    400  	lda	mc_area+mc.scu+scu.ilc	" Get the IC tracker
    001476  aa   000022 7312 00    401  	ars	18
    001477  0a   001576 7552 00    402  	sta	args.ppr.ic
                                   403  
    001500  0a   000132 2352 00    404  	lda	mc_area+mc.scu+scu.tsr_word	" Get the TSR
    001501  aa   077777 3752 03    405  	ana	scu.tsr_mask,du
    001502  aa   000022 7312 00    406  	ars	scu.tsr_shift
    001503  0a   001577 7552 00    407  	sta	args.tpr.tsr
                                   408  
    001504  0a   000135 2352 00    409  	lda	mc_area+mc.scu+scu.ca	" Get the computed address
    001505  aa   000022 7312 00    410  	ars	18
    001506  0a   001600 7552 00    411  	sta	args.tpr.ca
    001507  0a   001526 7102 00    412  	tra	got_scu_data
                                   413  
    001510                         414  adp_scu_data:
    001510  0a   000136 2352 00    415  	lda	mc_area+mc.scu+adp_scu.psr_word " Get the PSR
    001511  aa   077777 3752 03    416  	ana	adp_scu.psr_mask,du
    001512  aa   000022 7312 00    417  	ars	adp_scu.psr_shift
    001513  0a   001575 7552 00    418  	sta	args.ppr.psr
                                   419  
    001514  0a   000134 2352 00    420  	lda	mc_area+mc.scu+adp_scu.ilc	" Get the IC tracker
    001515  aa   000022 7312 00    421  	ars	18
    001516  0a   001576 7552 00    422  	sta	args.ppr.ic
                                   423  
    001517  0a   000137 2352 00    424  	lda	mc_area+mc.scu+adp_scu.tsr_word	" Get the TSR
    001520  aa   077777 3752 03    425  	ana	adp_scu.tsr_mask,du
    001521  aa   000022 7312 00    426  	ars	adp_scu.tsr_shift
    001522  0a   001577 7552 00    427  	sta	args.tpr.tsr
                                   428  
    001523  0a   000137 2352 00    429  	lda	mc_area+mc.scu+adp_scu.ca	" Get the computed address
    001524  aa   777777 3752 07    430  	ana	=o777777,dl
    001525  0a   001600 7552 00    431  	sta	args.tpr.ca
                                   432  
    001526                         433  got_scu_data:
    001526  0a   000100 3722 00    434  	epp6	mc_area			" Get the MC pointer
    001527  aa  6 00000 2133 00    435  	epaq	pr6|0
    001530  aa   077777 3752 03    436  	ana	=o077777,du		" Extract the segno
    001531  aa   000022 7312 00    437  	ars	18
    001532  0a   001601 7552 00    438  	sta	args.mcp.segno
    001533  aa   777777 3762 03    439  	anq	=o777777,du
    001534  aa   000022 7322 00    440  	qrs	18
    001535  0a   001602 7562 00    441  	stq	args.mcp.word
                                   442  
                                   443  	IOA	(PPR = ^o|^o, TPR = ^o|^o, MC at ^o|^o),
                                   444  		args.ppr.psr,
                                   445  		args.ppr.ic,
                                   446  		args.tpr.tsr,
                                   447  		args.tpr.ca,
                                   448  		args.mcp.segno,
                                   449  		args.mcp.word
    001536  4a  4 00024 7023 20
    001537  0a   001553 0002 00
    001540  0a   000044 0002 00
    001541  aa   000000 000120 
    001542  aa   000000 000007 
    001543  0a   000040 0002 00
    001544  0a   001575 0002 00
    001545  0a   001576 0002 00
    001546  0a   001577 0002 00
    001547  0a   001600 0002 00
    001550  0a   001601 0002 00
    001551  0a   001602 0002 00
    001552  0a   001565 7102 00
    001553                     
    001553  aa  047 136 101 120
    001554  aa  120 122 040 075
    001555  aa  040 136 157 174
    001556  aa  136 157 054 040
    001557  aa  124 120 122 040
    001560  aa  075 040 136 157
    001561  aa  174 136 157 054
    001562  aa  040 115 103 040
    001563  aa  141 164 040 136
    001564  aa  157 174 136 157
    001565                     
    001567  4a  4 00020 7023 20    450  	tsx2	bootload_console$write_nl
    001570  0a   001613 7102 00    451  	tra	finish_with_error
                                   452  
    001571  aa   000000 0112 03    453  		even
    001572  aa  040 040 040 040    454  fault_name:	aci	"",8
    001573  aa  040 040 040 040
    001574  aa   000000 000000     455  fault_number:	dec	0
    001575  aa   000000 000000     456  args.ppr.psr:	dec	0
    001576  aa   000000 000000     457  args.ppr.ic:	dec	0
    001577  aa   000000 000000     458  args.tpr.tsr:	dec	0
    001600  aa   000000 000000     459  args.tpr.ca:	dec	0
    001601  aa   000000 000000     460  args.mcp.segno:	dec	0
    001602  aa   000000 000000     461  args.mcp.word:	dec	0
                                   462  
                                   463  " 
                                   464  
    001603                         465  save_rest_of_registers:
                                   466  	Bpush
    001603  4a  4 00010 7423 20         	stx2	bootload_0$entry_stack_ptr,id
    001604  4a  4 00012 6067 20         	ttn	bootload_error$out_of_stack
    001605  aa   000000 6342 07    467  	ldi	0,dl
                                   468  
    001606  4a  4 00150 2353 20    469  	lda	bootload_loader$segptr	" Record during what it happened
    001607  aa   000022 7712 00    470  	arl	18
    001610  0a   000170 7552 00    471  	sta	current_segment
                                   472  
                                   473  	Breturn
    001611  4a  4 00016 2223 20         	ldx2	bootload_0$entry_stack_ptr,di
    001612  aa   000000 7102 12         	tra	0+,x2
                                   474  
    001613                         475  finish_with_error:                      " Come here when it's all over
    001613  4a  4 00152 7103 20    476  	tra	bootload_early_dump$0
                                   477  " 
                                   478  
                                   479  	even
                                   480  
                                   481  " 
                                   482  
                                   483  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   484  "							"
                                   485  "	Error message documentation.				"
                                   486  "							"
                                   487  "							"
                                   488  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                   489  
                                   490  "BEGIN MESSAGE DOCUMENTATION
                                   491  
                                   492  
                                   493  "         Message:
                                   494  "         HALT with octal 6's in the upper half of the AQ.
                                   495  
                                   496  "         S:    $crash
                                   497  
                                   498  "         T:    $init
                                   499  
                                   500  "         M:    A recursive error condition was encountered: that is,
                                   501  "         the collection zero error handler was called recursively.
                                   502  "         The low half of the A contains the unique error number
                                   503  "         of the recursive error. See the listing of bootload_error.alm
                                   504  "         for error numbers. bootload_error$disaster_AQ contains the
                                   505  "         AQ at the time of recursive entry.
                                   506  
                                   507  "         A:    This error indicates a logic error or a hardware problem.
                                   508  "         Use execute switches to return to BOS.
                                   509  "         Try a different tape. Failing that, look for a CPU problem.
                                   510  
                                   511  
                                   512  "         Message:
                                   513  "         HALT with octal 5's in the upper half of the AQ.
                                   514  
                                   515  "         S:   $crash
                                   516  
                                   517  "         T:   $init
                                   518  
                                   519  "         M:   The collection zero call stack has overflowed. This
                                   520  "         indicates a logic error in the collection zero
                                   521  "         supervisor, or a hardware problem (possibly with
                                   522  "         id or di modifiers).
                                   523  
                                   524  "         A:   Try another tape, and/or look for a CPU bug.
                                   525  
                                   526  
                                   527  "         Message:
                                   528  "         bootload_0: Shutdown
                                   529  
                                   530  "         S:    $crash
                                   531  
                                   532  "         T:    $init
                                   533  
                                   534  "         M:    The operator answered "shut" when asked for the bootload 
                                   535  "         tape mpc information.
                                   536  
                                   537  "         A:    $reboot
                                   538  
                                   539  
                                   540  "         Message:
                                   541  "         bootload_0: Console status WORD1 WORD2
                                   542  
                                   543  "         S:    $crash
                                   544  
                                   545  "         T:    $init
                                   546  
                                   547  "         M:    An I/O error was encountered on the console. WORD1 and WORD2
                                   548  "         are the two words of the status returned.
                                   549  
                                   550  "         A:    Run T&D on the console.
                                   551  
                                   552  
                                   553  "         Message:
                                   554  "         bootload_0: Unexpected control word on tape CONTROL_WORD.
                                   555  
                                   556  "         S:    $crash
                                   557  
                                   558  "         T:    $init
                                   559  
                                   560  "         M:    An unexpected Multics system tape control word was encountered.
                                   561  
                                   562  "         A:    The system tape was generated improperly; use another copy
                                   563  "         of the system tape.
                                   564  
                                   565  
                                   566  "         Message:
                                   567  "         bootload_0: Tape read error: WORD1 WORD2
                                   568  
                                   569  "         S:    $crash
                                   570  
                                   571  "         T:    $init
                                   572  
                                   573  "         M:    An I/O error was encountered when reading the MST tape.  WORD1
                                   574  "         and WORD2 are the two words of the status returned.
                                   575  
                                   576  "         A:    $reboot
                                   577  
                                   578  
                                   579  "         Message:
                                   580  "         bootload_0: Bad MST format.
                                   581  
                                   582  "         S:    $crash
                                   583  
                                   584  "         T:    $init
                                   585  
                                   586  "         M:    The records on the MST tape were out of sequence.
                                   587  
                                   588  "         A:    Try another tape.
                                   589  
                                   590  
                                   591  "         Message:
                                   592  "         bootload_0: Improper text/link/def sequence.
                                   593  
                                   594  "         S:    $crash
                                   595  
                                   596  "         T:    $init
                                   597  
                                   598  "         M:    Text, linkage, or definitions appeared out of proper sequence
                                   599  "	on the Multics system tape.
                                   600  
                                   601  "         A:    The system tape was generated improperly; use another copy
                                   602  "	of the system tape.
                                   603  
                                   604  
                                   605  "         Message:
                                   606  "         bootload_0: Out of main memory.
                                   607  
                                   608  "         S:    $crash
                                   609  
                                   610  "         T:    $init
                                   611  
                                   612  "         M:    Not enough main memory is configured in order to load
                                   613  "	collection 1.
                                   614  
                                   615  "         A:    Configure more main memory and boot again.
                                   616  
                                   617  
                                   618  "         Message:
                                   619  "         bootload_0: Too many supervisor segments.
                                   620  
                                   621  "         S:    $crash
                                   622  
                                   623  "         T:    $init
                                   624  
                                   625  "         M:    More than 256 supervisor segments were declared on the MST.
                                   626  
                                   627  "         A:    The system tape was generated improperly; use another copy 
                                   628  "         of the system tape.
                                   629  
                                   630  
                                   631  "         Message:
                                   632  "         bootload_0: An unpaged page table overflowed for seg N.
                                   633  
                                   634  "         S:    $crash
                                   635  
                                   636  "         T:    $init
                                   637  
                                   638  "         M:    The size of the page table needed for "unpaged" segment N
                                   639  "         exceeded the area left for such page tables.
                                   640  
                                   641  "         A:    The system tape was generated improperly; use another copy
                                   642  "         of the system tape.
                                   643  
                                   644  
                                   645  "         Message:
                                   646  "         bootload_0: Booting system SYSID generated CREATION_TIME
                                   647  
                                   648  "         S:     $info
                                   649  
                                   650  "         T:     $init
                                   651  
                                   652  "         M:     This is the first message printed by Multics, announcing the
                                   653  "         sysid and creation date/time of the system tape.
                                   654  
                                   655  
                                   656  "         Message:
                                   657  "         bootload_0: Enter boot tape MPC model: 
                                   658  
                                   659  "         S:    $info
                                   660  
                                   661  "         T:    $init
                                   662  
                                   663  "         M:    This query requests the operator to identify the bootload tape
                                   664  "         mpc so that firmware may be loaded.  Refer to the MOH for details.
                                   665  
                                   666  
                                   667  "         Message:
                                   668  "         bootload_0: Enter tape drive number for memory dump: 
                                   669  
                                   670  "         S:    $info
                                   671  
                                   672  "         T:    $crash
                                   673  
                                   674  "         M:    An initialization failure occured when the toehold was not active.
                                   675  "         The system is requesting the number of a tape drive on the bootload
                                   676  "         tape mpc on which to write a dump of memory.
                                   677  
                                   678  
                                   679  "         Message:
                                   680  "         bootload_0: Unknown tape MPC model NAME.
                                   681  
                                   682  "         S:    $info
                                   683  
                                   684  "         T:    $init
                                   685  
                                   686  "         M:    The operator entered an unrecognizable mpc identifier.
                                   687  
                                   688  "         A:    Try another mpc identifier.
                                   689  
                                   690  
                                   691  "         Message:
                                   692  "         bootload_0: Booting FWNAME IOM CHAN with FWID FWREV firmware.
                                   693  
                                   694  "         S:    $info
                                   695  
                                   696  "         T:    $init
                                   697  
                                   698  "         M:    The system is about to boot firmware into the bootload
                                   699  "         tape mpc.
                                   700  
                                   701  
                                   702  "         Message:
                                   703  "         bootload_0: Booted tape MPC.
                                   704  
                                   705  "         S:    $info
                                   706  
                                   707  "         T:    $init
                                   708  
                                   709  "         M:    The system succeeded in booting the bootload tape mpc.
                                   710  
                                   711  
                                   712  "         Message:
                                   713  "         bootload_0: Error status WORD1 WORD2 booting FWTYPE firmware.
                                   714  
                                   715  "         S:    $info
                                   716  
                                   717  "         T:    $init
                                   718  
                                   719  "         M:    An error occured when attempting to boot firmware into
                                   720  "         the bootload tape mpc.  WORD1 and WORD2 are the status
                                   721  "         returned.
                                   722  
                                   723  "         A:    Try another firmware identifier.
                                   724  
                                   725  
                                   726  "         Message:
                                   727  "         bootload_0: Excessive tape errors: status WORD1 WORD2.
                                   728  
                                   729  "         S:    $info
                                   730  
                                   731  "         T:    $crash
                                   732  
                                   733  "         M:    An excessive number of write errors occured when trying
                                   734  "         to write an early dump tape.  The dump to this tape will
                                   735  "         be aborted.
                                   736  
                                   737  "         A:    Try another tape.
                                   738  
                                   739  
                                   740  "         Message:
                                   741  "         bootload_0: External symbol not found: SEG$ENTRY
                                   742  
                                   743  "         S:    $info
                                   744  
                                   745  "         T:    $init
                                   746  
                                   747  "         M:    The entrypoint ENTRY was not found within the existant
                                   748  "         segment SEG during pre-linking of collection 1.  This 
                                   749  "         may indicate that the system tape was generated improperly.
                                   750  
                                   751  "         END MESSAGE DOCUMENTATION
                                   752  
                                   753  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001614  5a   000003 000000 
    001615  5a   000337 600000 
    001616  aa   000000 000000 
    001617  55   000012 000002 
    001620  5a   000002 400003 
    001621  55   000006 000012 
    001622  aa  016 142 157 157
    001623  aa  164 154 157 141
    001624  aa  144 137 145 162
    001625  aa  162 157 162 000
    001626  55   000022 000003 
    001627  0a   001347 400000 
    001630  55   000015 000003 
    001631  aa  020 165 156 145         unexpected_fault
    001632  aa  170 160 145 143
    001633  aa  164 145 144 137
    001634  aa  146 141 165 154
    001635  aa  164 000 000 000
    001636  55   000027 000012 
    001637  0a   001271 400000 
    001640  55   000025 000003 
    001641  aa  006 156 157 137         no_sym
    001642  aa  163 171 155 000
    001643  55   000036 000022 
    001644  0a   001250 400000 
    001645  55   000032 000003 
    001646  aa  017 146 154 141         flagbox_message
    001647  aa  147 142 157 170
    001650  aa  137 155 145 163
    001651  aa  163 141 147 145
    001652  55   000045 000027 
    001653  0a   001216 400000 
    001654  55   000041 000003 
    001655  aa  017 164 141 160         tape_dump_error
    001656  aa  145 137 144 165
    001657  aa  155 160 137 145
    001660  aa  162 162 157 162
    001661  55   000055 000036 
    001662  0a   001162 400000 
    001663  55   000050 000003 
    001664  aa  023 164 141 160         tape_mpc_boot_error
    001665  aa  145 137 155 160
    001666  aa  143 137 142 157
    001667  aa  157 164 137 145
    001670  aa  162 162 157 162
    001671  55   000064 000045 
    001672  0a   001137 400000 
    001673  55   000060 000003 
    001674  aa  017 142 157 157         booted_tape_mpc
    001675  aa  164 145 144 137
    001676  aa  164 141 160 145
    001677  aa  137 155 160 143
    001700  55   000074 000055 
    001701  0a   001101 400000 
    001702  55   000067 000003 
    001703  aa  020 142 157 157         booting_tape_mpc
    001704  aa  164 151 156 147
    001705  aa  137 164 141 160
    001706  aa  145 137 155 160
    001707  aa  143 000 000 000
    001710  55   000103 000064 
    001711  0a   001053 400000 
    001712  55   000077 000003 
    001713  aa  017 156 157 137         no_such_tape_fw
    001714  aa  163 165 143 150
    001715  aa  137 164 141 160
    001716  aa  145 137 146 167
    001717  55   000113 000074 
    001720  0a   001025 400000 
    001721  55   000106 000003 
    001722  aa  022 164 141 160         tape_mpc_type_list
    001723  aa  145 137 155 160
    001724  aa  143 137 164 171
    001725  aa  160 145 137 154
    001726  aa  151 163 164 000
    001727  55   000122 000103 
    001730  0a   000774 400000 
    001731  55   000116 000003 
    001732  aa  017 164 141 160         tape_mpc_help_2
    001733  aa  145 137 155 160
    001734  aa  143 137 150 145
    001735  aa  154 160 137 062
    001736  55   000131 000113 
    001737  0a   000745 400000 
    001740  55   000125 000003 
    001741  aa  017 164 141 160         tape_mpc_help_1
    001742  aa  145 137 155 160
    001743  aa  143 137 150 145
    001744  aa  154 160 137 061
    001745  55   000140 000122 
    001746  0a   000721 400000 
    001747  55   000134 000003 
    001750  aa  017 145 141 162         early_dump_done
    001751  aa  154 171 137 144
    001752  aa  165 155 160 137
    001753  aa  144 157 156 145
    001754  55   000150 000131 
    001755  0a   000671 400000 
    001756  55   000143 000003 
    001757  aa  021 145 141 162         early_dump_prompt
    001760  aa  154 171 137 144
    001761  aa  165 155 160 137
    001762  aa  160 162 157 155
    001763  aa  160 164 000 000
    001764  55   000157 000140 
    001765  0a   000644 400000 
    001766  55   000153 000003 
    001767  aa  016 164 141 160         tape_fw_prompt
    001770  aa  145 137 146 167
    001771  aa  137 160 162 157
    001772  aa  155 160 164 000
    001773  55   000166 000150 
    001774  0a   000601 400000 
    001775  55   000162 000003 
    001776  aa  015 146 151 162         first_message
    001777  aa  163 164 137 155
    002000  aa  145 163 163 141
    002001  aa  147 145 000 000
    002002  55   000175 000157 
    002003  0a   000540 400000 
    002004  55   000171 000003 
    002005  aa  014 165 160 164         upt_overflow
    002006  aa  137 157 166 145
    002007  aa  162 146 154 157
    002010  aa  167 000 000 000
    002011  55   000204 000166 
    002012  0a   000504 400000 
    002013  55   000200 000003 
    002014  aa  015 164 157 157         too_many_segs
    002015  aa  137 155 141 156
    002016  aa  171 137 163 145
    002017  aa  147 163 000 000
    002020  55   000214 000175 
    002021  0a   000447 400000 
    002022  55   000207 000003 
    002023  aa  022 157 165 164         out_of_main_memory
    002024  aa  137 157 146 137
    002025  aa  155 141 151 156
    002026  aa  137 155 145 155
    002027  aa  157 162 171 000
    002030  55   000223 000204 
    002031  0a   000406 400000 
    002032  55   000217 000003 
    002033  aa  014 142 141 144         bad_sequence
    002034  aa  137 163 145 161
    002035  aa  165 145 156 143
    002036  aa  145 000 000 000
    002037  55   000230 000214 
    002040  0a   000355 400000 
    002041  55   000226 000003 
    002042  aa  007 142 141 144         bad_mst
    002043  aa  137 155 163 164
    002044  55   000236 000223 
    002045  0a   000320 400000 
    002046  55   000233 000003 
    002047  aa  012 164 141 160         tape_error
    002050  aa  145 137 145 162
    002051  aa  162 157 162 000
    002052  55   000243 000230 
    002053  0a   000263 400000 
    002054  55   000241 000003 
    002055  aa  006 142 141 144         bad_cw
    002056  aa  137 143 167 000
    002057  55   000252 000236 
    002060  0a   000227 400000 
    002061  55   000246 000003 
    002062  aa  017 143 157 156         console_failure
    002063  aa  163 157 154 145
    002064  aa  137 146 141 151
    002065  aa  154 165 162 145
    002066  55   000260 000243 
    002067  0a   000200 400000 
    002070  55   000255 000003 
    002071  aa  010 163 150 165         shutdown
    002072  aa  164 144 157 167
    002073  aa  156 000 000 000
    002074  55   000267 000252 
    002075  0a   000171 400000 
    002076  55   000263 000003 
    002077  aa  014 157 165 164         out_of_stack
    002100  aa  137 157 146 137
    002101  aa  163 164 141 143
    002102  aa  153 000 000 000
    002103  55   000276 000260 
    002104  0a   000170 400000 
    002105  55   000272 000003 
    002106  aa  017 143 165 162         current_segment
    002107  aa  162 145 156 164
    002110  aa  137 163 145 147
    002111  aa  155 145 156 164
    002112  55   000305 000267 
    002113  0a   000160 400000 
    002114  55   000301 000003 
    002115  aa  016 165 156 145         unexpected_scu
    002116  aa  170 160 145 143
    002117  aa  164 145 144 137
    002120  aa  163 143 165 000
    002121  55   000311 000276 
    002122  0a   000100 400000 
    002123  55   000310 000003 
    002124  aa  002 155 143 000         mc
    002125  55   000317 000305 
    002126  0a   000034 400000 
    002127  55   000314 000003 
    002130  aa  013 144 151 163         disaster_AQ
    002131  aa  141 163 164 145
    002132  aa  162 137 101 121
    002133  55   000330 000311 
    002134  0a   000010 400000 
    002135  55   000322 000003 
    002136  aa  024 143 165 162         current_error_number
    002137  aa  162 145 156 164
    002140  aa  137 145 162 162
    002141  aa  157 162 137 156
    002142  aa  165 155 142 145
    002143  aa  162 000 000 000
    002144  55   000002 000317 
    002145  6a   000000 400002 
    002146  55   000333 000003 
    002147  aa  014 163 171 155         symbol_table
    002150  aa  142 157 154 137
    002151  aa  164 141 142 154
    002152  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002153  aa   000000 000065 
    002154  5a   000140 000000 
    002155  5a   000243 000000 
    002156  5a   000175 000000 
    002157  5a   000267 000000 
    002160  5a   000131 000000 
    002161  aa   000000 000000 
    002162  aa   000000 000000 
    002163  5a   000027 000000 
    002164  aa   000000 000000 
    002165  aa   000000 000000 
    002166  5a   000012 000000 
    002167  aa   000000 000000 
    002170  aa   000000 000000 
    002171  aa   000000 000000 
    002172  5a   000276 000000 
    002173  aa   000000 000000 
    002174  aa   000000 000000 
    002175  5a   000022 000000 
    002176  5a   000204 000000 
    002177  aa   000000 000000 
    002200  aa   000000 000000 
    002201  aa   000000 000000 
    002202  5a   000311 000000 
    002203  aa   000000 000000 
    002204  aa   000000 000000 
    002205  aa   000000 000000 
    002206  aa   000000 000000 
    002207  aa   000000 000000 
    002210  5a   000330 000000 
    002211  5a   000157 000000 
    002212  5a   000260 000000 
    002213  5a   000045 000000 
    002214  5a   000214 000000 
    002215  5a   000103 000000 
    002216  5a   000252 000000 
    002217  5a   000305 000000 
    002220  aa   000000 000000 
    002221  aa   000000 000000 
    002222  aa   000000 000000 
    002223  5a   000036 000000 
    002224  5a   000113 000000 
    002225  5a   000122 000000 
    002226  5a   000150 000000 
    002227  5a   000223 000000 
    002230  5a   000236 000000 
    002231  aa   000000 000000 
    002232  5a   000317 000000 
    002233  5a   000064 000000 
    002234  aa   000000 000000 
    002235  5a   000055 000000 
    002236  5a   000166 000000 
    002237  5a   000230 000000 
    002240  5a   000074 000000 

EXTERNAL NAMES

    002241  aa  006 163 145 147         segptr
    002242  aa  160 164 162 000
    002243  aa  017 141 144 160         adp_fault_names
    002244  aa  137 146 141 165
    002245  aa  154 164 137 156
    002246  aa  141 155 145 163
    002247  aa  017 154 066 070         l68_fault_names
    002250  aa  137 146 141 165
    002251  aa  154 164 137 156
    002252  aa  141 155 145 163
    002253  aa  013 163 171 163         system_type
    002254  aa  164 145 155 137
    002255  aa  164 171 160 145
    002256  aa  013 151 156 151         initial_prs
    002257  aa  164 151 141 154
    002260  aa  137 160 162 163
    002261  aa  021 142 157 157         bootload_abs_mode
    002262  aa  164 154 157 141
    002263  aa  144 137 141 142
    002264  aa  163 137 155 157
    002265  aa  144 145 000 000
    002266  aa  005 145 156 141         ename
    002267  aa  155 145 000 000
    002270  aa  007 163 145 147         segname
    002271  aa  156 141 155 145
    002272  aa  017 142 157 157         bootload_linker
    002273  aa  164 154 157 141
    002274  aa  144 137 154 151
    002275  aa  156 153 145 162
    002276  aa  023 142 157 157         bootload_early_dump
    002277  aa  164 154 157 141
    002300  aa  144 137 145 141
    002301  aa  162 154 171 137
    002302  aa  144 165 155 160
    002303  aa  006 146 167 164         fwtype
    002304  aa  171 160 145 000
    002305  aa  006 145 162 163         erstat
    002306  aa  164 141 164 000
    002307  aa  005 146 167 162         fwrev
    002310  aa  145 166 000 000
    002311  aa  004 146 167 151         fwid
    002312  aa  144 000 000 000
    002313  aa  023 164 141 160         tape_channel_number
    002314  aa  145 137 143 150
    002315  aa  141 156 156 145
    002316  aa  154 137 156 165
    002317  aa  155 142 145 162
    002320  aa  010 151 157 155         iom_name
    002321  aa  137 156 141 155
    002322  aa  145 000 000 000
    002323  aa  020 142 157 157         bootload_tape_fw
    002324  aa  164 154 157 141
    002325  aa  144 137 164 141
    002326  aa  160 145 137 146
    002327  aa  167 000 000 000
    002330  aa  020 164 141 160         tape_mpc_fw_name
    002331  aa  145 137 155 160
    002332  aa  143 137 146 167
    002333  aa  137 156 141 155
    002334  aa  145 000 000 000
    002335  aa  024 143 162 145         creation_time_string
    002336  aa  141 164 151 157
    002337  aa  156 137 164 151
    002340  aa  155 145 137 163
    002341  aa  164 162 151 156
    002342  aa  147 000 000 000
    002343  aa  005 163 171 163         sysid
    002344  aa  151 144 000 000
    002345  aa  015 142 157 157         bootload_info
    002346  aa  164 154 157 141
    002347  aa  144 137 151 156
    002350  aa  146 157 000 000
    002351  aa  013 164 141 160         tape_status
    002352  aa  145 137 163 164
    002353  aa  141 164 165 163
    002354  aa  017 142 157 157         bootload_loader
    002355  aa  164 154 157 141
    002356  aa  144 137 154 157
    002357  aa  141 144 145 162
    002360  aa  023 154 141 163         last_console_status
    002361  aa  164 137 143 157
    002362  aa  156 163 157 154
    002363  aa  145 137 163 164
    002364  aa  141 164 165 163
    002365  aa  021 142 157 157         bootload_formline
    002366  aa  164 154 157 141
    002367  aa  144 137 146 157
    002370  aa  162 155 154 151
    002371  aa  156 145 000 000
    002372  aa  013 167 162 151         write_alert
    002373  aa  164 145 137 141
    002374  aa  154 145 162 164
    002375  aa  010 167 162 151         write_nl
    002376  aa  164 145 137 156
    002377  aa  154 000 000 000
    002400  aa  005 167 162 151         write
    002401  aa  164 145 000 000
    002402  aa  020 142 157 157         bootload_console
    002403  aa  164 154 157 141
    002404  aa  144 137 143 157
    002405  aa  156 163 157 154
    002406  aa  145 000 000 000
    002407  aa  016 142 157 157         bootload_error
    002410  aa  164 154 157 141
    002411  aa  144 137 145 162
    002412  aa  162 157 162 000
    002413  aa  017 145 156 164         entry_stack_ptr
    002414  aa  162 171 137 163
    002415  aa  164 141 143 153
    002416  aa  137 160 164 162
    002417  aa  012 142 157 157         bootload_0
    002420  aa  164 154 157 141
    002421  aa  144 137 060 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    002422  aa   000003 000000 
    002423  5a   000462 000000 
    002424  aa   000004 000000 
    002425  55   000540 000425 
    002426  aa   000004 000000 
    002427  55   000531 000427 
    002430  aa   000004 000000 
    002431  55   000531 000433 
    002432  aa   000004 000000 
    002433  55   000531 000437 
    002434  aa   000004 000000 
    002435  55   000445 000442 
    002436  aa   000004 000000 
    002437  55   000456 000452 
    002440  aa   000004 000000 
    002441  55   000456 000454 
    002442  aa   000004 000000 
    002443  55   000462 000032 
    002444  aa   000004 000000 
    002445  55   000507 000467 
    002446  aa   000004 000000 
    002447  55   000507 000471 
    002450  aa   000004 000000 
    002451  55   000507 000473 
    002452  aa   000004 000000 
    002453  55   000507 000475 
    002454  aa   000004 000000 
    002455  55   000531 000477 
    002456  aa   000004 000000 
    002457  55   000507 000504 
    002460  aa   000004 000000 
    002461  55   000531 000514 
    002462  aa   000004 000000 
    002463  55   000531 000521 
    002464  aa   000004 000000 
    002465  55   000531 000527 
    002466  aa   000004 000000 
    002467  55   000540 000535 
    002470  aa   000004 000000 
    002471  55   000566 000544 
    002472  aa   000004 000000 
    002473  55   000551 000551 
    002474  aa   000004 000000 
    002475  55   000566 000556 
    002476  aa   000004 000000 
    002477  55   000566 000561 
    002500  aa   000004 000000 
    002501  55   000566 000564 
    002502  aa   000004 000000 
    002503  55   000573 000263 
    002504  aa   000004 000000 
    002505  55   000603 000577 
    002506  aa   000001 000000 
    002507  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    002510  5a   000606 000000 
    002511  5a   000610 000000 
    002512  5a   000612 000000 
    002513  5a   000614 000000 
    002514  5a   000616 000000 
    002515  5a   000620 000000 
    002516  5a   000622 000007 
    002517  5a   000622 000006 
    002520  5a   000622 000005 
    002521  5a   000622 000004 
    002522  5a   000622 000003 
    002523  5a   000622 000002 
    002524  5a   000622 000001 
    002525  5a   000622 000000 
    002526  5a   000624 000007 
    002527  5a   000624 000006 
    002530  5a   000624 000005 
    002531  5a   000624 000004 
    002532  5a   000624 000003 
    002533  5a   000624 000002 
    002534  5a   000624 000001 
    002535  5a   000624 000000 
    002536  5a   000626 000000 
    002537  5a   000630 000000 
    002540  5a   000632 000001 
    002541  5a   000632 000000 
    002542  5a   000634 000000 
    002543  5a   000636 000000 
    002544  5a   000640 000000 
    002545  5a   000642 000000 
    002546  5a   000644 000000 
    002547  5a   000646 000005 
    002550  5a   000646 000004 
    002551  5a   000646 000003 
    002552  5a   000646 000002 
    002553  5a   000646 000001 
    002554  5a   000646 000000 
    002555  5a   000650 000001 
    002556  5a   000650 000000 
    002557  5a   000652 000001 
    002560  5a   000652 000000 
    002561  5a   000654 000001 
    002562  5a   000654 000000 
    002563  5a   000656 000000 
    002564  5a   000660 000000 
    002565  5a   000662 000000 
    002566  5a   000664 000000 
    002567  5a   000666 000000 
    002570  5a   000670 000000 
    002571  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001614 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000154 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         bootload_0|entry_stack_ptr
    000011  5a   000754 0000 56
    000012  9a   777766 0000 46         bootload_error|out_of_stack
    000013  5a   000753 0000 00
    000014  9a   777764 0000 46         bootload_console|write
    000015  5a   000752 0000 00
    000016  9a   777762 0000 46         bootload_0|entry_stack_ptr
    000017  5a   000754 0000 54
    000020  9a   777760 0000 46         bootload_console|write_nl
    000021  5a   000751 0000 00
    000022  9a   777756 0000 46         bootload_console|write_alert
    000023  5a   000750 0000 00
    000024  9a   777754 0000 46         bootload_formline|bootload_formline
    000025  5a   000747 0000 00
    000026  9a   777752 0000 46         bootload_console|last_console_status
    000027  5a   000746 0000 00
    000030  9a   777750 0000 46         bootload_console|last_console_status
    000031  5a   000745 0000 00
    000032  9a   777746 0000 46         bootload_loader|tape_status
    000033  5a   000744 0000 00
    000034  9a   777744 0000 46         bootload_loader|tape_status
    000035  5a   000743 0000 00
    000036  9a   777742 0000 46         bootload_info|sysid
    000037  5a   000742 0000 00
    000040  9a   777740 0000 46         bootload_info|sysid
    000041  5a   000741 0000 00
    000042  9a   777736 0000 46         bootload_info|creation_time_string
    000043  5a   000740 0000 00
    000044  9a   777734 0000 46         bootload_info|creation_time_string
    000045  5a   000737 0000 00
    000046  9a   777732 0000 46         bootload_info|creation_time_string
    000047  5a   000736 0000 00
    000050  9a   777730 0000 46         bootload_info|creation_time_string
    000051  5a   000735 0000 00
    000052  9a   777726 0000 46         bootload_info|creation_time_string
    000053  5a   000734 0000 00
    000054  9a   777724 0000 46         bootload_info|creation_time_string
    000055  5a   000733 0000 00
    000056  9a   777722 0000 46         bootload_info|tape_mpc_fw_name
    000057  5a   000732 0000 00
    000060  9a   777720 0000 46         bootload_tape_fw|iom_name
    000061  5a   000731 0000 00
    000062  9a   777716 0000 46         bootload_info|tape_channel_number
    000063  5a   000730 0000 00
    000064  9a   777714 0000 46         bootload_tape_fw|fwid
    000065  5a   000727 0000 00
    000066  9a   777712 0000 46         bootload_tape_fw|fwrev
    000067  5a   000726 0000 00
    000070  9a   777710 0000 46         bootload_tape_fw|erstat
    000071  5a   000725 0000 00
    000072  9a   777706 0000 46         bootload_tape_fw|erstat
    000073  5a   000724 0000 00
    000074  9a   777704 0000 46         bootload_tape_fw|fwtype
    000075  5a   000723 0000 00
    000076  9a   777702 0000 46         bootload_early_dump|flagbox_message
    000077  5a   000722 0000 00
    000100  9a   777700 0000 46         bootload_linker|segname
    000101  5a   000721 0000 00
    000102  9a   777676 0000 46         bootload_linker|segname
    000103  5a   000720 0000 00
    000104  9a   777674 0000 46         bootload_linker|segname
    000105  5a   000717 0000 00
    000106  9a   777672 0000 46         bootload_linker|segname
    000107  5a   000716 0000 00
    000110  9a   777670 0000 46         bootload_linker|segname
    000111  5a   000715 0000 00
    000112  9a   777666 0000 46         bootload_linker|segname
    000113  5a   000714 0000 00
    000114  9a   777664 0000 46         bootload_linker|segname
    000115  5a   000713 0000 00
    000116  9a   777662 0000 46         bootload_linker|segname
    000117  5a   000712 0000 00
    000120  9a   777660 0000 46         bootload_linker|ename
    000121  5a   000711 0000 00
    000122  9a   777656 0000 46         bootload_linker|ename
    000123  5a   000710 0000 00
    000124  9a   777654 0000 46         bootload_linker|ename
    000125  5a   000707 0000 00
    000126  9a   777652 0000 46         bootload_linker|ename
    000127  5a   000706 0000 00
    000130  9a   777650 0000 46         bootload_linker|ename
    000131  5a   000705 0000 00
    000132  9a   777646 0000 46         bootload_linker|ename
    000133  5a   000704 0000 00
    000134  9a   777644 0000 46         bootload_linker|ename
    000135  5a   000703 0000 00
    000136  9a   777642 0000 46         bootload_linker|ename
    000137  5a   000702 0000 00
    000140  9a   777640 0000 46         bootload_abs_mode|initial_prs
    000141  5a   000701 0000 00
    000142  9a   777636 0000 46         bootload_info|system_type
    000143  5a   000700 0000 00
    000144  9a   777634 0000 46         bootload_info|l68_fault_names
    000145  5a   000677 0000 05
    000146  9a   777632 0000 46         bootload_info|adp_fault_names
    000147  5a   000676 0000 05
    000150  9a   777630 0000 46         bootload_loader|segptr
    000151  5a   000675 0000 00
    000152  9a   777626 0000 46         bootload_early_dump|       
    000153  5a   000674 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   247702 155410 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000020 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000575 
    000020  aa   000000 000270 
    000021  aa   000462 000436 
    000022  aa   000560 000270 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000012 
    000066  aa   000136 000063 
    000067  aa   175453 021710 
    000070  aa   000000 117547 
    000071  aa   211745 000000 
    000072  aa   000153 000035 
    000073  aa   127236 043464 
    000074  aa   000000 112724 
    000075  aa   701731 000000 
    000076  aa   000163 000043 
    000077  aa   127236 043477 
    000100  aa   000000 112724 
    000101  aa   701742 600000 
    000102  aa   000174 000047 
    000103  aa   112741 326566 
    000104  aa   000000 111274 
    000105  aa   624351 000000 
    000106  aa   000206 000042 
    000107  aa   127236 043504 
    000110  aa   000000 112724 
    000111  aa   701743 200000 
    000112  aa   000217 000042 
    000113  aa   101301 045475 
    000114  aa   000000 110133 
    000115  aa   352304 600000 
    000116  aa   000230 000035 
    000117  aa   153072 447700 
    000120  aa   000000 115333 
    000121  aa   300226 600000 
    000122  aa   000240 000032 
    000123  aa   127236 043555 
    000124  aa   000000 112724 
    000125  aa   701750 000000 
    000126  aa   000247 000042 
    000127  aa   106701 740577 
    000130  aa   000000 110670 
    000131  aa   206425 600000 
    000132  aa   000260 000036 
    000133  aa   127236 043574 
    000134  aa   000000 112724 
    000135  aa   701751 400000 
    000136  aa   076163 160145          >special_ldd>install>MR12.3-1114>bootload_error.alm
    000137  aa   143151 141154 
    000140  aa   137154 144144 
    000141  aa   076151 156163 
    000142  aa   164141 154154 
    000143  aa   076115 122061 
    000144  aa   062056 063055 
    000145  aa   061061 061064 
    000146  aa   076142 157157 
    000147  aa   164154 157141 
    000150  aa   144137 145162 
    000151  aa   162157 162056 
    000152  aa   141154 155040 
    000153  aa   076154 144144          >ldd>include>adp_scu.incl.alm
    000154  aa   076151 156143 
    000155  aa   154165 144145 
    000156  aa   076141 144160 
    000157  aa   137163 143165 
    000160  aa   056151 156143 
    000161  aa   154056 141154 
    000162  aa   155040 040040 
    000163  aa   076154 144144          >ldd>include>bootload_equs.incl.alm
    000164  aa   076151 156143 
    000165  aa   154165 144145 
    000166  aa   076142 157157 
    000167  aa   164154 157141 
    000170  aa   144137 145161 
    000171  aa   165163 056151 
    000172  aa   156143 154056 
    000173  aa   141154 155040 
    000174  aa   076154 144144          >ldd>include>bootload_formline.incl.alm
    000175  aa   076151 156143 
    000176  aa   154165 144145 
    000177  aa   076142 157157 
    000200  aa   164154 157141 
    000201  aa   144137 146157 
    000202  aa   162155 154151 
    000203  aa   156145 056151 
    000204  aa   156143 154056 
    000205  aa   141154 155040 
    000206  aa   076154 144144          >ldd>include>coll0_segnos.incl.alm
    000207  aa   076151 156143 
    000210  aa   154165 144145 
    000211  aa   076143 157154 
    000212  aa   154060 137163 
    000213  aa   145147 156157 
    000214  aa   163056 151156 
    000215  aa   143154 056141 
    000216  aa   154155 040040 
    000217  aa   076154 144144          >ldd>include>fault_vector.incl.alm
    000220  aa   076151 156143 
    000221  aa   154165 144145 
    000222  aa   076146 141165 
    000223  aa   154164 137166 
    000224  aa   145143 164157 
    000225  aa   162056 151156 
    000226  aa   143154 056141 
    000227  aa   154155 040040 
    000230  aa   076154 144144          >ldd>include>flagbox.incl.alm
    000231  aa   076151 156143 
    000232  aa   154165 144145 
    000233  aa   076146 154141 
    000234  aa   147142 157170 
    000235  aa   056151 156143 
    000236  aa   154056 141154 
    000237  aa   155040 040040 
    000240  aa   076154 144144          >ldd>include>slte.incl.alm
    000241  aa   076151 156143 
    000242  aa   154165 144145 
    000243  aa   076163 154164 
    000244  aa   145056 151156 
    000245  aa   143154 056141 
    000246  aa   154155 040040 
    000247  aa   076154 144144          >ldd>include>system_types.incl.alm
    000250  aa   076151 156143 
    000251  aa   154165 144145 
    000252  aa   076163 171163 
    000253  aa   164145 155137 
    000254  aa   164171 160145 
    000255  aa   163056 151156 
    000256  aa   143154 056141 
    000257  aa   154155 040040 
    000260  aa   076154 144144          >ldd>include>toe_hold.incl.alm
    000261  aa   076151 156143 
    000262  aa   154165 144145 
    000263  aa   076164 157145 
    000264  aa   137150 157154 
    000265  aa   144056 151156 
    000266  aa   143154 056141 
    000267  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

       10000    .._00000                 bootload_equs:       75.
        2000    .._00001                 bootload_equs:       76.
       24000    .._00002                 bootload_equs:       78.
        2000    .._00003                 bootload_equs:       79.
       24000    .._00004                 bootload_equs:       81.
        4000    .._00005                 bootload_equs:       82.
       24000    .._00006                 bootload_equs:       87.
       22000    .._00007                 bootload_equs:       88.
       46000    .._00010                 bootload_equs:       90.
        4000    .._00011                 bootload_equs:       91.
       52000    .._00012                 bootload_equs:       93.
        2000    .._00013                 bootload_equs:       94.
       54000    .._00014                 bootload_equs:       96.
        2000    .._00015                 bootload_equs:       97.
       56000    .._00016                 bootload_equs:       99.
        2000    .._00017                 bootload_equs:      100.
       60000    .._00020                 bootload_equs:      102.
        6000    .._00021                 bootload_equs:      103.
         205    .._00022.okay            bootload_error:     232.
         220    .._00023.control_string  bootload_error:     232.
         223    .._00023.skip_control    bootload_error:     232.
         234    .._00024.okay            bootload_error:     236.
         251    .._00025.control_string  bootload_error:     236.
         257    .._00025.skip_control    bootload_error:     236.
         270    .._00026.okay            bootload_error:     238.
         303    .._00027.control_string  bootload_error:     238.
         314    .._00027.skip_control    bootload_error:     238.
         325    .._00030.okay            bootload_error:     242.
         342    .._00031.control_string  bootload_error:     242.
         351    .._00031.skip_control    bootload_error:     242.
         362    .._00032.okay            bootload_error:     244.
         375    .._00033.control_string  bootload_error:     244.
         402    .._00033.skip_control    bootload_error:     244.
         413    .._00034.okay            bootload_error:     247.
         427    .._00035.control_string  bootload_error:     247.
         443    .._00035.skip_control    bootload_error:     247.
         454    .._00036.okay            bootload_error:     250.
         470    .._00037.control_string  bootload_error:     250.
         500    .._00037.skip_control    bootload_error:     250.
         511    .._00040.okay            bootload_error:     252.
         524    .._00041.control_string  bootload_error:     252.
         534    .._00041.skip_control    bootload_error:     252.
         545    .._00042.okay            bootload_error:     255.
         561    .._00043.control_string  bootload_error:     255.
         575    .._00043.skip_control    bootload_error:     255.
         622    .._00044.control_string  bootload_error:     265.
         637    .._00044.skip_control    bootload_error:     265.
         655    .._00045.control_string  bootload_error:     267.
         665    .._00045.skip_control    bootload_error:     267.
         702    .._00046.control_string  bootload_error:     269.
         715    .._00046.skip_control    bootload_error:     269.
         732    .._00047.control_string  bootload_error:     271.
         740    .._00047.skip_control    bootload_error:     271.
         756    .._00050.control_string  bootload_error:     273.
         767    .._00050.skip_control    bootload_error:     273.
        1005    .._00051.control_string  bootload_error:     274.
        1020    .._00051.skip_control    bootload_error:     274.
        1036    .._00052.control_string  bootload_error:     275.
        1046    .._00052.skip_control    bootload_error:     275.
        1065    .._00053.control_string  bootload_error:     278.
        1074    .._00053.skip_control    bootload_error:     278.
        1117    .._00054.control_string  bootload_error:     285.
        1132    .._00054.skip_control    bootload_error:     285.
        1150    .._00055.control_string  bootload_error:     287.
        1155    .._00055.skip_control    bootload_error:     287.
        1176    .._00056.control_string  bootload_error:     292.
        1211    .._00056.skip_control    bootload_error:     292.
        1231    .._00057.control_string  bootload_error:     296.
        1243    .._00057.skip_control    bootload_error:     296.
        1262    .._00060.control_string  bootload_error:     299.
        1264    .._00060.skip_control    bootload_error:     299.
        1322    .._00061.control_string  bootload_error:     317.
        1342    .._00061.skip_control    bootload_error:     317.
        1430    .._00062.control_string  bootload_error:     381.
        1437    .._00062.skip_control    bootload_error:     381.
        1452    .._00063.control_string  bootload_error:     385.
        1463    .._00063.skip_control    bootload_error:     385.
        1553    .._00064.control_string  bootload_error:     449.
        1565    .._00064.skip_control    bootload_error:     449.
         402    abs_seg0_segno_          coll0_segnos:        19.
           1    abx                      toe_hold:     141.
        1405    adp_fault_name           bootload_error:     351,  366.
                adp_fault_names          bootload_error:     377.
         100    adp_scu.a                adp_scu:       29.
           0    adp_scu.a_word           adp_scu:       28.
         200    adp_scu.boc              adp_scu:       55.
           1    adp_scu.boc_word         adp_scu:       54.
           7    adp_scu.ca               bootload_error:     429,
                                         adp_scu:      150.
           3    adp_scu.cpu_no_mask      adp_scu:      118.
          16    adp_scu.cpu_no_shift     adp_scu:      117.
           5    adp_scu.cpu_no_word      adp_scu:      116.
          40    adp_scu.crt              adp_scu:       59.
           1    adp_scu.crt_word         adp_scu:       58.
      100000    adp_scu.e_off            adp_scu:       39.
           1    adp_scu.e_off_word       adp_scu:       38.
         100    adp_scu.fi_flag          bootload_error:     373,
                                         adp_scu:      107.
           5    adp_scu.fi_flag_word     bootload_error:     372,
                                         adp_scu:      106.
          37    adp_scu.fi_num_mask      bootload_error:     368,
                                         adp_scu:      110.
          23    adp_scu.fi_num_shift     bootload_error:     369,
                                         adp_scu:      109.
           5    adp_scu.fi_num_word      bootload_error:     367,
                                         adp_scu:      108.
       10000    adp_scu.fsdw             adp_scu:       81.
           1    adp_scu.fsdw_word        adp_scu:       80.
          77    adp_scu.hw_ind_mask      adp_scu:       91.
           0    adp_scu.hw_ind_shift     adp_scu:       90.
           1    adp_scu.hw_ind_word      adp_scu:       89.
           2    adp_scu.hw_info2         adp_scu:       93.
           3    adp_scu.hw_info3         adp_scu:       94.
         200    adp_scu.i                adp_scu:       27.
        2000    adp_scu.ied              adp_scu:       85.
           1    adp_scu.ied_word         adp_scu:       84.
       40000    adp_scu.if               adp_scu:       77.
           1    adp_scu.if_word          adp_scu:       76.
           4    adp_scu.ilc              bootload_error:     420,
                                         adp_scu:       96.
      100000    adp_scu.im               adp_scu:       75.
           1    adp_scu.im_word          adp_scu:       74.
      400000    adp_scu.ioc              adp_scu:       71.
           1    adp_scu.ioc_word         adp_scu:       70.
           4    adp_scu.ir               adp_scu:       97.
      400000    adp_scu.iro              adp_scu:       35.
           1    adp_scu.iro_word         adp_scu:       34.
      200000    adp_scu.it               adp_scu:       73.
          17    adp_scu.itc_mask         adp_scu:       22.
          22    adp_scu.itc_shift        adp_scu:       21.
           0    adp_scu.itc_word         adp_scu:       20.
           1    adp_scu.it_word          adp_scu:       72.
           0    adp_scu.i_word           adp_scu:       26.
        2000    adp_scu.no_ga            adp_scu:       49.
           1    adp_scu.no_ga_word       adp_scu:       48.
         400    adp_scu.ocall            adp_scu:       53.
           1    adp_scu.ocall_word       adp_scu:       52.
        1000    adp_scu.ocb              adp_scu:       51.
           1    adp_scu.ocb_word         adp_scu:       50.
      200000    adp_scu.oeb              adp_scu:       37.
           1    adp_scu.oeb_word         adp_scu:       36.
           4    adp_scu.oosb             adp_scu:       65.
           1    adp_scu.oosb_word        adp_scu:       64.
        1777    adp_scu.op_code_mask     adp_scu:       25.
          10    adp_scu.op_code_shift    adp_scu:       24.
           0    adp_scu.op_code_word     adp_scu:       23.
       40000    adp_scu.orb              adp_scu:       41.
           1    adp_scu.orb_word         adp_scu:       40.
       10000    adp_scu.owb              adp_scu:       45.
           1    adp_scu.owb_word         adp_scu:       44.
        2000    adp_scu.p                adp_scu:      136.
           7    adp_scu.prr_mask         adp_scu:      131.
          17    adp_scu.prr_shift        adp_scu:      130.
           6    adp_scu.prr_word         adp_scu:      129.
       77777    adp_scu.psr_mask         bootload_error:     416,
                                         adp_scu:      128.
          22    adp_scu.psr_shift        bootload_error:     417,
                                         adp_scu:      127.
           6    adp_scu.psr_word         bootload_error:     415,
                                         adp_scu:      126.
           6    adp_scu.p_word           adp_scu:      135.
          20    adp_scu.ralr             adp_scu:       61.
           1    adp_scu.ralr_word        adp_scu:       60.
       20000    adp_scu.r_off            adp_scu:       43.
           1    adp_scu.r_off_word       adp_scu:       42.
          77    adp_scu.tag43_mask       adp_scu:      142.
           0    adp_scu.tag43_shift      adp_scu:      141.
           6    adp_scu.tag43_word       adp_scu:      140.
          77    adp_scu.tag_mask         adp_scu:       32.
           0    adp_scu.tag_shift        adp_scu:       31.
           0    adp_scu.tag_word         adp_scu:       30.
         400    adp_scu.tprv             adp_scu:      103.
           5    adp_scu.tprv_word        adp_scu:      102.
           7    adp_scu.trr_mask         adp_scu:      146.
          41    adp_scu.trr_shift        adp_scu:      145.
           7    adp_scu.trr_word         adp_scu:      144.
       77777    adp_scu.tsr_mask         bootload_error:     425,
                                         adp_scu:      149.
          22    adp_scu.tsr_shift        bootload_error:     426,
                                         adp_scu:      148.
           7    adp_scu.tsr_word         bootload_error:     424,
                                         adp_scu:      147.
       37777    adp_scu.unknown1_mask    adp_scu:       19.
          26    adp_scu.unknown1_shift   adp_scu:       18.
           0    adp_scu.unknown1_word    adp_scu:       17.
          17    adp_scu.unknown2_mask    adp_scu:       88.
           6    adp_scu.unknown2_shift   adp_scu:       87.
           1    adp_scu.unknown2_word    adp_scu:       86.
         777    adp_scu.unknown3_mask    adp_scu:      101.
          33    adp_scu.unknown3_shift   adp_scu:      100.
           5    adp_scu.unknown3_word    adp_scu:       99.
           3    adp_scu.unknown4_mask    adp_scu:      115.
          20    adp_scu.unknown4_shift   adp_scu:      114.
           5    adp_scu.unknown4_word    adp_scu:      113.
       37777    adp_scu.unknown5_mask    adp_scu:      121.
           0    adp_scu.unknown5_shift   adp_scu:      120.
           5    adp_scu.unknown5_word    adp_scu:      119.
        4000    adp_scu.w_off            adp_scu:       47.
           1    adp_scu.w_off_word       adp_scu:       46.
         100    adp_scu.zero1            adp_scu:       57.
          17    adp_scu.zero10_mask      adp_scu:      134.
          13    adp_scu.zero10_shift     adp_scu:      133.
           6    adp_scu.zero10_word      adp_scu:      132.
          17    adp_scu.zero11_mask      adp_scu:      139.
           6    adp_scu.zero11_shift     adp_scu:      138.
           6    adp_scu.zero11_word      adp_scu:      137.
           1    adp_scu.zero1_word       adp_scu:       56.
          10    adp_scu.zero2            adp_scu:       63.
           1    adp_scu.zero2_word       adp_scu:       62.
           2    adp_scu.zero3            adp_scu:       67.
           1    adp_scu.zero3_word       adp_scu:       66.
           1    adp_scu.zero4            adp_scu:       69.
           1    adp_scu.zero4_word       adp_scu:       68.
       20000    adp_scu.zero5            adp_scu:       79.
           1    adp_scu.zero5_word       adp_scu:       78.
        4000    adp_scu.zero6            adp_scu:       83.
           1    adp_scu.zero6_word       adp_scu:       82.
         200    adp_scu.zero7            adp_scu:      105.
           5    adp_scu.zero7_word       adp_scu:      104.
           1    adp_scu.zero8            adp_scu:      112.
           5    adp_scu.zero8_word       adp_scu:      111.
           7    adp_scu.zero9_mask       adp_scu:      125.
          41    adp_scu.zero9_shift      adp_scu:      124.
           6    adp_scu.zero9_word       adp_scu:      123.
        1510    adp_scu_data             bootload_error:     393,  414.
          10    adp_scu_size             adp_scu:       15.
           2    ADP_SYSTEM               bootload_error:     350,  392,
                                         system_types:        14.
        1614    another                  bootload_error:     562,  601,  627,  641.
           0    apx                      toe_hold:     140.
        1601    args.mcp.segno           bootload_error:     438,  449,  460.
        1602    args.mcp.word            bootload_error:     441,  449,  461.
        1576    args.ppr.ic              bootload_error:     402,  422,  449,  457.
        1575    args.ppr.psr             bootload_error:     398,  418,  449,  456.
        1600    args.tpr.ca              bootload_error:     411,  431,  449,  459.
        1577    args.tpr.tsr             bootload_error:     407,  427,  449,  458.
           2    At_bce__boot             toe_hold:      79.
           6    At_bce__crash            toe_hold:      83.
           1    At_bce__early            toe_hold:      78.
           7    At_bce__shutdown         toe_hold:      84.
         263    bad_cw                   bootload_error:     238.
           2    bad_cw_errorx            bootload_error:     238.
         355    bad_mst                  bootload_error:     244.
           4    bad_mst_errorx           bootload_error:     244.
         406    bad_sequence             bootload_error:     247.
           5    bad_sequence_errorx      bootload_error:     247.
       24000    bbl0_absloc              bootload_equs:       87.
       22000    bbl0_lth                 bootload_equs:       88.
         400    bbl0_segno_              coll0_segnos:        17.
           3    bbx                      toe_hold:     143.
       56000    bkpt_absloc              bootload_equs:       99.
        2000    bkpt_lth                 bootload_equs:      100.
        1137    booted_tape_mpc          bootload_error:     287.
        1101    booting_tape_mpc         bootload_error:     285.
                bootload_0               bootload_error:      56,   62,   86,   99,  192,  196,  265,  267,  269,  271,  273,
                                                             274,  275,  278,  285,  287,  292,  296,  299,  317,  466,  473.
          40    bootload_0_string        bootload_error:     184,  232,  236,  238,  242,  244,  247,  250,  252,  255,  265,
                                                             267,  269,  271,  273,  274,  275,  278,  285,  287,  292,  296,
                                                             299,  317,  381,  385,  449.
                bootload_abs_mode        bootload_error:     345.
                bootload_console         bootload_error:      58,   95,   96,  236,  265,  271,  273,  274,  275,  278,  285,
                                                             287,  292,  296,  299,  317,  347,  389,  450.
                bootload_early_dump      bootload_error:     299,  476.
                bootload_error           bootload_error:      56,   86,  192,  265,  267,  269,  271,  273,  274,  275,  278,
                                                             285,  287,  292,  296,  299,  317,  466.
                bootload_formline        bootload_error:     232,  236,  238,  242,  244,  247,  250,  252,  255,  265,  267,
                                                             269,  271,  273,  274,  275,  278,  285,  287,  292,  296,  299,
                                                             317,  381,  385,  449.
                bootload_info            bootload_error:     265,  278,  285,  349,  363,  377,  391.
                bootload_linker          bootload_error:     317.
                bootload_loader          bootload_error:     242,  469.
                bootload_tape_fw         bootload_error:     285,  292,  296.
       10000    bostoe_absloc            bootload_equs:       75.
        2000    bostoe_lth               bootload_equs:       76.
           2    bpx                      toe_hold:     142.
          71    clear_buffer             bootload_error:      94,  191.
           2    config_segno_            coll0_segnos:         6.
         227    console_failure          bootload_error:     236.
           1    console_failure_errorx   bootload_error:     236.
                creation_time_string     bootload_error:     265.
          10    current_error_number     bootload_error:      67,   69,  232,  236,  238,  242,  244,  247,  250,  252,  255,  337.
         170    current_segment          bootload_error:     208,  209,  247,  250,  255,  471.
        1465    describe_unexpected_fault      bootload_error:     382,  388.
          34    disaster_AQ              bootload_error:     157,  158,  232,  236,  238,  242,  244,  247,  250,  252,  255.
           3    dn355_mbx_segno_         coll0_segnos:         7.
           0    ds                       bootload_equs:       12.
           0    ds_segno_                coll0_segnos:         4.
         721    early_dump_done          bootload_error:     271.
         671    early_dump_prompt        bootload_error:     269.
         404    ed_segno_                coll0_segnos:        21.
                ename                    bootload_error:     317.
                entry_stack_ptr          bootload_error:      56,   62,   86,   99,  192,  196,  265,  267,  269,  271,  273,
                                                             274,  275,  278,  285,  287,  292,  296,  299,  317,  466,  473.
          12    error_common             bootload_error:      85,  232,  236,  238,  242,  244,  247,  250,  252,  255.
          26    error_common.return      bootload_error:      98.
                erstat                   bootload_error:     292,  296.
        1572    fault_name               bootload_error:     380,  381,  454.
          24    FAULT_NO_ACV             fault_vector:        46.
           5    FAULT_NO_CMD             fault_vector:        31.
          10    FAULT_NO_CON             fault_vector:        34.
          20    FAULT_NO_DF0             fault_vector:        42.
          21    FAULT_NO_DF1             fault_vector:        43.
          22    FAULT_NO_DF2             fault_vector:        44.
          23    FAULT_NO_DF3             fault_vector:        45.
          16    FAULT_NO_DIV             fault_vector:        40.
           6    FAULT_NO_DRL             fault_vector:        32.
          17    FAULT_NO_EXF             fault_vector:        41.
           3    FAULT_NO_F1              fault_vector:        29.
          30    FAULT_NO_F2              fault_vector:        50.
          31    FAULT_NO_F3              fault_vector:        51.
          12    FAULT_NO_IPR             fault_vector:        36.
           7    FAULT_NO_LUF             fault_vector:        33.
           2    FAULT_NO_MME             fault_vector:        28.
          25    FAULT_NO_MME2            fault_vector:        47.
          26    FAULT_NO_MME3            fault_vector:        48.
          27    FAULT_NO_MME4            fault_vector:        49.
          15    FAULT_NO_OFL             fault_vector:        39.
          13    FAULT_NO_ONC             fault_vector:        37.
          11    FAULT_NO_PAR             fault_vector:        35.
           0    FAULT_NO_SDF             fault_vector:        26.
           1    FAULT_NO_STR             fault_vector:        27.
          14    FAULT_NO_SUF             fault_vector:        38.
          37    FAULT_NO_TRB             fault_vector:        53.
           4    FAULT_NO_TRO             fault_vector:        30.
        1574    fault_number             bootload_error:     356,  370,  385,  455.
       20000    fgbx.alert               flagbox:       41.
          77    fgbx.bce_entry_mask      flagbox:       46.
           1    fgbx.bce_entry_shift     flagbox:       45.
       10000    fgbx.breakpoint          flagbox:       42.
      200000    fgbx.call_bce            flagbox:       38.
      400000    fgbx.flags               flagbox:       31.
          40    fgbx.flags_word          flagbox:       30.
          56    fgbx.hc_dbr              flagbox:       50.
        2000    fgbx.io_reconfig         flagbox:       44.
        4000    fgbx.manual_crash        flagbox:       43.
       40000    fgbx.mess                flagbox:       40.
          60    fgbx.message             flagbox:       51.
         100    fgbx.return_to_bce_command     flagbox:       52.
          43    fgbx.rtb                 flagbox:       35.
          44    fgbx.sentinel            flagbox:       48.
      100000    fgbx.shut                flagbox:       39.
          41    fgbx.slt_segno           flagbox:       33.
      400000    fgbx.ssenb               flagbox:       37.
          54    fgbx.sst_sdw             flagbox:       49.
           0    fgbx.toehold_used        flagbox:       28.
       24000    fgbx_absloc              bootload_equs:       78.
        2000    fgbx_lth                 bootload_equs:       79.
           5    fgbx_segno_              coll0_segnos:         9.
         140    fgbx_size                flagbox:       25.
        1613    finish_with_error        bootload_error:     232,  236,  238,  242,  244,  247,  250,  252,  255,  451,  475.
         601    first_message            bootload_error:     265.
        1250    flagbox_message          bootload_error:     299.
           7    fv                       bootload_equs:       19.
         100    fv.fpair                 fault_vector:        17.
         100    fv.fpair.scu             fault_vector:        19.
         101    fv.fpair.tra             fault_vector:        20.
         500    fv.f_scu_ptr             fault_vector:        24.
         400    fv.f_tra_ptr             fault_vector:        23.
           0    fv.ipair                 fault_vector:        13.
           0    fv.ipair.scu             fault_vector:        15.
           1    fv.ipair.tra             fault_vector:        16.
         300    fv.i_scu_ptr             fault_vector:        22.
         200    fv.i_tra_ptr             fault_vector:        21.
           4    fv_segno_                coll0_segnos:         8.
         600    fv_size                  fault_vector:        10.
                fwid                     bootload_error:     285.
                fwrev                    bootload_error:     285.
                fwtype                   bootload_error:     292.
        1526    got_scu_data             bootload_error:     412,  433.
        1416    have_fault_name          bootload_error:     364,  379.
                initial_prs              bootload_error:     345.
           0    Initial_undefined        toe_hold:      77.
           0    in_bootload_error        bootload_error:      42,   92,  232,  236,  238,  242,  244,  247,  250,  252,  255,
                                                             322,  335.
          11    iom_mbx_segno_           coll0_segnos:        13.
                iom_name                 bootload_error:     285.
           2    io_path.channel_number   toe_hold:      41.
       77777    io_path.iom_number_mask  toe_hold:      40.
          22    io_path.iom_number_shift       toe_hold:      39.
           2    io_path.iom_number_word  toe_hold:      38.
           0    io_path.pcw              toe_hold:      33.
           7    io_path.port_number_mask       toe_hold:      37.
          41    io_path.port_number_shift      toe_hold:      36.
           2    io_path.port_number_word       toe_hold:      35.
           4    io_path_size             toe_hold:      31.
       54000    iupt_absloc              bootload_equs:       96.
        2000    iupt_lth                 bootload_equs:       97.
         403    iupt_segno_              coll0_segnos:        20.
                l68_fault_names          bootload_error:     363.
           1    L68_SYSTEM               system_types:        13.
                last_console_status      bootload_error:     236.
           5    lbx                      toe_hold:     145.
           4    lpx                      toe_hold:     144.
           2    mb                       bootload_equs:       14.
         100    mc                       bootload_error:     199,  200.
          24    mc.a                     toe_hold:      99.
           3    mc.cpu_type_mask         toe_hold:     132.
          41    mc.cpu_type_shift        toe_hold:     131.
          46    mc.cpu_type_word         toe_hold:     130.
          50    mc.eis_info              bootload_error:      90,  332,
                                         toe_hold:     138.
           0    mc.errcode_shift         toe_hold:     117.
          43    mc.errcode_word          toe_hold:     116.
       77777    mc.ext_fault_reg_mask    toe_hold:     135.
          22    mc.ext_fault_reg_shift   toe_hold:     134.
          46    mc.ext_fault_reg_word    toe_hold:     133.
         377    mc.e_mask                toe_hold:     104.
          34    mc.e_shift               toe_hold:     103.
          26    mc.e_word                toe_hold:     102.
          45    mc.fault_reg             toe_hold:     128.
          46    mc.fault_time            toe_hold:     137.
      377777    mc.fcode_mask            toe_hold:     126.
           0    mc.fcode_shift           toe_hold:     125.
          44    mc.fcode_word            toe_hold:     124.
           0    mc.fim_temp_shift        toe_hold:     120.
          44    mc.fim_temp_word         toe_hold:     119.
          42    mc.ips_temp              toe_hold:     114.
          40    mc.mask                  toe_hold:     113.
           0    mc.prs                   bootload_error:      87,  330,
                                         toe_hold:      93.
          25    mc.q                     toe_hold:     100.
           7    mc.ralr_mask             toe_hold:     110.
           0    mc.ralr_shift            toe_hold:     109.
          27    mc.ralr_word             toe_hold:     108.
        1532    mc.regs_shift            toe_hold:      96.
          20    mc.regs_word             bootload_error:      89,  331,
                                         toe_hold:      95.
      400000    mc.resignal              toe_hold:     123.
          44    mc.resignal_word         toe_hold:     122.
          30    mc.scu                   bootload_error:     343,  353,  358,  367,  372,  395,  400,  404,  409,  415,  420,
                                                             424,  429,
                                         toe_hold:     112.
          11    mc.t_shift               toe_hold:     107.
          27    mc.t_word                toe_hold:     106.
          44    mc.unique_index          toe_hold:     121.
          20    mc.x                     toe_hold:      97.
         100    mc_area                  bootload_error:      87,   89,   90,  201,  202,  330,  331,  332,  343,  353,  358,
                                                             367,  372,  395,  400,  404,  409,  415,  420,  424,  429,  434.
          60    mc_area_size             bootload_error:     202.
          60    mc_size                  toe_hold:      91.
         260    mc_state.apu_history_registers       toe_hold:      71.
         110    mc_state.bar             toe_hold:      66.
         103    mc_state.cache_mode_reg  toe_hold:      63.
         106    mc_state.cfg             toe_hold:      65.
         160    mc_state.cu_history_registers  toe_hold:      69.
         104    mc_state.dbr             toe_hold:      64.
         220    mc_state.du_history_registers  toe_hold:      70.
         100    mc_state.interrupt       toe_hold:      61.
          60    mc_state.masks           toe_hold:      60.
           0    mc_state.mc_             toe_hold:      58.
         102    mc_state.mode_reg        toe_hold:      62.
         111    mc_state.old_memory_state      toe_hold:      67.
         120    mc_state.ou_history_registers  toe_hold:      68.
         320    mc_state.ptwam_ptrs      toe_hold:      72.
         420    mc_state.ptwam_regs      toe_hold:      73.
         520    mc_state.sdwam_ptrs      toe_hold:      74.
         620    mc_state.sdwam_regs      toe_hold:      75.
        1020    mc_state_size            toe_hold:      56.
          44    message_buffer           bootload_error:      59,  186,  195,  232,  236,  238,  242,  244,  247,  250,  252,
                                                             255,  265,  267,  269,  271,  273,  274,  275,  278,  285,  287,
                                                             292,  296,  299,  317,  381,  385,  449.
          70    message_length           bootload_error:      60,  188,  232,  236,  238,  242,  244,  247,  250,  252,  255,
                                                             265,  267,  269,  271,  273,  274,  275,  278,  285,  287,  292,
                                                             296,  299,  317,  381,  385,  449.
           3    Multics                  toe_hold:      80.
        1053    no_such_tape_fw          bootload_error:     278.
        1271    no_sym                   bootload_error:     317.
           4    nt                       bootload_equs:       16.
           6    nt_segno_                coll0_segnos:        10.
         447    out_of_main_memory       bootload_error:     250.
           6    out_of_main_memory_errorx      bootload_error:     250.
         171    out_of_stack             bootload_error:      56,   86,  192,  216,  218,  265,  267,  269,  271,  273,  274,
                                                             275,  278,  285,  287,  292,  296,  299,  317,  466.
         176    OUT_OF_STACK_PATTERN     bootload_error:     219,  225.
           5    prb                      bootload_equs:       17.
       60000    prb_absloc               bootload_equs:      102.
        6000    prb_lth                  bootload_equs:      103.
         401    prb_segno_               coll0_segnos:        18.
          30    recursion.die            bootload_error:     150,  232,  236,  238,  242,  244,  247,  250,  252,  255.
          36    RECURSION_PATTERN        bootload_error:     151,  159.
        1603    save_rest_of_registers   bootload_error:      93,  339,  465.
          11    save_x2                  bootload_error:      74,   88,  232,  236,  238,  242,  244,  247,  250,  252,  255.
           7    sbx                      toe_hold:     147.
          20    scu.abs                  toe_hold:     302.
           4    scu.abs_word             toe_hold:     301.
          10    scu.am_er                toe_hold:     213.
           1    scu.am_er_word           toe_hold:     212.
       37777    scu.apu_mask             toe_hold:     163.
           3    scu.apu_shift            toe_hold:     162.
           0    scu.apu_word             toe_hold:     161.
         200    scu.bm                   toe_hold:     296.
           4    scu.bm_word              toe_hold:     295.
         200    scu.boc                  toe_hold:     205.
           1    scu.boc_word             toe_hold:     204.
           5    scu.ca                   bootload_error:     409,
                                         toe_hold:     306.
      100000    scu.carry                toe_hold:     280.
           4    scu.carry_word           toe_hold:     279.
           7    scu.con_chan_mask        toe_hold:     235.
           6    scu.con_chan_shift       toe_hold:     234.
           1    scu.con_chan_word        toe_hold:     233.
           7    scu.cpu_no_mask          toe_hold:     251.
           6    scu.cpu_no_shift         toe_hold:     250.
           2    scu.cpu_no_word          toe_hold:     249.
          77    scu.cpu_tag_mask         toe_hold:     336.
           0    scu.cpu_tag_shift        toe_hold:     335.
           5    scu.cpu_tag_word         toe_hold:     334.
          40    scu.crt                  toe_hold:     209.
           1    scu.crt_word             toe_hold:     208.
        7777    scu.cu_mask              toe_hold:     309.
           6    scu.cu_shift             toe_hold:     308.
           5    scu.cu_word              toe_hold:     307.
          77    scu.delta_mask           toe_hold:     254.
           0    scu.delta_shift          toe_hold:     253.
           2    scu.delta_word           toe_hold:     252.
        2000    scu.dsptw                toe_hold:     170.
       20000    scu.eovf                 toe_hold:     284.
           4    scu.eovf_word            toe_hold:     283.
       10000    scu.eufl                 toe_hold:     286.
           4    scu.eufl_word            toe_hold:     285.
           6    scu.even_inst            toe_hold:     338.
      100000    scu.e_off                toe_hold:     189.
           1    scu.e_off_word           toe_hold:     188.
          10    scu.fabs                 toe_hold:     177.
          20    scu.fanp                 toe_hold:     176.
          40    scu.fap                  toe_hold:     175.
           7    scu.fault_cntr_mask      toe_hold:     180.
           0    scu.fault_cntr_shift     toe_hold:     179.
           0    scu.fault_cntr_word      toe_hold:     178.
          20    scu.fd_shift             toe_hold:     183.
           1    scu.fd_word              toe_hold:     182.
           1    scu.fi_flag              bootload_error:     359,
                                         toe_hold:     240.
           1    scu.fi_flag_word         toe_hold:     239.
          37    scu.fi_num_mask          bootload_error:     354,
                                         toe_hold:     238.
           1    scu.fi_num_shift         bootload_error:     355,
                                         toe_hold:     237.
           1    scu.fi_num_word          toe_hold:     236.
          10    scu.hex                  toe_hold:     304.
           4    scu.hex_word             toe_hold:     303.
           7    scu.iac_mask             toe_hold:     232.
          11    scu.iac_shift            toe_hold:     231.
           1    scu.iac_word             toe_hold:     230.
          17    scu.ial_mask             toe_hold:     229.
          14    scu.ial_shift            toe_hold:     228.
           1    scu.ial_word             toe_hold:     227.
         100    scu.if                   toe_hold:     333.
           5    scu.if_word              toe_hold:     332.
           4    scu.ilc                  bootload_error:     400,
                                         toe_hold:     273.
         100    scu.inret                toe_hold:     207.
           1    scu.inret_word           toe_hold:     206.
           4    scu.ir                   toe_hold:     274.
      400000    scu.iro                  toe_hold:     185.
           1    scu.iro_word             toe_hold:     184.
         200    scu.its                  toe_hold:     331.
           5    scu.its_word             toe_hold:     330.
          40    scu.mif                  toe_hold:     300.
           4    scu.mif_word             toe_hold:     299.
      200000    scu.neg                  toe_hold:     278.
           4    scu.neg_word             toe_hold:     277.
        2000    scu.no_ga                toe_hold:     199.
           1    scu.no_ga_word           toe_hold:     198.
         400    scu.ocall                toe_hold:     203.
           1    scu.ocall_word           toe_hold:     202.
        1000    scu.ocb                  toe_hold:     201.
           1    scu.ocb_word             toe_hold:     200.
           7    scu.odd_inst             toe_hold:     339.
      200000    scu.oeb                  toe_hold:     187.
           1    scu.oeb_word             toe_hold:     186.
        4000    scu.oflm                 toe_hold:     288.
           4    scu.oflm_word            toe_hold:     287.
      400000    scu.onc_1                toe_hold:     221.
           1    scu.onc_1_word           toe_hold:     220.
      200000    scu.onc_2                toe_hold:     223.
           1    scu.onc_2_word           toe_hold:     222.
           4    scu.oosb                 toe_hold:     215.
           1    scu.oosb_word            toe_hold:     214.
       40000    scu.orb                  toe_hold:     191.
           1    scu.orb_word             toe_hold:     190.
       40000    scu.ovfl                 toe_hold:     282.
           4    scu.ovfl_word            toe_hold:     281.
       10000    scu.owb                  toe_hold:     195.
           1    scu.owb_word             toe_hold:     194.
      400000    scu.p                    toe_hold:     160.
        1000    scu.par                  toe_hold:     292.
           1    scu.parl                 toe_hold:     219.
           1    scu.parl_word            toe_hold:     218.
         400    scu.parm                 toe_hold:     294.
           4    scu.parm_word            toe_hold:     293.
           2    scu.paru                 toe_hold:     217.
           1    scu.paru_word            toe_hold:     216.
           4    scu.par_word             toe_hold:     291.
        4000    scu.pi_ap                toe_hold:     169.
        1000    scu.poa                  toe_hold:     327.
           5    scu.poa_word             toe_hold:     326.
       10000    scu.pon                  toe_hold:     321.
           5    scu.pon_word             toe_hold:     320.
        1777    scu.port_stat_mask       toe_hold:     226.
           6    scu.port_stat_shift      toe_hold:     225.
           1    scu.port_stat_word       toe_hold:     224.
       20000    scu.pot                  toe_hold:     319.
           5    scu.pot_word             toe_hold:     318.
          21    scu.ppr_shift            toe_hold:     155.
           0    scu.ppr_word             bootload_error:     395,
                                         toe_hold:     154.
           7    scu.prr_mask             toe_hold:     157.
          41    scu.prr_shift            toe_hold:     156.
       77777    scu.psr_mask             bootload_error:     396,
                                         toe_hold:     159.
          22    scu.psr_shift            bootload_error:     397,
                                         toe_hold:     158.
         200    scu.ptw                  toe_hold:     173.
         100    scu.ptw2                 toe_hold:     174.
       20000    scu.ptwm                 toe_hold:     167.
       10000    scu.pt_on                toe_hold:     168.
          20    scu.ralr                 toe_hold:     211.
           1    scu.ralr_word            toe_hold:     210.
      100000    scu.rd                   toe_hold:     315.
           5    scu.rd_word              toe_hold:     314.
      400000    scu.rf                   toe_hold:     311.
         400    scu.rfi                  toe_hold:     329.
           5    scu.rfi_word             toe_hold:     328.
           5    scu.rf_word              toe_hold:     310.
       40000    scu.rl                   toe_hold:     317.
           5    scu.rl_word              toe_hold:     316.
      200000    scu.rpt                  toe_hold:     313.
           5    scu.rpt_word             toe_hold:     312.
       20000    scu.r_off                toe_hold:     193.
           1    scu.r_off_word           toe_hold:     192.
      100000    scu.sdwm                 toe_hold:     165.
        1000    scu.sdwnp                toe_hold:     171.
         400    scu.sdwp                 toe_hold:     172.
       40000    scu.sd_on                toe_hold:     166.
           2    scu.tpr                  toe_hold:     242.
          77    scu.tpr_tbr_mask         toe_hold:     271.
           0    scu.tpr_tbr_shift        toe_hold:     270.
           3    scu.tpr_tbr_word         toe_hold:     269.
        2000    scu.tro                  toe_hold:     290.
           4    scu.tro_word             toe_hold:     289.
           7    scu.trr_mask             toe_hold:     245.
          41    scu.trr_shift            toe_hold:     244.
           2    scu.trr_word             toe_hold:     243.
         100    scu.tru                  toe_hold:     298.
           4    scu.tru_word             toe_hold:     297.
          17    scu.tsna_mask            toe_hold:     262.
          16    scu.tsna_shift           toe_hold:     261.
           3    scu.tsna_word            toe_hold:     260.
          17    scu.tsnb_mask            toe_hold:     265.
          12    scu.tsnb_shift           toe_hold:     264.
           3    scu.tsnb_word            toe_hold:     263.
          17    scu.tsnc_mask            toe_hold:     268.
           6    scu.tsnc_shift           toe_hold:     267.
           3    scu.tsnc_word            toe_hold:     266.
       77777    scu.tsr_mask             bootload_error:     405,
                                         toe_hold:     248.
          22    scu.tsr_shift            bootload_error:     406,
                                         toe_hold:     247.
        7777    scu.tsr_stat_mask        toe_hold:     259.
           6    scu.tsr_stat_shift       toe_hold:     258.
           3    scu.tsr_stat_word        toe_hold:     257.
           2    scu.tsr_word             bootload_error:     404,
                                         toe_hold:     246.
           3    scu.word3                toe_hold:     256.
        4000    scu.w_off                toe_hold:     197.
           1    scu.w_off_word           toe_hold:     196.
        4000    scu.xde                  toe_hold:     323.
           5    scu.xde_word             toe_hold:     322.
        2000    scu.xdo                  toe_hold:     325.
           5    scu.xdo_word             toe_hold:     324.
      200000    scu.xsf                  toe_hold:     164.
      400000    scu.zero                 toe_hold:     276.
           4    scu.zero_word            toe_hold:     275.
           0    scux.fd_shift            toe_hold:     348.
           1    scux.fd_word             toe_hold:     347.
      100000    scux.ia_am               toe_hold:     354.
           1    scux.ia_am_word          toe_hold:     353.
           6    scux.instr               toe_hold:     368.
      200000    scux.ioc                 toe_hold:     352.
           1    scux.ioc_word            toe_hold:     351.
       20000    scux.ipr                 toe_hold:     358.
           1    scux.ipr_word            toe_hold:     357.
      400000    scux.isn                 toe_hold:     350.
           1    scux.isn_word            toe_hold:     349.
       40000    scux.isp                 toe_hold:     356.
           1    scux.isp_word            toe_hold:     355.
       10000    scux.nea                 toe_hold:     360.
           1    scux.nea_word            toe_hold:     359.
        4000    scux.oobb                toe_hold:     362.
           1    scux.oobb_word           toe_hold:     361.
        7777    scux.tsr_stat_mask       toe_hold:     366.
           6    scux.tsr_stat_shift      toe_hold:     365.
           3    scux.tsr_stat_word       toe_hold:     364.
          10    scux_size                toe_hold:     344.
          10    scu_size                 toe_hold:     152.
           6    seg                      bootload_equs:       18.
           1    seg2                     bootload_equs:       13.
                segname                  bootload_error:     317.
                segptr                   bootload_error:     469.
         200    shutdown                 bootload_error:     232.
           0    shutdown_errorx          bootload_error:     232.
           3    slt                      bootload_equs:       15.
       10000    slte.abs_seg             slte:          88.
           1    slte.abs_seg_word        slte:          87.
          17    slte.access_mask         slte:          84.
          40    slte.access_shift        slte:          83.
           1    slte.access_word         slte:          82.
           1    slte.acl_provided        slte:         102.
           1    slte.acl_provided_word   slte:         101.
           0    slte.bit_count_shift     slte:         134.
           3    slte.bit_count_word      slte:         133.
       40000    slte.branch_required     slte:         104.
           1    slte.branch_required_word      slte:         103.
        1000    slte.breakpointable      slte:          94.
           1    slte.breakpointable_word       slte:          93.
       20000    slte.cache               slte:          86.
           1    slte.cache_word          slte:          85.
         400    slte.combine_link        slte:         116.
           1    slte.combine_link_word   slte:         115.
         777    slte.cur_length_mask     slte:         124.
          33    slte.cur_length_shift    slte:         123.
           2    slte.cur_length_word     slte:         122.
         100    slte.defs                slte:         120.
           1    slte.defs_word           slte:         119.
        4000    slte.firmware_seg        slte:          90.
           1    slte.firmware_seg_word   slte:          89.
       20000    slte.init_seg            slte:         106.
           1    slte.init_seg_word       slte:         105.
        2000    slte.layout_seg          slte:          92.
           1    slte.layout_seg_word     slte:          91.
        4000    slte.link_provided       slte:         110.
           1    slte.link_provided_word  slte:         109.
        2000    slte.link_sect           slte:         112.
        1000    slte.link_sect_wired     slte:         114.
           1    slte.link_sect_wired_word      slte:         113.
           1    slte.link_sect_word      slte:         111.
         777    slte.max_length_mask     slte:         132.
          30    slte.max_length_shift    slte:         131.
           3    slte.max_length_word     slte:         130.
           0    slte.names_ptr           slte:          79.
          20    slte.paged               slte:          98.
           1    slte.paged_word          slte:          97.
           0    slte.path_ptr            slte:          80.
          10    slte.per_process         slte:         100.
           1    slte.per_process_word    slte:          99.
         200    slte.pre_linked          slte:         118.
           1    slte.pre_linked_word     slte:         117.
           7    slte.ringbrack_mask      slte:         127.
          30    slte.ringbrack_shift     slte:         126.
           2    slte.ringbrack_word      slte:         125.
           2    slte.segno               slte:         128.
       10000    slte.temp_seg            slte:         108.
           1    slte.temp_seg_word       slte:         107.
          40    slte.wired               slte:          96.
           1    slte.wired_word          slte:          95.
           4    slte_size                slte:          77.
       10000    slte_uns.abs_seg         slte:          26.
           1    slte_uns.abs_seg_word    slte:          25.
          17    slte_uns.access_mask     slte:          22.
          40    slte_uns.access_shift    slte:          21.
           1    slte_uns.access_word     slte:          20.
           1    slte_uns.acl_provided    slte:          40.
           1    slte_uns.acl_provided_word     slte:          39.
           0    slte_uns.bit_count_shift       slte:          72.
           3    slte_uns.bit_count_word  slte:          71.
       40000    slte_uns.branch_required       slte:          42.
           1    slte_uns.branch_required_word  slte:          41.
        1000    slte_uns.breakpointable  slte:          32.
           1    slte_uns.breakpointable_word   slte:          31.
       20000    slte_uns.cache           slte:          24.
           1    slte_uns.cache_word      slte:          23.
         400    slte_uns.combine_link    slte:          54.
           1    slte_uns.combine_link_word     slte:          53.
         777    slte_uns.cur_length_mask       slte:          62.
          33    slte_uns.cur_length_shift      slte:          61.
           2    slte_uns.cur_length_word       slte:          60.
         100    slte_uns.defs            slte:          58.
           1    slte_uns.defs_word       slte:          57.
        4000    slte_uns.firmware_seg    slte:          28.
           1    slte_uns.firmware_seg_word     slte:          27.
       20000    slte_uns.init_seg        slte:          44.
           1    slte_uns.init_seg_word   slte:          43.
        2000    slte_uns.layout_seg      slte:          30.
           1    slte_uns.layout_seg_word       slte:          29.
        4000    slte_uns.link_provided   slte:          48.
           1    slte_uns.link_provided_word    slte:          47.
        2000    slte_uns.link_sect       slte:          50.
        1000    slte_uns.link_sect_wired       slte:          52.
           1    slte_uns.link_sect_wired_word  slte:          51.
           1    slte_uns.link_sect_word  slte:          49.
         777    slte_uns.max_length_mask       slte:          70.
          30    slte_uns.max_length_shift      slte:          69.
           3    slte_uns.max_length_word       slte:          68.
           0    slte_uns.names_ptr       slte:          17.
          20    slte_uns.paged           slte:          36.
           1    slte_uns.paged_word      slte:          35.
           0    slte_uns.path_ptr        slte:          18.
          10    slte_uns.per_process     slte:          38.
           1    slte_uns.per_process_word      slte:          37.
         200    slte_uns.pre_linked      slte:          56.
           1    slte_uns.pre_linked_word       slte:          55.
           7    slte_uns.ringbrack_mask  slte:          65.
          30    slte_uns.ringbrack_shift       slte:          64.
           2    slte_uns.ringbrack_word  slte:          63.
           2    slte_uns.segno           slte:          66.
       10000    slte_uns.temp_seg        slte:          46.
           1    slte_uns.temp_seg_word   slte:          45.
          40    slte_uns.wired           slte:          34.
           1    slte_uns.wired_word      slte:          33.
           4    slte_uns_size            slte:          15.
           7    slt_segno_               coll0_segnos:        11.
           6    spx                      toe_hold:     146.
                sysid                    bootload_error:     265.
                system_type              bootload_error:     349,  391.
                tape_channel_number      bootload_error:     285.
        1216    tape_dump_error          bootload_error:     296.
         320    tape_error               bootload_error:     242.
           3    tape_error_errorx        bootload_error:     242.
         644    tape_fw_prompt           bootload_error:     267.
        1162    tape_mpc_boot_error      bootload_error:     292.
                tape_mpc_fw_name         bootload_error:     278,  285.
         745    tape_mpc_help_1          bootload_error:     273.
         774    tape_mpc_help_2          bootload_error:     274.
        1025    tape_mpc_type_list       bootload_error:     275.
                tape_status              bootload_error:     242.
       46000    toedata_absloc           bootload_equs:       90.
        4000    toedata_lth              bootload_equs:       91.
          10    toehold_data_segno_      coll0_segnos:        12.
           1    toehold_segno_           coll0_segnos:         5.
       24000    toe_absloc               bootload_equs:       81.
         242    toe_hold.bce_dbr         toe_hold:      24.
           0    toe_hold.entry_sequences       toe_hold:      18.
          40    toe_hold.flagbox         toe_hold:      19.
         241    toe_hold.memory_state    toe_hold:      23.
        2760    toe_hold.multics_state   toe_hold:      25.
         240    toe_hold.n_paths_used    toe_hold:      22.
         220    toe_hold.paths           toe_hold:      20.
           5    TOE_HOLD_BOOT_ENTRY      toe_hold:      48.
          14    TOE_HOLD_BOS_ENTRY       toe_hold:      49.
          16    TOE_HOLD_BOS_MULTICS_ENTRY     toe_hold:      51.
          15    TOE_HOLD_BOS_NO_SAVE_ENTRY     toe_hold:      50.
           0    TOE_HOLD_CRASH_ENTRY     toe_hold:      43.
           2    TOE_HOLD_DUMP_ENTRY      toe_hold:      45.
           1    TOE_HOLD_ESD_ENTRY       toe_hold:      44.
           3    TOE_HOLD_MULTICS_ENTRY   toe_hold:      46.
           4    TOE_HOLD_RESTART_ENTRY   toe_hold:      47.
        4000    toe_hold_size            toe_hold:      15.
        4000    toe_lth                  bootload_equs:       82.
          13    toe_segno_               coll0_segnos:        15.
         504    too_many_segs            bootload_error:     252.
           7    too_many_segs_errorx     bootload_error:     252.
          10    Undefined_continue       toe_hold:      85.
           5    Undefined_reading_bce    toe_hold:      82.
          11    Undefined_saving_mem     toe_hold:      86.
           4    Undefined_saving_state   toe_hold:      81.
        1347    unexpected_fault         bootload_error:     320,  321.
        1353    unexpected_fault.okay    bootload_error:     323,  329.
        1442    unexpected_interrupt_actually  bootload_error:     360,  374,  384.
         160    unexpected_scu           bootload_error:     205,  206,  342.
          11    unique_errorx            bootload_error:     112,  232,  236,  238,  242,  244,  247,  250,  252,  255.
       52000    upt_absloc               bootload_equs:       93.
        2000    upt_lth                  bootload_equs:       94.
         540    upt_overflow             bootload_error:     255.
          10    upt_overflow_errorx      bootload_error:     255.
          12    upt_segno_               coll0_segnos:        14.
                write                    bootload_error:      58.
                write_alert              bootload_error:      96.
           1    write_message            bootload_error:      55,  232,  236,  238,  242,  244,  247,  250,  252,  255,  265,
                                                             267,  269,  271,  273,  274,  275,  278,  285,  287,  292,  296,
                                                             299,  317,  381,  385,  449.
           6    write_message.return     bootload_error:      61.
                write_nl                 bootload_error:      95,  265,  271,  273,  274,  275,  278,  285,  287,  292,  296,
                                                             299,  317,  347,  389,  450.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
