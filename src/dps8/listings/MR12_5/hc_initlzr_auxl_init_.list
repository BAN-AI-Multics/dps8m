	COMPILATION LISTING OF SEGMENT hc_initlzr_auxl_init_
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1029.6 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(86-06-05,GJohnson), approve(86-06-05,MCR7387),
       17*     audit(86-06-10,Martinson), install(86-07-11,MR12.0-1091):
       18*     Correct error message documentation.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* format: style4 */
       23 hc_initlzr_auxl_init_: proc;
       24 init: entry;					/* to avoid coordinated installation */
       25 
       26 /* * This procedure is an interface between as_init_ and the procedures in
       27*   * bound_hc_initlzr_auxl_. This bound segment contains procedures that are,
       28*   * themselves, interfaces between the answering service and subsystems on the
       29*   * system tape. The intention is to avoid, as much as possible, coordinated
       30*   * hardcore and answering service installations, whenever new subsystems that are
       31*   * to be initialized or used by the answering service are added to the system tape.
       32*   *
       33*   * Modification history:
       34*   * Initial coding July 1977 by T. Casey
       35*   * Modified April 1982 by E. N. Kittlitz. new initialization.
       36**/
       37 
       38 /* DECLARATIONS */
       39 
       40 
       41 /* External Entries */
       42 
       43 dcl  hc_device_acct_$init entry (fixed bin (35));
       44 dcl  lv_request_$init entry;
       45 dcl  rcp_mount_timer_poll_$init_rcp_mount_timers entry;
       46 dcl  sub_err_ entry () options (variable);
       47 dcl  sys_log_$error_log entry options (variable);
       48 
       49 /* External static */
       50 
       51 dcl  error_table_$out_of_sequence fixed bin (35) ext static;
       52 
       53 /* Automatic */
       54 dcl  code fixed bin (35);
       55 
       56 
       57 /* PROCEDURE */
       58 
       59 	if ^sc_stat_$Multics_typed | sc_stat_$Go_typed then
       60 	     call sub_err_ (error_table_$out_of_sequence, "hc_initlzr_auxl_init_", "s");
       61 	call rcp_mount_timer_poll_$init_rcp_mount_timers;
       62 	call lv_request_$init;
       63 	call hc_device_acct_$init (code);
       64 	if code ^= 0 then do;
       65 	     call sys_log_$error_log (2, code, "hc_initlzr_auxl_init_", "From hc_device_acct_$init");
       66 	     call sub_err_ (0, "hc_initlzr_auxl_init_", "s");
       67 	end;
       68 	return;
       69 
  1     1 /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  1     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  1     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  1     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  1     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  1    10*     Reorganized by type of data to improve readability.
  1    11*                                                   END HISTORY COMMENTS */
  1    12 
  1    13 
  1    14 			      /* ACCESS NAMES		       */
  1    15 dcl (
  1    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  1    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  1    18     ) char(32) ext static;
  1    19 
  1    20 		        /* PATHNAMES			       */
  1    21 dcl (
  1    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  1    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  1    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  1    25  sc_stat_$sysdir	        /* system control directory		       */
  1    26     ) char(168) ext static;
  1    27 
  1    28 		        /* OTHER CHAR STRINGS			       */
  1    29 dcl (
  1    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  1    31     )  char(6) aligned ext static;
  1    32 
  1    33 			       /* LABELS			       */
  1    34 dcl (
  1    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  1    36 			       /*    ssu_$null_label unless 	       */
  1    37 			       /*	   admin_listener is active.	       */
  1    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  1    39 			       /*    attributable to a particular      */
  1    40 			       /*	   command.		       */
  1    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  1    42     ) label variable ext static;
  1    43 
  1    44 			 /* POINTERS TO			       */
  1    45 dcl (
  1    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  1    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  1    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  1    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  1    50 			 /*      by sys_log_.		       */
  1    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  1    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  1    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  1    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  1    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  1    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  1    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  1    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  1    59     ) ptr ext static;
  1    60 
  1    61 			   /* SWITCHES			       */
  1    62 dcl (
  1    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  1    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  1    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  1    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  1    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  1    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  1    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  1    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  1    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  1    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  1    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  1    74 			   /*	 if PNT not yet available.	       */
  1    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  1    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  1    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  1    78 			   /*      by operator signed on system console*/
  1    79     ) bit(1) aligned ext static;
  1    80 
  1    81 
  1    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
       70 
       71 
       72 /* BEGIN MESSAGE DOCUMENTATION
       73*
       74*   Message:
       75*   hc_initlrz_auxl_init_: MESSAGE. From hc_device_acct_$init.
       76*
       77*   S:	as (severity2)
       78*
       79*   T:	$init
       80*
       81*   M:	An error was detected while initializing device accounting.
       82*
       83*   A:	$notify
       84*
       85*   END MESSAGE DOCUMENTATION */
       86 
       87      end hc_initlzr_auxl_init_;
       88 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0800.9  hc_initlzr_auxl_init_.pl1         >spec>install>1110>hc_initlzr_auxl_init_.pl1
70           1    08/06/87  0913.5  sc_stat_.incl.pl1                 >ldd>include>sc_stat_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
code                            000100 automatic       fixed bin(35,0)          dcl 54 set ref 63* 64 65*
error_table_$out_of_sequence    000022 external static fixed bin(35,0)          dcl 51 set ref 59*
hc_device_acct_$init            000010 constant        entry                    external dcl 43 ref 63
lv_request_$init                000012 constant        entry                    external dcl 44 ref 62
rcp_mount_timer_poll_$init_rcp_mount_timers
                                000014 constant        entry                    external dcl 45 ref 61
sc_stat_$Go_typed               000024 external static bit(1)                   dcl 1-62 ref 59
sc_stat_$Multics_typed          000026 external static bit(1)                   dcl 1-62 ref 59
sub_err_                        000016 constant        entry                    external dcl 46 ref 59 66
sys_log_$error_log              000020 constant        entry                    external dcl 47 ref 65

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
sc_stat_$Go                            external static bit(1)                   dcl 1-62
sc_stat_$Multics                       external static bit(1)                   dcl 1-62
sc_stat_$Star_typed                    external static bit(1)                   dcl 1-62
sc_stat_$admin_listener_exit_label     external static label variable           dcl 1-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 1-62
sc_stat_$admin_log_iocb                external static pointer                  dcl 1-45
sc_stat_$admin_log_write_ptr           external static pointer                  dcl 1-45
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 1-45
sc_stat_$as_log_write_ptr              external static pointer                  dcl 1-45
sc_stat_$did_part1                     external static bit(1)                   dcl 1-62
sc_stat_$did_part2                     external static bit(1)                   dcl 1-62
sc_stat_$did_part3                     external static bit(1)                   dcl 1-62
sc_stat_$exec_access_name              external static char(32)                 packed unaligned dcl 1-15
sc_stat_$info_dir                      external static char(168)                packed unaligned dcl 1-21
sc_stat_$initzer_ttyp                  external static pointer                  dcl 1-45
sc_stat_$log_dir                       external static char(168)                packed unaligned dcl 1-21
sc_stat_$master_abort_label            external static label variable           dcl 1-34
sc_stat_$master_channel                external static char(6)                  dcl 1-29
sc_stat_$master_iocb                   external static pointer                  dcl 1-45
sc_stat_$master_sci_ptr                external static pointer                  dcl 1-45
sc_stat_$mc_acs_dir                    external static char(168)                packed unaligned dcl 1-21
sc_stat_$mc_ansp                       external static pointer                  dcl 1-45
sc_stat_$mc_iocb                       external static pointer                  dcl 1-45
sc_stat_$mc_is_on                      external static bit(1)                   dcl 1-62
sc_stat_$no_operator_login             external static bit(1)                   dcl 1-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 1-62
sc_stat_$sv1_iocb                      external static pointer                  dcl 1-45
sc_stat_$sv2_iocb                      external static pointer                  dcl 1-45
sc_stat_$sv3_iocb                      external static pointer                  dcl 1-45
sc_stat_$sysdir                        external static char(168)                packed unaligned dcl 1-21
sc_stat_$system_shutdown_label         external static label variable           dcl 1-34
sc_stat_$test_mode                     external static bit(1)                   dcl 1-62
sc_stat_$unidentified_access_name      external static char(32)                 packed unaligned dcl 1-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 1-62

NAMES DECLARED BY EXPLICIT CONTEXT.
hc_initlzr_auxl_init_           000023 constant        entry                    external dcl 23
init                            000032 constant        entry                    external dcl 24

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       342         372     200         352
Length       570     200        30         162     142           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
hc_initlzr_auxl_init_               105 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
hc_initlzr_auxl_init_    000100 code                        hc_initlzr_auxl_init_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
hc_device_acct_$init          lv_request_$init              rcp_mount_timer_poll_$init_rcp_mount_timers
sub_err_                      sys_log_$error_log

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$out_of_sequence  sc_stat_$Go_typed             sc_stat_$Multics_typed




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     23 000022        24 000030        59 000037        61 000070        62 000075        63 000102        64 000111
     65 000113        66 000150        68 000177


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
