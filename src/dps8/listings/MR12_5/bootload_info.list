	COMPILATION LISTING OF SEGMENT !BBBJZjXlMfmXLF
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1036.3 mst Sat
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* HISTORY COMMENTS:
       10*  1) change(85-09-09,Farley), approve(85-09-09,MCR6979),
       11*     audit(86-03-06,GDixon), install(86-03-21,MR12.0-1033):
       12*     Support IMU.
       13*  2) change(86-01-07,Fawcett), approve(86-04-11,MCR7383),
       14*     audit(86-05-12,Coppola), install(86-07-17,MR12.0-1097):
       15*     Add support for subvolumes on MSU3380 and MSU3390.
       16*  3) change(87-10-02,Farley), approve(88-02-26,MCR7794),
       17*     audit(88-03-04,Fawcett), install(88-03-15,MR12.2-1035):
       18*     Added imu_style_iom flag, so that init_early_config can create the proper
       19*     IOM config entry.
       20*  4) change(87-10-19,Farley), approve(88-02-26,MCR7795),
       21*     audit(88-03-04,Fawcett), install(88-03-15,MR12.2-1035):
       22*     Added default_time_zone and default_time_zone_delta, so that predefined
       23*     time zone information can be available at boot time.
       24*  5) change(87-10-19,Farley), approve(88-02-26,MCR7796),
       25*     audit(88-03-04,Fawcett), install(88-03-15,MR12.2-1035):
       26*     Added default_rpv_data, so that predefined RPV information can be
       27*     available at boot time.
       28*                                                   END HISTORY COMMENTS */
       29 /* format: style2 */
       30 bootload_info:
       31      procedure;
       32 
       33 /* *	This is a CDS which is used to generate the bootload_info segment, used in
       34*   *	bound_bootload_0 and various later parts of collection 1 and 2 bootload.
       35*   *      In a later release, it will ask questions to allow certain
       36*   *      configuration info to be "canned" onto the MST. For now,
       37*   *      none of the answers are used, so all that is commented out/
       38*   *      skipped.
       39*   *
       40*   *	11/02/80, W. Olin Sibert
       41*   *      8/82 BIM
       42*   *      x/83 Keith Loepere for various values, including bce_sst_sizes
       43*   *	4/84 Keith Loepere for bce_intk_card.
       44*   *	3/85 Keith Loepere for safe_config_deck_frec.
       45*   */
       46 
       47 	dcl     1 bootload_info	 aligned,		/* Data used by collection 1 bootload, mostly */
       48 		2 structure_start	 pointer init (null ()),
       49 						/* Beginning of this structure */
       50 		2 structure_size	 fixed bin init (0),/* And its length in words, for use in copying */
       51 		2 status_mask	 bit (36) aligned init ("370000770000"b3),
       52 						/* Mask to check status word against */
       53 		2 bce_dbr		 bit (72) aligned,	/* double word aligned */
       54 		2 iom_boot_info	 (8) fixed bin (71) init ((8) - 1),
       55 						/* Information copied from that left in low memory by the */
       56 						/* IOM Bootload Program. */
       57 		2 boot_without_query bit (1) aligned init ("0"b),
       58 						/* info is here */
       59 		2 iom_port_table	 (4) fixed bin (35) init ((4) - 1),
       60 						/* SCU port for each IOM */
       61 		2 imu_style_iom	 bit (1) aligned init ("0"b),
       62 						/* Bootload IOM is an IMU */
       63 		2 cold_tape_mpc	 bit (1) aligned init ("1"b),
       64 						/* F/W in tape MPC */
       65 		2 tape_iom_number	 fixed bin (3) init (-1),
       66 						/* Bootload tape IOM number */
       67 		2 tape_channel_number
       68 				 fixed bin (6) init (-1),
       69 						/* Bootload tape channel number */
       70 		2 tape_device_number fixed bin (6) init (-1),
       71 						/* Bootload tape device number, once known */
       72 		2 tape_mpc_fw_name	 char (32) unal init (""),
       73 		2 cold_disk_mpc	 bit (1) aligned init ("1"b),
       74 		2 default_rpv_data	 char (24) unaligned init (""),
       75 						/* Predefined RPV information */
       76 		2 disk_mpc_chanid	 char (8) aligned init (""),
       77 		2 disk_device_has_sv bit (1) aligned init ("0"b),
       78 		2 disk_device_sv     fixed bin (17) init (-1),
       79 		2 disk_device_number fixed bin (6) init (-1),
       80 						/* Bootload disk device number, once known */
       81 		2 disk_model_number	 fixed bin init (-1),
       82 						/* Bootload disk canonical device model number */
       83 		2 disk_mpc_model_number
       84 				 fixed bin init (-1),
       85 						/* Bootload disk MPC type, possibly default. */
       86 		2 system_type	 fixed bin,	/* As in l68 vs adp */
       87 		2 disk_mpc_fw_rev_bcd
       88 				 bit (36) aligned init (""b),
       89 		2 bce_part_frec	 fixed bin,
       90 		2 bce_part_nrec	 fixed bin,
       91 		2 mst_past_bce_frec	 fixed bin,	/* first record on rpv for mst area used for segments past bce usage (i.e. collections 2 and 3) */
       92 		2 config_part_frec	 fixed bin,
       93 		2 safe_config_deck_frec
       94 				 fixed bin,
       95 		2 console_iom_number fixed bin (3) init (0),
       96 						/* IOM Numbers */
       97 		2 console_channel_number
       98 				 fixed bin (6) init (-1),
       99 						/* Channel number of bootload console */
      100 		2 console_model	 fixed bin (35) init (0),
      101 		2 console_pcw_check  bit (1) aligned init ("0"b),
      102 		2 console_uses_pcw   bit (1) aligned init ("1"b),
      103 		2 bootload_mem_size	 fixed bin (35) init (512 * 1024),
      104 						/* Size of bootload memory for collection 1 */
      105 		2 contig_mem_size	 fixed bin (35) init (0),
      106 		2 bootload_1_ptr	 pointer,		/* Pointer to base of bootload_1 */
      107 		2 lot_ptr		 pointer,		/* Pointer to base ot lot */
      108 		2 sys_boot_info_ptr	 pointer,		/* Pointer to our sister segment */
      109 		2 assume_config_deck bit (1) aligned init ("1"b),
      110 		2 config_has_been_modified
      111 				 bit (1) aligned init ("0"b),
      112 						/* oper should perform a reinit */
      113 						/* assume BOS or whatever has left a valid config deck around in the canonical place */
      114 		2 console_available	 bit (1) aligned init ("0"b),
      115 						/* early console support turned on */
      116 		2 sysid		 char (32) unaligned init (""),
      117 						/* MST magic fills this in. */
      118 		2 creation_time	 fixed bin (71) init (-1),
      119 						/* Time this structure was created */
      120 		2 creation_time_string
      121 				 char (24) unaligned init (""),
      122 						/* Character representation of the above */
      123 		2 creator		 char (32) unaligned init (""),
      124 						/* User who created this segment */
      125 		2 creation_site_id	 char (32) unaligned init (""),
      126 						/* Installation ID of site where it was created */
      127 		2 default_time_zone  char (4) unaligned init ("gmt"),
      128 						/* Time zone to use before config available */
      129 		2 default_time_zone_delta
      130 				 fixed bin (71) init (0),
      131 						/* Binary offset of the above */
      132 		2 rpv_cold_boot	 bit (1) aligned init ("0"b),
      133 						/* Turned on in cold boot until RPV is formatted */
      134 		2 bce_intk_card	 aligned like intk_card,
      135 		2 at_bce_cl	 bit (1) aligned init ("0"b),
      136 						/* controlled by bce_get_to_command_level */
      137 		2 pad_align_2	 fixed bin (71) init (0),
      138 		2 l68_fault_names	 (32) char (8) aligned init (
      139 						/** **/
      140 				 "shutdown", "store   ", "mme1    ", "ft1     ", "timer-ro", "command ",
      141 				 "derail  ", "lockup  ", "connect ", "parity  ", "ipr     ", "onc     ",
      142 				 "startup ", "overflow", "divcheck", "execute ", "segment ", "page    ",
      143 				 "df2     ", "df3     ", "acv     ", "mme2    ", "mme3    ", "mme4    ",
      144 				 "linkage ", "ft3     ", "fault26 ", "fault27 ", "fault28 ", "fault29 ",
      145 				 "fault30 ", "trouble "),
      146 		2 adp_fault_names	 (32) char (8) aligned init (
      147 						/** **/
      148 				 "shutdown", "store   ", "mme1    ", "ft1     ", "timer-ro", "command ",
      149 				 "derail  ", "lockup  ", "connect ", "memsys  ", "ipr     ", "onc     ",
      150 				 "startup ", "overflow", "divcheck", "execute ", "mme2    ", "mme3    ",
      151 				 "segment ", "mme4    ", "page    ", "page-wrt", "acv     ", "fault23 ",
      152 				 "linkage ", "ft3     ", "fault26 ", "fault27 ", "hype-dis", "hype-cio",
      153 				 "hype-tro", "trouble "),
      154 		2 bce_sst_sizes	 (0:3) fixed bin init (64, 32, 8, 8),
      155 						/* size of sst pools for bce */
      156 		2 end_of_bootload_info
      157 				 pointer init (null ());
      158 						/* Last location in the structure */
      159 
      160 
      161 	dcl     1 cds_data		 aligned like cds_args;
      162 						/* arguments to create_data_segment_ subr */
      163 
      164 	dcl     code		 fixed bin (35);
      165 
      166 	dcl     com_err_		 entry () options (variable);
      167 	dcl     create_data_segment_	 entry (pointer, fixed binary (35));
      168 	dcl     get_group_id_	 entry () returns (char (32));
      169 	dcl     ioa_		 entry options (variable);
      170 	dcl     system_info_$installation_id
      171 				 entry (char (*));
      172 
      173 
      174 
      175 	dcl     PAD		 (1) char (32) init ("pad*") int static options (constant);
      176 	dcl     WHOAMI		 char (32) internal static options (constant) init ("bootload_info");
      177 
      178 
      179 	dcl     (addr, null, size, string, unspec)
      180 				 builtin;
      181 
      182 
      183 	bootload_info.creator = get_group_id_ ();
      184 	call system_info_$installation_id (bootload_info.creation_site_id);
      185 
      186 	unspec (bootload_info.bootload_1_ptr), unspec (bootload_info.sys_boot_info_ptr),
      187 	     unspec (bootload_info.lot_ptr) = "077777000043000000000000"b3;
      188 						/* ring 0 pointers to base of segment -1 */
      189 
      190 /* For the first release, ask no questions, just fill in the */
      191 /* salient values */
      192 
      193 	bootload_info.boot_without_query = "0"b;
      194 	bootload_info.tape_mpc_fw_name = "";
      195 	bootload_info.disk_mpc_chanid = "";
      196 	bootload_info.disk_device_has_sv = "0"b;
      197 	bootload_info.disk_device_sv = -1;
      198 	bootload_info.disk_device_number = 0;
      199 	bootload_info.disk_model_number = 0;
      200 	bootload_info.disk_mpc_model_number = 0;
      201 
      202 	bootload_info.structure_size = size (bootload_info);
      203 						/* set it up for copying */
      204 
      205 	cds_data.sections (1).p = addr (bootload_info);
      206 	cds_data.sections (1).len = size (bootload_info);
      207 	cds_data.sections (1).struct_name = WHOAMI;
      208 
      209 	cds_data.seg_name = WHOAMI;
      210 
      211 	cds_data.num_exclude_names = 1;
      212 	cds_data.exclude_array_ptr = addr (PAD);
      213 
      214 	string (cds_data.switches) = "0"b;
      215 	cds_data.switches.have_text = "1"b;		/* only create text section */
      216 
      217 	call create_data_segment_ (addr (cds_data), code);
      218 
      219 	if code ^= 0
      220 	then do;					/* Nothing can be done */
      221 		call com_err_ (code, WHOAMI);
      222 		return;
      223 	     end;
      224 
      225 	cds_data.seg_name = "sys_boot_info";		/* Create the unbound copy */
      226 
      227 	call ioa_ ("^a: Generating sys_boot_info copy of bootload_info.", WHOAMI);
      228 
      229 	call create_data_segment_ (addr (cds_data), code);
      230 
      231 	if code ^= 0
      232 	then do;					/* Nothing can be done */
      233 		call com_err_ (code, WHOAMI);
      234 		return;
      235 	     end;
      236 
      237 	return;
      238 
      239 /* format: off */
      240  /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      240 
      241  /* BEGIN INCLUDE FILE ... config_intk_card.incl.pl1 ... 11/27/80 W. Olin Sibert */
  2     2 
  2     3 dcl  intk_cardp pointer;				/* pointer to INTK card */
  2     4 
  2     5 dcl 1 intk_card aligned based (intk_cardp),		/* INTK card declaration */
  2     6     2 word char (4),				/* "intk" */
  2     7     2 warm_or_cold char (4),				/* Type of bootload: "warm" or "cold" */
  2     8     2 boot_drive fixed bin,				/* Tape drive on which MST is mounted */
  2     9     2 parms (12) char (4),				/* up to 12 arbitrary bootload parameters */
  2    10 
  2    11     2 type_word aligned,
  2    12       3 field_type (14) bit (2) unaligned,		/* type of each field; see config_deck.incl.pl1 */
  2    13       3 pad1 bit (4) unaligned,
  2    14       3 n_fields fixed bin (4) unsigned unaligned;	/* number of fields used on card */
  2    15 
  2    16 dcl 1 intk_card_array aligned based (intk_cardp),		/* Overlay for counting parameters */
  2    17     2 pad (3) bit (36) aligned,
  2    18     2 parms (max (0, intk_card.n_fields - 2)) bit (36) aligned;
  2    19 
  2    20 dcl  INTK_CARD_WORD char (4) aligned internal static options (constant) init ("intk");
  2    21 
  2    22 /* END INCLUDE FILE ... config_intk_card.incl.pl1 */
      241 
      242 /* format: on */
      243      end bootload_info;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0837.2  !BBBJZjXlMfmXLF.pl1               >special_ldd>install>MR12.3-1114>bootload_info.cds
240          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
241          2    05/08/81  1853.6  config_intk_card.incl.pl1         >ldd>include>config_intk_card.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
PAD                             000010 constant        char(32)                 initial array packed unaligned dcl 175 set ref 212
WHOAMI                          000000 constant        char(32)                 initial packed unaligned dcl 176 set ref 207 209
                                                                                  221* 227* 233*
addr                                                   builtin function         dcl 179 ref 205 212 217 217 229 229
adp_fault_names         306     000100 automatic       char(8)                  initial array level 2 dcl 47 set ref 47* 47* 47* 47*
                                                                                  47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47*
                                                                                  47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47*
                                                                                  47* 47* 47* 47*
assume_config_deck      112     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
at_bce_cl               203     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
bce_sst_sizes           406     000100 automatic       fixed bin(17,0)          initial array level 2 dcl 47 set ref 47* 47* 47* 47*
boot_without_query       26     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47* 193*
bootload_1_ptr          104     000100 automatic       pointer                  level 2 dcl 47 set ref 186*
bootload_info                   000100 automatic       structure                level 1 dcl 47 set ref 202 205 206
bootload_mem_size       102     000100 automatic       fixed bin(35,0)          initial level 2 dcl 47 set ref 47*
cds_args                               based           structure                level 1 dcl 1-3
cds_data                        000514 automatic       structure                level 1 dcl 161 set ref 217 217 229 229
code                            000561 automatic       fixed bin(35,0)          dcl 164 set ref 217* 219 221* 229* 231 233*
cold_disk_mpc            50     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
cold_tape_mpc            34     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
com_err_                        000012 constant        entry                    external dcl 166 ref 221 233
config_has_been_modified
                        113     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
console_available       114     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
console_channel_number
                         76     000100 automatic       fixed bin(6,0)           initial level 2 dcl 47 set ref 47*
console_iom_number       75     000100 automatic       fixed bin(3,0)           initial level 2 dcl 47 set ref 47*
console_model            77     000100 automatic       fixed bin(35,0)          initial level 2 dcl 47 set ref 47*
console_pcw_check       100     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
console_uses_pcw        101     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
contig_mem_size         103     000100 automatic       fixed bin(35,0)          initial level 2 dcl 47 set ref 47*
create_data_segment_            000014 constant        entry                    external dcl 167 ref 217 229
creation_site_id        146     000100 automatic       char(32)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47* 184*
creation_time           126     000100 automatic       fixed bin(71,0)          initial level 2 dcl 47 set ref 47*
creation_time_string    130     000100 automatic       char(24)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47*
creator                 136     000100 automatic       char(32)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47* 183*
default_rpv_data         51     000100 automatic       char(24)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47*
default_time_zone       156     000100 automatic       char(4)                  initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47*
default_time_zone_delta
                        160     000100 automatic       fixed bin(71,0)          initial level 2 dcl 47 set ref 47*
disk_device_has_sv       61     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47* 196*
disk_device_number       63     000100 automatic       fixed bin(6,0)           initial level 2 dcl 47 set ref 47* 198*
disk_device_sv           62     000100 automatic       fixed bin(17,0)          initial level 2 dcl 47 set ref 47* 197*
disk_model_number        64     000100 automatic       fixed bin(17,0)          initial level 2 dcl 47 set ref 47* 199*
disk_mpc_chanid          57     000100 automatic       char(8)                  initial level 2 dcl 47 set ref 47* 195*
disk_mpc_fw_rev_bcd      67     000100 automatic       bit(36)                  initial level 2 dcl 47 set ref 47*
disk_mpc_model_number
                         65     000100 automatic       fixed bin(17,0)          initial level 2 dcl 47 set ref 47* 200*
end_of_bootload_info    412     000100 automatic       pointer                  initial level 2 dcl 47 set ref 47*
exclude_array_ptr        42     000514 automatic       pointer                  level 2 dcl 161 set ref 212*
get_group_id_                   000016 constant        entry                    external dcl 168 ref 183
have_text                44(02) 000514 automatic       bit(1)                   level 3 packed packed unaligned dcl 161 set ref 215*
imu_style_iom            33     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
intk_card                              based           structure                level 1 dcl 2-5
intk_cardp                      000562 automatic       pointer                  dcl 2-3 ref 2-5 2-5 2-5 2-5 2-5 2-5 2-5 2-5 2-5
ioa_                            000020 constant        entry                    external dcl 169 ref 227
iom_boot_info             6     000100 automatic       fixed bin(71,0)          initial array level 2 dcl 47 set ref 47*
iom_port_table           27     000100 automatic       fixed bin(35,0)          initial array level 2 dcl 47 set ref 47* 47* 47* 47*
l68_fault_names         206     000100 automatic       char(8)                  initial array level 2 dcl 47 set ref 47* 47* 47* 47*
                                                                                  47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47*
                                                                                  47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47* 47*
                                                                                  47* 47* 47* 47*
len                       2     000514 automatic       fixed bin(18,0)          array level 3 dcl 161 set ref 206*
lot_ptr                 106     000100 automatic       pointer                  level 2 dcl 47 set ref 186*
null                                                   builtin function         dcl 179 ref 47 47
num_exclude_names        40     000514 automatic       fixed bin(17,0)          level 2 dcl 161 set ref 211*
p                               000514 automatic       pointer                  array level 3 dcl 161 set ref 205*
pad_align_2             204     000100 automatic       fixed bin(71,0)          initial level 2 dcl 47 set ref 47*
rpv_cold_boot           162     000100 automatic       bit(1)                   initial level 2 dcl 47 set ref 47*
sections                        000514 automatic       structure                array level 2 dcl 161
seg_name                 30     000514 automatic       char(32)                 level 2 dcl 161 set ref 209* 225*
size                                                   builtin function         dcl 179 ref 202 206
status_mask               3     000100 automatic       bit(36)                  initial level 2 dcl 47 set ref 47*
string                                                 builtin function         dcl 179 set ref 214*
struct_name               3     000514 automatic       char(32)                 array level 3 dcl 161 set ref 207*
structure_size            2     000100 automatic       fixed bin(17,0)          initial level 2 dcl 47 set ref 47* 202*
structure_start                 000100 automatic       pointer                  initial level 2 dcl 47 set ref 47*
switches                 44     000514 automatic       structure                level 2 dcl 161 set ref 214*
sys_boot_info_ptr       110     000100 automatic       pointer                  level 2 dcl 47 set ref 186*
sysid                   115     000100 automatic       char(32)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47*
system_info_$installation_id    000022 constant        entry                    external dcl 170 ref 184
tape_channel_number      36     000100 automatic       fixed bin(6,0)           initial level 2 dcl 47 set ref 47*
tape_device_number       37     000100 automatic       fixed bin(6,0)           initial level 2 dcl 47 set ref 47*
tape_iom_number          35     000100 automatic       fixed bin(3,0)           initial level 2 dcl 47 set ref 47*
tape_mpc_fw_name         40     000100 automatic       char(32)                 initial level 2 packed packed unaligned dcl 47 set
                                                                                  ref 47* 194*
unspec                                                 builtin function         dcl 179 set ref 186* 186* 186*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
INTK_CARD_WORD                         constant        char(4)                  initial dcl 2-20
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18
intk_card_array                        based           structure                level 1 dcl 2-16

NAME DECLARED BY EXPLICIT CONTEXT.
bootload_info                   000176 constant        entry                    external dcl 30

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1566        1612    1464        1576
Length      4320    1464        24        2472     102           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bootload_info                       415 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bootload_info            000100 bootload_info               bootload_info
                         000514 cds_data                    bootload_info
                         000561 code                        bootload_info
                         000562 intk_cardp                  bootload_info

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_          get_group_id_                 ioa_
system_info_$installation_id

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     30 000175        47 000203       183 001267       184 001276       186 001307       193 001313       194 001314
    195 001317       196 001322       197 001323       198 001325       199 001326       200 001327       202 001330
    205 001332       206 001334       207 001335       209 001340       211 001343       212 001345       214 001347
    215 001350       217 001352       219 001365       221 001367       222 001404       225 001405       227 001410
    229 001430       231 001443       233 001445       234 001462       237 001463


Object Segment >special_ldd>install>MR12.3-1114>bootload_info
Created on 11/11/89  1036.4 mst Sat
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0     414    1266    1276    1276
Length    1563     414     652      10     251       0


57 Definitions:


segname:    bootload_info

text|306        adp_fault_names
text|112        assume_config_deck
text|203        at_bce_cl
text|4          bce_dbr
text|163        bce_intk_card
text|70         bce_part_frec
text|71         bce_part_nrec
text|406        bce_sst_sizes
text|26         boot_without_query
text|104        bootload_1_ptr
text|102        bootload_mem_size
text|50         cold_disk_mpc
text|34         cold_tape_mpc
text|113        config_has_been_modified
text|73         config_part_frec
text|114        console_available
text|76         console_channel_number
text|75         console_iom_number
text|77         console_model
text|100        console_pcw_check
text|101        console_uses_pcw
text|103        contig_mem_size
text|146        creation_site_id
text|126        creation_time
text|130        creation_time_string
text|136        creator
text|51         default_rpv_data
text|156        default_time_zone
text|160        default_time_zone_delta
text|61         disk_device_has_sv
text|63         disk_device_number
text|62         disk_device_sv
text|64         disk_model_number
text|57         disk_mpc_chanid
text|67         disk_mpc_fw_rev_bcd
text|65         disk_mpc_model_number
text|412        end_of_bootload_info
text|33         imu_style_iom
text|6          iom_boot_info
text|27         iom_port_table
text|206        l68_fault_names
text|106        lot_ptr
text|72         mst_past_bce_frec
text|162        rpv_cold_boot
text|74         safe_config_deck_frec
text|3          status_mask
text|2          structure_size
text|0          structure_start
symb|0          symbol_table
text|110        sys_boot_info_ptr
text|115        sysid
text|66         system_type
text|36         tape_channel_number
text|37         tape_device_number
text|35         tape_iom_number
text|40         tape_mpc_fw_name


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
