ASSEMBLY LISTING OF SEGMENT >spec>install>1112>switch_shutdown_file_system.alm                                                                                                                      
ASSEMBLED ON:	11/11/89  0928.7 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    13  "
                                    14  "	switch_shutdown_file_system
                                    15  "
                                    16  "	Switch stacks to inzr_stk0, call shutdown_file_system
                                    17  "
                                    18  "	Written March 1982 by J. Bongiovanni
                                    19  "
                                    20  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    21  
    000000                          22  	name	switch_shutdown_file_system
                                    23  
                        000000      24  	entry	switch_shutdown_file_system
                                    25  
    000000                          26  switch_shutdown_file_system:
                                    27  
    000000  4a  4 00012 3735 20     28  	eppsb	inzr_stk0$		" Stack to switch to
    000001  aa  7 00000 2131 00     29  	epaq	sb|0			" Segno in AU
    000002  aa   000001 7350 00     30  	als	1			" SDW index in AU
    000003  4a  4 00014 6535 20     31  	sprisb	pds$stack_0_ptr		" Set stack_0 pointers
    000004  4a  4 00016 3521 20     32  	eppbp	dseg$,au			" bp -> SDW for inzr_stk0
    000005  4a  4 00020 2521 20     33  	spribp	pds$stack_0_sdwp	
                                    34  
    000006  aa  7 00022 3521 20     35  	eppbp	sb|stack_header.stack_begin_ptr,* " Reset stack end pointer
    000007  aa  7 00024 2521 00     36  	spribp	sb|stack_header.stack_end_ptr
                                    37  
    000010  aa   000060 6270 00     38  	push				" Switch stacks
    000011  aa  7 00040 2721 20
                                    39  
    000012  aa  6 00000 2541 00     40  	call	shutdown_file_system$shutdown_file_system
    000013  0a   000026 3500 00
    000014  4a  4 00010 3521 20
    000015  aa  6 00040 7531 00
    000016  aa  7 00036 6701 20
    000017  aa  6 00000 1731 00
    000020  aa  6 00040 0731 00
                                    41  
    000021  aa  7 00042 7101 20     42  	return				" Should never happen
                                    43  
                                    44  "
                                    45  	include	stack_header
                                   1-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   1-2  "
                                   1-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   1-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   1-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   1-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   1-7  
                                   1-8  " HISTORY COMMENTS:
                                   1-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  1-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  1-11  "     added the heap_header_ptr definition
                                  1-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  1-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  1-14  "     Modified to support control point management.  These changes were
                                  1-15  "     actually made in February 1985 by G. Palter.
                                  1-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  1-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  1-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  1-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  1-20  "     some space int the stack header and change the cpd_ptr unal to
                                  1-21  "     cpm_data_ptr (ITS pair).
                                  1-22  "                                                      END HISTORY COMMENTS
                                  1-23  
                        000004    1-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    1-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  1-26  
                        000010    1-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    1-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    1-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    1-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    1-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    1-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    1-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    1-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  1-35  
                        000020    1-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    1-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    1-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    1-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  1-40  
                        000030    1-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    1-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    1-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    1-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  1-45  
                        000040    1-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    1-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    1-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    1-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  1-50  
                        000050    1-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    1-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    1-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    1-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  1-55  
                        000060    1-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    1-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    1-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    1-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    1-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    1-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    1-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    1-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    1-64  	equ	stack_header_end,64			length of stack header
                                  1-65  
                                  1-66  
                                  1-67  
                                  1-68  
                        000000    1-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    1-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  1-71  
                                  1-72  "	The  following constant is an offset within the  pl1  operators table.
                                  1-73  "	It  references a  transfer vector table.
                                  1-74  
                        000551    1-75  	bool	tv_offset,551
                                  1-76  
                                  1-77  
                                  1-78  "	The  following constants are offsets within this transfer vector table.
                                  1-79  
                        001170    1-80  	equ	call_offset,tv_offset+271
                        001171    1-81  	equ	push_offset,tv_offset+272
                        001172    1-82  	equ	return_offset,tv_offset+273
                        001173    1-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    1-84  	equ	entry_offset,tv_offset+275
                                  1-85  
                                  1-86  
                                  1-87  " 	END INCLUDE FILE stack_header.incl.alm
                                    46  
                                    47  	end
ENTRY SEQUENCES
     
    000022  5a   000015 0000 00
    000023  aa  7 00046 2721 20
    000024  0a   000000 7100 00
LITERALS
     
    000026  aa   000000 000000 
    000027  aa   000000 000000 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000030  5a   000003 000000 
    000031  5a   000036 600000 
    000032  aa   000000 000000 
    000033  55   000015 000002 
    000034  5a   000002 400003 
    000035  55   000006 000015 
    000036  aa  033 163 167 151
    000037  aa  164 143 150 137
    000040  aa  163 150 165 164
    000041  aa  144 157 167 156
    000042  aa  137 146 151 154
    000043  aa  145 137 163 171
    000044  aa  163 164 145 155
    000045  55   000027 000003 
    000046  0a   000023 500000 
    000047  55   000020 000003 
    000050  aa  033 163 167 151         switch_shutdown_file_system
    000051  aa  164 143 150 137
    000052  aa  163 150 165 164
    000053  aa  144 157 167 156
    000054  aa  137 146 151 154
    000055  aa  145 137 163 171
    000056  aa  163 164 145 155
    000057  55   000002 000015 
    000060  6a   000000 400002 
    000061  55   000032 000003 
    000062  aa  014 163 171 155         symbol_table
    000063  aa  142 157 154 137
    000064  aa  164 141 142 154
    000065  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000066  aa   000000 000015 
    000067  aa   000000 000000 
    000070  aa   000000 000000 
    000071  aa   000000 000000 
    000072  aa   000000 000000 
    000073  aa   000000 000000 
    000074  aa   000000 000000 
    000075  5a   000027 000000 
    000076  aa   000000 000000 
    000077  5a   000015 000000 
    000100  aa   000000 000000 
    000101  aa   000000 000000 
    000102  aa   000000 000000 
    000103  aa   000000 000000 

EXTERNAL NAMES

    000104  aa  014 163 164 141         stack_0_sdwp
    000105  aa  143 153 137 060
    000106  aa  137 163 144 167
    000107  aa  160 000 000 000
    000110  aa  004 144 163 145         dseg
    000111  aa  147 000 000 000
    000112  aa  013 163 164 141         stack_0_ptr
    000113  aa  143 153 137 060
    000114  aa  137 160 164 162
    000115  aa  003 160 144 163         pds
    000116  aa  011 151 156 172         inzr_stk0
    000117  aa  162 137 163 164
    000120  aa  153 060 000 000
    000121  aa  024 163 150 165         shutdown_file_system
    000122  aa  164 144 157 167
    000123  aa  156 137 146 151
    000124  aa  154 145 137 163
    000125  aa  171 163 164 145
    000126  aa  155 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000127  aa   000004 000000 
    000130  55   000065 000054 
    000131  aa   000003 000000 
    000132  5a   000060 000000 
    000133  aa   000004 000000 
    000134  55   000065 000062 
    000135  aa   000003 000000 
    000136  5a   000066 000000 
    000137  aa   000004 000000 
    000140  55   000071 000071 
    000141  aa   000001 000000 
    000142  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000143  5a   000077 000000 
    000144  5a   000101 000000 
    000145  5a   000103 000000 
    000146  5a   000105 000000 
    000147  5a   000107 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000030 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000022 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         shutdown_file_system|shutdown_file_system
    000011  5a   000117 0000 00
    000012  9a   777766 0000 46         inzr_stk0|       
    000013  5a   000116 0000 00
    000014  9a   777764 0000 46         pds|stack_0_ptr
    000015  5a   000115 0000 00
    000016  9a   777762 0000 46         dseg|       
    000017  5a   000114 0000 01
    000020  9a   777760 0000 46         pds|stack_0_sdwp
    000021  5a   000113 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   244142 524531 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000157 
    000020  aa   000000 000124 
    000021  aa   000136 000131 
    000022  aa   000150 000124 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000002 
    000066  aa   000076 000062 
    000067  aa   175453 020307 
    000070  aa   000000 117547 
    000071  aa   200256 200000 
    000072  aa   000113 000042 
    000073  aa   147777 464111 
    000074  aa   000000 115000 
    000075  aa   507463 000000 
    000076  aa   076163 160145          >spec>install>1112>switch_shutdown_file_system.alm
    000077  aa   143076 151156 
    000100  aa   163164 141154 
    000101  aa   154076 061061 
    000102  aa   061062 076163 
    000103  aa   167151 164143 
    000104  aa   150137 163150 
    000105  aa   165164 144157 
    000106  aa   167156 137146 
    000107  aa   151154 145137 
    000110  aa   163171 163164 
    000111  aa   145155 056141 
    000112  aa   154155 040040 
    000113  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000114  aa   076151 156143 
    000115  aa   154165 144145 
    000116  aa   076163 164141 
    000117  aa   143153 137150 
    000120  aa   145141 144145 
    000121  aa   162056 151156 
    000122  aa   143154 056141 
    000123  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

        1170    call_offset              stack_header:        80.
                dseg                     switch_shutdown_file_system:     32.
        1174    entry_offset             stack_header:        84.
                inzr_stk0                switch_shutdown_file_system:     28.
                pds                      switch_shutdown_file_system:     31,   33.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                shutdown_file_system     switch_shutdown_file_system:     40.
          73    stach_header.trace_top_ptr     stack_header:        62.
                stack_0_ptr              switch_shutdown_file_system:     31.
                stack_0_sdwp             switch_shutdown_file_system:     33.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   switch_shutdown_file_system:     35,
                                               stack_header:        37.
          24    stack_header.stack_end_ptr     switch_shutdown_file_system:     36,
                                               stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    switch_shutdown_file_system    switch_shutdown_file_system:     24,   26.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
