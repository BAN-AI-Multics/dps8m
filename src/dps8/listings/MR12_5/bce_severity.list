	COMPILATION LISTING OF SEGMENT bce_severity
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1022.3 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 bce_severity: proc (P_ss_info_ptr);
        9 
       10 /* Version of severity for bce.  Keith Loepere, January 1984. */
       11 
       12 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
       13 
       14 dcl  P_ss_info_ptr		        ptr parameter;
       15 dcl  active_fnc_err_	        entry options (variable);
       16 dcl  active_function	        bit (1) aligned;	/* as opposed to command usage */
       17 dcl  af_return		        char (af_return_len) based (af_return_ptr) var; /* return for active function */
       18 dcl  af_return_len		        fixed bin (21);
       19 dcl  af_return_ptr		        ptr;
       20 dcl  arg			        char (arg_len) based (arg_ptr); /* command line arg */
       21 dcl  arg_count		        fixed bin;
       22 dcl  arg_len		        fixed bin (21);
       23 dcl  arg_ptr		        ptr;
       24 dcl  bce_dump$severity	        entry () returns (fixed bin);
       25 dcl  code			        fixed bin (35);
       26 dcl  com_err_		        entry options (variable);
       27 dcl  cu_$af_return_arg_rel	        entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
       28 dcl  cu_$arg_ptr_rel	        entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
       29 dcl  error		        variable entry options (variable);
       30 dcl  error_table_$badopt	        fixed bin (35) ext;
       31 dcl  error_table_$not_act_fnc	        fixed bin (35) ext;
       32 dcl  ioa_			        entry options (variable);
       33 dcl  me			        char (8) init ("severity") static options (constant);/* program name */
       34 dcl  value		        fixed bin;
       35 
       36 	ss_info_ptr = P_ss_info_ptr;
       37 	arg_list_ptr = ss_info.arg_list_ptr;
       38 	call cu_$af_return_arg_rel (arg_count, af_return_ptr, af_return_len, code, arg_list_ptr);
       39 	active_function = (code = 0);
       40 	if active_function then error = active_fnc_err_;
       41 	else error = com_err_;
       42 	if arg_count ^= 1 then do;
       43 	     call error (0, me, "Usage is: severity command_name");
       44 	     return;
       45 	end;
       46 
       47 	call cu_$arg_ptr_rel (1, arg_ptr, arg_len, code, arg_list_ptr);
       48 	if arg = "dump" then value = bce_dump$severity ();
       49 	else do;
       50 	     call error (error_table_$badopt, me, "^a", arg);
       51 	     return;
       52 	end;
       53 
       54 	if active_function then af_return = ltrim (character (value));
       55 	else call ioa_ ("^d", value);
       56 	return;
       57  /* Begin include file bce_subsystem_info_.incl.pl1 BIM 11/82 */
  1     2 
  1     3 /* format: style3 */
  1     4 
  1     5 /* Deleted unused items, Keith Loepere, 5/84 */
  1     6 
  1     7 
  1     8 /****^  HISTORY COMMENTS:
  1     9*  1) change(86-04-22,Farley), approve(86-07-18,MCR7439),
  1    10*     audit(86-10-08,Fawcett), install(86-10-20,MR12.0-1189):
  1    11*     Added request_handling_opr_aborts flag for save/restore.
  1    12*                                                   END HISTORY COMMENTS */
  1    13 
  1    14 declare	ss_info_ptr	pointer;
  1    15 declare	1 ss_info		aligned based (ss_info_ptr),
  1    16 	  2 request_table_ptr
  1    17 			pointer,
  1    18 	  2 abort_label	label,
  1    19 	  2 name		char (32) unaligned,
  1    20 	  2 arg_list_ptr	pointer,
  1    21 	  2 info_ptr	pointer,
  1    22 	  2 flags           aligned,
  1    23 	    3 forbid_semicolons bit (1) unaligned,
  1    24 	    3 request_handling_opr_aborts bit (1) unaligned;
  1    25 
  1    26 /* End include file bce_subsystem_info_ */
       57 
       58      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0826.3  bce_severity.pl1                  >special_ldd>install>MR12.3-1114>bce_severity.pl1
57           1    10/21/86  1251.6  bce_subsystem_info_.incl.pl1      >ldd>include>bce_subsystem_info_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_ss_info_ptr                          parameter       pointer                  dcl 14 ref 8 36
active_fnc_err_                 000010 constant        entry                    external dcl 15 ref 40
active_function                 000100 automatic       bit(1)                   dcl 16 set ref 39* 40 54
af_return                              based           varying char             dcl 17 set ref 54*
af_return_len                   000101 automatic       fixed bin(21,0)          dcl 18 set ref 38* 54
af_return_ptr                   000102 automatic       pointer                  dcl 19 set ref 38* 54
arg                                    based           char                     packed unaligned dcl 20 set ref 48 50*
arg_count                       000104 automatic       fixed bin(17,0)          dcl 21 set ref 38* 42
arg_len                         000105 automatic       fixed bin(21,0)          dcl 22 set ref 47* 48 50 50
arg_list_ptr             16            based           pointer                  level 2 dcl 1-15 set ref 37* 37 38* 47*
arg_ptr                         000106 automatic       pointer                  dcl 23 set ref 47* 48 50
bce_dump$severity               000012 constant        entry                    external dcl 24 ref 48
code                            000110 automatic       fixed bin(35,0)          dcl 25 set ref 38* 39 47*
com_err_                        000014 constant        entry                    external dcl 26 ref 41
cu_$af_return_arg_rel           000016 constant        entry                    external dcl 27 ref 38
cu_$arg_ptr_rel                 000020 constant        entry                    external dcl 28 ref 47
error                           000112 automatic       entry variable           dcl 29 set ref 40* 41* 43 50
error_table_$badopt             000022 external static fixed bin(35,0)          dcl 30 set ref 50*
ioa_                            000024 constant        entry                    external dcl 32 ref 55
me                              000000 constant        char(8)                  initial packed unaligned dcl 33 set ref 43* 50*
ss_info                                based           structure                level 1 dcl 1-15
ss_info_ptr                     000120 automatic       pointer                  dcl 1-14 set ref 36* 37 37 38 47
value                           000116 automatic       fixed bin(17,0)          dcl 34 set ref 48* 54 55*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
error_table_$not_act_fnc               external static fixed bin(35,0)          dcl 31

NAME DECLARED BY EXPLICIT CONTEXT.
bce_severity                    000026 constant        entry                    external dcl 8

NAMES DECLARED BY CONTEXT OR IMPLICATION.
character                                              builtin function         ref 54
ltrim                                                  builtin function         ref 54

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       410         436     300         420
Length       634     300        26         161     110           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bce_severity                        134 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bce_severity             000100 active_function             bce_severity
                         000101 af_return_len               bce_severity
                         000102 af_return_ptr               bce_severity
                         000104 arg_count                   bce_severity
                         000105 arg_len                     bce_severity
                         000106 arg_ptr                     bce_severity
                         000110 code                        bce_severity
                         000112 error                       bce_severity
                         000116 value                       bce_severity
                         000120 ss_info_ptr                 bce_severity

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              call_ent_var_desc   call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
active_fnc_err_               bce_dump$severity             com_err_                      cu_$af_return_arg_rel
cu_$arg_ptr_rel               ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$badopt




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      8 000023        36 000033        37 000037        38 000041        39 000057        40 000062        41 000071
     42 000076        43 000101        44 000125        47 000126        48 000147        50 000165        51 000217
     54 000220        55 000254        56 000273


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
