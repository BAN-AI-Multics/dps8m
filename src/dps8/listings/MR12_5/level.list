ASSEMBLY LISTING OF SEGMENT >spec>install>1112>level.alm                                                                                                                                            
ASSEMBLED ON:	11/11/89  0927.5 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1985 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
                                    11  
                                    12  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    13  "
                                    14  "	LEVEL
                                    15  "
                                    16  "	This procedure is called to get and set the validation level
                                    17  "	for the process.
                                    18  "	the get entrypoint is both a ring zero utility and an fgate.
                                    19  "	the set entrypoint is called only from ring zero.
                                    20  "	the seg_gate entrypoint can be called through hcs_ as
                                    21  "	an fgate.
                                    22  "
                                    23  "	Modified 5/19/80 by J. A. Bush to not call ring_alarm if no change in validation level
                                    24  "         Modified 830518 BIM for level$gate_set, various cleanup, 
                                    25  "		no stack frame.
                                    26  "         Modified 1985-05-08, BIM: new entrypoint level$admin_gate_set
                                    27  "	sets no_audit_ring1_fs_object_ops.
                                    28  "
                                    29  "	This procedure maintains the array in pds$ring_alarm_val.
                                    30  "	pds$ring_alarm_val (r) ^= 0 iff a ring alarm should be
                                    31  "	signalled upon leaving ring r for the purpose of fixing
                                    32  "	the validation level. On other reasons for ring alarms 
                                    33  "	pds$ring_alarm_val should NOT be set.
                                    34  "
                                    35  "	Furthermore pds$ring_alarm_val (r) is equal to the value
                                    36  "	of the validation level on entry to this ring. This is
                                    37  "	guaranteed by setting it nonzero iff it is zero.
                                    38  "
                                    39  
    000000                          40  	name	level
                        000134      41  	entry	get
                        000037      42  	entry	set
                        000000      43  	entry	set_gate
                        000022      44  	entry	set_admin_gate
                                    45  
                                    46  " The *_gate entries are called as FGATES. Therefore, there is no
                                    47  " stack frame for the gate itself. Therefore, sp
                                    48  " is a pointer to the outer ring's stack frame, and
                                    49  " we can use that ring number to validate that
                                    50  " call hcs_$level_set (v) -- v >= ring of execution.
                                    51  
                                    52  " CODING CONVENTION
                                    53  "
                                    54  " A contains the new (or putative new) validation level
                                    55  " Q contains the ring on behalf of whom we are acting
                                    56  " X1 is stored into pds$no_audit_ring1_fs_object_ops
                                    57  
    000000                          58  set_gate:
    000000  aa  0 00002 2351 20     59  	lda	ap|2,*			Get argument 
    000001  0a   000066 6040 00     60  	tmi	error_big_ring		Unsigned number, after all
    000002  aa   000007 1150 07     61  	cmpa	=7,dl
    000003  0a   000066 6054 00     62  	tpnz	error_big_ring		No more ring 64
    000004  aa   000000 6200 05     63  	eax0	0,al			Copy to X0 
                                    64  
    000005  aa  6 00000 2131 00     65  	epaq	sp|0			Get ringno
    000006  aa   000007 3750 07     66  	ana	=7,dl			ringno only
                                    67  
                                    68  " The following gets around the lack of inter-register compare instructions.
                                    69  " Since there are only 8 different values for the argument, this maneuver
                                    70  " uses x0 to find its own value in storage. Ycch.
                                    71  
    000007  0a   000124 1150 10     72  	cmpa	ring_table,x0		is execution ring (A) <= requested ring (X0)?
    000010  0a   000073 6054 00     73  	tpnz	error_small_ring		no, go bitch.
                                    74  
    000011  aa   000044 7770 00     75  	llr	36			A -> Q
    000012  aa   000000 6350 10     76  	eaa	0,x0			X0 -> AU
    000013  aa   000022 7710 00     77  	arl	18			AU -> AL
                                    78  
    000014  aa   000001 1150 07     79  	cmpa	1,dl			Ring 1?
    000015  0a   000020 6050 00     80  	tpl	reset_no_audit		greater
    000016  4a  4 00010 2211 20     81  	ldx1	pds$no_audit_ring1_fs_object_ops  " value remains
    000017  0a   000045 7100 00     82  	tra	set_common
    000020                          83  reset_no_audit:
    000020  aa   000000 6210 00     84  	eax1	0			greater than 1, zero flag
    000021  0a   000045 7100 00     85  	tra	set_common
                                    86  
    000022                          87  set_admin_gate:
    000022  4a  4 00012 2351 20     88  	lda	pds$validation_level
    000023  aa  0 00002 7551 20     89  	sta	ap|2,*			return old value
                                    90  
    000024  aa   000001 2350 07     91  	lda	1,dl			We are setting 1
                                    92  
    000025  aa   000001 2360 07     93  	ldq	1,dl			Called from ring 1
                                    94  
    000026  4a  4 00010 2211 20     95  	ldx1	pds$no_audit_ring1_fs_object_ops  " may be zeroed
    000027  0a   000036 6010 00     96  	tnz	no_audit_already_set	
    000030  4a  4 00014 7221 20     97  	lxl2	pds$initial_ring		Initial ring must not be 1
    000031  aa   000001 1020 03     98  	cmpx2	1,du
    000032  0a   000036 6000 00     99  	tze	dont_suppress_audit
    000033  4a  4 00016 2341 20    100  	szn	active_hardcore_data$audit_ring1_fs_object_ops
    000034  0a   000036 6010 00    101  	tnz	dont_suppress_audit
    000035  aa   400000 2210 03    102  	ldx1	=o400000,du		turn on the bit
    000036                         103  no_audit_already_set:			
    000036                         104  dont_suppress_audit:
    000036  0a   000045 7100 00    105  	tra	set_common
                                   106  
                                   107  " This is called only in ring 0
                                   108  
    000037                         109  set:	
    000037  aa  0 00002 2351 20    110  	lda	ap|2,*			fetch argument
    000040  0a   000102 6040 00    111  	tmi	error_r0_big_ring
    000041  aa   000007 1150 07    112  	cmpa	=7,dl			Reasonable?
    000042  0a   000102 6054 00    113  	tpnz	error_r0_big_ring
                                   114  
    000043  aa   000000 2360 07    115  	ldq	0,dl			we are ring 0.
                                   116  
    000044  4a  4 00010 2211 20    117  	ldx1	pds$no_audit_ring1_fs_object_ops  retain value
                                   118  
    000045                         119  set_common:
    000045  4a  4 00012 1151 20    120  	cmpa	pds$validation_level	Trivial case?
                                   121  					" For access audit, the ring 
                                   122  					" alarm for the validation
                                   123  				          " level is already set.
    000046  0a   000050 6010 00    124  	tnz	set_non_trivial		nope.
    000047  aa  7 00044 7101 20    125  	short_return			No change.
                                   126  
    000050                         127  set_non_trivial:
    000050  4a  4 00010 7411 20    128  	stx1	pds$no_audit_ring1_fs_object_ops " set new value
    000051  4a  4 00020 2341 20    129  	szn	pds$ring_alarm_val,ql
    000052  0a   000060 6010 00    130  	tnz	set_not_first
                                   131  
    000053  aa   000000 6210 05    132  	eax1	0,al			store new level in X1
    000054  4a  4 00012 2351 20    133  	lda	pds$validation_level	we need to save this
    000055  4a  4 00020 7551 20    134  	sta	pds$ring_alarm_val,ql	if this is first save
    000056  4a  4 00012 4411 20    135  	sxl1	pds$validation_level	set new level
    000057  0a   000064 7100 00    136  	tra	call_ring_alarm		and recalculate RAR
                                   137  
    000060                         138  set_not_first:
    000060  4a  4 00012 7551 20    139  	sta	pds$validation_level	new level
    000061  4a  4 00020 1151 20    140  	cmpa	pds$ring_alarm_val,ql	if back, no more alarm
    000062  0a   000064 6010 00    141  	tnz	call_ring_alarm		not back to where it was
    000063  4a  4 00020 4501 20    142  	stz	pds$ring_alarm_val,ql
                                   143  
    000064                         144  call_ring_alarm:
    000064  0a   000120 3500 00    145  	eppap	null_arglist
    000065  4a  4 00022 7101 20    146  	tra	ring_alarm$reset		its return is ours
                                   147  
                                   148  "
                                   149  	tempd	arg_list_error(2)
                                   150  	temp	bad_ring_arg	
                                   151  
    000066                         152  error_big_ring:
    000066  0a   000107 7020 00    153  	tsx2	make_error_arglist	" PUSHES
    000067  4a  4 00024 3521 20    154  	short_call	level_error$ring_bigger_than_7
    000070  aa  7 00036 6701 20
    000071  aa  6 00030 3701 20
    000072  aa  7 00042 7101 20    155  	return
                                   156  
    000073                         157  error_small_ring:
    000073  aa   000000 6350 10    158  	eaa	0,x0
    000074  aa   000022 7710 00    159  	arl	18		" move arg back to A
    000075  0a   000107 7020 00    160  	tsx2	make_error_arglist	" PUSHES
    000076  4a  4 00026 3521 20    161  	short_call	level_error$ring_too_small
    000077  aa  7 00036 6701 20
    000100  aa  6 00030 3701 20
    000101  aa  7 00042 7101 20    162  	return
                                   163  
    000102                         164  error_r0_big_ring:
    000102  0a   000107 7020 00    165  	tsx2	make_error_arglist	" PUSHES
    000103  4a  4 00030 3521 20    166  	short_call	level_error$r0_invalid_ring
    000104  aa  7 00036 6701 20
    000105  aa  6 00030 3701 20
    000106  aa  7 00042 7101 20    167  	return
                                   168  
                                   169  
    000107                         170  make_error_arglist:		"Called with tsx2
    000107  aa   000060 6270 00    171  	push
    000110  aa  7 00040 2721 20
    000111  aa  6 00054 7551 00    172  	sta	bad_ring_arg
    000112  0a   000122 2370 00    173  	ldaq	one_arg_arglist
    000113  aa  6 00050 7571 00    174  	staq	arg_list_error
    000114  aa  6 00054 3515 00    175  	epp1	bad_ring_arg
    000115  aa  6 00052 2515 00    176  	spri1	arg_list_error+2
    000116  aa  6 00050 3501 00    177  	eppap	arg_list_error	set AP appropriately
    000117  aa   000000 7100 12    178  	tra	0,x2	
                                   179  
                                   180  	even
    000120                         181  null_arglist:
    000120  aa   000000 000004     182  	vfd	18/0,18/4			External call
    000121  aa   000000 000000     183  	vfd	18/0,18/0
    000122                         184  one_arg_arglist:
    000122  aa   000002 000004     185  	vfd	17/1,1/0,18/4		One arg, Ext call
    000123  aa   000000 000000     186  	vfd	18/0,18/0
                                   187  
                                   188  " This table is indexed by requested ring number. Each slot contains the
                                   189  " smallest legal setting from that level.
                                   190  
    000124                         191  ring_table:
    000124  aa   000000 000000     192  	dec	0
    000125  aa   000000 000001     193  	dec	1
    000126  aa   000000 000002     194  	dec	2
    000127  aa   000000 000003     195  	dec	3
    000130  aa   000000 000004     196  	dec	4
    000131  aa   000000 000005     197  	dec	5
    000132  aa   000000 000006     198  	dec	6
    000133  aa   000000 000007     199  	dec	7
                                   200  
                                   201  " 
                                   202  "	This is both an FGATE and a normal entry
                                   203  
    000134  4a  4 00012 2351 20    204  get:	lda	pds$validation_level	return the current value
    000135  aa  0 00002 7551 20    205  	sta	ap|2,*			..
    000136  aa  7 00044 7101 20    206  	short_return
                                   207  
                                   208  	end
ENTRY SEQUENCES
     
    000137  5a   000031 0000 00
    000140  aa  7 00046 2721 20
    000141  0a   000134 7100 00
    000142  5a   000025 0000 00
    000143  aa  7 00046 2721 20
    000144  0a   000037 7100 00
    000145  5a   000017 0000 00
    000146  aa  7 00046 2721 20
    000147  0a   000000 7100 00
    000150  5a   000010 0000 00
    000151  aa  7 00046 2721 20
    000152  0a   000022 7100 00

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000154  5a   000003 000000 
    000155  5a   000044 600000 
    000156  aa   000000 000000 
    000157  55   000010 000002 
    000160  5a   000002 400003 
    000161  55   000006 000010 
    000162  aa  005 154 145 166
    000163  aa  145 154 000 000
    000164  55   000017 000003 
    000165  0a   000151 500000 
    000166  55   000013 000003 
    000167  aa  016 163 145 164         set_admin_gate
    000170  aa  137 141 144 155
    000171  aa  151 156 137 147
    000172  aa  141 164 145 000
    000173  55   000025 000010 
    000174  0a   000146 500000 
    000175  55   000022 000003 
    000176  aa  010 163 145 164         set_gate
    000177  aa  137 147 141 164
    000200  aa  145 000 000 000
    000201  55   000031 000017 
    000202  0a   000143 500000 
    000203  55   000030 000003 
    000204  aa  003 163 145 164         set
    000205  55   000035 000025 
    000206  0a   000140 500000 
    000207  55   000034 000003 
    000210  aa  003 147 145 164         get
    000211  55   000002 000031 
    000212  6a   000000 400002 
    000213  55   000040 000003 
    000214  aa  014 163 171 155         symbol_table
    000215  aa  142 157 154 137
    000216  aa  164 141 142 154
    000217  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000220  aa   000000 000015 
    000221  aa   000000 000000 
    000222  aa   000000 000000 
    000223  aa   000000 000000 
    000224  aa   000000 000000 
    000225  aa   000000 000000 
    000226  aa   000000 000000 
    000227  5a   000035 000000 
    000230  5a   000010 000000 
    000231  aa   000000 000000 
    000232  5a   000031 000000 
    000233  5a   000025 000000 
    000234  5a   000017 000000 
    000235  aa   000000 000000 

EXTERNAL NAMES

    000236  aa  017 162 060 137         r0_invalid_ring
    000237  aa  151 156 166 141
    000240  aa  154 151 144 137
    000241  aa  162 151 156 147
    000242  aa  016 162 151 156         ring_too_small
    000243  aa  147 137 164 157
    000244  aa  157 137 163 155
    000245  aa  141 154 154 000
    000246  aa  022 162 151 156         ring_bigger_than_7
    000247  aa  147 137 142 151
    000250  aa  147 147 145 162
    000251  aa  137 164 150 141
    000252  aa  156 137 067 000
    000253  aa  013 154 145 166         level_error
    000254  aa  145 154 137 145
    000255  aa  162 162 157 162
    000256  aa  005 162 145 163         reset
    000257  aa  145 164 000 000
    000260  aa  012 162 151 156         ring_alarm
    000261  aa  147 137 141 154
    000262  aa  141 162 155 000
    000263  aa  016 162 151 156         ring_alarm_val
    000264  aa  147 137 141 154
    000265  aa  141 162 155 137
    000266  aa  166 141 154 000
    000267  aa  031 141 165 144         audit_ring1_fs_object_ops
    000270  aa  151 164 137 162
    000271  aa  151 156 147 061
    000272  aa  137 146 163 137
    000273  aa  157 142 152 145
    000274  aa  143 164 137 157
    000275  aa  160 163 000 000
    000276  aa  024 141 143 164         active_hardcore_data
    000277  aa  151 166 145 137
    000300  aa  150 141 162 144
    000301  aa  143 157 162 145
    000302  aa  137 144 141 164
    000303  aa  141 000 000 000
    000304  aa  014 151 156 151         initial_ring
    000305  aa  164 151 141 154
    000306  aa  137 162 151 156
    000307  aa  147 000 000 000
    000310  aa  020 166 141 154         validation_level
    000311  aa  151 144 141 164
    000312  aa  151 157 156 137
    000313  aa  154 145 166 145
    000314  aa  154 000 000 000
    000315  aa  034 156 157 137         no_audit_ring1_fs_object_ops
    000316  aa  141 165 144 151
    000317  aa  164 137 162 151
    000320  aa  156 147 061 137
    000321  aa  146 163 137 157
    000322  aa  142 152 145 143
    000323  aa  164 137 157 160
    000324  aa  163 000 000 000
    000325  aa  003 160 144 163         pds

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000326  aa   000004 000000 
    000327  55   000077 000062 
    000330  aa   000004 000000 
    000331  55   000077 000066 
    000332  aa   000004 000000 
    000333  55   000077 000072 
    000334  aa   000004 000000 
    000335  55   000104 000102 
    000336  aa   000004 000000 
    000337  55   000151 000107 
    000340  aa   000004 000000 
    000341  55   000122 000113 
    000342  aa   000004 000000 
    000343  55   000151 000130 
    000344  aa   000004 000000 
    000345  55   000151 000134 
    000346  aa   000004 000000 
    000347  55   000151 000141 
    000350  aa   000001 000000 
    000351  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000352  5a   000152 000000 
    000353  5a   000154 000000 
    000354  5a   000156 000000 
    000355  5a   000160 000000 
    000356  5a   000162 000000 
    000357  5a   000164 000000 
    000360  5a   000166 000000 
    000361  5a   000170 000000 
    000362  5a   000172 000000 
    000363  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000154 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000032 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         pds|no_audit_ring1_fs_object_ops
    000011  5a   000206 0000 00
    000012  9a   777766 0000 46         pds|validation_level
    000013  5a   000205 0000 00
    000014  9a   777764 0000 46         pds|initial_ring
    000015  5a   000204 0000 00
    000016  9a   777762 0000 46         active_hardcore_data|audit_ring1_fs_object_ops
    000017  5a   000203 0000 00
    000020  9a   777760 0000 46         pds|ring_alarm_val
    000021  5a   000202 0000 06
    000022  9a   777756 0000 46         ring_alarm|reset
    000023  5a   000201 0000 00
    000024  9a   777754 0000 46         level_error|ring_bigger_than_7
    000025  5a   000200 0000 00
    000026  9a   777752 0000 46         level_error|ring_too_small
    000027  5a   000177 0000 00
    000030  9a   777750 0000 46         level_error|r0_invalid_ring
    000031  5a   000176 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   243522 461027 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000154 
    000020  aa   000000 000101 
    000021  aa   000125 000117 
    000022  aa   000146 000101 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000034 
    000067  aa   175453 020376 
    000070  aa   000000 117547 
    000071  aa   200745 400000 
    000072  aa   076163 160145          >spec>install>1112>level.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061061 
    000076  aa   061062 076154 
    000077  aa   145166 145154 
    000100  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                active_hardcore_data     level:        100.
          50    arg_list_error           level:        149,  174,  176,  177.
                audit_ring1_fs_object_ops      level:        100.
          54    bad_ring_arg             level:        150,  172,  175.
          64    call_ring_alarm          level:        136,  141,  144.
          36    dont_suppress_audit      level:         99,  101,  104.
          66    error_big_ring           level:         60,   62,  152.
         102    error_r0_big_ring        level:        111,  113,  164.
          73    error_small_ring         level:         73,  157.
         134    get                      level:         41,  204.
                initial_ring             level:         97.
                level_error              level:        154,  161,  166.
         107    make_error_arglist       level:        153,  160,  165,  170.
          36    no_audit_already_set     level:         96,  103.
                no_audit_ring1_fs_object_ops   level:         81,   95,  117,  128.
         120    null_arglist             level:        145,  181.
         122    one_arg_arglist          level:        173,  184.
                pds                      level:         81,   88,   95,   97,  117,  120,  128,  129,  133,  134,  135,  139,
                                                       140,  142,  204.
                r0_invalid_ring          level:        166.
                reset                    level:        146.
          20    reset_no_audit           level:         80,   83.
                ring_alarm               level:        146.
                ring_alarm_val           level:        129,  134,  140,  142.
                ring_bigger_than_7       level:        154.
         124    ring_table               level:         72,  191.
                ring_too_small           level:        161.
          37    set                      level:         42,  109.
          22    set_admin_gate           level:         44,   87.
          45    set_common               level:         82,   85,  105,  119.
           0    set_gate                 level:         43,   58.
          50    set_non_trivial          level:        124,  127.
          60    set_not_first            level:        130,  138.
                validation_level         level:         88,  120,  133,  135,  139,  204.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
