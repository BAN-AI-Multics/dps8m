ASSEMBLY LISTING OF SEGMENT >spec>install>1110>tape_checksum_.alm                                                                                                                                   
ASSEMBLED ON:	11/11/89  0949.1 mst Sat
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1002.3 mst Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Information Systems Inc., 1983 *
                                     6  " *                                                         *
                                     7  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     8  " * Technology and Honeywell Information Systems, Inc.      *
                                     9  " *                                                         *
                                    10  " ***********************************************************
    000000                          11  	name	tape_checksum_
                                    12  
                                    13  
                                    14  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    15  "
                                    16  " Calling Sequence:
                                    17  "	call tape_checksum_ (physical_record_pointer, checksum_pointer)
                                    18  "
                                    19  " Where:
                                    20  "	physical_record_pointer - pointer to beginning of physical tape record
                                    21  "	checksum_pointer - pointer to word to contain checksum
                                    22  "
                                    23  "	The checksum will be computed as described in MPM
                                    24  "	Reference Guide Section 8.4.
                                    25  "	The format of the physical record header and
                                    26  "	the physical record trailer are described in MPM
                                    27  "	Reference Guide Section 5.3.
                                    28  "
                                    29  "
                                    30  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    31  
                                    32  
                                    33  
                                    34  
                                    35  " 
                                    36  
                        000000      37  	segdef	tape_checksum_
                                    38  
    000000                          39  tape_checksum_:
    000000  aa  0 00002 3521 20     40  	eppbp	ap|2,*		bp -> physical record pointer
    000001  aa  2 00000 3521 20     41  	eppbp	bp|0,*		bp -> physical record
                                    42  
    000002  aa   000000 6210 00     43  	eax1	0		x1 is physical record header index
    000003  aa  2 00004 2361 00     44  	ldq	bp|4		get length of data in bits
    000004  aa   777777 3760 07     45  	anq	=o777777,dl	isolate record size
    000005  aa   000044 5060 07     46  	div	36,dl		compute word count
    000006  aa   000010 6220 06     47  	eax2	8,ql		x2 is physical record trailer index
    000007  aa   000001 6230 00     48  	eax3	1		x3 is rotate index
    000010  aa   000000 2350 07     49  	lda	0,dl		clear the a register
    000011  aa   004000 6340 07     50  	ldi	=o4000,dl		clear indicators and set overflow mask
                                    51  
    000012  aa   000000 0110 03     52  odd;	rpda	6,1		do the record header
    000013  aa   015200 5602 01
    000014  aa  2 00000 0711 11     53  	awca	bp|0,1		compute checksum on header
    000015  aa   000000 7750 13     54  	alr	0,3		..
    000016  aa  2 00001 0711 11     55  	awca	bp|1,1		add in last word of header
    000017  aa   000000 7750 13     56  	alr	0,3		..
                                    57  
    000020  aa   000000 0110 03     58  odd;	rpda	8,1		now do the trailer
    000021  aa   021200 5602 01
    000022  aa  2 00000 0711 12     59  	awca	bp|0,2		compute checksum on trailer
    000023  aa   000000 7750 13     60  	alr	0,3		..
                                    61  
    000024  aa   000000 0710 07     62  	awca	0,dl		add in any remaining carries
                                    63  
    000025  aa  0 00004 3521 20     64  	eppbp	ap|4,*		bp -> checksum pointer
    000026  aa  2 00000 7551 20     65  	sta	bp|0,*		store the checksum
                                    66  
    000027  aa  7 00044 7101 20     67  	short_return
                                    68  
                                    69  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000030  5a   000003 000000 
    000031  5a   000030 600000 
    000032  aa   000000 000000 
    000033  55   000012 000002 
    000034  5a   000002 400003 
    000035  55   000006 000012 
    000036  aa  016 164 141 160
    000037  aa  145 137 143 150
    000040  aa  145 143 153 163
    000041  aa  165 155 137 000
    000042  55   000021 000003 
    000043  0a   000000 400000 
    000044  55   000015 000003 
    000045  aa  016 164 141 160         tape_checksum_
    000046  aa  145 137 143 150
    000047  aa  145 143 153 163
    000050  aa  165 155 137 000
    000051  55   000002 000012 
    000052  6a   000000 400002 
    000053  55   000024 000003 
    000054  aa  014 163 171 155         symbol_table
    000055  aa  142 157 154 137
    000056  aa  164 141 142 154
    000057  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000060  aa   000000 000015 
    000061  aa   000000 000000 
    000062  aa   000000 000000 
    000063  aa   000000 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  aa   000000 000000 
    000067  5a   000021 000000 
    000070  aa   000000 000000 
    000071  5a   000012 000000 
    000072  aa   000000 000000 
    000073  aa   000000 000000 
    000074  aa   000000 000000 
    000075  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000076  aa   000001 000000 
    000077  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000030 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 117547 
    000007  aa   255246 410117 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000130 
    000020  aa   000000 000104 
    000021  aa   000113 000110 
    000022  aa   000122 000104 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   110151 162156 
    000035  aa   145151 163145 
    000036  aa   156056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000045 
    000067  aa   175453 017604 
    000070  aa   000000 117547 
    000071  aa   176347 000000 
    000072  aa   076163 160145          >spec>install>1110>tape_checksum_.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061061 
    000076  aa   061060 076164 
    000077  aa   141160 145137 
    000100  aa   143150 145143 
    000101  aa   153163 165155 
    000102  aa   137056 141154 
    000103  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           0    tape_checksum_           tape_checksum_:      37,   39.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
