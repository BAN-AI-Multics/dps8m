	COMPILATION LISTING OF SEGMENT canon_resource_name_
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1009.0 mst Sat
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 canon_resource_name_: proc;
       14 	return;
       15 
       16 /* Every resource name that finds its way into ring 1 is canonicalized
       17*   according to instructions found in the RTDT.  This procedure implements
       18*   "standard" canonicalizations for some resource types.  Sites may code their
       19*   own procedures and replace this one by installing references to them in the
       20*   RTDT.  This one, however, is a good start.
       21*
       22*   /* Written 04/12/79 by C. D. Tavares */
       23 
       24 
       25 dcl (input_name, output_name) char (*) parameter,
       26      info_ptr pointer parameter,
       27      code fixed bin parameter;
       28 
       29 dcl  name_buffer char (32);
       30 
       31 dcl (error_table_$bad_resource_spec,
       32      error_table_$smallarg) ext fixed bin (35) static;
       33 
       34 dcl  ltrim builtin;
       35 
       36 /* -------------------------------------------------- */
       37 
       38 tape_vol:	entry (input_name, output_name, info_ptr, code);
       39 
       40 	name_buffer = input_name;
       41 	if name_buffer = "" then do;
       42 	     code = error_table_$bad_resource_spec;
       43 	     return;
       44 	end;
       45 
       46 	name_buffer = ltrim (name_buffer, "0");		/* strip leading zeroes */
       47 	if name_buffer = "" then name_buffer = "0";
       48 
       49 	output_name = name_buffer;
       50 	if output_name ^= name_buffer then code = error_table_$smallarg;
       51 	else code = 0;
       52 
       53 	return;
       54 
       55      end canon_resource_name_;
       56 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0810.1  canon_resource_name_.pl1          >spec>install>1112>canon_resource_name_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
code                                   parameter       fixed bin(17,0)          dcl 25 set ref 38 42* 50* 51*
error_table_$bad_resource_spec  000010 external static fixed bin(35,0)          dcl 31 ref 42
error_table_$smallarg           000012 external static fixed bin(35,0)          dcl 31 ref 50
info_ptr                               parameter       pointer                  dcl 25 ref 38
input_name                             parameter       char                     packed unaligned dcl 25 ref 38 40
ltrim                                                  builtin function         dcl 34 ref 46
name_buffer                     000100 automatic       char(32)                 packed unaligned dcl 29 set ref 40* 41 46* 46 47 47*
                                                                                  49 50
output_name                            parameter       char                     packed unaligned dcl 25 set ref 38 49* 50

NAMES DECLARED BY EXPLICIT CONTEXT.
canon_resource_name_            000004 constant        entry                    external dcl 13
tape_vol                        000017 constant        entry                    external dcl 38

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       200         214     121         210
Length       364     121        14         134      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
canon_resource_name_                 75 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
canon_resource_name_     000100 name_buffer                 canon_resource_name_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          ext_entry           ext_entry_desc

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_resource_spec                              error_table_$smallarg




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000003        14 000011        38 000012        40 000037        41 000045        42 000051        43 000054
     46 000055        47 000072        49 000101        50 000106        51 000116        53 000117


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
