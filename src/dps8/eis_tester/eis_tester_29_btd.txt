
/*     btd1
* Indirect descriptors are used for both operands.
* Address register modification is used for both operands.
* The decimal operand is split across a page boundary.
*/

inst btd
-nt "binary -> 9-bit unsigned decimal"
-mf1 idb ar reg rl 1
-mf2 idb ar reg rl 2
-io 1;

desc 2 -sd n;

data 1 034;
data 2 -do -1 "28";

page -all;



/*     btd2
* No indirect descriptors are used.
* Address register modification is used for both operands.
* Both operands cross a page boundary.
*/

inst btd
-nt "binary -> 9-bit leading sign"
-mf1 ar
-mf2 ar;

desc 1 -nn 2;
desc 2 -nn 6 -sd l;

data 1 -do -1 127 531;
data 2 -do -3 "+44889";

page -all;



/*     btd3
* Indirect descriptors are used by both operands.
* Address register modification is used for both operands.
* Both operands cross a page boundary.
*/

inst btd
-nt "binary -> 9-bit trailing sign"
-mf1 ida ar
-mf2 idb ar;

desc 1 -nn 3;
desc 2 -nn 9 -sd t;

data 1 -do -2 211 664 372;
data 2 -do -4 "36137210+";

page -all;



/*     btd4
* No indirect descriptors are used.
* No address register modification is used.
* The decimal operand is split across a page boundary.
* Register length modification is used by both operands.
*/

inst btd
-nt "binary -> 9-bit unsigned decimal"
-mf1 rl 4
-mf2 rl 10;

desc 2 -sd n;

data 1 111 222 333 444;
data 2 -do -8 "9836279588";

page -all;



/*     btd5
* Address register modification is used by both operands.
* An indirect descriptor is used by the decimal operand.
* Simple register modification is used by the binary operand.
* Register length modification is used by both operands.
*/

inst btd
-nt "binary -> 9-bit leading sign"
-mf1 ar reg rl 5
-mf2 ar idr rl 15;

desc 2 -sd l;

data 1 -do -4 333 444 333 222 111;
data 2 -do -12 "+15088814466121";

page -all;



/*     btd6
* Address register modification is used by both operands.
* An indirect descriptor is used by the binary operand.
* Neither operand crosses a page boundary.
*/

inst btd
-nt "binary -> 9-bit trailing sign"
-mf1 ar id
-mf2 ar;

desc 1 -nn 6;
desc 2 -nn 17 -sd t;

data 1 123 456 765 432 123 456;
data 2 "2941123482396462+";

page -all;



/*     btd7
* Simple register modification is used by both operands.
* An indirect descriptor is used by the decimal operand.
* Both operands begin in the middle of a page.
* Neither operand spans a page boundary.
*/

inst btd
-nt "binary -> 9-bit unsigned decimal"
-mf1 reg
-mf2 reg id;

desc 1 -nn 7;
desc 2 -nn 19 -sd n;

data 1 -do 80 321 456 372 415 210 000 000;
data 2 -do 60 "3775652184861966336";

page -all;



/*     btd8
* Both operands use only simple register modification.
* Neither operand spans a page boundary.
* Both operands begin on the 1st byte of a page.
*/

inst btd
-nt "binary -> 9-bit leading sign"
-mf1 reg
-mf2 reg;

desc 1 -nn 8;
desc 2 -nn 22 -sd l;

data 1 124 570 642 000 000 375 125 743;
data 2 "+781551372002965892067";

page -all;



/*     btd9
* An indirect descriptor is used by the binary operand.
* Neither operand spans a page boundary.
* Both operands begin on the 1st byte of a page.
* The eis instruction itself spans a page boundary.
* No modifications are made to the decimal operand.
*/

inst btd
-nt "binary -> 4-bit unsigned decimal"
-mf1 id
-io 1;

desc 1 -nn 1;
desc 2 -tn 4 -nn 2 -sd n;

data 1 034;
data 2 050 000;

page -all;



/*     btd10
* Address register modification is used for the binary operand.
* No modifications are made to the decimal operand.
* Both operands span a page boundary.
*/

inst btd
-nt "binary to 4-bit leading sign"
-mf1  ar
-io 1;

desc 1 -nn 2;
desc 2 -tn 4 -nn 6 -sd l;

data 1 -do -1 127 531;
data 2 -do -4  304110211000 000000;

page -all;



/*     btd11
* Address register modification is used for the decimal operand.
* No modifications are made to the binary operand.
* Only the decimal operand spans a page boundary.
* The eis instruction itself spans a page boundary.
*/

inst btd
-nt "binary -> 4-bit trailing sign"
-mf2 ar
-io2;

desc 1 -nn 3;
desc 2 -tn 4 -nn 9 -sd t;

data 1 211 664 372;
data 2 -do -8  066023162020 300000000000000;

page -all;



/*     btd12
* Indirect descriptors are used for both operands.
* No address register modification is used.
* Neither operand spans a page boundary.
* Both operands begin on the 1st byte of a page.
* The eis instruction itself spans a page boundary.
*/

inst btd
-nt "binary -> 4-bit unsigned decimal"
-mf1 id
-mf2 id
-io 2;

desc 1 -nn 4;
desc 2 -tn 4 -nn 10 -sd n;

data 1 111 222 333 444;
data 2 230066047225 210000000000;

page -all;



/*     btd13
* No modifications are made to the binary operand.
* Address register modification is used for the decimal operand.
* An indirect descriptor is used by the decimal operand.
* Both operands span a page boundary.
*/

inst btd
-nt "binary -> 4-bit leading sign"
-mf2 ar id
-io 1;

desc 1 -nn 5;
desc 2 -tn 4 -nn 15 -sd l;

data 1 -do -4  333 444 333 222 111;
data 2 -do -8  301120210201 104146022020;

page -all;



/*     btd14
* Indirect descriptors are used by both operands.
* Both operands span a page boundary.
*/

inst btd
-nt "binary -> 4-bit trailing sign"
-mf1 idr
-mf2 ida;

desc 1 -nn 6;
desc 2 -tn 4 -nn 17 -sd t;

data 1 -do -4  123 456 765 432 123 456;
data 2 -do -16  051101022064 202071144142 300;

page -all;



/*     btd15
* Indirect descriptors are used for both operands.
* Address register modification is used for both operands.
* Both operands span a page boundary.
* The eis instruction itself spans a page boundary.
*/

inst btd
-nt "binary -> 4-bit unsigned decimal"
-mf1 id ar
-mf2 id ar
-io1;

desc 1 -nn 7;
desc 2 -tn 4 -nn 19 -sd n;

data 1 -do -6  321 456 372 415 210 000 000;
data 2 -do -1  067165145041 204206031146 063140;

page -all;



/*     btd16
* Indirect descriptors are used by both operands.
* Address register modification is used by both operands.
* Neither operand spans a page boundary.
* Both operands begin in the middle of a page.
*/

inst btd
-nt "binary -> 4-bit leading sign"
-mf1 idb ar
-mf2 idb ar;

desc 1 -nn 8;
desc 2 -tn 4 -nn 22 -sd l;

data 1 -do 14  124 570 642 000 000 375 125 743;
data 2 -do 100   307201125023162000051145 211040147000;

page -all;

