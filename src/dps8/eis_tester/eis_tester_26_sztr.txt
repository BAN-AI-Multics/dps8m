
/*     sztr1
*  Use two maximum length strings (4352 chrs or 39168 bits).
*  The zero indicator will be on since a bool code of "zer"
*  is used. Take maximum number of page faults.  */

inst sztr -nt "Both strings are the same length"
-bo zer
-ir zr
-mf1 idb ar reg rl 39168
-mf2 idb ar reg rl 39168
-io 1;

data 1 -do -10 (4352)"5";
data 2 -do -30 (4352)"7";

page -all;



/*     sztr2
*  Both the truncation and the zero indicators will be turned
*  on.  The 1st string will begin on the last bit of a page and
*  the 2nd string will end on the 1st bit of a page.  */

inst sztr -nt "Both strings cross page bounds"
-bo zer
-ir tn zr
-mf1 ar
-mf2 ar;

desc 1 -bp 8 -ns 23;
desc 2 -bp 1 -ns 18;

data 1 -do -1 074 321 64;
data 2 -do -4 023 776 4;

page -all;



/*     sztr3
*  No indicators are turned on. The zero fill bit is used. Bit strings
*  begin in the middle of a byte  */

inst sztr -nt "Both strings cross page bounds"
-bo and
-mf1 ida ar
-mf2 idb ar;

desc 1 -bp 4 -ns 70;
desc 2 -bp 5 -ns 80;

data 1 -do -2 "3274" "1958" 0;
data 2 -do -4 "4875" "7329" 326 0;

page -all;



/*     sztr4
*  The zero indicator will be turned on. Both strings
are of the same length and begin and end on word boundaries.  */

inst sztr -nt "only rl modification is used"
-bo and
-ir zr
-mf1 rl 144
-mf2 rl 144
-io 2;

data 1 (4)123 (12)075;
data 2 (4)654 (12)402;

page -all;



/*     sztr5
*  Test the axr bool code.  Set the zero and truncation
*  indicators. Bit strings begin in the middle of a byte
*  straddling a page boundary.  */

inst sztr -nt "1st string is longer than 2nd"
-bo axr
-ir tn
-mf1 ar reg rl 40
-mf2 ar idr rl 31;

desc 1 -bp 5;
desc 2 -bp 5;

data 1 -do -1 074 321 652 403 777;
data 2 -do -3 777 777 676 603;

page -all;



/*     sztr6
*  Test the axr bool code. No indicators will be set  */

inst sztr -nt "Both strings are the same length"

-bo axr
-mf1 rl 7866
-mf2 rl 7866;

data 1 (874)"321";
data 2 (874) "604";

page -all;



/*     sztr7
*  Test the mov bool code. Use a maximum length string and the
*  zero fill bit.  Take the maximum number of page faults.  */

inst sztr -nt "2nd string is longer than 1st"
-bo mov
-mf1 ida ar rl 36000
-mf2 idb ar reg rl 39168
-io 1;

data 1 -do -40 (1000)"9874";
data 2 -do -20 (1088) "0000";

page -all;



/*     sztr8
*  Test the move bool code. Set the zero indicator.
*  The first string is all zeroes.  */

inst sztr -nt "2nd string is longer than 1st"
-bo mov
-ir zr
-mf1 ar id
-mf2 ar
-io 2;

desc 1 -bp 7 -ns 99;
desc 2 -bp 1 -ns 100;

data 1 -do 20 (12)000;
data 2 -do 3 "abcde123456" 4;

page -all;



/*     sztr9
*  Test xra bool code. Set zero and truncation indicators.
*  Use two short bit strings which cross page boundaries.  */

inst sztr -nt "1st string is longer than 2nd"
-bo xra
-ir tn zr
-mf1 ar idr
-mf2 ar idb;

desc 1 -ns 3 -bp 7;
desc 2 -ns 2 -bp 8;

data 1 -do -1 777 4;
data 2 -do -1 235 0;

page -all;



/*     sztr10
* Test xra bool code.  Use the zero fill bit. No indicators are set */

inst sztr -nt "2nd string is longer than 1st"
-bo xra
-mf1 idr reg
-mf2 idr
-io 2;

desc 1 -ns 400;
desc 2 -ns 500;

data 1 (44)"9" 72;
data 2 (55)"8" 36;

page -all;



/*     sztr11
*  Test ra2 bool code. Set the zero indicator. This means
*  that the 2nd bit string must be all zeroes.  */

inst sztr -nt "2nd string is longer than 1st"
-bo ra2
-mf1 ar rl 36
-mf2 reg
-ir zr
-io 1;

desc 1 -bp 4;
desc 2 -ns 36;

data 1 -do -1 "abcd" 70;
data 2 (4)000;

page -all;



/*     sztr12
*  Test ra2 bool code. No indicators are set.  */

inst sztr -nt "Both strings are the same length"
-bo ra2
-mf1 reg
-mf2 ar rl 36
-io 2;

desc 1 -ns 36;
desc 2 -bp 4;

data 1 (4)000;
data 2 -do -1 "abcd" 70;

page -all;



/*     sztr13
*  Test xor bool code. Set the zero indicator. Use zero fill.  */

inst sztr -nt "2nd string is longer than 1st"
-bo xor
-mf1 id reg
-mf2 ar;

desc 1 -ns 3600;
desc 2 -ns 3672 -bp 7;

data 1 -do -8 (100)3526;
data 2 -do -63 000 (100)7254 (7)000;

page -all;



/*     sztr14
*  Test xor bool code. use strings of identical length.
*  No indicators are set.  */

inst sztr -nt "Both strings are the same length"
-bo xor;

desc  1 -ns 900;
desc 2 -ns 900;

data 1 -do -12 (10) "abcdefghij";
data 2 -do -4  (10) "1234567890";

page -all;



/*     sztr15
*  Test the or bool code. Set zero and truncation indicators.
*  This means that both bit strings must be all zeroes.  The
*   first bit string must be longer than the second  */

inst sztr -nt "1st string is longer than 2nd"
-bo or 
-ir zr tn
-mf1 rl 30 idb ar
-mf2 rl 20 ar ida;

data 1 000 000 000 0;
data 2  000 000 0;

page -all;



/*     sztr16
*  Test the or bool code. No indicators are set.
*  The one fill bit is used.  */

inst sztr -nt "2nd string is longer than 1st"
-bo or 
-fb
-mf1 rl 3000 ar id
-mf2 rl 3900 ar idr
-io 1;

data 1 (1000)7;
data 2 (325)"x" (325)3 ;

page -all;



/*     sztr17
* Test the nor bool code. No indicators are set.  */

inst sztr -nt "2nd string is longer than 1st"
-bo nor
-mf1 ida ar rl 14
-mf2 id ar rl 28
-io 2;

data 1 342 22;
data 2 234 760 621 0;

page -all;



/*     sztr18
*  Test the nor bool code.  Set the zero indicator.
*  Use the one fill bit */

inst sztr -nt "2nd string is longer than 1st"
-ir zr
-bo nor
-fb
-mf1 ar
-mf2 rl 19;

desc 1 -ns 8 -bp 1;

data 1 777;
data 2 326 417 0;

page -all;



/*     sztr19
*  Test the nox bool code.  Set the zero indicator.
*  For the indicator to be set, no two bits may matc.  */

inst sztr -nt "Both strings are the same length"
-ir zr
-bo nox
-mf1 id
-mf2 ida;

desc 1 -ns 54;
desc 2 -ns 54;

data 1 124 235 647 211 000 777;
data 2 -do -4 653 542 130 566 777 000;

page -all;



/*     sztr20
*  Test the Nox bool code. Only the truncation indicator is set.  */

inst sztr -nt "1st string is longer than 2nd"
-bo nox -ir tn
-mf1 ar rl 36000
-mf2 ar id
-io 1;


desc 1 -bp 7;
desc 2 -bp 3 -ns 3600;

data 1 003 (1000)"axyr";
data 2 024 (100)"rjqf";

page -all;



/*     sztr21
*  Test the iv2 bool code. Both the zero and the truncation
*  indicators will be set.  For the zero indicator to be set,
*  the 2nd bit string must be all ones.  */

inst sztr -nt "1st string is longer than 2nd"
-bo iv2  -ir zr tn
-mf1 rl 64 ar reg
-mf2 ar id
-io 1;

desc 1 -bp 6;
desc 2 -ns 32 -bp 3;

data 1 -do -1  "abpstuv" 4;
data 2 077 777 777 776;

page -all;



/*     sztr22
*  Test the iv2 bool code.  Use the zero fill bit. No indicators are set.  */

inst sztr -nt "2nd string is longer than 1st"
-bo iv2
-mf1 ar id
-mf2 rl 64 ar reg
-io 1;

desc 1 -ns 32 -bp 3;
desc 2 -bp 6;

data 1 077 777 777 776;
data 2 -do -1  "abpstuv" 4;

page -all;



/*     sztr23
*  Test the xrx bool code.  The zero indicator will be set.
*  This can occur only when every bit in the first string is zero
* and every bit in the 2nd string is one.  */

inst sztr -nt "Both strings are the same length"
-bo xrx -ir zr
-mf1 reg
-mf2 id;

desc 1 -ns 108;
desc 2 -ns 108;

data 1 -do -4 (12)000;
data 2 -do 4  (12)777;

page -all;



/*     sztr24
*  Test the xrx bool code.  No indicators are set.  The zero fill bit is used  */

inst sztr -nt "2nd string is longer than 1st"
-bo xrx
-mf1 rl 720 idr ar
-mf2 id
-io 2;

desc 2 -ns 1080  -bp 4;

data 1 -do -3  (20)"ijkl";
data 2 -do 8  054  (30)"9832";

page -all;



/*     sztr25
*  Test the inv bool code.  Set the zero indicator.
*  To set the indicator, the first bit string must be
*  all ones.  */

inst sztr -nt "Both string are the same length"
-ir zr
-bo inv
-mf1 idb ar reg
-mf2 idb ar;

desc 1 -bp 5 -ns 13;
desc 2 -bp 2 -ns 13;

data 1 777 777;
data 2 265 43;

page -all;



/*     sztr26
*   Test the inv bool code. No indicators are set  */

inst sztr -nt "Both strings are the same length"
-bo inv
-mf1 idb ar
-mf2 idb ar reg;

desc 1 -bp 2 -ns 13;
desc 2 -bp 5 -ns 13;

data 1 265 43;
data 2 777 777;

page -all;



/*     sztr27
*  Test the xxr bool code. This test sets the zero indicator.
*  The zero indicator is set only when the 1st string is all ones and
*  the second string is all zeroes.  The one fill bit is used.  */

inst sztr -nt "2nd string is longer than 1st"
-ir zr
-fb
-bo xxr
-io2;

desc 1 -ns 1;
desc 2 -ns 2;

data 1 4;
data 2 0;

page -all;



/*     sztr28
*  Test the xxr bool code. No indicators are set   */

inst sztr -nt "2nd string is longer than 1st"
-bo xxr
-mf1 ar
-mf2 reg rl 59;

desc 1 -ns 43 -bp 5;

data 1 -do -2 "tsrkv" 3;
data 2 -do -4 "mnopqrs";

page -all;



/*     sztr29
*  Test the nan bool code. The zero and truncation indicators
*  are set.  For the zero indicator to be set, both bit strings
* must be all ones.  */

inst sztr -nt "1st string is longer than 2nd"
-bo nan
-ir zr tn
-mf1 rl 39168 ar
-mf2 rl 33000;

data 1 (4352)777;
data 2 (3667)777;

page -all;



/*     sztr30
*  Test the nan bool code. No indicators are set.
*  The one fill bit is set.  */

inst sztr -nt "2nd string is longer than 1st"
-fb
-bo nan
-mf1 ar
-mf2 ar rl 436;

desc 1 -bp 3 -ns 274;

data 1 (7)"tack" "rgm";
data 2 (12)"mike" 023;

page -all;



/*     sztr31
*  Test the "set" bool code. The zero indicator cannot be set
*  when the "set" code is used. This test sets the truncation
indicator.  */

inst sztr -nt "1st string is longer than 2nd"
-ir tn
-bo set;

desc 1 -ns 50;
desc 2 -ns 49;

data 1 023 571 725 152 111 243;
data 2 023 571 777 043 121 000;

page -all;



/*     sztr32
*  Test the "set" bool code. No indicators are set.
*  The maximum number of page faults is taken  */

inst sztr -nt "2nd string is longer than 1st"
-bo set
-mf1 idb ar reg rl 39159
-mf2 idb ar reg rl 39168
-io 1
-fb;

data 1 (4351)000;
data 2 (4352)071;

page -all;

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































