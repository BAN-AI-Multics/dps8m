
/*		tct1
*
*	Out table will be indexed by the characters  "abcde".   "b" & "e" are the two
*	non zero entries.  Start off with a simple test
*/

inst	tct	-nt "Simple test";

desc 1	-ns 4;

data 1	"aceb";

data 2	(97) "*"		/* These characters should never be referenced. */
	000		/* "a" */
	"b"
	000		/* "c" */
	"d"
	000 ;		/* "e" */

data 3	"b" 000 000 003;

page	-all;
/*		tct2
*
*	Same as  tct1  only we will move the data fields across page boundaries and
*	add modification.
*/

inst	tct	-nt  "Same as prev - fields X pg bound"	-io 3
	-mf1	rl  4	ar reg idb
	-mf2	ar reg		/* RL and ID mod NOT allowed for descriptors 2 & 3. */

	-mf3	reg ar;

data 1	-do -3	"aceb";

data 2	-do -100	(97) "*"		/* These characters should never be referenced. */
	000		/* "a" */
	"b"
	000		/* "c" */
	"d"
	000 ;		/* "e" */

data 3	"b" 000 000 003;

page	-all;
/*		tct3
*
*	Same as  tct2  except  string 1 will be changed  so we will have a
*	tally runout.
*/


inst	tct	-nt  "Test tally runout"	-io 2
	-ir	tr
	-mf1	ar idb reg rl 18
	-mf2	ar reg
	-mf3	ar reg;

data 1	-do -9 	(6) "ace";

data 2	-do -100
	(97) "*" 000 "b" 000 "d" 000;

data 3	000 000 000 022;


page	-all;
/*		tct4
*
*	Test using  6  bit characters.  The  -cn  field will specify that the string
*	starts at the  5th  character of the word (last character).
*/

inst	tct	-nt  "Use 6 bit characters"	-io 1
	-mf1	idb reg ar
	-mf2	reg ar
	-mf3	ar reg;

desc 1	-ns  10	-cn 5	-ta 6;

data 1	-do  -6		/* Test string is  0 1 2 3 4 5 6 7 10 11  */
	0606060606	/* Filler, not part of string, 1st 5 characters of word. */
	010203		/* Page boundary. */
	040506 071011;

data 2	-do -4
	000 000 000 000
	000 000 006 000 000 000;

data 3	-do 4	006 000000 006;


page	-all;
/*		tct5
*
*	The indexes in string 1 will be  4  bit characters.
*/

inst	tct	-nt  "Use 4 bit characters"	-io 2
	-mf1	idb ar reg
	-mf2	ar reg
	-mf3	ar reg;


desc 1	-ns 8
	-ta 4	/* 4 bit characters. */
	-cn 2;	/* First 2 characters of word not used.
		*  This is the first 9 bit character.  */

data 1	-do -2
	000		/* The first two characters of the word - skipped. */
	001		/* Characters "0" and "1".  In page 1. */
	043 105 147;	/* "234567" (4 bit)  in page 2. */

data 2	-do -4
	000 000 000 000	/* All in page 1.  Represent index values 0,1,2,3 */
	000 "*" 000 000;	/* In page 2. Correspond to index values 4,5,6,7  */

data 3	"*" 000 000 005;


page	-all;



/*   tct 6
*
*  Test loading across three pages.  One character loaded from
*  page 1 and 3.  Test 6146 characters.  Tally runout indicator
*  is set.
*/

inst  tct  -nt  "(6 bit)no modif. tally is set"
           -io 1
           -ir tr
           -mf1 rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;

/*   tct 7
*
*  Test loading data across three pages.  One character is loaded
*  from page 1 and 3 with 6146 characters tested.  A nonzero
*  character is found in the test table.
*/

inst  tct  -nt  "(6 bit)no mod. a nonzero entry"
           -mf1 rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;



/*   tct 8
*
*  Test similiar to tct 6.  Test ar, reg, and rl for descriptor 1.
*
*/

inst  tct  -nt  "(6 bit)ar,reg,rl. tally runout"
           -io 2
           -ir tr
           -mf1 ar reg rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;



/*   tct 9
*
*  Test similiar to tct 7.  Test ar, reg, and rl modification
*  for descriptor 1.  Test ar and reg modification for descriptor 1 and 2.
*
*/

inst  tct  -nt  "(6 bit)ar,reg,rl.no tally runout"
           -io 1
           -mf1 ar reg rl 6146
           -mf2 ar reg
           -mf3 ar reg ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
               (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;



/*   tct 10
*
*  Test similiar to tct 6.  Test indirect referencing
*  of descriptor 1.  Test ar and reg modification for descriptors 2 and 3.
*/

inst  tct  -nt  "(6 bit)test id. tally runout"
           -ir tr
           -mf1 id rl 6146
           -mf2 ar reg
           -mf3 ar reg ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;




/*   tct 11
*
*  Test similiar to tct 7.  Test indirect referencing of
*  descriptor 1.
*
*/

inst  tct  -nt  "(6 bit)test id. no tally runout"
           -io 2
           -mf1 id rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
               (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;


/*   tct 12
*
*  Test similiar to tct 6.  Test indirect referencing of descriptor 1
*  with ar modification of the indirect word.  Also test reg
*  modification of descriptors 2 and 3.
*
*/

inst  tct  -nt  "(6 bit)test ida. tally runout"
           -io 1
           -ir tr
           -mf1 ida rl 6146
           -mf2 reg
           -mf3 reg ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;



/*   tct 13
*
*  Test similiar to tct 7.  Test indirect referencing of descriptor 1
*  with ar modification of the indirect word.  Also test ar
*  modification of descriptors 2 and 3.
*
*/

inst  tct  -nt  "(6 bit)test ida. no tally runout"
           -mf1 ida rl 6146
           -mf2 ar
           -mf3 ar ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
               (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;



/*   tct 14
*
*  Test similiar to tct 6.  Test indirect referencing of decriptor 1
*  with ar and reg modification of the indirect word.
*
*/

inst  tct  -nt  "(6 bit)test idb. tally runout"
           -io 2
           -ir tr
           -mf1 idb rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;



/*   tct 15
*
*  Test similiar to tct 7.  Test indirect referencing of descriptor 1
*  with ar and reg modification of the indirect word.
*
*/

inst  tct  -nt  "(6 bit)test idb. no tally runout"
           -mf1 idb rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
               (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;



/*   tct 16
*
*  Test similiar to tct 6.  Test indirect referencing of descriptor 1
*  with ar and reg modification of the indirect word.  Further the
*  descriptor has ar, reg, and rl modification.
*
*/

inst  tct  -nt  "(6 bit)idb,ar,reg. tally runout"
           -io 1
           -ir tr
           -mf1 idb ar reg rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                000102030405
                (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          000 000 014 002 ;

page    -all ;



/*   tct 17
*
*  Test similiar to tct 7.  Test indirect referencing of descriptor 1
*  with ar and reg modification of the indirect word.  Further the
*  descriptor has ar, reg, and rl modification.
*
*/

inst  tct  -nt  "(6bit)idb,ar,reg.no tally runout"
           -io 2
           -mf1 idb ar reg rl 6146 ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
               310102030405
               (128) 000102030405060710111213141516172021222324252627 ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 006 001 ;

page    -all ;

/*   tct 18
*
*  Test for character match on the first character of page 3.
*  Also, test idb, ar, reg, and rl of descriptor 1.  Also, test
*  ar and reg modification of descriptors 2 and 3.
*
*/

inst  tct  -nt  "(6 bit)match 1st char of page 3"
           -io 1
           -mf1 idb ar reg rl 6146
           -mf2 reg ar
           -mf3 reg ar ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 000 (128) 010203040506071011121314151617202122232425262700
                (128) 000102030405060710111213141516172021222324252627 
                31  ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 014 001 ;

page    -all ;


/*   tct 19
*
*  Test for character match on the last character of page 1.
*  Also, test idb, ar, reg, and rl of descriptor 1.  Also, test
*  ar and reg modification of descriptors 2 and 3.
*
*/

inst  tct  -nt  "(6 bit)match last char of page 1"
           -io 1
           -mf1 idb ar reg rl 6146
           -mf2 reg ar
           -mf3 reg ar ;

desc 1  -cn 5 -ta 6 ;

data 1  -do -4 "   " 031 (128) 010203040506071011121314151617202122232425262700
                (128) 000102030405060710111213141516172021222324252627 
                00  ;

data 2  -do -4  (24) 000 000 141 ;

data 3          141 000 000 000 ;

page    -all ;


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































