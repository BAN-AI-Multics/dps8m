"  ******************************************************
"  *                                                    *
"  *                                                    *
"  * Copyright (c) 1972 by Massachusetts Institute of   *
"  * Technology and Honeywell Information Systems, Inc. *
"  *                                                    *
"  *                                                    *
"  ******************************************************

"  ******************************************************
"  *                                                    *
"  *                                                    *
"  *    Copyright, (C) Honeywell Information Systems    *
"  *    Inc., 1980.                                     *
"  *                                                    *
"  *                                                    *
"  ******************************************************

"
"	Test to find mlr failure when doing move across 4K boundary
"	which causes out-of-bounds fault and subsequent seg-fault
"
"	To run this test, you must create fresh each time a segment
"	called testcpu_tempseg_1 and you must terminate mlr_tst. Then run the test.
"	Afterwards, type:
"
"	abc testcpu_tempseg_1
"	iomode edited
"	print testcpu_tempseg_1
"
"	The test will have failed if the output printed is as follows:
"
"	abcdefghijklmnopqrstuvwxyaABCDEFGHIJKLEFGHIJKLMNOP....etc
"
"	Note: the 8 chars EFGHIJKL are repeated
"
	name	mlr_tst
	entry	mlr_tst
	temp	eis_misc
	temp	ou_misc

mlr_tst:
	push
	stz	eis_misc
	stz	ou_misc
	lda	=o70,dl
	ldq	1,dl
	epplb	ap|2,*
	epplb	lb|0,*	"get ptr to temp seg
	eppbp	lb|0,*
	adwplb	4087,du
	eax5	2
	a9bd	lb|0,5
	eppbb	source

	mlr	(pr,rl,ql),(pr,rl),fill(040)
	desc9a	bb|0(3),al
	desc9a	lb|0,al


	cmpc	(pr,rl,ql),(pr,rl),fill(040)
	desc9a	bb|0(3),al
	desc9a	lb|0,al
	tnz	fail1

ou_check:
	lda	bp|4087
	cmpa	=o000000145146
	tnz	fail2
	eax0	0

loop:	ldaq	bp|4088,x0
	cmpaq	answer,x0
	tnz	fail2
	eax0	2,x0
	cmpx0	=o16,du
	tmi	loop

validate:
	lda	eis_misc
	cmpa	ou_misc
	tnz	eis_failed	"either the mlr or cmpc failed
	ldq	0,dl
	cmpq	eis_misc
	tnz	mlr_failed
	return

fail1:
	aos	eis_misc
	tra	ou_check
fail2:
	aos	ou_misc
	tra	validate

mlr_failed:
	drl			"mlr failed

cmpc_failed:
	mme4			"cmpc failed, mlr worked

eis_failed:
	lda	ou_misc
	cmpa	0,dl
	tze	cmpc_failed
	mme1			"MLR and CMPC failed


source:
	aci	"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890$%"
	even

answer:	aci	"ghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ12345678"
	oct	0

RET:	return
	end




