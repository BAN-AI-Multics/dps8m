" 
" Begin include file ...... rdclock.incl.alm
" last modified 7/20/76 by Noel I. Morris
" last modified 7/10/78 by Bernard S. Greenberg for externally gettable vars
"  and calculating every parameter imaginable.
" last modified 5/05/80 by Mike Grady to calculate a few more imaginable
"  variables, and to fix a bug in leap years.
"
"	tsx2	rd_clock
"	staq	MM/DD HH:MM

"	ldaq	clocktime
"	tsx2	cv_clock
"	staq	MM/DD HH:MM

rd_clock:	rscr	4*8			"read the clock

cv_clock:	staq	rdctime		"save clock reading
	stx2	datx2               "save XR's
	stx0	datx2+1             "..

	lda     28,dl               "Initialize montab
	sta     montab+1            "	to prime Feb

	lda     =aclok              "find clock config card
	tsx2	getconf
	tra     no_clok_card		"Use default
	ldq     com|1,7
	stq     rdclock.zone_temp	"Delta hours
	ldq     com|2,7
	stq     rdclock.zone_name	"Name of zone

no_clok_card:
	ldaq	rdctime             "Get clock reading
	lls     1                   "Set for dvf
	dvf     =1000000            "Get seconds since 1900.
	llr     36                  "Into Q.
	div     60,dl               "Seconds since min to A, mins to Q.
	sta     rdclock.sec         "Save for inspection.
	div     60,dl               "Min since hr to A, hrs to Q.
	sta     rdclock.min
"
"	Set up X7 for field filling.
"
	eax7	6
	tsx2	datecv              "Convert the minutes.
	sbq     rdclock.zone_temp	"Adjust for GMT.
	div     24,dl               "Days since 1900 in q.
	stq     rdclock.day_of_century	"save for  later.
	sta     rdclock.hr          "Hours since daybreak.
	tsx2	datecv              "Convert the hours

	div     365*4+1,dl          "get leap year cycle
	cmpa	365*3+1,dl          "if in last year of cycle (the leap year)
	tmi     *+2                 "no
	aos     montab+1            "allow for feb 29

	qls     2                   "4*# leap year cycles
	adlq	1901,dl
	stq     rdclock.year        "Save

	llr     36
	div     365,dl              "Years complete since l.y.c. =>Q
"					Days since that year end => A

	cmpq	4,dl                "Dec 31st of leap year?
	tnz     *+3                 "No.
	sbq     1,dl                "Adjust year and
	lda     365,dl              "day numbers.

	asq     rdclock.year        "Add in years complete.
	eax6	0                   "search for correct month
	rpt     12,1,tmi            "..
	sba     montab,6            "subtract off days for each month
	ada     -1,6                "put back last entry
	ada     1,dl                "plus one more
	sta     rdclock.day_of_month	"Day of month
	tsx2	datecv              "convert day

	eaa     0,6
	sbla	montab,du           "get index into month table
	arl     18                  "..
	sta     rdclock.month       "Save month number
	ldq     rdc.months-1,al     "Get name of month.
	stq     rdclock.month_name
	tsx2	datecv              "convert month

	mvne	(),(),()            "edit the date and time
	desc4ns	date,8
	desc9a	datedit,12
	desc6a	rdctime,12

	ldq     rdclock.day_of_century
	adq     2,dl                "Bump Tuesday into place.
	div     7,dl
	sta     rdclock.day_of_week
	ldq     rdc.days,al         "Get name of day.
	stq     rdclock.day_name

	ldaq	rdctime             "get conversion in AQ
datx2:	eax2	*               "restore XR's
	eax0	*                   "..
	tra     0,2                 "return to caller


datecv:	sta	datenum             "save number

	btd     (),(x7)             "convert into proper place
	desc9a	datenum,4
	desc4ns	date,2

	eax7	-2,7                "move offset index
	tra     0,2                 "and return

"
" Usefull outside visible variables rdclock.xxxxx

rdclock.hr:             bss     ,1
rdclock.min:            bss     ,1
rdclock.sec:            bss     ,1
rdclock.month:          bss     ,1
rdclock.month_name:     bss     ,1
rdclock.day_of_month:	bss     ,1
rdclock.day_of_week:	bss     ,1
rdclock.day_name:       bss     ,1
rdclock.year:           bss     ,1
rdclock.day_of_century:	bss     ,1
rdclock.zone_temp:      dec     7   "8 5
rdclock.zone_name:      aci     'Pst '  "aci	'est '

datenum:                bss	,1
date:                   bss	,1

	even
rdctime:        bss	,2

montab:         dec	31,28,31,30,31,30,31,31,30,31,30,31

datedit:        vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
                vfd	9/insp,o9/15,9/mvc+2,9/insm+1

rdc.days:       aci	'Sun Mon Tue Wed ThurFri Sat '

rdc.months: 	aci	'Jan Feb Mar Apr May Jun Jul Aug SeptOct Nov Nec '

" End of include file ...... rdclock.incl.alm

