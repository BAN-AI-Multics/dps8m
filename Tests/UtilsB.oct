!INFO date Sun Feb 23 02:13:09 2014 UTC
!INFO src UtilsB.as8
!SIZE 000172
!SEGNAME UtilsB
!SEGDEF getChar 000060
!SEGDEF putChar 000116
!LINKAGE 000170 1
!SEGREF UtilsA ioa 000170
000000 xxxx 000000000000 saveRA:      bss     ,2
000002 xxxx 000000011000             eight "(allocating 6 nop's)
000003 xxxx 000000011000 
000004 xxxx 000000011000 
000005 xxxx 000000011000 
000006 xxxx 000000011000 
000007 xxxx 000000011000 
000010 xxxx 000000000000 saveX:      bss     ,8
000020 xxxx 000000000000 saveIR:     bss     ,1
000021 xxxx 000000000000 arg1:       bss     ,1
000022 xxxx 000000000000 arg2:       bss     ,1
000023 xxxx 000000000000 arg3:       bss     ,1
000024 xxxx 000000000000 temp1:      bss     ,1
000025 xxxx 000000000000 temp2:      bss     ,1
000026 xxxx 000000000000 LA:         bss     ,1
000027 xxxx 000000000000 LQ:         bss     ,1
000030 xxxx 000000011000             sixteen "(allocating 8 nop's)
000031 xxxx 000000011000 
000032 xxxx 000000011000 
000033 xxxx 000000011000 
000034 xxxx 000000011000 
000035 xxxx 000000011000 
000036 xxxx 000000011000 
000037 xxxx 000000011000 
000040 xxxx 000000000000 savePR:     bss     ,16
000060 xxxx 000020754000         sti     saveIR      " save IR
000061 xxxx 000010753000         sreg    saveX       " save index registers
000062 xxxx 000040254000         spri    savePR      " save PRs
000063 xxxx 200002353500         epp3    pr2|2       " add 2 words for arguments
000064 xxxx 000000253400         spri3   saveRA      " save for return to caller
000065 xxxx 200000235100         lda     pr2|0       " pick up pointer to string - arg1
000066 xxxx 000021755000         sta     arg1
000067 xxxx 200001235100         lda     pr2|1       " pick up index - arg2
000070 xxxx 000022755000         sta     arg2
000071 xxxx 000021763000         lprp3   arg1        " string address => pr3
000072 xxxx 000022236000         ldq     arg2        " pick up index - arg2
000073 xxxx 000022772000         qrl     18          " move upper 18-bit to lower 18-bits
000074 xxxx 000004506007         div     =4,dl       " how many words to skip => Q, char pos in A
000075 xxxx 000027756000         stq     LQ          " words to skip => Q
000076 xxxx 000026755000         sta     LA          " char pos => A
000077 xxxx 000003235007         lda     =3,dl
000100 xxxx 000026155000         ssa     LA          " 3 - LA => LA
000101 xxxx 000027722000         lxl2    LQ          " words to skip in x2
000102 xxxx 300000235112         lda     pr3|0,x2    " src wrd => A
000103 xxxx 000026236000         ldq     LA          " pos => Q
000104 xxxx 000000622006         eax2    0,ql        " Ql => x2
000105 xxxx 000111600000 loop:   tze     done
000106 xxxx 000011771000         arl     9           " 9-bits/byte
000107 xxxx 777777622012         eax2    -1,x2       " x2 -= 1
000110 xxxx 000105710000         tra     loop
000111 xxxx 000777375007 done:   ana     =0777,dl    " mask off all but lower 9-bits
000112 xxxx 000014755000         sta     saveX+4     " save A in register save area
000113 xxxx 000040173000         lpri    savePR
000114 xxxx 000010073000         lreg    saveX       " restore regsiters
000115 xxxx 000000610000         rtcd    saveRA
000116 xxxx 000020754000         sti     saveIR      " save IR
000117 xxxx 000010753000         sreg    saveX       " save index registers
000120 xxxx 000040254000         spri    savePR      " save PRs
000121 xxxx 200003353500         epp3    pr2|3       " add 3 words for arguments
000122 xxxx 000000253400         spri3   saveRA      " save for return to caller
000123 xxxx 200000235100         lda     pr2|0       " pick up pointer to string - arg1
000124 xxxx 000021755000         sta     arg1
000125 xxxx 200001235100         lda     pr2|1       " pick up index - arg2
000126 xxxx 000022755000         sta     arg2
000127 xxxx 200002235100         lda     pr2|2       " pick up char to put (in A18-35) - arg3
000130 xxxx 000023755000         sta     arg3
000131 xxxx 000021763000         lprp3   arg1        " string address => pr3
000132 xxxx 000022236000         ldq     arg2        " pick up index - arg2
000133 xxxx 000022772000         qrl     18          " move upper 18-bit to lower 18-bits
000134 xxxx 000004506007         div     =4,dl       " how many words to skip => Q, char pos in A
000135 xxxx 000027756000         stq     LQ          " words to skip => LQ
000136 xxxx 000026755000         sta     LA          " char pos => LA
000137 xxxx 000003235007         lda     =3,dl
000140 xxxx 000026155000         ssa     LA          " 3 - LA => LA
000141 xxxx 000027722000         lxl2    LQ          " words to skip in x2
000142 xxxx 300000235112         lda     pr3|0,x2    " src wrd => A
000143 xxxx 000024755000         sta     temp1       "         => temp1
000144 xxxx 000023235000         lda     arg3        " get char
000145 xxxx 000025755000         sta     temp2       " save in temp2 (1x)
000146 xxxx 000011735000         als     9           " scoot it over 9-bits
000147 xxxx 000025255000         orsa    temp2       " or it into temp2 (2x)
000150 xxxx 000011735000         als     9           " scoot it over 9-bits
000151 xxxx 000025255000         orsa    temp2       " or it into temp2 (3x)
000152 xxxx 000011735000         als     9           " scoot it over 9-bits
000153 xxxx 000025255000         orsa    temp2       " or it into temp2 (4x)
000154 xxxx 000025236000         ldq     temp2       " put repeated chars into Q
000155 xxxx 000026235000         lda     LA          " get adjusted char posn to put
000156 xxxx 000164716005         xec     $3,al    " eXECute appropriate stbq instruction
000157 xxxx 000024235000         lda     temp1
000160 xxxx 300000755112         sta     pr3|0,x2    " write back modified word out
000161 xxxx 000040173000         lpri    savePR
000162 xxxx 000010073000         lreg    saveX       " restore regsiters
000163 xxxx 000000610000         rtcd    saveRA
000164 xxxx 000024552040 $3:     stbq    temp1, 040  " store byte 0 (bits 8-0)
000165 xxxx 000024552020         stbq    temp1, 020  " store byte 1 (bits 9-17)
000166 xxxx 000024552010         stbq    temp1, 010  " store byte 2 (bits 18-26)
000167 xxxx 000024552004         stbq    temp1, 004  " store byte 3 (bits 27-35)
000170 xxxx 000000000043 link UtilsA$ioa
000171 xxxx 000000000000 
