!INFO date Fri Feb 21 05:54:27 2014 UTC
!INFO src UtilsB.as8
!SIZE 000120
!SEGNAME UtilsB
!SEGDEF getChar 000060
!LINKAGE 000116 1
!SEGREF UtilsA ioa 000116
000000 xxxx 000000000000 saveRA:      bss     ,2
000002 xxxx 000000011000             eight "(allocating 6 nop's)
000003 xxxx 000000011000 
000004 xxxx 000000011000 
000005 xxxx 000000011000 
000006 xxxx 000000011000 
000007 xxxx 000000011000 
000010 xxxx 000000000000 saveX:      bss     ,8
000020 xxxx 000000000000 saveIR:     bss     ,1
000021 xxxx 000000000000 arg1:       bss     ,1
000022 xxxx 000000000000 arg2:       bss     ,1
000023 xxxx 000000011000             even "(allocating 1 nop)
000024 xxxx 000000000000 LA:         bss     ,1
000025 xxxx 000000000000 LQ:         bss     ,1
000026 xxxx 000000011000             sixteen "(allocating 10 nop's)
000027 xxxx 000000011000 
000030 xxxx 000000011000 
000031 xxxx 000000011000 
000032 xxxx 000000011000 
000033 xxxx 000000011000 
000034 xxxx 000000011000 
000035 xxxx 000000011000 
000036 xxxx 000000011000 
000037 xxxx 000000011000 
000040 xxxx 000000000000 savePR:     bss     ,16
000060 xxxx 000020754000         sti     saveIR      " save IR
000061 xxxx 000010753000         sreg    saveX       " save index registers
000062 xxxx 000040254000         spri    savePR      " save PRs
000063 xxxx 200002353500         epp3    pr2|2       " add 2 words for arguments
000064 xxxx 000000253400         spri3   saveRA      " save for return to caller
000065 xxxx 200000235100         lda     pr2|0       " pick up pointer to string - arg1
000066 xxxx 000021755000         sta     arg1
000067 xxxx 200001235100         lda     pr2|1       " pick up index - arg2
000070 xxxx 000022755000         sta     arg2
000071 xxxx 000021763000         lprp3   arg1        " string address => pr3
000072 xxxx 000022236000         ldq     arg2        " pick up index - arg2
000073 xxxx 000022772000         qrl     18          " move upper 18-bit to lower 18-bits
000074 xxxx 000004506007         div     =4,dl       " how many words to skip => Q, char pos in A
000075 xxxx 000025756000         stq     LQ          " words to skip => Q
000076 xxxx 000024755000         sta     LA          " char pos => A
000077 xxxx 000003235007         lda     =3,dl
000100 xxxx 000024155000         ssa     LA          " 3 - LA => LA
000101 xxxx 000025722000         lxl2    LQ          " words to skip in x2
000102 xxxx 300000235106         lda     pr3|0,ql    " src wrd => A
000103 xxxx 000024236000         ldq     LA          " pos => Q
000104 xxxx 000000622006         eax2    0,ql        " Ql => x2
000105 xxxx 000111600000 loop:   tze     done
000106 xxxx 000011771000         arl     9           " 9-bits/byte
000107 xxxx 777777622012         eax2    -1,x2       " x2 -= 1
000110 xxxx 000105710000         tra     loop
000111 xxxx 000777375007 done:   ana     =0777,dl    " mask off all but lower 9-bits
000112 xxxx 000014755000         sta     saveX+4     " save A in register save area
000113 xxxx 000040173000         lpri    savePR
000114 xxxx 000010073000         lreg    saveX       " restore regsiters
000115 xxxx 000000610000         rtcd    saveRA
000116 xxxx 000000000043 link UtilsA$ioa
000117 xxxx 000000000000 
