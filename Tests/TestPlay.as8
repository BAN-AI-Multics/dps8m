
    option  Multics     " Multics style calling conventions

    entrypoint main
    
	name	main
	segdef	main

	segref	UtilsA, ioa,rd_clockA
	segref	lot_,lot_
    segref  stack_0, stack_0

    segref  UtilsB, getChar, putChar

    link    I, <UtilsA>|[ioa]
    link    D, <UtilsA>|[rd_clockA]

main:

    tsx2    setupFXE

    LDA     I
    tsp2	pr4|I, *        " ioa
    acc     /This is "Play .... It's /

    tsp2    UtilsA$rd_clockA

    staq	Date        " MM/DD HH:MM
        
    tsp2	ioa
    acc     /'^g^g'\r\n/
    nop     Date
    nop     Date+1

"
"
call_main:

    "call    getCharAB(ap|0)
    
    epp2     taf        " address of string => pr2
    sprp2    a0        " save as argument to function

    eax2     20
lp: stx2     a1

    tsp2     UtilsB$getChar
a0: zero     0, 0        " packed address of string
a1: arg      17

    emcall  1

    eax2     -1,x2
    tnz      lp


    epp2     taf        " address of string => pr2
    sprp2    a2         " save as argument to function

    eax2     20
lp1:stx2     a3

    tsp2     UtilsB$putChar
a2: zero     0, 0        " packed address of string
a3: arg      17
    vfd      27/0,A9/D
    
allDone:
    tsp2	ioa
taf:acc     /T-H-A-T-S all folks (from 0|main) !!! /

	dis
    
"
" data ....
"
even

Date:   bss     2


" If not fault, dis@1
	dis	*

    even

l43170:	
        ITS 9, 16

        oct	000400000043
        oct	000000000000
        


    INCLUDE     setupFXE.as8

	end



