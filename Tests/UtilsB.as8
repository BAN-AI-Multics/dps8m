"
" some more utility routines for use in the FXE environment ...
"

    name        UtilsB
    segdef      getChar
    "entry       getCharAB
    
  	segref      UtilsA, ioa

    
"
" return in A the character given by arg1[arg2]
"

            even
saveRA:      bss     ,2
            eight
saveX:      bss     ,8
saveIR:     bss     ,1

arg1:       bss     ,1
arg2:       bss     ,1

            even
LAQ:
LA:         bss     ,1
LQ:         bss     ,1

            sixteen
savePR:     bss     ,16

"
" get 8/9-bit character of string
"
" Usage:
"   tsp2     UtilsB$getChar
"   dec      packedPointeerToACC string
"   arg      char #
"
" returns char in A
"
"

getChar:  "push
        sti     saveIR      " save IR
        sreg    saveX       " save index registers
        spri    savePR      " save PRs

        epp3    pr2|2       " add 2 words for arguments
        spri3   saveRA      " save for return to caller

        lda     pr2|0       " pick up pointer to string - arg1
        sta     arg1

        lda     pr2|1       " pick up index - arg2
        sta     arg2

        lprp3   arg1        " string address => pr3

        " determine how many words we need to skip for index arg2
        ldq     arg2        " pick up index - arg2
        qrl     18          " move upper 18-bit to lower 18-bits
        div     =4,dl       " how many words to skip => Q, char pos in A
        stq     LQ          " words to skip => Q
        sta     LA          " char pos => A
        
        lda     =3,dl
        ssa     LA          " 3 - LA => LA

        lxl2    LQ          " words to skip in x2
        lda     pr3|0,x2    " src wrd => A

        " src word is in A. Shift right until desired char in in 8..0
        ldq     LA          " pos => Q
        eax2    0,ql        " Ql => x2
        
loop:   tze     done
        arl     9           " 9-bits/byte
        eax2    -1,x2       " x2 -= 1
        tra     loop

done:   ana     =0777,dl    " mask off all but lower 9-bits
        sta     saveX+4     " save A in register save area

        lpri    savePR
        lreg    saveX       " restore regsiters

        rtcd    saveRA

        "return

