    "include Init.incl.as8
    include     fault_vector.incl.alm

        org     fv.ipair
        bss     ,fv.fpair

"
"  Fault test code ...
"

main:  tsx2     rd_clock
       staq     Date        " MM/DD HH:MM

       call    ioa(msgHello, Date, Date+1)

       "tsx2    fltDiv
        ldaq    fltDiv_ip
        staq    FAULT_NO_DIV * 2
       
*       C(Q) / (Y) integer quotient → C(Q) 
*       integer remainder → C(A)

*       A 36-bit integer dividend (including sign) is divided by a 36-bit integer divisor (including sign) to form a 36-bit integer quotient (including sign) and a 36-bit
*       integer remainder (including sign). The remainder sign is equal to the dividend sign unless the remainder is zero.
*       If the dividend = -2**35 and the divisor = -1 or if the divisor = 0, then division does not take place. Instead, a divide check fault occurs, C(Q) contains the 
*       dividend magnitude, and the negative indicator reflects the dividend sign.

        ldq     =42     " load Q with 42
        div     =0      " ... and attempt a divide by 0

        ldq     =o400000000000
        div     =-1

        dis

msgHello:   acc     "This is Fault Test (ABS mode) ... ^g^g\r\n"
msgDivide:  acc     /Divide check fault\r\n/

fltDiv:     stx2	fltDiv_x2

            call    ioa(msgDivide)

fltDiv_x2:	eax2	*
            tra     0,2

            even
fltDiv_ip:  nop
            tsx2    fltDiv


        even
Date:   bss     2


        include     rdclock.as8
        include     Utils.as8
        
        end
