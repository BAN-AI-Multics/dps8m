
"
" print a <CR><LF> to console ...
"
crlf:	.entry  crlf1, 2
crlf1:  sta     crlfsafe
        lda	=012
        emCall  1
        lda	=015
        emcall	1
        lda     crlfsafe
        exit    0, 2
crlfsafe:   bss 1

printMsg:
    	.entry	p0, 2
p0: 	eax4    -1, 2*
    	lda     0, x4*  " get actually tallyb word into A
        sta     p9      " save it
    	lda     p9, sc
    	emCall  1
    	ttf     -2, ic
	exit	1, 2
p9:	bss	1	" safe store for msg tallyb word

printMsgC:
    	.entry	p20, 2
p20:	eax4    -1, 2*

	lda	041, dl	" make a blank tallyb word .....
	sta	p29

    	lda     0, x4*  " get 1st data word into A
    	ars     27      " determine word count
    	als     6       " count to upper word of tally
    	orsa    p29

    	ldx6    0, x4   " address of string into X6
    	stx6    p29     " address to upper word of tally

    	" make a tallyb word with this addres, length, offset = 1
    	" address / tally / byte type / offset
    	lda     p29, sc
    	emCall  1
    	ttf     -2, ic
	exit	1, 2
p29:	tallyb  0, 0, 1	" safe store for msg tallyb word

