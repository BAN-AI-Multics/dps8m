!SIZE 015054
000000 xxxx 010000710000 	tra	entry
000132 xxxx 000024420400 	emcall	20	" report fault
000133 xxxx 000000011000 	nop
010000 xxxx 014324702000        tsx2	rd_clock
010001 xxxx 010034757000        staq	Date        "MM/DD HH:MM
010002 xxxx 014531701000        call    ioa(msgHello, Date, Date+1)
010003 xxxx 010010710000 
010004 xxxx 000000000000 
010005 xxxx 010012000000 
010006 xxxx 010034000000 
010007 xxxx 010035000000 
010010 xxxx 010025634000 	ldi	ovr_mask
010011 xxxx 010042710000         tra BTD0
010012 xxxx 031124150151 msgHello:  acc         "This is TestEIS ...^g^g\r\n"
010013 xxxx 163040151163 
010014 xxxx 040124145163 
010015 xxxx 164105111123 
010016 xxxx 040056056056 
010017 xxxx 136147136147 
010020 xxxx 015012040040 
010021 xxxx 015104141164 msg1:      acc         "Date: ^g^g \r\n"
010022 xxxx 145072040136 
010023 xxxx 147136147040 
010024 xxxx 015012040040 
010025 xxxx 000000000000 ovr_mask:	oct	0"4000
010026 xxxx 000000000012 Ten:    dec 10
010027 xxxx 021124150151 TENmsg: acc     /This is ^d ... \r\n/
010030 xxxx 163040151163 
010031 xxxx 040136144040 
010032 xxxx 056056056040 
010033 xxxx 015012040040 
010034 xxxx 000000000000 Date:   bss     2
010036 xxxx 017102124104 BTDmsg:    acc         "BTD Tests ...\r\n"
010037 xxxx 040124145163 
010040 xxxx 164163040056 
010041 xxxx 056056015012 
010042 xxxx 014531701000         call    ioa(BTDmsg)
010043 xxxx 010046710000 
010044 xxxx 000000000000 
010045 xxxx 010036000000 
010046 xxxx 000000301400         BTD     (),()
010047 xxxx 010060400002         NDSC9   FLD1a,2,2        " binary operand descriptor
010050 xxxx 010061010004         NDSC9   FLD2a,0,4,1      " decimal operand descriptor
010051 xxxx 014531701000         call    ioa(msg2, FLD2a, FLD2a)
010052 xxxx 010057710000 
010053 xxxx 000000000000 
010054 xxxx 010062000000 
010055 xxxx 010061000000 
010056 xxxx 010061000000 
010057 xxxx 010077710000         tra     BTD2
010060 xxxx 777777777000 FLD1a:  dec     -512    " 7 7 7 7 7 7 7 7 7 0 0 0
010061 xxxx 000000000000 FLD2a:  bss     1       " 0 5 5 0 6 5 0 6 1 0 6 2
010062 xxxx 061122145163 msg2:   acc         "Result: ^n (^a) (Should be 055065061062 (-512))\r\n"
010063 xxxx 165154164072 
010064 xxxx 040136156040 
010065 xxxx 050136141051 
010066 xxxx 040050123150 
010067 xxxx 157165154144 
010070 xxxx 040142145040 
010071 xxxx 060065065060 
010072 xxxx 066065060066 
010073 xxxx 061060066062 
010074 xxxx 040050055065 
010075 xxxx 061062051051 
010076 xxxx 015012040040 
010077 xxxx 000000301400         BTD     (),()
010100 xxxx 010222600001         NDSC9   FLD1b,3,1
010101 xxxx 010223220003         NDSC9   FLD2b,1,3,2
010102 xxxx 014531701000         call    ioa(msg2b, FLD2b, FLD2b)
010103 xxxx 010110710000 
010104 xxxx 000000000000 
010105 xxxx 010224000000 
010106 xxxx 010223000000 
010107 xxxx 010223000000 
010110 xxxx 010111617000         tov     *+1         " reset OVR
010111 xxxx 010174710000         tra     BTD3
010112 xxxx 777777747707 N12345: dec     -12345
010113 xxxx 000000000000 errnum:     bss	,2
010115 xxxx 000000000000 errtemp:	bss	,16
010135 xxxx 000000000000 ertally:	bss	,1
010136 xxxx 000000000000 errarg:     bss	,1
010137 xxxx 000000000000 erlen:      bss	,1
010140 xxxx 401020403020 eredit_d:	vfd	9/lte+1,o9/20,9/lte+3,o9/20,9/lte+4,o9/52,9/mfls+10,9/enf
010141 xxxx 404052152040 
010142 xxxx 321000000000             vfd	9/mvc+1
010143 xxxx 065122145163 msg2_b:     acc /Result: ^n ^n (Should be 320000000001 043105XXXXXX)\r\n/
010144 xxxx 165154164072 
010145 xxxx 040136156040 
010146 xxxx 136156040050 
010147 xxxx 123150157165 
010150 xxxx 154144040142 
010151 xxxx 145040063062 
010152 xxxx 060060060060 
010153 xxxx 060060060060 
010154 xxxx 060061040060 
010155 xxxx 064063061060 
010156 xxxx 065130130130 
010157 xxxx 130130130051 
010160 xxxx 015012040040 
010161 xxxx 053122145163 msg2_c:     acc /Result: '^g^g' (Should be '      -12345')\r\n/
010162 xxxx 165154164072 
010163 xxxx 040047136147 
010164 xxxx 136147047040 
010165 xxxx 050123150157 
010166 xxxx 165154144040 
010167 xxxx 142145040047 
010170 xxxx 040040040040 
010171 xxxx 040040055061 
010172 xxxx 062063064065 
010173 xxxx 047051015012 
010174 xxxx 010112235000         lda     N12345
010175 xxxx 010136755000         sta     errarg
010176 xxxx 000000301400         btd     (),()       "convert decimal number
010177 xxxx 010136000004         desc9a	errarg,4
010200 xxxx 010113050014         desc4ls	errnum,12
010201 xxxx 014531701000         call    ioa(msg2_b, errnum, errnum+1)
010202 xxxx 010207710000 
010203 xxxx 000000000000 
010204 xxxx 010143000000 
010205 xxxx 010113000000 
010206 xxxx 010114000000 
010207 xxxx 000000024400         mvne	(),(),()	"edit the output
010210 xxxx 010113050014         desc4ls	errnum,12
010211 xxxx 010140000011         desc9a	eredit_d,9
010212 xxxx 010115020014         desc6a	errtemp,12
010213 xxxx 014531701000         call    ioa(msg2_c, errtemp, errtemp+1)
010214 xxxx 010221710000 
010215 xxxx 000000000000 
010216 xxxx 010161000000 
010217 xxxx 010115000000 
010220 xxxx 010116000000 
010221 xxxx 010245710000         tra     DTB0
010222 xxxx 000000000377 FLD1b:  dec     255     " 0 0 0 0 0 0 0 0 0 3 7 7
010223 xxxx 000000000000 FLD2b:  bss     1       " 0 0 0 0 6 5 0 6 5 0 5 3
010224 xxxx 060122145163 msg2b:  acc         "Result: ^n (^a) (Should be 000065065053 (55+))\r\n"
010225 xxxx 165154164072 
010226 xxxx 040136156040 
010227 xxxx 050136141051 
010230 xxxx 040050123150 
010231 xxxx 157165154144 
010232 xxxx 040142145040 
010233 xxxx 060060060060 
010234 xxxx 066065060066 
010235 xxxx 065060065063 
010236 xxxx 040050065065 
010237 xxxx 053051051015 
010240 xxxx 012040040040 
010241 xxxx 017104124102 DTBmsg:    acc         "DTB Tests ...\r\n"
010242 xxxx 040124145163 
010243 xxxx 164163040056 
010244 xxxx 056056015012 
010245 xxxx 014531701000 DTB0:   call    ioa(DTBmsg)
010246 xxxx 010251710000 
010247 xxxx 000000000000 
010250 xxxx 010241000000 
010251 xxxx 000000305400         DTB     (), ()
010252 xxxx 013531360005         NDSC4   FLD1c,3,5,2
010253 xxxx 013533000004         NDSC9   FLD2c,0,4
010254 xxxx 014531701000         call    ioa(msg3, FLD2c)
010255 xxxx 010261710000 
010256 xxxx 000000000000 
010257 xxxx 013466000000 
010260 xxxx 013533000000 
010261 xxxx 000000305400         DTB     (), ()
010262 xxxx 013534370003         NDSC4   FLD1d,3,3,3
010263 xxxx 013535400002         NDSC9   FLD2d,2,2
010264 xxxx 014531701000         call    ioa(msg4, FLD2d)
010265 xxxx 010271710000 
010266 xxxx 000000000000 
010267 xxxx 013500000000 
010270 xxxx 013535000000 
010271 xxxx 000000305400         DTB     (), ()
010272 xxxx 013536030004         NDSC9   FLD1e,0,4,3
010273 xxxx 013537600001         NDSC9   FLD2e,3,1
010274 xxxx 014531701000         call    ioa(msg5, FLD2e)
010275 xxxx 010301710000 
010276 xxxx 000000000000 
010277 xxxx 013512000000 
010300 xxxx 013537000000 
010301 xxxx 014531701000         call    ioa(MVNEmsg)
010302 xxxx 010305710000 
010303 xxxx 000000000000 
010304 xxxx 013524000000 
010305 xxxx 000000024400         MVNE    (),(),()
010306 xxxx 013603020012         NDSC9   FLD1f,0,10,2
010307 xxxx 013606000005         desc9a  FLD2f, 5
010310 xxxx 013620000014         desc9a  FLD3f, 12
010311 xxxx 014531701000         call    ioa(msg6, FLD3f, FLD3f+1, FLD3f+2)
010312 xxxx 010320710000 
010313 xxxx 000000000000 
010314 xxxx 013540000000 
010315 xxxx 013620000000 
010316 xxxx 013621000000 
010317 xxxx 013622000000 
010320 xxxx 000000024400         MVNE    (),(),()
010321 xxxx 013603020012         desc9ts FLD1f, 10
010322 xxxx 013610000016         desc9a  FLD2f1, 14
010323 xxxx 013623020014         desc6a  FLD3f1, 12      " 6-bit gebcd receiving string
010324 xxxx 014531701000         call    ioa(msg7, FLD3f1, FLD3f1+1)
010325 xxxx 010332710000 
010326 xxxx 000000000000 
010327 xxxx 013554000000 
010330 xxxx 013623000000 
010331 xxxx 013624000000 
010332 xxxx 000000024400         MVNE    (),(),()
010333 xxxx 013603020012         desc9ts FLD1f, 10
010334 xxxx 013614000016         desc9a  FLD2f2, 14      " play around with $ and -
010335 xxxx 013625000014         desc9a  FLD3f2, 12
010336 xxxx 014531701000         call    ioa(msg8, FLD3f2, FLD3f2+1, FLD3f2+2)
010337 xxxx 010345710000 
010340 xxxx 000000000000 
010341 xxxx 013567000000 
010342 xxxx 013625000000 
010343 xxxx 013626000000 
010344 xxxx 013627000000 
010345 xxxx 000000024400         MVNE    (), (), ()      " with (*) protection & (.) insertion
010346 xxxx 013644060010         NDSC4   FLD1g,0,8,2
010347 xxxx 013645000006         desc9a  FLD2g, 6
010350 xxxx 013647000014         desc9a  FLD3g,12
010351 xxxx 014531701000         call    ioa(msg9, FLD3g, FLD3g+1, FLD3g+2)
010352 xxxx 010360710000 
010353 xxxx 000000000000 
010354 xxxx 013630000000 
010355 xxxx 013647000000 
010356 xxxx 013650000000 
010357 xxxx 013651000000 
010360 xxxx 014531701000         call    ioa(MVEmsg)
010361 xxxx 010364710000 
010362 xxxx 000000000000 
010363 xxxx 013652000000 
010364 xxxx 000000020400         MVE    (), (), ()       " move alphanumeric edited
010365 xxxx 013677220024         desc6a   FLD1h(2),20
010366 xxxx 013703000031         desc9a   FLD2h,25       " example in DH02 had 35 - don't think so
010367 xxxx 013712020036         desc6a   FLD3h,30
010370 xxxx 014531701000         call    ioa(msg10, FLD3h, FLD3h+1, FLD3h+2, FLD3h+3, FLD3h+4) 
010371 xxxx 010401710000 
010372 xxxx 000000000000 
010373 xxxx 013656000000 
010374 xxxx 013712000000 
010375 xxxx 013713000000 
010376 xxxx 013714000000 
010377 xxxx 013715000000 
010400 xxxx 013716000000 
010401 xxxx 000000020400         MVE     (), (), ()      " move alphanumeric edited
010402 xxxx 013733000007         desc9a   FLD1i,7        " sending field operand descriptor
010403 xxxx 013735000006         desc9a   FLD2i,6        " micro-op string operand descriptor
010404 xxxx 013740200007         desc9a   FLD3i+1(1),7   " receiving field operand descriptor
010405 xxxx 014531701000         call    ioa(msg11, FLD3i, FLD3i+1, FLD3i+2) 
010406 xxxx 010414710000 
010407 xxxx 000000000000 
010410 xxxx 013717000000 
010411 xxxx 013737000000 
010412 xxxx 013740000000 
010413 xxxx 013741000000 
010414 xxxx 010436710000         tra MLR0
010415 xxxx 050122145163 msgMLR1:    acc     /Result: ^a^a^a (Should be 'QwErTyUiOp')\0xa/
010416 xxxx 165154164072 
010417 xxxx 040136141136 
010420 xxxx 141136141040 
010421 xxxx 050123150157 
010422 xxxx 165154144040 
010423 xxxx 142145040047 
010424 xxxx 121167105162 
010425 xxxx 124171125151 
010426 xxxx 117160047051 
010427 xxxx 012040040040 
010430 xxxx 047121167105 srcMLR1:    aci     /'QwErTyUiOp'/
010431 xxxx 162124171125 
010432 xxxx 151117160047 
010433 xxxx 000000000000 dstMLR1:    bss     3
010436 xxxx 014531701000 MLR0:   call    ioa(MLRmsg)
010437 xxxx 010442710000 
010440 xxxx 000000000000 
010441 xxxx 013742000000 
010442 xxxx 020000100400         MLR     (),(),fill(20)     " move with blank fill
010443 xxxx 013764020014         desc6a  FLD1j,12           " sending descriptor
010444 xxxx 013766420016         desc6a  FLD2j(4),14         " receiving descriptor
010445 xxxx 014531701000         call    ioa(msg12, FLD2j, FLD2j+1, FLD2j+2)
010446 xxxx 010454710000 
010447 xxxx 000000000000 
010450 xxxx 013747000000 
010451 xxxx 013766000000 
010452 xxxx 013767000000 
010453 xxxx 013770000000 
010454 xxxx 400000100400         MLR     (),(),fill(400)
010455 xxxx 014007320011         desc6a  FLD1k(3),9
010456 xxxx 014011640012         desc4a  FLD2k(6),10
010457 xxxx 014531701000         call    ioa(msg13, FLD2k, FLD2k+1)
010460 xxxx 010465710000 
010461 xxxx 000000000000 
010462 xxxx 013771000000 
010463 xxxx 014011000000 
010464 xxxx 014012000000 
010465 xxxx 000013223003         LDX3    =11, DU     " Original had DL which is wrong......
010466 xxxx 040000100413         MLR     (x3), (), fill(040)
010467 xxxx 014025200010         desc9a  FLD1l(1), 8
010470 xxxx 014033000010         desc9a  FLD2l, 8
010471 xxxx 014531701000         call    ioa(msg14, FLD2l, FLD2l+1)
010472 xxxx 010477710000 
010473 xxxx 000000000000 
010474 xxxx 014013000000 
010475 xxxx 014033000000 
010476 xxxx 014034000000 
010477 xxxx 000004235007         LDA     =4,DL
010500 xxxx 000003236007         LDQ     =3,DL
010501 xxxx 040006100405         MLR     (al),(ql), fill(040)
010502 xxxx 014051000003         desc9A  FLD1m, 3
010503 xxxx 014056400003         desc9a  FLD2m(2),3
010504 xxxx 014531701000         call    ioa(msg15, FLD2m, FLD2m+1, FLD2m+2)
010505 xxxx 010513710000 
010506 xxxx 000000000000 
010507 xxxx 014035000000 
010510 xxxx 014056000000 
010511 xxxx 014057000000 
010512 xxxx 014060000000 
010513 xxxx 015047762400         LAR2    =0              " SET AR2 TO ALL 0'S
010514 xxxx 014077623000         EAX3    FLD2n
010515 xxxx 200000507413         AWDX    pr2|0,3         " AR2=address of Y
010516 xxxx 040100100404         MLR     (IC),(pr),fill(040)
010517 xxxx 003355200006         desc9a  FLD1n-*+1(1),6      " was desc9a  5(1),6 ("call" takes up many words....)
010520 xxxx 200000000006         desc9a  pr2|0, 6
010521 xxxx 014531701000         call    ioa(msg16, FLD2n, FLD2n+1)
010522 xxxx 010527710000 
010523 xxxx 000000000000 
010524 xxxx 014061000000 
010525 xxxx 014077000000 
010526 xxxx 014100000000 
010527 xxxx 010430371400         epp5    srcMLR1
010530 xxxx 010433372000         epp6    dstMLR1
010531 xxxx 000014235007         lda     12,dl       " 12-bytes in message
010532 xxxx 000140100540         mlr     (pr,rl),(pr,rl)
010533 xxxx 500000000005         desc9a  pr5|0,al
010534 xxxx 600000000005         desc9a  pr6|0,al
010535 xxxx 014531701000         call    ioa(msgMLR1, dstMLR1, dstMLR1+1, dstMLR1+2)
010536 xxxx 010544710000 
010537 xxxx 000000000000 
010540 xxxx 010415000000 
010541 xxxx 010433000000 
010542 xxxx 010434000000 
010543 xxxx 010435000000 
010544 xxxx 014531701000         call    ioa(MRLmsg)
010545 xxxx 010550710000 
010546 xxxx 000000000000 
010547 xxxx 014101000000 
010550 xxxx 020000101400         MRL     (),(),fill(20)
010551 xxxx 014123020014         desc6a  FLD1o, 12            "ADSC6   FLD1,,12
010552 xxxx 014125420016         desc6a  FLD2o(4), 14         "ADSC6   FLD2,4,14
010553 xxxx 014531701000         call    ioa(msg17, FLD2o, FLD2o+1, FLD2o+2)
010554 xxxx 010562710000 
010555 xxxx 000000000000 
010556 xxxx 014106000000 
010557 xxxx 014125000000 
010560 xxxx 014126000000 
010561 xxxx 014127000000 
010562 xxxx 400000101400         MRL     (),(),fill(400)
010563 xxxx 014147320011         desc6a  FLD1p(3),9
010564 xxxx 014151440014         desc4a  FLD2p(4),12
010565 xxxx 014531701000         call    ioa(msg18, FLD2p, FLD2p+1)
010566 xxxx 010573710000 
010567 xxxx 000000000000 
010570 xxxx 014130000000 
010571 xxxx 014151000000 
010572 xxxx 014152000000 
010573 xxxx 011025710000         tra     MVT0
010574 xxxx 017115126124 MVTmsg: acc     /MVT Tests ...\r\n/ 
010575 xxxx 040124145163 
010576 xxxx 164163040056 
010577 xxxx 056056015012 
010600 xxxx 051122145163 msg19:  acc     /Result: '^n' (Should be '001043105155')\r\n/
010601 xxxx 165154164072 
010602 xxxx 040047136156 
010603 xxxx 047040050123 
010604 xxxx 150157165154 
010605 xxxx 144040142145 
010606 xxxx 040047060060 
010607 xxxx 061060064063 
010610 xxxx 061060065061 
010611 xxxx 065065047051 
010612 xxxx 015012040040 
010613 xxxx 202020202001 FLD1q:  bci     /     123456/
010614 xxxx 020304050620 
010615 xxxx 000000000000 FLD2q:  bss     1       " 0123456-      (Result)
010616 xxxx 000001002003 TABLE1: OCT     000001002003,004005006007  " 0X
010617 xxxx 004005006007 
010620 xxxx 010011017017         OCT     010011017017,017017017017  " 1X
010621 xxxx 017017017017 
010622 xxxx 000017017017         OCT     000017017017,017017017017  " 2X
010623 xxxx 017017017017 
010624 xxxx 017017017017         OCT     017017017017,017017017017  " 3X
010625 xxxx 017017017017 
010626 xxxx 017017017017         OCT     017017017017,017017017017  " 4X
010627 xxxx 017017017017 
010630 xxxx 017017015017         OCT     017017015017,017017017017  " 5X
010631 xxxx 017017017017 
010632 xxxx 014017017017         OCT     014017017017,017017017017  " 6X
010633 xxxx 017017017017 
010634 xxxx 017017017017         OCT     017017017017,017017017017  " 7X
010635 xxxx 017017017017 
010636 xxxx 051122145163 msg20:  acc     /Result: '^n' (Should be '022064126314')\r\n/
010637 xxxx 165154164072 
010640 xxxx 040047136156 
010641 xxxx 047040050123 
010642 xxxx 150157165154 
010643 xxxx 144040142145 
010644 xxxx 040047060062 
010645 xxxx 062060066064 
010646 xxxx 061062066063 
010647 xxxx 061064047051 
010650 xxxx 015012040040 
010651 xxxx 022064126317 FLD3q:  OCT     022064126317    " 123456++
010652 xxxx 000000000000 FLD4q:  BSS     1               " 022064126314  (Result)
010653 xxxx 000001002003 TAB:    OCT     000001002003,004005006007
010654 xxxx 004005006007 
010655 xxxx 010011014014         OCT     010011014014,014015014014
010656 xxxx 014015014014 
010657 xxxx 071122145163 msg21:  acc     "Result: '^a^a^a^a^a' (Should be 'TTYMESSAGE201     !!')\r\n"
010660 xxxx 165154164072 
010661 xxxx 040047136141 
010662 xxxx 136141136141 
010663 xxxx 136141136141 
010664 xxxx 047040050123 
010665 xxxx 150157165154 
010666 xxxx 144040142145 
010667 xxxx 040047124124 
010670 xxxx 131115105123 
010671 xxxx 123101107105 
010672 xxxx 062060061040 
010673 xxxx 040040040040 
010674 xxxx 041041047051 
010675 xxxx 015012040040 
010676 xxxx 636370442562 FLD1r:  BCI     /TTYMESSAGE201      /
010677 xxxx 622127250200 
010700 xxxx 012020202020 
010701 xxxx 202020202020 
010702 xxxx 000000000000 FLD2r:  BSS     5
010707 xxxx 060061062063 TABLE9: aci     '01234567'  " 0X
010710 xxxx 064065066067 
010711 xxxx 070071133043         aci     '89[#@:>?'  " 1X
010712 xxxx 100072076077 
010713 xxxx 040101102103         aci     ' ABCDEFG'  " 2X
010714 xxxx 104105106107 
010715 xxxx 110111046056         aci     'HI&.](<\'  " 3X
010716 xxxx 135050074107 
010717 xxxx 136112113114         aci     '^JKLMNOP'  " 4X
010720 xxxx 115116117120 
010721 xxxx 121122055044         aci     "QR-$*);'"  " 5X
010722 xxxx 052051073047 
010723 xxxx 054057123124         aci     ',/STUVWX'  " 6X 
010724 xxxx 125126127130 
010725 xxxx 131132137054         aci     'YZ_,%="!'  " 7X 
010726 xxxx 045075042041 
010727 xxxx 041122145163 msg22a: acc     /Result: '^a' (Should be '123M')\r\n/
010730 xxxx 165154164072 
010731 xxxx 040047136141 
010732 xxxx 047040050123 
010733 xxxx 150157165154 
010734 xxxx 144040142145 
010735 xxxx 040047061062 
010736 xxxx 063115047051 
010737 xxxx 015012040040 
010740 xxxx 041122145163 msg22b: acc     /Result: '^a' (Should be '1234')\r\n/
010741 xxxx 165154164072 
010742 xxxx 040047136141 
010743 xxxx 047040050123 
010744 xxxx 150157165154 
010745 xxxx 144040142145 
010746 xxxx 040047061062 
010747 xxxx 063064047051 
010750 xxxx 015012040040 
010751 xxxx 000015022064 P6a:    ac4     /   -1234/        "-1234 ——> 123M   (Yes, that's what it's supposed to be)
010752 xxxx 000013022064 P6b:    ac4     /   +1234/        "+1234 ——> 1234
010753 xxxx 323403000404 MOPS:   vfd     9/mvc+3,9/lte+3, o9/0, 9/lte+4  " MICROP  (MVC,3),(LTE,3)m1O000,(LTE,4),1O040,(MORS,1)
010754 xxxx 040361000000         vfd     o9/040, 9/mors+1
010755 xxxx 060061062063 TABLE22:aci     /01234567/        " 0X
010756 xxxx 064065066067 
010757 xxxx 070071000000         VFD     A18/89,18/0,36/0  " 1X
010760 xxxx 000000000000 
010761 xxxx 000000000000         OCT     0,0               " 2X
010762 xxxx 000000000000 
010763 xxxx 000000000000         OCT     0,0               " 3X
010764 xxxx 000000000000 
010765 xxxx 040112113114         ACI     / JKLMNOP/        " 4X
010766 xxxx 115116117120 
010767 xxxx 121122000000         VFD     A18/QR,18/0,36/0  " 5X
010770 xxxx 000000000000 
010771 xxxx 000000000000         OCT     0,0               " 6X
010772 xxxx 000000000000 
010773 xxxx 000000000000         OCT     0,0               " 7X
010774 xxxx 000000000000 
010775 xxxx 000000000000 PRTOUT: BSS     5
011002 xxxx 000000000000 APRINT: BSS     5
011007 xxxx 060061062063 DECTAB: aci     '0123456789+++-+F'  " decimal --> ascii
011010 xxxx 064065066067 
011011 xxxx 070071053053 
011012 xxxx 053055053106 
011013 xxxx 047122145163 msg23:  acc     /Result: '^a^a' (Should be '-1234FFF')\r\n/
011014 xxxx 165154164072 
011015 xxxx 040047136141 
011016 xxxx 136141047040 
011017 xxxx 050123150157 
011020 xxxx 165154144040 
011021 xxxx 142145040047 
011022 xxxx 055061062063 
011023 xxxx 064106106106 
011024 xxxx 047051015012 
011025 xxxx 014531701000         call    ioa(MVTmsg)
011026 xxxx 011031710000 
011027 xxxx 000000000000 
011030 xxxx 010574000000 
011031 xxxx 052000160400         MVT     (),(), fill(52)
011032 xxxx 010613420007         desc6a  FLD1q(4),7
011033 xxxx 010615040010         desc4a  FLD2q,8
011034 xxxx 010616000000         ARG     TABLE1
011035 xxxx 014531701000         call    ioa(msg19, FLD2q)
011036 xxxx 011042710000 
011037 xxxx 000000000000 
011040 xxxx 010600000000 
011041 xxxx 010615000000 
011042 xxxx 000000160400         MVT (), ()
011043 xxxx 010651040010         desc4a  FLD3q, 8     " ADSC4   FLD3,,8
011044 xxxx 010652040010         desc4a  FLD4q, 8     " ADSC4   FLD4,,8
011045 xxxx 010653000000         ARG     TAB
011046 xxxx 014531701000         call    ioa(msg20, FLD4q)
011047 xxxx 011053710000 
011050 xxxx 000000000000 
011051 xxxx 010636000000 
011052 xxxx 010652000000 
011053 xxxx 077000160400         MVT     (), (),  fill(77)    " ! fill
011054 xxxx 010676020022         desc6a  FLD1r, 18           " ADSC6   FLD1,0,18
011055 xxxx 010702000024         desc9a  FLD2r, 20           " ADSC9   FLD2,0,20
011056 xxxx 010707000000         ARG     TABLE9              " pointer to translation table
011057 xxxx 014531701000         call     ioa(msg21, FLD2r, FLD2r+1, FLD2r+2, FLD2r+3, FLD2r+4)
011060 xxxx 011070710000 
011061 xxxx 000000000000 
011062 xxxx 010657000000 
011063 xxxx 010702000000 
011064 xxxx 010703000000 
011065 xxxx 010704000000 
011066 xxxx 010705000000 
011067 xxxx 010706000000 
011070 xxxx 000000024400         MVNE     (), (), ()
011071 xxxx 010751350005         desc4ls  P6a(3),5    " NDSC4   6PACK,3,5,1
011072 xxxx 010753000006         desc9a   MOPS, 6     " ADSC9   MOPS,0,6
011073 xxxx 010775020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
011074 xxxx 000000160400         MVT      (), ()
011075 xxxx 010775020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
011076 xxxx 011002000004         desc9a   APRINT, 4   " ADSC9   APRINT,0,4
011077 xxxx 010755000000         ARG      TABLE22
011100 xxxx 014531701000         call    ioa(msg22a, APRINT)
011101 xxxx 011105710000 
011102 xxxx 000000000000 
011103 xxxx 010727000000 
011104 xxxx 011002000000 
011105 xxxx 000000024400         MVNE     (), (), ()
011106 xxxx 010752350005         desc4ls  P6b(3),5      " NDSC4   6PACK,3,5,1
011107 xxxx 010753000006         desc9a   MOPS, 6       " ADSC9   MOPS,0,6
011110 xxxx 010775020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
011111 xxxx 000000160400         MVT      (), ()
011112 xxxx 010775020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
011113 xxxx 011003000004         desc9a   APRINT+1, 4   " ADSC9   APRINT,0,4
011114 xxxx 010755000000         ARG      TABLE22
011115 xxxx 014531701000         call    ioa(msg22b, APRINT+1)
011116 xxxx 011122710000 
011117 xxxx 000000000000 
011120 xxxx 010740000000 
011121 xxxx 011003000000 
011122 xxxx 017000160400         MVT      (), (),  fill(017)
011123 xxxx 010751340005         desc4a   P6a(3), 5
011124 xxxx 011002000010         desc9a   APRINT, 8
011125 xxxx 011007000000         ARG      DECTAB
011126 xxxx 014531701000         call    ioa(msg23, APRINT, APRINT+1)
011127 xxxx 011134710000 
011130 xxxx 000000000000 
011131 xxxx 011013000000 
011132 xxxx 011002000000 
011133 xxxx 011003000000 
011134 xxxx 011330710000         tra     SCM0
011135 xxxx 042123103115 SCMmsg: acc     /SCM Tests ... (Results 3, 0 & 7)\r\n/
011136 xxxx 040124145163 
011137 xxxx 164163040056 
011140 xxxx 056056040050 
011141 xxxx 122145163165 
011142 xxxx 154164163040 
011143 xxxx 063054040060 
011144 xxxx 040046040067 
011145 xxxx 051015012040 
011146 xxxx 035131157165 BADmsg: acc     /You should not see this....\r\n/
011147 xxxx 040163150157 
011150 xxxx 165154144040 
011151 xxxx 156157164040 
011152 xxxx 163145145040 
011153 xxxx 164150151163 
011154 xxxx 056056056056 
011155 xxxx 015012040040 
011156 xxxx 014122145163 msg24:  acc     /Result: ^d\r\n/
011157 xxxx 165154164072 
011160 xxxx 040136144015 
011161 xxxx 012040040040 
011162 xxxx 101102103104 FLD1s:  aci      /ABCD/     "141 142 143 144 (before mask)
011163 xxxx 060060060064 FLD2s:  aci      /0004/     "064 (before mask)
011164 xxxx 000000000000 FLD3s:  BSS      1          "004 (after mask)
011165 xxxx 000015022064 FLD1t:   ac4     /   -1234/         "EDEC     8P-1234   "0,1,2,3,4      -- which one do we believe?
011166 xxxx 000000000000 FLD3t:   BSS     1
011167 xxxx 103041000000 FLD1u:  ac4  /4321    /     " EDEC  8PL4321  " 2 1
011170 xxxx 000000011207 FLD2u:  ac4  /    0987/     " EDEC  4P0987   " 1
011171 xxxx 000000000000 FLD3u:  BSS  1              " unmatched compare count - 1
011172 xxxx 400000040012 INDSC1u: desc4a  pr4|0, x2      "ADSC4 0,,X2,4    " FLD1 operand desc (FLD1,2,2)
011173 xxxx 011170400001 INDSC2u: desc9a  FLD2u(2),1       "ADSC9 FLD2,0     " FLD2 operand desc (FLD2,1)
011174 xxxx 022106157165 foundA: acc "Found an 'A' ...\r\n"
011175 xxxx 156144040141 
011176 xxxx 156040047101 
011177 xxxx 047040056056 
011200 xxxx 056015012040 
011201 xxxx 021106157165 foundG: acc "Found a 'G' ...\r\n"
011202 xxxx 156144040141 
011203 xxxx 040047107047 
011204 xxxx 040056056056 
011205 xxxx 015012040040 
011206 xxxx 021106157165 foundw: acc "Found a 'w' ...\r\n"
011207 xxxx 156144040141 
011210 xxxx 040047167047 
011211 xxxx 040056056056 
011212 xxxx 015012040040 
011213 xxxx 022106157165 foundo: acc "Found an 'o' ...\r\n"
011214 xxxx 156144040141 
011215 xxxx 156040047157 
011216 xxxx 047040056056 
011217 xxxx 056015012040 
011220 xxxx 021106157165 foundn: acc "Found a 'n' ...\r\n"
011221 xxxx 156144040141 
011222 xxxx 040047156047 
011223 xxxx 040056056056 
011224 xxxx 015012040040 
011225 xxxx 021106157165 foundd: acc "Found a 'd' ...\r\n"
011226 xxxx 156144040141 
011227 xxxx 040047144047 
011230 xxxx 040056056056 
011231 xxxx 015012040040 
011232 xxxx 022106157165 founda: acc "Found an 'a' ...\r\n"
011233 xxxx 156144040141 
011234 xxxx 156040047141 
011235 xxxx 047040056056 
011236 xxxx 056015012040 
011237 xxxx 021106157165 foundg: acc "Found a 'g' ...\r\n"
011240 xxxx 156144040141 
011241 xxxx 040047147047 
011242 xxxx 040056056056 
011243 xxxx 015012040040 
011244 xxxx 130130147130 SCM4in: aci     "XXgX"
011245 xxxx 000000000000 SCM4tally:  bss 1
011246 xxxx 101107167157 erkey:  aci     "AGwondag"
011247 xxxx 156144141147 
011250 xxxx 011260710000 ertable:tra     err_A
011251 xxxx 011265710000         tra     err_G
011252 xxxx 011272710000         tra     err_w
011253 xxxx 011277710000         tra     err_o
011254 xxxx 011304710000         tra     err_n
011255 xxxx 011311710000         tra     err_d
011256 xxxx 011316710000         tra     err_a
011257 xxxx 011323710000         tra     err_g
011260 xxxx 014531701000 err_A:  call    ioa(foundA)
011261 xxxx 011264710000 
011262 xxxx 000000000000 
011263 xxxx 011174000000 
011264 xxxx 011401710000         tra     SCM4
011265 xxxx 014531701000 err_G:  call    ioa(foundG)
011266 xxxx 011271710000 
011267 xxxx 000000000000 
011270 xxxx 011201000000 
011271 xxxx 011401710000         tra     SCM4
011272 xxxx 014531701000 err_w:  call    ioa(foundw)
011273 xxxx 011276710000 
011274 xxxx 000000000000 
011275 xxxx 011206000000 
011276 xxxx 011401710000         tra     SCM4
011277 xxxx 014531701000 err_o:  call    ioa(foundo)
011300 xxxx 011303710000 
011301 xxxx 000000000000 
011302 xxxx 011213000000 
011303 xxxx 011401710000         tra     SCM4
011304 xxxx 014531701000 err_n:  call    ioa(foundn)
011305 xxxx 011310710000 
011306 xxxx 000000000000 
011307 xxxx 011220000000 
011310 xxxx 011401710000         tra     SCM4
011311 xxxx 014531701000 err_d:  call    ioa(foundd)
011312 xxxx 011315710000 
011313 xxxx 000000000000 
011314 xxxx 011225000000 
011315 xxxx 011401710000         tra     SCM4
011316 xxxx 014531701000 err_a:  call    ioa(founda)
011317 xxxx 011322710000 
011320 xxxx 000000000000 
011321 xxxx 011232000000 
011322 xxxx 011401710000         tra     SCM4
011323 xxxx 014531701000 err_g:  call    ioa(foundg)
011324 xxxx 011327710000 
011325 xxxx 000000000000 
011326 xxxx 011237000000 
011327 xxxx 011401710000         tra     SCM4
011330 xxxx 014531701000         call    ioa(SCMmsg)
011331 xxxx 011334710000 
011332 xxxx 000000000000 
011333 xxxx 011135000000 
011334 xxxx 760000124400         SCM     (),(), mask(760) "mask to eliminate zone bits
011335 xxxx 011162000004         desc9a  FLD1s,4         "character string operand desc
011336 xxxx 011163600000         desc9a  FLD2s(3),0      "compare character operand desc
011337 xxxx 011164000000         ARG     FLD3s           "pointer to unmatched count word
011340 xxxx 011346607000         TTF     GOT.IT          "match found - on 4th character
011341 xxxx 014531701000 NO.GOT: call    ioa(BADmsg)     "no match -  tally runout ON
011342 xxxx 011345710000 
011343 xxxx 000000000000 
011344 xxxx 011146000000 
011345 xxxx 000000616000         dis
011346 xxxx 014531701000 GOT.IT: call    ioa(msg24, FLD3s)
011347 xxxx 011353710000 
011350 xxxx 000000000000 
011351 xxxx 011156000000 
011352 xxxx 011164000000 
011353 xxxx 000003124400         SCM      (),(DU)
011354 xxxx 011165340005         desc4a   FLD1t(3),5      "ADSC4    FLD1,3,5
011355 xxxx 321000000000         ac4      /-1      /      "EDEC     8PL-1
011356 xxxx 011166000000         ARG      FLD3t
011357 xxxx 011341606400         TTN      NO.GOT
011360 xxxx 014531701000         call    ioa(msg24, FLD3t)
011361 xxxx 011365710000 
011362 xxxx 000000000000 
011363 xxxx 011156000000 
011364 xxxx 011166000000 
011365 xxxx 000000124400         scm     (),()           "search table of keys
011366 xxxx 011246000010         desc9a	erkey,8
011367 xxxx 011244400001         desc9a  SCM4in(2),1
011370 xxxx 011245000000         arg     SCM4tally
011371 xxxx 011341606400         ttn     NO.GOT          "tra if not legal key
011372 xxxx 014531701000         call    ioa (msg24, SCM4tally)
011373 xxxx 011377710000 
011374 xxxx 000000000000 
011375 xxxx 011156000000 
011376 xxxx 011245000000 
011377 xxxx 011245236000         ldq     SCM4tally		" get character key index
011400 xxxx 011250710026         tra     ertable,ql* " dispatch on key
011401 xxxx 011420710000         tra     SCMR0
011402 xxxx 037123103115 SCMRmsg: acc     /SCMR Tests (Results 3 & 4)...\r\n/
011403 xxxx 122040124145 
011404 xxxx 163164163040 
011405 xxxx 050122145163 
011406 xxxx 165154164163 
011407 xxxx 040063040046 
011410 xxxx 040064051056 
011411 xxxx 056056015012 
011412 xxxx 145103041320 FLD1v:   ac4     /654321- /       " EDEC      8PL654321-   6, 5, 4, 3, 2, 1
011413 xxxx 000000000000 FLD3v:   DEC     0                " result - match found on 4th character
011414 xxxx 001043105155 FLD1w:  ac4      /0123456-/         " 2,3,4,5,6,-
011415 xxxx 000000000000 FLD3w:  DEC      0                  " unmatched compare count - 4
011416 xxxx 400000040016         desc4a   pr4|0,x6           " FLD1 operand desc(FLD 1,2,6)
011417 xxxx 060000000000 FLD2w:  ac4      /3       /         " FLD2 compare character 3
011420 xxxx 014531701000         call    ioa(SCMRmsg)
011421 xxxx 011424710000 
011422 xxxx 000000000000 
011423 xxxx 011402000000 
011424 xxxx 760003125400         SCMR    (),(DU), mask(760)     " DU type register mod with mask
011425 xxxx 011412040006         desc4a  FLD1v, 6               " character string operand desc
011426 xxxx 100000000000         ac4     /4       /             " 1P4 FLD2's compare character - 4
011427 xxxx 011413000000         ARG     FLD3v                  " pointer to unmatched count word
011430 xxxx 011341606400         TTN     NO.GOT
011431 xxxx 014531701000         call    ioa (msg24, FLD3v)
011432 xxxx 011436710000 
011433 xxxx 000000000000 
011434 xxxx 011156000000 
011435 xxxx 011413000000 
011436 xxxx 000006626000         EAX6     6                  " load FLD1 length (-2) into x6
011437 xxxx 000002622000         EAX2     2                  " load character modifier into x2
011440 xxxx 011414624000         EAX4     FLD1w              " load FLD1 address into x4
011441 xxxx 400000507414         AWDX     pr4|0,4            " put FLD1 address into AR4
011442 xxxx 760000125572         SCMR     (pr,rl,id,x2),(), mask(760)        " with all options
011443 xxxx 011416000000         ARG      FLD3w+1            " pointer to FLD1 indirect desc
011444 xxxx 011417040000         desc4a   FLD2w              " pointer to compare character
011445 xxxx 011415000000         ARG      FLD3w              " pointer to unmatched count word
011446 xxxx 011341606400         TTN      NO.GOT             " no match - tally runout ON
011447 xxxx 014531701000         call    ioa (msg24, FLD3w)
011450 xxxx 011454710000 
011451 xxxx 000000000000 
011452 xxxx 011156000000 
011453 xxxx 011415000000 
011454 xxxx 014531701000         call    ioa(TCTmsg)
011455 xxxx 011460710000 
011456 xxxx 000000000000 
011457 xxxx 014153000000 
011460 xxxx 000000164400         TCT      ()         "     no modification
011461 xxxx 014175020014         desc6a   FLD1x,12   " indexing string operand descr.
011462 xxxx 014200000000         ARG      TABLEx     " pointer to table
011463 xxxx 014177000000         ARG      FLD3x      " pointer to char. & count word
011464 xxxx 011341606400         TTN     NO.GOT
011465 xxxx 014531701000         call    ioa (msg24o, FLD3x)
011466 xxxx 011472710000 
011467 xxxx 000000000000 
011470 xxxx 014171000000 
011471 xxxx 014177000000 
011472 xxxx 000002622000         EAX2     2           " put 2 into X2
011473 xxxx 014205623000         EAX3     FLD1y       " put FLD1 address into X3
011474 xxxx 000006626000         EAX6     6           " put 6 into X6
011475 xxxx 700000507413         AWDX     pr7|0,3     " put FLD1 address into AR7
011476 xxxx 000000164572         TCT      (pr,rl,id,x2)   " with all modification options
011477 xxxx 014210000000         ARG      INDSCRy     " ptr. indirect operand descr.
011500 xxxx 014211000000         ARG      TABLEy
011501 xxxx 014207000000         ARG      FLD3y       " pointer to FLD3
011502 xxxx 011341606400         TTN     NO.GOT
011503 xxxx 014531701000         call    ioa (msg24o, FLD3y)
011504 xxxx 011510710000 
011505 xxxx 000000000000 
011506 xxxx 014171000000 
011507 xxxx 014207000000 
011510 xxxx 014531701000         call    ioa(TCTRmsg)
011511 xxxx 011514710000 
011512 xxxx 000000000000 
011513 xxxx 014230000000 
011514 xxxx 000000165400         TCTR                " no modification
011515 xxxx 014242640012         desc4a  FLD1z(6),10 " indexing string operand descr
011516 xxxx 014245000000         ARG     TABLEz      " pointer to table
011517 xxxx 014244000000         ARG     FLD3z       " pointer to char. & count word
011520 xxxx 011341607000         TTF     NO.GOT      " nonzero found
011521 xxxx 014531701000         call    ioa (msg24o, FLD3z)
011522 xxxx 011526710000 
011523 xxxx 000000000000 
011524 xxxx 014171000000 
011525 xxxx 014244000000 
011526 xxxx 014531701000         call    ioa (CMPCmsg)
011527 xxxx 011532710000 
011530 xxxx 000000000000 
011531 xxxx 014251000000 
011532 xxxx 020000106400         CMPC    (), (), fill(020)       " compare with blank fill
011533 xxxx 014263020006         desc6a  FLD1aa,6    " field 1 operand descriptor
011534 xxxx 014264420004         desc6a  FLD2aa(4),4 " field 2 operand descriptor
011535 xxxx 011540600000         TZE     EQUALaa     " both fields equal
011536 xxxx 011341603000         TRC     NO.GOT      " field 1 greater
011537 xxxx 011341710000         TRA     NO.GOT      " field 1 less
011540 xxxx 014531701000 EQUALaa:call    ioa(msg25)
011541 xxxx 011544710000 
011542 xxxx 000000000000 
011543 xxxx 014256000000 
011544 xxxx 011554710000         TRA     SCD0
011545 xxxx 032123103104 SCDmsg:    acc     "SCD Tests ... 5, 16, & 3\r\n"
011546 xxxx 040124145163 
011547 xxxx 164163040056 
011550 xxxx 056056040065 
011551 xxxx 054040061066 
011552 xxxx 054040046040 
011553 xxxx 063015012040 
011554 xxxx 014531701000         call    ioa (SCDmsg)
011555 xxxx 011560710000 
011556 xxxx 000000000000 
011557 xxxx 011545000000 
011560 xxxx 000000120400         SCD
011561 xxxx 011573020006         desc6a   FLD1ab,6
011562 xxxx 011574320000         desc6a   FLD2ab(3)
011563 xxxx 011575000000         ZERO     FLD3ab
011564 xxxx 011341607000         TTF      NO.GOT     " If we get a match
011565 xxxx 014531701000         call    ioa (msg24o, FLD3ab)
011566 xxxx 011572710000 
011567 xxxx 000000000000 
011570 xxxx 014171000000 
011571 xxxx 011575000000 
011572 xxxx 011576710000         TRA     NEXT
011573 xxxx 010203040506 FLD1ab:  BCI      /123456/    " 123456
011574 xxxx 060504030201 FLD2ab:  BCI      /654321/    " 32
011575 xxxx 000000000000 FLD3ab:  BSS      1           " unmatched count - 5
011576 xxxx 000000120400        SCD                 "with no options
011577 xxxx 014266020030        desc6a  DATA,24     "24 characters fetched from lower
011600 xxxx 014273020002        desc6a  COMP,2      "DATA in units of 2 chars. and
011601 xxxx 014272000000        ARG     COUNT       "compared with HH when HH found in
011602 xxxx 011341606400        TTN     NO.GOT      " no match found
011603 xxxx 014531701000        call    ioa (msg24o, COUNT)
011604 xxxx 011610710000 
011605 xxxx 000000000000 
011606 xxxx 014171000000 
011607 xxxx 014272000000 
011610 xxxx 000005625000        EAX5     5        " load 5 into X5
011611 xxxx 000007627000        EAX7     7        " load 7 into X7
011612 xxxx 014274624000        EAX4     FLD1ad   " load FLD1 address into X4
011613 xxxx 400000507414        AWDX     pr4|0,4  " put FLD1 address into AR4
011614 xxxx 000003120555        SCD      (pr,rl,x5),(DU)
011615 xxxx 400000000017        desc9a   pr4|0,X7 " FLD1 operand pointer (FLD1+1,1,7)
011616 xxxx 064065000000 FLD2ad:VFD      A18/45    " FLD2 operand  " ahould be A18
011617 xxxx 014277000000        ARG      FLD3ad   " pointer to count FLD3
011620 xxxx 011341606400        TTN      NO.GOT
011621 xxxx 014531701000        call    ioa (msg24o, FLD3ad)
011622 xxxx 011626710000 
011623 xxxx 000000000000 
011624 xxxx 014171000000 
011625 xxxx 014277000000 
011626 xxxx 011635710000         tra     SCDR0
011627 xxxx 026123103104 SCDRmsg:    acc     "SCDR Tests ... 6 & 3\r\n"
011630 xxxx 122040124145 
011631 xxxx 163164163040 
011632 xxxx 056056056040 
011633 xxxx 066040046040 
011634 xxxx 063015012040 
011635 xxxx 014531701000        call    ioa(SCDRmsg)
011636 xxxx 011641710000 
011637 xxxx 000000000000 
011640 xxxx 011627000000 
011641 xxxx 000003121400        SCDR     (),(DU)       " DU modification of FLD2 operand descriptor
011642 xxxx 011654000010        desc9a   FLD1ae,8      " scanned string operand descriptor
011643 xxxx 101102000000        VFD      A18/AB         " FLD2 character pair - A B
011644 xxxx 011656000000        ARG      FLD3ae        " pointer count word
011645 xxxx 011341606400        TTN      NO.GOT        " match not found - tally runout ON
011646 xxxx 014531701000        call    ioa (msg24o, FLD3ae)
011647 xxxx 011653710000 
011650 xxxx 000000000000 
011651 xxxx 014171000000 
011652 xxxx 011656000000 
011653 xxxx 011657710000         tra    SCDR2
011654 xxxx 101102103104 FLD1ae:aci      /ABCDE/       " A,B,C,D,E,
011655 xxxx 105000000000 
011656 xxxx 000000000000 FLD3ae:BSS      1             " unmatched count - 6
011657 xxxx 000001622000        EAX2     1           " load 1 into x2
011660 xxxx 011675623000        EAX3     FLD1af      " load FLD1 address into X3
011661 xxxx 400000507413        AWDX     PR4|0,3     " put FLD1 address into AR4
011662 xxxx 000003121512        SCDR     (pr,x2),(DU) " with address modification
011663 xxxx 400000040007        desc4a   pr4|0,7     " FLD1 operand descriptor - (FLD 1,1,7) (7 is length not x7)
011664 xxxx 043000000000        ac4      /23/        " FLD2 operand descriptor pointer
011665 xxxx 011676000000        ARG      FLD3af      " pointer to count word
011666 xxxx 011341606400        TTN      NO.GOT      " no match - tally runout ON
011667 xxxx 014531701000        call    ioa (msg24o, FLD3af)
011670 xxxx 011674710000 
011671 xxxx 000000000000 
011672 xxxx 014171000000 
011673 xxxx 011676000000 
011674 xxxx 011677710000        tra     CMPB0
011675 xxxx 000022064126 FLD1af:ac4      /  123456/    " 0123456 VS 23
011676 xxxx 000000000000 FLD3af:BSS      1             " unmatched count - 3
011677 xxxx 014531701000 CMPB0:  call    ioa(CMPBmsg)
011700 xxxx 011703710000 
011701 xxxx 000000000000 
011702 xxxx 014300000000 
011703 xxxx 400000066400 CMPB1:  CMPB    (),(),fill(1)       " fill bit 1 option
011704 xxxx 011710000055         descb   FLD1ag, 45
011705 xxxx 011712000060         descb   FLD2ag,48
011706 xxxx 011714603000         TRC     EQU.GR              " FLD1 equal/greater than FLD2
011707 xxxx 011341710000         TRA     NO.GOT
011710 xxxx 000000000000 FLD1ag: OCT     0,777700000000      " 0000000000007777
011711 xxxx 777700000000 
011712 xxxx 000000000000 FLD2ag: OCT     0,777000000000      " 0000000000007770
011713 xxxx 777000000000 
011714 xxxx 014531701000 EQU.GR: call ioa(msg26)
011715 xxxx 011720710000 
011716 xxxx 000000000000 
011717 xxxx 014305000000 
011720 xxxx 000000066400 CMPB2:  CMPB                        " no options
011721 xxxx 011726000044         descb   FLD1ah, 36
011722 xxxx 011727230023         descb   FLD2ah(12), 19
011723 xxxx 011341600000         TZE     NO.GOT              " FLD1 = FLD2
011724 xxxx 011341603000         TRC     NO.GOT              " FLD1 > FLD2
011725 xxxx 011730710000         TRA     FLD1LS              " FLD1 < FLD2
011726 xxxx 777777000000 FLD1ah: VFD     18/-1               " 777777000000
011727 xxxx 000077777740 FLD2ah: VFD     12/0,19/-1          " 777777400000
011730 xxxx 014531701000 FLD1LS: call ioa(msg27)
011731 xxxx 011734710000 
011732 xxxx 000000000000 
011733 xxxx 014312000000 
011734 xxxx 000014622000         EAX2    12          " load FLD1 bit modifier into X2
011735 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
011736 xxxx 011745624000         EAX4    FLD1ai      " load FLD1 address into X4
011737 xxxx 400000507414         AWDX    4|0,4       " put FLD1 address into AR4
011740 xxxx 000020066552         CMPB    (pr,rl,x2),(id)
011741 xxxx 400000000016         descb   pr4|0,x6  " FLD1 operand descriptor
011742 xxxx 011747000000         ARG     INDSCR      " FLD2 indirect descriptor ptr.
011743 xxxx 011750600000         TZE     EQUAL       " FLD1 = FLD2
011744 xxxx 011341710000         TRA     NO.GOT
011745 xxxx 000001000000 FLD1ai: VFD     12/0,6/1   " 770 000077000000 [sic]
011746 xxxx 000000000100 FLD2ai: VFD     24/0,6/1   " 770 000000007700 [sic]
011747 xxxx 011746460011 INDSCR: BDSC    FLD2ai,9,2,6
011750 xxxx 014531701000 EQUAL:  call     ioa(msg28)
011751 xxxx 011754710000 
011752 xxxx 000000000000 
011753 xxxx 014317000000 
011754 xxxx 011761710000         tra     CSL0
011755 xxxx 017103123114 CSLmsg:    acc     "CSL Tests ...\r\n"
011756 xxxx 040124145163 
011757 xxxx 164163040056 
011760 xxxx 056056015012 
011761 xxxx 014531701000          call    ioa(CSLmsg)
011762 xxxx 011765710000 
011763 xxxx 000000000000 
011764 xxxx 011755000000 
011765 xxxx 007000060400         CSL     (),(),bool(07)  ",enablefault " OR - truncation enable option
011766 xxxx 011776230030         descb   FLD1aj(12), 24      " FLD1 operand descriptor
011767 xxxx 011777000022         descb   FLD2aj, 18          " FLD2 operand descriptor
011770 xxxx 014531701000         call    ioa (msg24o, FLD2aj)
011771 xxxx 011775710000 
011772 xxxx 000000000000 
011773 xxxx 014171000000 
011774 xxxx 011777000000 
011775 xxxx 012000710000         tra     CSL2
011776 xxxx 000077777700 FLD1aj: VFD      12/0,18/-1,6/0     " 000077777700
011777 xxxx 000000235012 FLD2aj: LDA      0,2                " 000000235012
012000 xxxx 406000060400         CSL     (),(),bool(06),fill(1)      " exclusive OR, fill bit 1 opt
012001 xxxx 000000000000         descb   0, 0         " FLD1 operand descriptor (0-length field)
012002 xxxx 012011400022         descb   FLD2ak(18),18  " FLD2 operand descriptor
012003 xxxx 014531701000         call    ioa (msg24o, FLD2ak)
012004 xxxx 012010710000 
012005 xxxx 000000000000 
012006 xxxx 014171000000 
012007 xxxx 012011000000 
012010 xxxx 012012710000         tra     CSL3
012011 xxxx 000000000000 FLD2ak: DEC     0           " 000000000000
012012 xxxx 000014626000         EAX6    12              " char/bit address mod to X6
012013 xxxx 000066627000         EAX7    54              " load FLD2 length into X7
012014 xxxx 012034624000         EAX4    FLD2al          " load FLD2 address into X4
012015 xxxx 400000507414         AWDX    pr4|0,4         " put FLD2 address into AR4
012016 xxxx 000156060420         CSL     (id),(ar,rl,x6) " clear operation with address modifications
012017 xxxx 000002000014         ARG     2,4             " pointer to FLD1 indirect operand descriptor
012020 xxxx 400000000017         descb   pr4|0, x7       " FLD2 operand descriptor (FLD2,54,1,3)
012021 xxxx 014531701000         call    ioa (msg24o, FLD2al)
012022 xxxx 012026710000 
012023 xxxx 000000000000 
012024 xxxx 014171000000 
012025 xxxx 012034000000 
012026 xxxx 014531701000         call    ioa (msg24o, FLD2al+1)
012027 xxxx 012033710000 
012030 xxxx 000000000000 
012031 xxxx 014171000000 
012032 xxxx 012035000000 
012033 xxxx 012043710000         tra     CSR0
012034 xxxx 777777777777 FLD2al: VFD      36/-1,36/-1    " 777777777777
012035 xxxx 777777777777 
012036 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor (control field zeros)
012037 xxxx 017103123122 CSRmsg: acc     "CSR Tests ...\r\n"
012040 xxxx 040124145163 
012041 xxxx 164163040056 
012042 xxxx 056056015012 
012043 xxxx 014531701000         call    ioa(CSRmsg)
012044 xxxx 012047710000 
012045 xxxx 000000000000 
012046 xxxx 012037000000 
012047 xxxx 014000061400         CSR     (),(),bool(14)",enablefault  " invert with truncation fault enable option
012050 xxxx 012060400022         descb   FLD1am(18),18   " FLD1 operand descriptor
012051 xxxx 012061000014         descb   FLD2am,12       " FLD2 operand descriptor
012052 xxxx 014531701000         call    ioa(msg24o, FLD2am)
012053 xxxx 012057710000 
012054 xxxx 000000000000 
012055 xxxx 014171000000 
012056 xxxx 012061000000 
012057 xxxx 012062710000         tra     CSR2
012060 xxxx 000000444444 FLD1am: OCT     444444          " 000000444444
012061 xxxx 000000000000 FLD2am: DEC     0               " 333300000000  (Result)
012062 xxxx 017000061400         CSR     (),(),bool(17)  " force ones operation
012063 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor
012064 xxxx 012073000044         BDSC    FLD2an,36,0,0   " FLD2 operand descriptor
012065 xxxx 014531701000         call    ioa(msg24o, FLD2an)
012066 xxxx 012072710000 
012067 xxxx 000000000000 
012070 xxxx 014171000000 
012071 xxxx 012073000000 
012072 xxxx 012107710000         tra     SZTL0
012073 xxxx 000000000000 FLD2an: BSS     1               " 777777777777   (Result)
012074 xxxx 020123132124 SZTLmsg:   acc  "SZTL Tests ...\r\n"
012075 xxxx 114040124145 
012076 xxxx 163164163040 
012077 xxxx 056056056015 
012100 xxxx 012040040040 
012101 xxxx 013061056040 msg29:     acc  "1. Passed\r\n"
012102 xxxx 120141163163 
012103 xxxx 145144015012 
012104 xxxx 013062056040 msg30:     acc  "2. Passed\r\n"
012105 xxxx 120141163163 
012106 xxxx 145144015012 
012107 xxxx 014531701000        call     ioa(SZTLmsg)
012110 xxxx 012113710000 
012111 xxxx 000000000000 
012112 xxxx 012074000000 
012113 xxxx 006000064400         SZTL     (),(),bool(6)   " exclusive OR operation
012114 xxxx 012121000044         BDSC     FLD1ao,36,0,0   " FLD1 operand descriptor
012115 xxxx 012122010043         BDSC     FLD2ao,35,0,1   " FLD2 operand descriptor
012116 xxxx 011341601000         TNZ      NO.GOT          " zero should be ON
012117 xxxx 012123600400         TRTN     SZTL1b          " truncation indicator ON
012120 xxxx 011341710000         TRA      NO.GOT          " memory contents in octal
012121 xxxx 777777777777 FLD1ao: DEC      -1              " 777777777777
012122 xxxx 777777777777 FLD2ao: DEC      -1              " 777777777777
012123 xxxx 014531701000         call    ioa(msg29)
012124 xxxx 012127710000 
012125 xxxx 000000000000 
012126 xxxx 012101000000 
012127 xxxx 000000634007        LDI      0,DL        
012130 xxxx 777777227003        LDX7     -1,DU           " load negative value into X7
012131 xxxx 012137754000        STI      FLD1ap          " store processor indicators
012132 xxxx 001000064400        SZTL     (),(),bool(1)   " AND operation
012133 xxxx 012137410001        descb    FLD1ap(19),1    " FLD1 operand descriptor
012134 xxxx 012140410001        descb    FLD2ap(19),1    " FLD2 operand descriptor
012135 xxxx 011341600000        TZE      NO.GOT          " If ZERO is ON then this is an error. not zero - neg indicator ON
012136 xxxx 012141710000        TRA      SZTL2b          " memory contents in octal
012137 xxxx 000000000000 FLD1ap:BSS      1               " x x x x x x 2 0 0 0 0 0
012140 xxxx 000000200000 FLD2ap:oct      200000          " 0 0 0 0 0 0 2 0 0 0 0 0
012141 xxxx 014531701000         call    ioa(msg30)
012142 xxxx 012145710000 
012143 xxxx 000000000000 
012144 xxxx 012104000000 
012145 xxxx 010025634000 	ldi	ovr_mask
012146 xxxx 012162710000         tra     SZTR0
012147 xxxx 021123132124 SCTRmsg: acc    "SZTR Tests ....\r\n"
012150 xxxx 122040124145 
012151 xxxx 163164163040 
012152 xxxx 056056056056 
012153 xxxx 015012040040 
012154 xxxx 013061056040 msg31:   acc    "1. Passed\r\n"
012155 xxxx 120141163163 
012156 xxxx 145144015012 
012157 xxxx 013062056040 msg32:   acc    "2. Passed\r\n"
012160 xxxx 120141163163 
012161 xxxx 145144015012 
012162 xxxx 014531701000         call    ioa(SCTRmsg)
012163 xxxx 012166710000 
012164 xxxx 000000000000 
012165 xxxx 012147000000 
012166 xxxx 003000065400        SZTR     (),(),bool(3)",enablefault       " evaluate FLD1 as is (move)
012167 xxxx 012173410001        descb    FLD1aq(19),1    " FLD1 operand descr. (bit 19)
012170 xxxx 000000000001        descb    0,1             " FLD2 operand descriptor
012171 xxxx 011341600000        TZE      NO.GOT          " if ZERO it's an error
012172 xxxx 012174710000        TRA      SZTR1b
012173 xxxx 000000200000 FLD1aq:  oct      200000     " 0 0 0 0 0 0 2 0 0 0 0 0
012174 xxxx 014531701000 SZTR1b: call    ioa(msg31)
012175 xxxx 012200710000 
012176 xxxx 000000000000 
012177 xxxx 012154000000 
012200 xxxx 014531701000         call    ioa(msg24o, FLD1aq)
012201 xxxx 012205710000 
012202 xxxx 000000000000 
012203 xxxx 014171000000 
012204 xxxx 012173000000 
012205 xxxx 000000634007         LDI     0,DL       " clear processor indicators
012206 xxxx 000000227003         LDX7    0,DU       " load zeros into X7
012207 xxxx 012227754000         STI     FLD1ar     " store processor indicators
012210 xxxx 014000065400         SZTR    (),(),bool(14) " invert
012211 xxxx 012227400001         descb   FLD1ar(18),1 " FLD1 operand descr. (bit 18)
012212 xxxx 000000000001         BDSC    0,1        " FLD2 operand descriptor
012213 xxxx 011341601000         TNZ     NO.GOT     " zero indicator ON
012214 xxxx 014531701000         call     ioa(msg32)
012215 xxxx 012220710000 
012216 xxxx 000000000000 
012217 xxxx 012157000000 
012220 xxxx 014531701000         call    ioa(msg24o, FLD1ar)
012221 xxxx 012225710000 
012222 xxxx 000000000000 
012223 xxxx 014171000000 
012224 xxxx 012227000000 
012225 xxxx 010025634000 	ldi	ovr_mask
012226 xxxx 012306710000         tra     EISdec0
012227 xxxx 000000000000 FLD1ar: dec     0           " x x x x x x 4 0 0 0 0 0 (Hey what about NBAR & ABS?)
012230 xxxx 021101104062 AD2Dmsg:    acc     "AD2D Tests ....\r\n"
012231 xxxx 104040124145 
012232 xxxx 163164163040 
012233 xxxx 056056056056 
012234 xxxx 015012040040 
012235 xxxx 070061056040 msg33:      acc     /1. Result: ^n ^n (Should be 053071070066 063066066000)\r\n/
012236 xxxx 122145163165 
012237 xxxx 154164072040 
012240 xxxx 136156040136 
012241 xxxx 156040050123 
012242 xxxx 150157165154 
012243 xxxx 144040142145 
012244 xxxx 040060065063 
012245 xxxx 060067061060 
012246 xxxx 067060060066 
012247 xxxx 066040060066 
012250 xxxx 063060066066 
012251 xxxx 060066066060 
012252 xxxx 060060051015 
012253 xxxx 012040040040 
012254 xxxx 070062056040 msg34:      acc     /2. Result: ^n ^n (Should be 053061063063 064000000000)\r\n/
012255 xxxx 122145163165 
012256 xxxx 154164072040 
012257 xxxx 136156040136 
012260 xxxx 156040050123 
012261 xxxx 150157165154 
012262 xxxx 144040142145 
012263 xxxx 040060065063 
012264 xxxx 060066061060 
012265 xxxx 066063060066 
012266 xxxx 063040060066 
012267 xxxx 064060060060 
012270 xxxx 060060060060 
012271 xxxx 060060051015 
012272 xxxx 012040040040 
012273 xxxx 050063056040 msg35:      acc     /3. Result: ^n (Should be 001023105153)\r\n/
012274 xxxx 122145163165 
012275 xxxx 154164072040 
012276 xxxx 136156040050 
012277 xxxx 123150157165 
012300 xxxx 154144040142 
012301 xxxx 145040060060 
012302 xxxx 061060062063 
012303 xxxx 061060065061 
012304 xxxx 065063051015 
012305 xxxx 012040040040 
012306 xxxx 014531701000             call    ioa (AD2Dmsg)
012307 xxxx 012312710000 
012310 xxxx 000000000000 
012311 xxxx 012230000000 
012312 xxxx 000200202400             ad2d    (), (), round
012313 xxxx 012324227607             ndsc9   FLD1as,1,7,2,-2
012314 xxxx 012326000010             ndsc9   FLD2as,0,8
012315 xxxx 014531701000             call    ioa(msg33, FLD2as, FLD2as+1)
012316 xxxx 012323710000 
012317 xxxx 000000000000 
012320 xxxx 012235000000 
012321 xxxx 012326000000 
012322 xxxx 012327000000 
012323 xxxx 012330710000             tra     AD2D2
012324 xxxx 040061062063 FLD1as:     aci     / 123450-/      " -1234.50
012325 xxxx 064065060055 
012326 xxxx 053060060071 FLD2as:     aci     /+009/
012327 xxxx 070067066002             vfd     a27/876,9/2
012330 xxxx 000000202400             AD2D    (), ()  ", enablefault "with truncation enable option
012331 xxxx 012342067610             NDSC4   FLD1at,0,8,2,-2     "FLD1 addend operand descriptor
012332 xxxx 012343000006             NDSC9   FLD2at,0,6          "FLD2 addend operand descriptor memory contents
012333 xxxx 014531701000             call    ioa(msg34, FLD2at, FLD2at+1)
012334 xxxx 012341710000 
012335 xxxx 000000000000 
012336 xxxx 012254000000 
012337 xxxx 012343000000 
012340 xxxx 012344000000 
012341 xxxx 012345710000             tra     AD2D3
012342 xxxx 001043105153 FLD1at:     ac4     /0123456+/      "0123456+
012343 xxxx 053060060060 FLD2at:     vfd     a36/+000,a9/1, 9/2   "+00012
012344 xxxx 061002000000 
012345 xxxx 400000202400             AD2D    (),(),ascii     "   with plus sign octal 13 option
012346 xxxx 012356000004             NDSC9   FLD1au,0,4      "FLD1 addend operand descriptor
012347 xxxx 012357167407             NDSC4   FLD2au,1,7,2,-4 "FLD2 addend operand descriptor
012350 xxxx 014531701000             call    ioa(msg35, FLD2au)
012351 xxxx 012355710000 
012352 xxxx 000000000000 
012353 xxxx 012273000000 
012354 xxxx 012357000000 
012355 xxxx 012411710000             TRA     AD3D0
012356 xxxx 053071071000 FLD1au:     vfd     a27/+99, 9/0     "+990
012357 xxxx 001043105153 FLD2au:     ac4     /0123456+/      "0123456+
012360 xxxx 021101104063 AD3Dmsg:    acc     /AD3D Tests ... \r\n/
012361 xxxx 104040124145 
012362 xxxx 163164163040 
012363 xxxx 056056056040 
012364 xxxx 015012040040 
012365 xxxx 047061056040 msg36:      acc     /1. Result ^n (Should be 000260145126)\r\n/
012366 xxxx 122145163165 
012367 xxxx 154164040136 
012370 xxxx 156040050123 
012371 xxxx 150157165154 
012372 xxxx 144040142145 
012373 xxxx 040060060060 
012374 xxxx 062066060061 
012375 xxxx 064065061062 
012376 xxxx 066051015012 
012377 xxxx 047062056040 msg37:      acc     /2. Result ^n (Should be 000013003106)\r\n/
012400 xxxx 122145163165 
012401 xxxx 154164040136 
012402 xxxx 156040050123 
012403 xxxx 150157165154 
012404 xxxx 144040142145 
012405 xxxx 040060060060 
012406 xxxx 060061063060 
012407 xxxx 060063061060 
012410 xxxx 066051015012 
012411 xxxx 014531701000             call    ioa(AD3Dmsg)
012412 xxxx 012415710000 
012413 xxxx 000000000000 
012414 xxxx 012360000000 
012415 xxxx 400200222400         AD3D    (),(),(),ROUND,ascii " w/ rounding, plus sign options
012416 xxxx 012427037604         desc9ns FLD1av,4,-2     " FLD1 addend operand descriptor
012417 xxxx 012430027610         desc9ts FLD2av,8,-2     " FLD2 addend operand descriptor
012420 xxxx 012432250006         desc4ls FLD3av(2),6     " operand descriptor, sum field
012421 xxxx 014531701000         call    ioa(msg36, FLD3av)
012422 xxxx 012426710000 
012423 xxxx 000000000000 
012424 xxxx 012365000000 
012425 xxxx 012432000000 
012426 xxxx 012434710000         tra     AD3D2
012427 xxxx 061062063064 FLD1av: aci     /1234/          "  1234
012430 xxxx 060066065064 FLD2av: aci     /0654321+/      " 0654321+
012431 xxxx 063062061053 
012432 xxxx 000000000000 FLD3av: BSS     2              " xx+06556   (Sum)
012434 xxxx 000002622000         EAX2     2          " load character modifier into X2
012435 xxxx 000006626000         EAX6     6          " load FLD2 length into X6
012436 xxxx 012452624000         EAX4     FLD1aw       " load FLD1 address into X4
012437 xxxx 400000507414         AWDX     pr4|0,4    " put FLD1 address into AR4
012440 xxxx 420252222500         AD3D     (ar),(rl,x2),(id),round,ascii
012441 xxxx 400000000004         desc9fl  pr4|0,4    " FLD1 operand descriptor (FLD1,0,4,0)
012442 xxxx 012453077616         desc4ns  FLD2aw,x6,-2 " FLD2 operand descriptor (FLD2,2,6,3,-2)
012443 xxxx 012455000000         ARG      DFLD3aw      " pointer,FLD3 operand descriptor
012444 xxxx 014531701000         call    ioa(msg37, FLD3aw)
012445 xxxx 012451710000 
012446 xxxx 000000000000 
012447 xxxx 012377000000 
012450 xxxx 012454000000 
012451 xxxx 012513710000         tra     SB2D0
012452 xxxx 055061062002 FLD1aw: vfd     a27/-12, 9/2     " -12 2
012453 xxxx 000022064126 FLD2aw: ac4     /00123456/      " 00123456
012454 xxxx 000000000000 FLD3aw: BSS     1               " xxx+0346   (Sum)
012455 xxxx 012454357705 DFLD3aw:desc4ls FLD3aw(3),5,-1  " FLD3 sum operand descriptor
012456 xxxx 017123102062 SB2Dmsg:    acc /SB2D Tests...\r\n/
012457 xxxx 104040124145 
012460 xxxx 163164163056 
012461 xxxx 056056015012 
012462 xxxx 070061056040 msg38:  acc /1. result ^n ^n (Should be 055066065064 063060071376) \r\n/
012463 xxxx 162145163165 
012464 xxxx 154164040136 
012465 xxxx 156040136156 
012466 xxxx 040050123150 
012467 xxxx 157165154144 
012470 xxxx 040142145040 
012471 xxxx 060065065060 
012472 xxxx 066066060066 
012473 xxxx 065060066064 
012474 xxxx 040060066063 
012475 xxxx 060066060060 
012476 xxxx 067061063067 
012477 xxxx 066051040015 
012500 xxxx 012040040040 
012501 xxxx 047062056040 msg39:  acc /2. result ^a ^a (Should be 8753 0864)\r\n/
012502 xxxx 162145163165 
012503 xxxx 154164040136 
012504 xxxx 141040136141 
012505 xxxx 040050123150 
012506 xxxx 157165154144 
012507 xxxx 040142145040 
012510 xxxx 070067065063 
012511 xxxx 040060070066 
012512 xxxx 064051015012 
012513 xxxx 014531701000         call    ioa(SB2Dmsg)
012514 xxxx 012517710000 
012515 xxxx 000000000000 
012516 xxxx 012456000000 
012517 xxxx 000200203400         SB2D     (),(),round      " with rounding option
012520 xxxx 012531067504         NDSC4    FLD1ax,0,4,2,-3  " minuend operand descriptor
012521 xxxx 012532000010         NDSC9    FLD2ax,0,8       " subtrahend operand descriptor
012522 xxxx 014531701000         call    ioa(msg38, FLD2ax, FLD2ax+1)
012523 xxxx 012530710000 
012524 xxxx 000000000000 
012525 xxxx 012462000000 
012526 xxxx 012532000000 
012527 xxxx 012533000000 
012530 xxxx 012534710000         tra     SB2D2
012531 xxxx 022133000000 FLD1ax: ac4      /125+/         " 125+
012532 xxxx 053066065064 FLD2ax: vfd     a36/+654, a27/321, 9/-2
012533 xxxx 063062061776 
012534 xxxx 000000203400         SB2D    (),()",enablefault   " with truncation enable option
012535 xxxx 012546077410         NDSC4   FLD1ay,0,8,3,-4       " minuend operand descriptor
012536 xxxx 012547037610         NDSC9   FLD2ay,0,8,3,-2       " subtrahend operand descriptor
012537 xxxx 014531701000         call    ioa(msg39, FLD2ay, FLD2ay+1)
012540 xxxx 012545710000 
012541 xxxx 000000000000 
012542 xxxx 012501000000 
012543 xxxx 012547000000 
012544 xxxx 012550000000 
012545 xxxx 012606710000         tra     SB3D0
012546 xxxx 022064126170 FLD1ay: ac4     /12345678/          " 12345678
012547 xxxx 070067066065 FLD2ay: aci     /87654321/          " 87654321
012550 xxxx 064063062061 
012551 xxxx 021123102063 SB3Dmsg:    acc "SB3D Tests ... \r\n"
012552 xxxx 104040124145 
012553 xxxx 163164163040 
012554 xxxx 056056056040 
012555 xxxx 015012040040 
012556 xxxx 067061056040 msg40:  acc     /1. Result ^n ^n (Should be 000000000053 060060060177)\r\n/
012557 xxxx 122145163165 
012560 xxxx 154164040136 
012561 xxxx 156040136156 
012562 xxxx 040050123150 
012563 xxxx 157165154144 
012564 xxxx 040142145040 
012565 xxxx 060060060060 
012566 xxxx 060060060060 
012567 xxxx 060060065063 
012570 xxxx 040060066060 
012571 xxxx 060066060060 
012572 xxxx 066060061067 
012573 xxxx 067051015012 
012574 xxxx 047062056040 msg41:  acc     /2. Result ^n (Should be 320010144031)\r\n/
012575 xxxx 122145163165 
012576 xxxx 154164040136 
012577 xxxx 156040050123 
012600 xxxx 150157165154 
012601 xxxx 144040142145 
012602 xxxx 040063062060 
012603 xxxx 060061060061 
012604 xxxx 064064060063 
012605 xxxx 061051015012 
012606 xxxx 014531701000         call    ioa(SB3Dmsg)
012607 xxxx 012612710000 
012610 xxxx 000000000000 
012611 xxxx 012551000000 
012612 xxxx 000200223400         SB3D    (),(),(),round  "with rounding option
012613 xxxx 012626060004         desc4ts FLD1az,4        "subtrahend operand descriptor
012614 xxxx 012627050004         desc4ls FLD2az,4        "minuend operand descriptor
012615 xxxx 012630600005         desc9fl FLD3az(3),5     "operand desc for result field
012616 xxxx 011341601000         tnz     NO.GOT
012617 xxxx 014531701000         call    ioa(msg40, FLD3az, FLD3az+1)
012620 xxxx 012625710000 
012621 xxxx 000000000000 
012622 xxxx 012556000000 
012623 xxxx 012630000000 
012624 xxxx 012631000000 
012625 xxxx 012632710000         tra     SB3D2
012626 xxxx 022075000000 FLD1az: ac4     /123-/         " 123-
012627 xxxx 321043000000 FLD2az: ac4     /-123/         " -123
012630 xxxx 000000000000 FLD3az: BSS     2              " XXX+000+127 (Result) zero indicator ON
012632 xxxx 000000223400         SB3D    (),(),()",enablefault   " with truncation enable option
012633 xxxx 012646000010         desc9fl FLD1ba, 8              " minuend operand descriptor
012634 xxxx 012650000010         desc9fl FLD2ba, 8              " subtrahend operand descriptor
012635 xxxx 012652057610         desc4ls FLD3ba, 8, -2          " result operand descriptor
012636 xxxx 011341605000         tpl     NO.GOT                 "indicators on? -  negative and truncation
012637 xxxx 011341601400         trtf    NO.GOT
012640 xxxx 014531701000        call     ioa(msg41, FLD3ba)
012641 xxxx 012645710000 
012642 xxxx 000000000000 
012643 xxxx 012574000000 
012644 xxxx 012652000000 
012645 xxxx 012704710000         tra     MP2D0
012646 xxxx 055071070067 FLD1ba: vfd  a36/-987, a27/654, 9/-3   " - 9 8 7 6 5 4 -3
012647 xxxx 066065064775 
012650 xxxx 055061062063 FLD2ba: vfd  a36/-123, a27/456, 9/-3   " - 1 2 3 4 5 6 -3
012651 xxxx 064065066775 
012652 xxxx 000000000000 FLD3ba: BSS      1                   " -0086419   (Result)
012653 xxxx 020115120062 MP2Dmsg:    acc     ?MP2D Tests ...\r\n?
012654 xxxx 104040124145 
012655 xxxx 163164163040 
012656 xxxx 056056056015 
012657 xxxx 012040040040 
012660 xxxx 047061056040 msg42:      acc     ?1. Result ^n (Should be 260000044151)\r\n?
012661 xxxx 122145163165 
012662 xxxx 154164040136 
012663 xxxx 156040050123 
012664 xxxx 150157165154 
012665 xxxx 144040142145 
012666 xxxx 040062066060 
012667 xxxx 060060060060 
012670 xxxx 064064061065 
012671 xxxx 061051015012 
012672 xxxx 047062056040 msg43:      acc     ?2. Result ^n (Should be 301043105375)\r\n?
012673 xxxx 122145163165 
012674 xxxx 154164040136 
012675 xxxx 156040050123 
012676 xxxx 150157165154 
012677 xxxx 144040142145 
012700 xxxx 040063060061 
012701 xxxx 060064063061 
012702 xxxx 060065063067 
012703 xxxx 065051015012 
012704 xxxx 014531701000             call    ioa(MP2Dmsg)
012705 xxxx 012710710000 
012706 xxxx 000000000000 
012707 xxxx 012653000000 
012710 xxxx 400200206400         MP2D    (),(),round,ascii   "rounding and plus sign options
012711 xxxx 012721027504         desc9ts FLD1bb, 4, -3       "multiplier operand descriptor
012712 xxxx 012722057610         desc4ls FLD2bb, 8, -2       "multiplicand operand descriptor
012713 xxxx 014531701000         call    ioa(msg42, FLD2bb)
012714 xxxx 012720710000 
012715 xxxx 000000000000 
012716 xxxx 012660000000 
012717 xxxx 012722000000 
012720 xxxx 012723710000         tra MP2D2
012721 xxxx 060060062053 FLD1bb: aci     /002+/          " 002+
012722 xxxx 261043105147 FLD2bb: ac4     /+1234567/      " +1234567
012723 xxxx 000200206400        MP2D     (),(),round     "rounding option
012724 xxxx 012734077610        desc4ns  FLD1bc, 8, -2   "multiplier operand descriptor
012725 xxxx 012735040010        desc4fl  FLD2bc, 8       "multiplicand operand descriptor
012726 xxxx 014531701000        call     ioa(msg43, FLD2bc)
012727 xxxx 012733710000 
012730 xxxx 000000000000 
012731 xxxx 012672000000 
012732 xxxx 012735000000 
012733 xxxx 012767710000        tra      MP3D0
012734 xxxx 000000000020 FLD1bc:  ac4    /00000010/      " 00000010
012735 xxxx 261043105376 FLD2bc:  ac4    /+12345ON/      " +12345-2
012736 xxxx 021115120063 MP3Dmsg:    acc /MP3D Tests ... \r\n/
012737 xxxx 104040124145 
012740 xxxx 163164163040 
012741 xxxx 056056056040 
012742 xxxx 015012040040 
012743 xxxx 046061056040 msg44:      acc /1. Result ^a ^a (Should be +61 7284)\r\n/
012744 xxxx 122145163165 
012745 xxxx 154164040136 
012746 xxxx 141040136141 
012747 xxxx 040050123150 
012750 xxxx 157165154144 
012751 xxxx 040142145040 
012752 xxxx 053066061040 
012753 xxxx 067062070064 
012754 xxxx 051015012040 
012755 xxxx 047062056040 msg45:      acc /2. Result ^n (Should be 275060206377)\r\n/
012756 xxxx 122145163165 
012757 xxxx 154164040136 
012760 xxxx 156040050123 
012761 xxxx 150157165154 
012762 xxxx 144040142145 
012763 xxxx 040062067065 
012764 xxxx 060066060062 
012765 xxxx 060066063067 
012766 xxxx 067051015012 
012767 xxxx 014531701000         call    ioa(MP3Dmsg)
012770 xxxx 012773710000 
012771 xxxx 000000000000 
012772 xxxx 012736000000 
012773 xxxx 000200226400         MP3D    (),(),(),round   "with rounding option
012774 xxxx 013006660002         desc4ts FLD1bd(6),2      "multiplier operand descriptor
012775 xxxx 013007057510         desc4ls FLD2bd,8,-3      "multiplicand op descriptor
012776 xxxx 013010217607         desc9ls FLD3bd(1),7,-2   " product operand descriptor
012777 xxxx 014531701000         call    ioa(msg44, FLD3bd, FLD3bd+1)
013000 xxxx 013005710000 
013001 xxxx 000000000000 
013002 xxxx 012743000000 
013003 xxxx 013010000000 
013004 xxxx 013011000000 
013005 xxxx 013012710000         tra     MP3D2
013006 xxxx 000000000133 FLD1bd:  ac4      /0000005+/      " 0000005+
013007 xxxx 261043105147 FLD2bd:  ac4      /+1234567/      " +1234567
013010 xxxx 000000000000 FLD3bd:  BSS      2               " +617284    (Product)
013012 xxxx 000000226400         MP3D    (),(),()", enablefault
013013 xxxx 013026077602         desc4ns FLD1be, 2, -2   " multiplier operand descriptor
013014 xxxx 013027057510         desc4ls FLD2be, 8, -3   " multiplicand op descriptor
013015 xxxx 013030140007         desc4fl FLD3be(1), 7    " product operand descriptor
013016 xxxx 011341605000         tpl     NO.GOT          " indicators on? -  negative and truncation
013017 xxxx 011341601400         trtf    NO.GOT
013020 xxxx 014531701000         call    ioa(msg45, FLD3be)
013021 xxxx 013025710000 
013022 xxxx 000000000000 
013023 xxxx 012755000000 
013024 xxxx 013030000000 
013025 xxxx 013062710000         tra     DV2D0
013026 xxxx 045000000000 FLD1be:   ac4     /25000000/      " 25000000
013027 xxxx 321043105147 FLD2be:   ac4     /-1234567/      "-1234567
013030 xxxx 260000000000 FLD3be:   ac4     /+/             "+-3086-1    (Product)
013031 xxxx 021104126062 DV2Dmsg:    acc     /DV2D Tests ... \r\n/
013032 xxxx 104040124145 
013033 xxxx 163164163040 
013034 xxxx 056056056040 
013035 xxxx 015012040040 
013036 xxxx 047061056040 msg46:      acc     /1. Result ^n (Should be 304062020003)\r\n/
013037 xxxx 122145163165 
013040 xxxx 154164040136 
013041 xxxx 156040050123 
013042 xxxx 150157165154 
013043 xxxx 144040142145 
013044 xxxx 040063060064 
013045 xxxx 060066062060 
013046 xxxx 062060060060 
013047 xxxx 063051015012 
013050 xxxx 047062056040 msg47:      acc     /2. Result ^n (Should be 300044150000)\r\n/
013051 xxxx 122145163165 
013052 xxxx 154164040136 
013053 xxxx 156040050123 
013054 xxxx 150157165154 
013055 xxxx 144040142145 
013056 xxxx 040063060060 
013057 xxxx 060064064061 
013060 xxxx 065060060060 
013061 xxxx 060051015012 
013062 xxxx 014531701000             call    ioa(DV2Dmsg)
013063 xxxx 013066710000 
013064 xxxx 000000000000 
013065 xxxx 013031000000 
013066 xxxx 000000207400             DV2D    (), ()
013067 xxxx 013077467404             DESC4TS FLD1bf(4), 4, -4 "divisor operand descriptor
013070 xxxx 013100040010             DESC4FL FLD2bf,8         "dividend operand descriptor
013071 xxxx 014531701000             call    ioa(msg46, FLD2bf)
013072 xxxx 013076710000 
013073 xxxx 000000000000 
013074 xxxx 013036000000 
013075 xxxx 013100000000 
013076 xxxx 013101710000             tra     DV2D2
013077 xxxx 000000000053 FLD1bf:     ac4     /   0002+/      "0002+
013100 xxxx 260206102000 FLD2bf:     ac4     /+0864200/      "+08642 +0
013101 xxxx 000200207400         DV2D    (),(),round     " with rounding option
013102 xxxx 013112017504         DESC9LS FLD1bg,4,-3     " divisor operand descriptor
013103 xxxx 013113057610         DESC4LS FLD2bg,8,-2     " dividend operand descriptor
013104 xxxx 014531701000         call    ioa(msg47, FLD2bg)
013105 xxxx 013111710000 
013106 xxxx 000000000000 
013107 xxxx 013050000000 
013110 xxxx 013113000000 
013111 xxxx 013145710000         tra     DV3D0
013112 xxxx 053060060065 FLD1bg: aci     /+005/          " +005
013113 xxxx 260000022064 FLD2bg: ac4     /+0001234/      " +0001234
013114 xxxx 021104126063 DVD3msg:    acc     /DV3D Tests ... \r\n/
013115 xxxx 104040124145 
013116 xxxx 163164163040 
013117 xxxx 056056056040 
013120 xxxx 015012040040 
013121 xxxx 047061056040 msg48:      acc     /1. Result ^n (Should be 000263202162)\r\n/
013122 xxxx 122145163165 
013123 xxxx 154164040136 
013124 xxxx 156040050123 
013125 xxxx 150157165154 
013126 xxxx 144040142145 
013127 xxxx 040060060060 
013130 xxxx 062066063062 
013131 xxxx 060062061066 
013132 xxxx 062051015012 
013133 xxxx 047062056040 msg49:      acc     /2. Result ^n (Should be 013103202162)\r\n/
013134 xxxx 122145163165 
013135 xxxx 154164040136 
013136 xxxx 156040050123 
013137 xxxx 150157165154 
013140 xxxx 144040142145 
013141 xxxx 040060061063 
013142 xxxx 061060063062 
013143 xxxx 060062061066 
013144 xxxx 062051015012 
013145 xxxx 014531701000         call    ioa(DVD3msg)
013146 xxxx 013151710000 
013147 xxxx 000000000000 
013150 xxxx 013114000000 
013151 xxxx 400200227400         DV3D    (),(),(),round,ascii    " rounding, plus sign options
013152 xxxx 013163227603         desc9ts FLD1bh(1),3,-2          " divisor operand descriptor
013153 xxxx 013164040011         desc4fl FLD2bh,9                " dividend operand descriptor
013154 xxxx 013166257706         desc4ls FLD3bh(2),6,-1          " quotient operand descriptor
013155 xxxx 014531701000         call    ioa(msg48, FLD3bh)
013156 xxxx 013162710000 
013157 xxxx 000000000000 
013160 xxxx 013121000000 
013161 xxxx 013166000000 
013162 xxxx 013167710000         tra     DV3D2
013163 xxxx 060060062055 FLD1bh: aci      /002-/                 " 002-
013164 xxxx 330166124077 FLD2bh: ac4      /-876543OM/            " -876543-3
013165 xxxx 320000000000 
013166 xxxx 000000000000 FLD3bh: BSS      1                      " xx+38272   (Quotient)
013167 xxxx 000002622000         EAX2    2               " load character mod into X2
013170 xxxx 000010627000         EAX7    8               " load FLD2 length into X7
013171 xxxx 013205624000         EAX4    FLD1bi          " load FLD1 address into X4
013172 xxxx 400000507414         AWDX    pr4|0, 4        " put FLD1 address into AR4
013173 xxxx 420240227512         DV3D    (pr,x2),(rl),(id),round,ascii  " with addr mod options
013174 xxxx 400000037602         desc9ns pr4|0, 2, -2    " divisor operand descriptor (FLD1,2,2,3,-2)
013175 xxxx 013206000017         desc9fl FLD2bi, x7      " dividend operand descriptor (FLD2,0,8,0)
013176 xxxx 400002000112         ARG     pr4|2, 2        " ptr quotient operand desc
013177 xxxx 014531701000         call    ioa(msg49, FLD3bi)
013200 xxxx 013204710000 
013201 xxxx 000000000000 
013202 xxxx 013133000000 
013203 xxxx 013210000000 
013204 xxxx 013241710000         tra     CMPN0
013205 xxxx 060060060062 FLD1bi: aci     /0002/          " 0002
013206 xxxx 053070067066 FLD2bi: vfd     a36/+876, a27/543, 9/-3    " +876543-3
013207 xxxx 065064063775 
013210 xxxx 000000000000 FLD3bi: BSS     1               " x+438272
013211 xxxx 013210157707         desc4ls FLD3bi(1),7,-1  " quotient operand descriptor
013212 xxxx 021103115120 CMPNmsg:    acc     "CMPN Tests ... \r\n"
013213 xxxx 116040124145 
013214 xxxx 163164163040 
013215 xxxx 056056056040 
013216 xxxx 015012040040 
013217 xxxx 027061056040 msg50:      acc     "1. Result FLD2 = FLD1\r\n"
013220 xxxx 122145163165 
013221 xxxx 154164040106 
013222 xxxx 114104062040 
013223 xxxx 075040106114 
013224 xxxx 104061015012 
013225 xxxx 027062056040 msg51:      acc     "2. Result FLD2 = FLD1\r\n"
013226 xxxx 122145163165 
013227 xxxx 154164040106 
013230 xxxx 114104062040 
013231 xxxx 075040106114 
013232 xxxx 104061015012 
013233 xxxx 027063056040 msg52:      acc     "3. Result FLD2 > FLD1\r\n"
013234 xxxx 122145163165 
013235 xxxx 154164040106 
013236 xxxx 114104062040 
013237 xxxx 076040106114 
013240 xxxx 104061015012 
013241 xxxx 014531701000         call    ioa(CMPNmsg)
013242 xxxx 013245710000 
013243 xxxx 000000000000 
013244 xxxx 013212000000 
013245 xxxx 000000303400         CMPN     (),()           "no modification
013246 xxxx 013261057610         NDSC4    FLD1bj,0,8,1,-2 "FLD1 operand descriptor
013247 xxxx 013262040010         NDSC4    FLD2bj,0,8,0    "FLD2 operand descriptor
013250 xxxx 013254600000         TZE      EQUAL2          "FLD2 = FLD1 (Result - FLD2 =  FLD1)
013251 xxxx 011341604000         TMI      NO.GOT          "FLD2 < FLD1
013252 xxxx 011341602000         TNC      NO.GOT          "|FLD2| < |FLD1|
013253 xxxx 011341710000         TRA      NO.GOT
013254 xxxx 014531701000 EQUAL2: call    ioa(msg50)
013255 xxxx 013260710000 
013256 xxxx 000000000000 
013257 xxxx 013217000000 
013260 xxxx 013263710000         tra     CMPN2
013261 xxxx 320001043105 FLD1bj: ac4     /-0012345/      " -0012345
013262 xxxx 321043105376 FLD2bj: ac4     /-12345ON/      " -12345 -2
013263 xxxx 000000303400         CMPN     (),()           " no modification
013264 xxxx 013271430002         desc9ns FLD1bk(2),2      " FLD1 operand descriptor
013265 xxxx 013272067510         desc4ts FLD2bk, 8, -3    " FLD2 operand descriptor
013266 xxxx 013273600000         TZE      EQUAL3          " FLD2 = FLD1
013267 xxxx 011341604000         TMI      NO.GOT          " FLD2 < FLD1
013270 xxxx 011341710000         TRA      NO.GOT          " FLD2 > FLD1
013271 xxxx 060060061062 FLD1bk: aci     /0012/           " +0012000
013272 xxxx 000022000013 FLD2bk: ac4     /0012000+/       " +0012000
013273 xxxx 014531701000 EQUAL3: call    ioa(msg51)
013274 xxxx 013277710000 
013275 xxxx 000000000000 
013276 xxxx 013225000000 
013277 xxxx 000002622000         EAX2    2           " load character mod into X2
013300 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
013301 xxxx 013463624000         EAX4    FLD1bl      " load FLD1 address into X4
013302 xxxx 400000507414         AWDX    0,4,4       " put FLD1 address into AR4
013303 xxxx 000020303552         CMPN    (ar,rl,x2),(id)    " with address modification
013304 xxxx 400000077516         desc4ns pr4|0,x6,-3 " FLD1 operand descriptor (FLD1,2,6,3,-3)
013305 xxxx 013465000000         ARG     FLD2bl.I    " pointer to operand descriptor
013306 xxxx 011341600000         TZE     NO.GOT      " FLD2 = FLD1
013307 xxxx 013311605000         TPL     MORE        " FLD2 > FLD1 Result - FLD2 > FLD1
013310 xxxx 011341710000         TRA     NO.GOT      " FLD2 < FLD1
013311 xxxx 014531701000         call    ioa(msg52)
013312 xxxx 013315710000 
013313 xxxx 000000000000 
013314 xxxx 013233000000 
013315 xxxx 013410710000         tra     MVN0
013316 xxxx 017115126116 MVNmsg:     acc     /MVN Tests ...\r\n/
013317 xxxx 040124145163 
013320 xxxx 164163040056 
013321 xxxx 056056015012 
013322 xxxx 045122145163 MVNmsg1:    acc     /Result: ^n (Should be 014022064127)\r\n/
013323 xxxx 165154164072 
013324 xxxx 040136156040 
013325 xxxx 050123150157 
013326 xxxx 165154144040 
013327 xxxx 142145040060 
013330 xxxx 061064060062 
013331 xxxx 062060066064 
013332 xxxx 061062067051 
013333 xxxx 015012040040 
013334 xxxx 045122145163 MVNmsg2:    acc     /Result: ^n (Should be 321043105001)\r\n/
013335 xxxx 165154164072 
013336 xxxx 040136156040 
013337 xxxx 050123150157 
013340 xxxx 165154144040 
013341 xxxx 142145040063 
013342 xxxx 062061060064 
013343 xxxx 063061060065 
013344 xxxx 060060061051 
013345 xxxx 015012040040 
013346 xxxx 045122145163 MVNmsg3:    acc     /Result: ^n (Should be 000000022065)\r\n/
013347 xxxx 165154164072 
013350 xxxx 040136156040 
013351 xxxx 050123150157 
013352 xxxx 165154144040 
013353 xxxx 142145040060 
013354 xxxx 060060060060 
013355 xxxx 060060062062 
013356 xxxx 060066065051 
013357 xxxx 015012040040 
013360 xxxx 046042053060 MVNmsg4:    acc     /"+0 Test" - Result: ^o (Should be 0)\r\n/
013361 xxxx 040124145163 
013362 xxxx 164042040055 
013363 xxxx 040122145163 
013364 xxxx 165154164072 
013365 xxxx 040136157040 
013366 xxxx 050123150157 
013367 xxxx 165154144040 
013370 xxxx 142145040060 
013371 xxxx 051015012040 
013372 xxxx 022064126173 FLD1bm:     ac4     /1234567+/  "8P1234567+
013373 xxxx 000000000000 FLD2bm:     DEC     0           " 0+123457 (Result)
013374 xxxx 060060060061 FLD1bn:     aci     /00012345678-/  " 00012345678-
013375 xxxx 062063064065 
013376 xxxx 066067070055 
013377 xxxx 000000000000 FLD2bn:     BSS 1               " -12345+1 (Result) negative and truncation set ON
013400 xxxx 060061062063 FLD1bo:     aci     /0123456+/  " 8A123456+ (0123456+)
013401 xxxx 064065066053 
013402 xxxx 000000000000 FLD2bo:     BSS 1               " 00001235 (Result)
013403 xxxx 013402277606             desc4ns FLD2bo(2),6,-2
013404 xxxx 040053060060 FLD1bp:     aci     / +000000/  " 8A123456+ (0123456+)
013405 xxxx 060060060060 
013406 xxxx 000000000000 FLD2bp:     BSS 1               " 00001235 (Result)
013407 xxxx 013402277606             desc4ns FLD2bo(2),6,-2
013410 xxxx 014531701000         call    ioa(MVNmsg)
013411 xxxx 013414710000 
013412 xxxx 000000000000 
013413 xxxx 013316000000 
013414 xxxx 000200300400         MVN     (),(),round         ",,1                  "with rounding option
013415 xxxx 013372067510         NDSC4   FLD1bm,0,8,2,-3     "sending field operand descr.
013416 xxxx 013373157607         NDSC4   FLD2bm,1,7,1,-2     "receiving field operand descr.
013417 xxxx 014531701000         call    ioa(MVNmsg1, FLD2bm)
013420 xxxx 013424710000 
013421 xxxx 000000000000 
013422 xxxx 013322000000 
013423 xxxx 013373000000 
013424 xxxx 000000300400         MVN     (),()",t             ",,,,1 truncation fault enable option
013425 xxxx 013374627611         NDSC9   FLD1bn,3,9,2,-2     "sending field operand descr.
013426 xxxx 013377040010         NDSC4   FLD2bn,0,8,0        "receiving field operand descr.
013427 xxxx 014531701000         call    ioa(MVNmsg2, FLD2bn)
013430 xxxx 013434710000 
013431 xxxx 000000000000 
013432 xxxx 013334000000 
013433 xxxx 013377000000 
013434 xxxx 000001621000         eax1    1
013435 xxxx 000002622000         eax2    2
013436 xxxx 000007627000         eax7    7
013437 xxxx 013400624000         eax4    FLD1bo
013440 xxxx 400000507414         awdx    pr4|0,4
013441 xxxx 400000507414         awdx    0,4,4
013442 xxxx 400220300551         MVN     (pr,rl,x1),(id),round,p              " with rounding and plus sign options
013443 xxxx 400000027617         desc9ts pr4|0,x7,-2
013444 xxxx 013403000000         ARG     FLD2bo+1
013445 xxxx 014531701000         call    ioa(MVNmsg3, FLD2bo)
013446 xxxx 013452710000 
013447 xxxx 000000000000 
013450 xxxx 013346000000 
013451 xxxx 013402000000 
013452 xxxx 400200300400         MVN     (),(),round,p              " with rounding and plus sign options
013453 xxxx 013404217607         desc9ls FLD1bp(1),7,-2
013454 xxxx 013406277606         NDSC4   FLD2bp,2,6,3,-2        "receiving field operand descr.
013455 xxxx 014531701000         call    ioa(MVNmsg4, FLD2bp)
013456 xxxx 013462710000 
013457 xxxx 000000000000 
013460 xxxx 013360000000 
013461 xxxx 013406000000 
013462 xxxx 000000616000         dis
013463 xxxx 000022064126 FLD1bl: ac4     /00123456/      " +00123456
013464 xxxx 001043105153 FLD2bl: ac4     /0123456+/      " +01234560
013465 xxxx 013464067610 FLD2bl.I: desc4ts FLD2bl,8,-2
013466 xxxx 045122145163 msg3:      acc         "Result: ^n (Should be 777777775456)\r\n"
013467 xxxx 165154164072 
013470 xxxx 040136156040 
013471 xxxx 050123150157 
013472 xxxx 165154144040 
013473 xxxx 142145040067 
013474 xxxx 067067067067 
013475 xxxx 067067067065 
013476 xxxx 064065066051 
013477 xxxx 015012040040 
013500 xxxx 045122145163 msg4:      acc         "Result: ^n (Should be 777777001000)\r\n"
013501 xxxx 165154164072 
013502 xxxx 040136156040 
013503 xxxx 050123150157 
013504 xxxx 165154144040 
013505 xxxx 142145040067 
013506 xxxx 067067067067 
013507 xxxx 067060060061 
013510 xxxx 060060060051 
013511 xxxx 015012040040 
013512 xxxx 045122145163 msg5:      acc         "Result: ^n (Should be 000000000777)\r\n"
013513 xxxx 165154164072 
013514 xxxx 040136156040 
013515 xxxx 050123150157 
013516 xxxx 165154144040 
013517 xxxx 142145040060 
013520 xxxx 060060060060 
013521 xxxx 060060060060 
013522 xxxx 067067067051 
013523 xxxx 015012040040 
013524 xxxx 020115126116 MVNEmsg:   acc         "MVNE Tests ...\r\n"
013525 xxxx 105040124145 
013526 xxxx 163164163040 
013527 xxxx 056056056015 
013530 xxxx 012040040040 
013531 xxxx 000001043115 FLD1c:  oct     000001043115    " 8P1234-
013532 xxxx 000001043115         ac4     "0001234-"
013533 xxxx 000000000000 FLD2c:  bss     1               " 777777775456  (Result)
013534 xxxx 000005022000 FLD1d:  oct     000005022000    " 8P51200
013535 xxxx 777777777777 FLD2d:  dec     -1
013536 xxxx 061060062063 FLD1e:  oct     061060062063    " 4A1023
013537 xxxx 000000000000 FLD2e:  dec     0
013540 xxxx 055122145163 msg6:   acc     "Result: '^a^a^a' (Should be '   $3004.05-')\r\n"
013541 xxxx 165154164072 
013542 xxxx 040047136141 
013543 xxxx 136141136141 
013544 xxxx 047040050123 
013545 xxxx 150157165154 
013546 xxxx 144040142145 
013547 xxxx 040047040040 
013550 xxxx 040044063060 
013551 xxxx 060064056060 
013552 xxxx 065055047051 
013553 xxxx 015012040040 
013554 xxxx 053122145163 msg7:   acc     "Result: '^g^g' (Should be '   $3004.05-')\r\n"
013555 xxxx 165154164072 
013556 xxxx 040047136147 
013557 xxxx 136147047040 
013560 xxxx 050123150157 
013561 xxxx 165154144040 
013562 xxxx 142145040047 
013563 xxxx 040040040044 
013564 xxxx 063060060064 
013565 xxxx 056060065055 
013566 xxxx 047051015012 
013567 xxxx 055122145163 msg8:   acc     "Result: '^a^a^a' (Should be '   ?3004.05@')\r\n"
013570 xxxx 165154164072 
013571 xxxx 040047136141 
013572 xxxx 136141136141 
013573 xxxx 047040050123 
013574 xxxx 150157165154 
013575 xxxx 144040142145 
013576 xxxx 040047040040 
013577 xxxx 040077063060 
013600 xxxx 060064056060 
013601 xxxx 065100047051 
013602 xxxx 015012040040 
013603 xxxx 060060060063 FLD1f:  aci     /000300405-/
013604 xxxx 060060064060 
013605 xxxx 065055000000 
013606 xxxx 167050207322 FLD2f:  vfd     9/mflc+7,9/enf+8,9/insb+7,9/mvc+2   "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
013607 xxxx 244000000000         vfd     9/insn+4                           "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
013610 xxxx 420020054060 FLD2f1: vfd     9/cht, h27/ *+       "need to be able to combine these 1st two -- h2 + h3 = h5 == 45-bits!!!
013611 xxxx 052053020033         vfd     h18/-$, o9/020, h9/.
013612 xxxx 000167050207         vfd     h9/0,9/mflc+7, 9/enf+8, 9/insb+7,9/mvc+2, 9/insn+4
013613 xxxx 322244000000 
013614 xxxx 420040052053 FLD2f2: vfd     9/cht, a27/ *+
013615 xxxx 100077054056         vfd     a18/@?, o9/054, a9/.
013616 xxxx 060167050207         vfd     a9/0, 9/mflc+7, 9/enf+8, 9/insb+7  "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
013617 xxxx 322244000000         vfd     9/mvc+2, 9/insn+4                  "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
013620 xxxx 000000000000 FLD3f:  bss     3
013623 xxxx 000000000000 FLD3f1: bss     2
013625 xxxx 000000000000 FLD3f2: bss     3
013630 xxxx 054122145163 msg9:   acc     "Result '^a^a^a' (Should be '*2505,09-   ')\r\n"
013631 xxxx 165154164040 
013632 xxxx 047136141136 
013633 xxxx 141136141047 
013634 xxxx 040050123150 
013635 xxxx 157165154144 
013636 xxxx 040142145040 
013637 xxxx 047052062065 
013640 xxxx 060065054060 
013641 xxxx 071055040040 
013642 xxxx 040047051015 
013643 xxxx 012040040040 
013644 xxxx 002120120235 FLD1g:  ac4     /0250509-/  "8P250509-
013645 xxxx 125070226322 FLD2g:  vfd     9/mvza+5, 9/ses+8, 9/insa+6, 9/mvc+2        "MICROP  (MVZA,5),(SES,8),(INSA,6),(MVC,2)
013646 xxxx 244023000000         vfd     9/insn+4, 9/insm+3                          "MICROP  (INSN,4),(INSM,3)
013647 xxxx 000000000000 FLD3g:  BSS     3
013652 xxxx 017115126105 MVEmsg: acc     "MVE Tests ...\r\n" 
013653 xxxx 040124145163 
013654 xxxx 164163040056 
013655 xxxx 056056015012 
013656 xxxx 103122145163 msg10:  acc     "Result: '^g^g^g^g^g' (Should be '* SMITHROGER, WILLIAM S. - #25')\r\n"
013657 xxxx 165154164072 
013660 xxxx 040047136147 
013661 xxxx 136147136147 
013662 xxxx 136147136147 
013663 xxxx 047040050123 
013664 xxxx 150157165154 
013665 xxxx 144040142145 
013666 xxxx 040047052040 
013667 xxxx 123115111124 
013670 xxxx 110122117107 
013671 xxxx 105122054040 
013672 xxxx 127111114114 
013673 xxxx 111101115040 
013674 xxxx 123056040055 
013675 xxxx 040043062065 
013676 xxxx 047051015012 
013677 xxxx 010262443163 FLD1h:  BCI     "12SMITHROGERWILLIAMS25AB"
013700 xxxx 305146272551 
013701 xxxx 663143433121 
013702 xxxx 446202052122 
013703 xxxx 420054073033 FLD2h:  vfd     9/cht, h9/*, o9/073, h9/.               "MICROP  (CHT,0),8H*,.-
013704 xxxx 052020020020         vfd     h9/-, o9/020, o9/020, o9/020
013705 xxxx 020070201205         vfd     o9/020, 9/ses+8, 9/insb+1, 9/insb+5     "MICROP  (SES,8),(INSB,1),(INSB,5)
013706 xxxx 332202205327         vfd     9/mvc+10, 9/insb+2, 9/insb+5, 9/mvc+7   "MICROP  (MVC,10),(INSB,2)(INSB,5),(MVC,7)
013707 xxxx 205321203205         vfd     9/insb+5, 9/mvc+1, 9/insb+3, 9/insb+5   "MICROP  (INSB,5),(MVC,1),(INSB,3),(INSB,5)
013710 xxxx 204205200013         vfd     9/insb+4, 9/insb+5, 9/insb+0, h9/#      "MICROP  (INSB,4),(INSB,5),(INSB,0),1H#
013711 xxxx 322000000000         vfd     9/mvc+2                                 "MICROP  (MCV,2)
013712 xxxx 000000000000 FLD3h:  bss     5
013717 xxxx 055122145163 msg11:  acc     "Result: '^a^a^a' (Should be 'code error#2')\r\n"
013720 xxxx 165154164072 
013721 xxxx 040047136141 
013722 xxxx 136141136141 
013723 xxxx 047040050123 
013724 xxxx 150157165154 
013725 xxxx 144040142145 
013726 xxxx 040047143157 
013727 xxxx 144145040145 
013730 xxxx 162162157162 
013731 xxxx 043062047051 
013732 xxxx 015012040040 
013733 xxxx 145162162157 FLD1i:  ACI     "error-2"
013734 xxxx 162055062000 
013735 xxxx 401043325021 FLD2i:  vfd     9/lte+1, A9/#, 9/mvc+5, 9/insm+1    "MICROP  (LTE,1),1A#,(MVC,5),(INSM,1),(IGN,1),(MVC,1)
013736 xxxx 301321000000         vfd     9/ign+1, 9/mvc+1
013737 xxxx 143157144145 FLD3i:  ACI     "code ", 12
013740 xxxx 040000000000 
013741 xxxx 000000000000 
013742 xxxx 021115114122 MLRmsg:    acc         "MLR Tests .....\r\n"
013743 xxxx 040124145163 
013744 xxxx 164163040056 
013745 xxxx 056056056056 
013746 xxxx 015012040040 
013747 xxxx 063122145163 msg12:  acc     /Result: '^g^g^g' (Should be 'xxxxABCDEFGHIJKL  ')\r\n/
013750 xxxx 165154164072 
013751 xxxx 040047136147 
013752 xxxx 136147136147 
013753 xxxx 047040050123 
013754 xxxx 150157165154 
013755 xxxx 144040142145 
013756 xxxx 040047170170 
013757 xxxx 170170101102 
013760 xxxx 103104105106 
013761 xxxx 107110111112 
013762 xxxx 113114040040 
013763 xxxx 047051015012 
013764 xxxx 212223242526 FLD1j:  BCI     /ABCDEFGHIJKL/ " memory contents
013765 xxxx 273031414243 
013766 xxxx 000000000000 FLD2j:  bss     3              "xxxxABCDEFGHIJKL  " (Result)
013771 xxxx 065122145163 msg13:  acc     /Result: ^n ^n (Should be 000000000022 064126170235)\r\n/
013772 xxxx 165154164072 
013773 xxxx 040136156040 
013774 xxxx 136156040050 
013775 xxxx 123150157165 
013776 xxxx 154144040142 
013777 xxxx 145040060060 
014000 xxxx 060060060060 
014001 xxxx 060060060060 
014002 xxxx 062062040060 
014003 xxxx 066064061062 
014004 xxxx 066061067060 
014005 xxxx 062063065051 
014006 xxxx 015012040040 
014007 xxxx 202020010203 FLD1k:  BCI     /   12345678R/
014010 xxxx 040506071051 
014011 xxxx 000000000000 FLD2k:  bss     2               "xxxxxx123456789-  (Result)
014013 xxxx 047122145163 msg14:  acc     /Result: '^a^a' (Should be 'SOURCE T')\r\n/
014014 xxxx 165154164072 
014015 xxxx 040047136141 
014016 xxxx 136141047040 
014017 xxxx 050123150157 
014020 xxxx 165154144040 
014021 xxxx 142145040047 
014022 xxxx 123117125122 
014023 xxxx 103105040124 
014024 xxxx 047051015012 
014025 xxxx 124110111123 FLD1l:  Aci     /THIS IS THE SOURCE TEXT/
014026 xxxx 040111123040 
014027 xxxx 124110105040 
014030 xxxx 123117125122 
014031 xxxx 103105040124 
014032 xxxx 105130124000 
014033 xxxx 000000000000 FLD2l:  BSS     2
014035 xxxx 055122145163 msg15:  acc     /Result: '^a^a^a' (Should be '.....LE ....')\r\n/
014036 xxxx 165154164072 
014037 xxxx 040047136141 
014040 xxxx 136141136141 
014041 xxxx 047040050123 
014042 xxxx 150157165154 
014043 xxxx 144040142145 
014044 xxxx 040047056056 
014045 xxxx 056056056114 
014046 xxxx 105040056056 
014047 xxxx 056056047051 
014050 xxxx 015012040040 
014051 xxxx 123101115120 FLD1m:  ACi     /SAMPLE TEXT TO MOVE/
014052 xxxx 114105040124 
014053 xxxx 105130124040 
014054 xxxx 124117040115 
014055 xxxx 117126105000 
014056 xxxx 056056056056 FLD2m:  aci     /............/
014057 xxxx 056056056056 
014060 xxxx 056056056056 
014061 xxxx 045122145163 msg16:  acc     /Result: "^a^a" (Should be "HIS IS")\r\n/
014062 xxxx 165154164072 
014063 xxxx 040042136141 
014064 xxxx 136141042040 
014065 xxxx 050123150157 
014066 xxxx 165154144040 
014067 xxxx 142145040042 
014070 xxxx 110111123040 
014071 xxxx 111123042051 
014072 xxxx 015012040040 
014073 xxxx 124110111123 FLD1n:  ACI     /THIS IS THE TEXT/
014074 xxxx 040111123040 
014075 xxxx 124110105040 
014076 xxxx 124105130124 
014077 xxxx 000000000000 FLD2n:  BSS     2
014101 xxxx 021115122114 MRLmsg:    acc         "MRL Tests .....\r\n"
014102 xxxx 040124145163 
014103 xxxx 164163040056 
014104 xxxx 056056056056 
014105 xxxx 015012040040 
014106 xxxx 063122145163 msg17:  acc     /Result: '^g^g^g' (Should be 'xxxx  ABCDEFGHIJKL')\r\n/
014107 xxxx 165154164072 
014110 xxxx 040047136147 
014111 xxxx 136147136147 
014112 xxxx 047040050123 
014113 xxxx 150157165154 
014114 xxxx 144040142145 
014115 xxxx 040047170170 
014116 xxxx 170170040040 
014117 xxxx 101102103104 
014120 xxxx 105106107110 
014121 xxxx 111112113114 
014122 xxxx 047051015012 
014123 xxxx 212223242526 FLD1o:  BCI     /ABCDEFGHIJKL/
014124 xxxx 273031414243 
014125 xxxx 000000000000 FLD2o:  BSS     3
014130 xxxx 071122145163 msg18:  acc     /Result: '^n ^n' (Should be '000000320001 043105147211')\r\n/
014131 xxxx 165154164072 
014132 xxxx 040047136156 
014133 xxxx 040136156047 
014134 xxxx 040050123150 
014135 xxxx 157165154144 
014136 xxxx 040142145040 
014137 xxxx 047060060060 
014140 xxxx 060060060063 
014141 xxxx 062060060060 
014142 xxxx 061040060064 
014143 xxxx 063061060065 
014144 xxxx 061064067062 
014145 xxxx 061061047051 
014146 xxxx 015012040040 
014147 xxxx 202020010203 FLD1p:  BCI     /   12345678R/
014150 xxxx 040506071051 
014151 xxxx 000000000000 FLD2p:  bss     2               "xxxx-00123456789  (Result)
014153 xxxx 065124103124 TCTmsg: acc     /TCT Tests ... (Results 020000000013 & 040000000004)\r\n/
014154 xxxx 040124145163 
014155 xxxx 164163040056 
014156 xxxx 056056040050 
014157 xxxx 122145163165 
014160 xxxx 154164163040 
014161 xxxx 060062060060 
014162 xxxx 060060060060 
014163 xxxx 060060061063 
014164 xxxx 040046040060 
014165 xxxx 064060060060 
014166 xxxx 060060060060 
014167 xxxx 060060064051 
014170 xxxx 015012040040 
014171 xxxx 014122145163 msg24o: acc     /Result: ^n\r\n/
014172 xxxx 165154164072 
014173 xxxx 040136156015 
014174 xxxx 012040040040 
014175 xxxx 200102030405 FLD1x:  bci     / 1234567890#/  " 200102030405060710110013 (oct)
014176 xxxx 060710110013 
014177 xxxx 000000000000 FLD3x:  BSS 1                   " char. & count - 020000000013
014200 xxxx 000000000000 TABLEx: OCT 000000000000,000000000000        "0X
014201 xxxx 000000000000 
014202 xxxx 000000020020         OCT 000000020020,020020020020        "1X
014203 xxxx 020020020020 
014204 xxxx 000000000000         OCT 000000000000                     "2X
014205 xxxx 040040061062 FLD1y:  aci      /  1234;5/  " 040040061062063064073065  (oct)
014206 xxxx 063064073065 
014207 xxxx 000000000000 FLD3y:  BSS     1            " char. and count 040000000004
014210 xxxx 700000000016 INDSCRy:desc9a   pr7|0, x6   " indexing FLD1 operand descr.
014211 xxxx 000000000000 TABLEy: BSS 12               " generate 60 (oct) table chars.
014225 xxxx 000000000000         OCt 000000000000,000000000000  " (060-067)
014226 xxxx 000000000000 
014227 xxxx 000000000040         OCT 000000000040               " (070-073)
014230 xxxx 046124103124 TCTRmsg:    acc        /TCTR Tests (Result 000000000012) ...\r\n/
014231 xxxx 122040124145 
014232 xxxx 163164163040 
014233 xxxx 050122145163 
014234 xxxx 165154164040 
014235 xxxx 060060060060 
014236 xxxx 060060060060 
014237 xxxx 060060061062 
014240 xxxx 051040056056 
014241 xxxx 056015012040 
014242 xxxx 000000000022 FLD1z:  ac4     /0000001234567890/  " 0000001234567890
014243 xxxx 064126170220 
014244 xxxx 000000000000 FLD3z:  BSS     1           " char/count 000000000012 (oct)
014245 xxxx 000000000000 TABLEz: OCT            0,           0
014246 xxxx 000000000000 
014247 xxxx 000000014014         OCT 000000014014,000000014014
014250 xxxx 000000014014 
014251 xxxx 020103115120 CMPCmsg:    acc     "CMPC Tests ...\r\n"
014252 xxxx 103040124145 
014253 xxxx 163164163040 
014254 xxxx 056056056015 
014255 xxxx 012040040040 
014256 xxxx 020124150145 msg25:  acc     "They are equal\r\n"
014257 xxxx 171040141162 
014260 xxxx 145040145161 
014261 xxxx 165141154015 
014262 xxxx 012040040040 
014263 xxxx 212223242020 FLD1aa: BCI     /ABCD/          "     'ABCD  '
014264 xxxx 676767672122 FLD2aa: BCI     /XXXXABCDXXXX/  " 'XXXXABCDXXXX'
014265 xxxx 232467676767 
014266 xxxx 212122222323 DATA:  BCI      /AABBCCDDEEFF/
014267 xxxx 242425252626 
014270 xxxx 272730303131        BCI      /GGHHIIJJKKLL/
014271 xxxx 414142424343 
014272 xxxx 000000000000 COUNT: BSS      1           "COUNT contains decimal 14 (octal 16)
014273 xxxx 303020202020 COMP:  BCI      /HH/
014274 xxxx 060060060060 FLD1ad:  aci      /000001234567/
014275 xxxx 060061062063 
014276 xxxx 064065066067 
014277 xxxx 000000000000 FLD3ad:  DEC      0           "unmatched count - 3
014300 xxxx 020103115120 CMPBmsg:    acc     "CMPB Tests ...\r\n"
014301 xxxx 102040124145 
014302 xxxx 163164163040 
014303 xxxx 056056056015 
014304 xxxx 012040040040 
014305 xxxx 020061056040 msg26:      acc     "1. FLD1 > FLD2\r\n"
014306 xxxx 106114104061 
014307 xxxx 040076040106 
014310 xxxx 114104062015 
014311 xxxx 012040040040 
014312 xxxx 020062056040 msg27:      acc     "2. FLD1 < FLD2\r\n"
014313 xxxx 106114104061 
014314 xxxx 040074040106 
014315 xxxx 114104062015 
014316 xxxx 012040040040 
014317 xxxx 020063056040 msg28:      acc     "3. FLD1 = FLD2\r\n"
014320 xxxx 106114104061 
014321 xxxx 040075040106 
014322 xxxx 114104062015 
014323 xxxx 012040040040 
014324 xxxx 000000633000 rd_clock:	rccl                " read the clock
014325 xxxx 014450757000 cv_clock:	staq	rdctime     " save clock reading
014326 xxxx 014420742000 	stx2	datx2               " save XR's
014327 xxxx 014421740000 	stx0	datx2+1             " ..
014330 xxxx 000034235007 	lda     28,dl               " Initialize montab
014331 xxxx 014453755000 	sta     montab+1			" to prime Feb
014332 xxxx 014450237000 	ldaq	rdctime             " Get clock reading
014333 xxxx 000001737000 	lls     1                   " Set for dvf
014334 xxxx 015050507000 	dvf     =1000000			" Get seconds since 1900.
014335 xxxx 000044777000 	llr     36                  " Into Q.
014336 xxxx 000074506007 	div     60,dl               " Seconds since min to A, mins to Q.
014337 xxxx 014433755000 	sta     rdclock.sec         " Save for inspection.
014340 xxxx 000074506007 	div     60,dl               " Min since hr to A, hrs to Q.
014341 xxxx 014432755000 	sta     rdclock.min
014342 xxxx 000006627000 	eax7	6
014343 xxxx 014423702000 	tsx2	datecv              " Convert the minutes.
014344 xxxx 014443176000 	sbq     rdclock.zone_temp	" Adjust for GMT.
014345 xxxx 000030506007 	div     24,dl               " Days since 1900 in q.
014346 xxxx 014442756000 	stq     rdclock.day_of_century	" save for  later.
014347 xxxx 014431755000 	sta     rdclock.hr          " Hours since daybreak.
014350 xxxx 014423702000 	tsx2	datecv              " Convert the hours
014351 xxxx 002665506007 	div     365*4+1,dl          " get leap year cycle
014352 xxxx 002110115007 	cmpa	365*3+1,dl          " if in last year of cycle (the leap year)
014353 xxxx 014355604000 	tmi     *+2                 " no
014354 xxxx 014453054000 	aos     montab+1			" allow for feb 29
014355 xxxx 000002736000 	qls     2                   " 4*# leap year cycles
014356 xxxx 003555036007 	adlq	1901,dl
014357 xxxx 014441756000 	stq     rdclock.year		" Save
014360 xxxx 000044777000 	llr     36
014361 xxxx 000555506007 	div     365,dl              " Years complete since l.y.c. =>Q
014362 xxxx 000004116007 	cmpq	4,dl                " Dec 31st of leap year?
014363 xxxx 014366601000 	tnz     *+3                 " No.
014364 xxxx 000001176007 	sbq     1,dl                " Adjust year and
014365 xxxx 000555235007 	lda     365,dl              " day numbers.
014366 xxxx 014441056000 	asq     rdclock.year		" Add in years complete.
014367 xxxx 000000626000 	eax6	0                   " search for correct month
014370 xxxx 030220520201 	rpt     12,1,tmi			" ..
014371 xxxx 014452175016 	sba     montab,6			" subtract off days for each month
014372 xxxx 777777075016 	ada     -1,6                " put back last entry
014373 xxxx 000001075007 	ada     1,dl                " plus one more
014374 xxxx 014436755000 	sta     rdclock.day_of_month	" Day of month
014375 xxxx 014423702000 	tsx2	datecv              " convert day
014376 xxxx 000000635016 	eaa     0,6
014377 xxxx 014452135003 	sbla	montab,du			" get index into month table
014400 xxxx 000022771000 	arl     18                  "..
014401 xxxx 014434755000 	sta     rdclock.month		" Save month number
014402 xxxx 014477236005 	ldq     rdc.months-1,al		" Get name of month.
014403 xxxx 014435756000 	stq     rdclock.month_name
014404 xxxx 014423702000 	tsx2	datecv              " convert month
014405 xxxx 000000024400 	mvne	(),(),()			" edit the date and time
014406 xxxx 014446070010 	desc4ns	date,8
014407 xxxx 014466000014 	desc9a	datedit,12
014410 xxxx 014450020014 	desc6a	rdctime,12
014411 xxxx 014442236000 	ldq     rdclock.day_of_century
014412 xxxx 000002076007 	adq     2,dl                " Bump Tuesday into place.
014413 xxxx 000007506007 	div     7,dl
014414 xxxx 014437755000 	sta     rdclock.day_of_week
014415 xxxx 014471236005 	ldq     rdc.days,al         " Get name of day.
014416 xxxx 014440756000 	stq     rdclock.day_name
014417 xxxx 014450237000 	ldaq	rdctime             " get conversion in AQ
014420 xxxx 014420622000 datx2:	eax2	*			" restore XR's
014421 xxxx 014421620000 	eax0    *               " ..
014422 xxxx 000000710012 	tra     0,2             " return to caller
014423 xxxx 014445755000 datecv:	sta	datenum			" save number
014424 xxxx 000017301400 	btd     (),(x7)         " convert into proper place
014425 xxxx 014445000004 	desc9a	datenum,4
014426 xxxx 014446070002 	desc4ns	date,2
014427 xxxx 777776627017 	eax7	-2,7			" move offset index
014430 xxxx 000000710012 	tra     0,2             " and return
014431 xxxx 000000000000 	bss	,1
014432 xxxx 000000000000 	bss	,1
014433 xxxx 000000000000 	bss	,1
014434 xxxx 000000000000 	bss	,1
014435 xxxx 000000000000 	bss	,1
014436 xxxx 000000000000 	bss	,1
014437 xxxx 000000000000 	bss	,1
014440 xxxx 000000000000 	bss	,1
014441 xxxx 000000000000 	bss	,1
014442 xxxx 000000000000 	bss	,1
014443 xxxx 000000000010     dec     8
014444 xxxx 160144164040     aci     'pdt '
014445 xxxx 000000000000 datenum:	bss	,1
014446 xxxx 000000000000 date:	bss	,1
014447 xxxx 000000011000 	even "(allocating 1 nop)
014450 xxxx 000000000000 rdctime:	bss	,2
014452 xxxx 000000000037 montab:	dec	31,28,31,30,31,30,31,31,30,31,30,31
014453 xxxx 000000000034 
014454 xxxx 000000000037 
014455 xxxx 000000000036 
014456 xxxx 000000000037 
014457 xxxx 000000000036 
014460 xxxx 000000000037 
014461 xxxx 000000000037 
014462 xxxx 000000000036 
014463 xxxx 000000000037 
014464 xxxx 000000000036 
014465 xxxx 000000000037 
014466 xxxx 401020102260 datedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
014467 xxxx 061322021322 
014470 xxxx 260015322021 	vfd	9/insp,o9/15,9/mvc+2,9/insm+1
014471 xxxx 163165156040 rdc.days: aci	'sun mon tue wed thurfri sat '
014472 xxxx 155157156040 
014473 xxxx 164165145040 
014474 xxxx 167145144040 
014475 xxxx 164150165162 
014476 xxxx 146162151040 
014477 xxxx 163141164040 
014500 xxxx 152141156040 	aci	'jan feb mar apr may jun jul aug septoct nov dec '
014501 xxxx 146145142040 
014502 xxxx 155141162040 
014503 xxxx 141160162040 
014504 xxxx 155141171040 
014505 xxxx 152165156040 
014506 xxxx 152165154040 
014507 xxxx 141165147040 
014510 xxxx 163145160164 
014511 xxxx 157143164040 
014512 xxxx 156157166040 
014513 xxxx 144145143040 
014514 xxxx 014517710000 crlf:	save
014515 xxxx 000000000000 
014516 xxxx 014515630000 
014517 xxxx 014515754000 
014520 xxxx 014515741000 
014521 xxxx 014530755000         sta     saveA
014522 xxxx 015051235000         lda     =012
014523 xxxx 000001420400         emCall  1
014524 xxxx 015052235000         lda     =015
014525 xxxx 000001420400         emcall  1
014526 xxxx 014530235000         lda     saveA
014527 xxxx 014516710000         return  crlf
014530 xxxx 000000000000 saveA:  bss     1
014531 xxxx 014540710000 ioa:    save    2, 4, 5, 6
014532 xxxx 000000000000 
014533 xxxx 000000222003 
014534 xxxx 000001224003 
014535 xxxx 000002225003 
014536 xxxx 000003226003 
014537 xxxx 014532630000 
014540 xxxx 014532754000 
014541 xxxx 014532741000 
014542 xxxx 014533742000 
014543 xxxx 014534744000 
014544 xxxx 014535745000 
014545 xxxx 014536746000 
014546 xxxx 000002624031 ioa1:   eax4    2, 1*   " 1st arg is control string
014547 xxxx 000003625011         eax5    3, 1    " next arg is the 1st of the numeric args. x5 points to next argument
014550 xxxx 000000626015         eax6    0, x5
014551 xxxx 000041235007         lda     041, dl " make a blank tallyb word .....
014552 xxxx 014567755000         sta     i29
014553 xxxx 000000235014     	lda     0, x4   " get 1st data word into A
014554 xxxx 000033731000         ars     27      " determine word count
014555 xxxx 000006735000     	als     6       " count to upper word of tally
014556 xxxx 014567255000     	orsa    i29
014557 xxxx 000000626014     	eax6    0, x4   " address of string into X6
014560 xxxx 014567746000     	stx6    i29     " address to upper word of tally
014561 xxxx 014567235052 inext:  lda     i29, sc
014562 xxxx 000136115007         cmpa    =o000136,dl		" ^
014563 xxxx 014570600000         tze     iernot      " if so, go process it
014564 xxxx 000001420400 out1:  	emCall  1
014565 xxxx 014561607000     	ttf     inext
014566 xxxx 014533710000         return  ioa
014567 xxxx 000000000041 i29:	tallyb  0, 0, 1
014570 xxxx 014567235052 iernot: lda     i29, sc         " get next char ...
014571 xxxx 000136115007         cmpa    =o000136,dl     " is it another "^"?
014572 xxxx 014610600000         tze     i21             " No, just print it ...
014573 xxxx 000167115007         cmpa    =o000167,dl     " is it a "w"?
014574 xxxx 014612600000         tze     idoW            " do full word octal
014575 xxxx 000157115007         cmpa    =o000157,dl     " is it an "o"?
014576 xxxx 014640600000         tze     idoO            " print zero suppressed octal
014577 xxxx 000156115007         cmpa    =o000156,dl     " is it a "n"?
014600 xxxx 014663600000         tze     idoN            " octal w/ no spaces inserted
014601 xxxx 000144115007         cmpa    =o000144,dl     " is it a "d"?
014602 xxxx 014712600000         tze     idoD            " decimal
014603 xxxx 000141115007         cmpa    =o000141,dl     " is it a ^a?
014604 xxxx 014720600000         tze     idoA            " 4 char ascii display
014605 xxxx 000147115007         cmpa    =o000147,dl     " is it a ^g?
014606 xxxx 014731600000         tze     idoG            " 6 char GE BCD display
014607 xxxx 014564710000         tra     out1        " unknown just print it....
014610 xxxx 000001420400 i21:    emCall  1           " output A to console
014611 xxxx 014561710000         tra     inext
014612 xxxx 000000235035 idoW:   lda     0, 5*       " ^w - full-word octal xxxxxx xxxxxx
014613 xxxx 015007702000         tsx2    octwd
014614 xxxx 014710757000         staq    ioaSafe     " bcd in AQ
014615 xxxx 000044773000         lrl     36          " A => Q
014616 xxxx 000006622000         eax2    6
014617 xxxx 000000235007 idoW2:  lda     =0, dl
014620 xxxx 000006737000         lls     6
014621 xxxx 000002420400         emCall  2           " output GE code char to console
014622 xxxx 777777622012         eax2    -1, 2
014623 xxxx 014617601000         tnz     idoW2
014624 xxxx 014710237000         ldaq    ioaSafe
014625 xxxx 000000235007         lda     =0, dl      " 0 => A
014626 xxxx 000020235007         lda     =020 ,dl     " bcd ' ' => A
014627 xxxx 000002420400         emcall  2
014630 xxxx 000006622000         eax2    6
014631 xxxx 000000235007 idoW3:  lda     =0,dl
014632 xxxx 000006737000         lls     6
014633 xxxx 000002420400         emCall  2
014634 xxxx 777777622012         eax2    -1, 2
014635 xxxx 014631601000         tnz     idoW3
014636 xxxx 000001065003         adx5    1,du
014637 xxxx 014561710000         tra     inext
014640 xxxx 000000235035 idoO:   lda     0, 5*           " ^o - Zero-suppressed octal
014641 xxxx 015007702000         tsx2    octwd
014642 xxxx 014710757000         staq    ioaSafe         " bcd in AQ
014643 xxxx 014661235000         lda     idOTly
014644 xxxx 014662755000         sta     idOT
014645 xxxx 014662235052 idO1:   lda     idOT, sc        " get char into A
014646 xxxx 000000115007         cmpa    =0, dl          " a zero?
014647 xxxx 014655601000         tnz     idONZ + 1       " nope
014650 xxxx 014645607000         ttf     idO1            " Yes, a Zero. Go for more
014651 xxxx 000002420400         emCall  2               " output a single 0
014652 xxxx 000001065003         adx5    1,du
014653 xxxx 014561710000         tra     inext
014654 xxxx 014662235052 idONZ:  lda     idOT, sc        " get char into A
014655 xxxx 000002420400         emCall  2
014656 xxxx 014654607000         ttf     idONZ           " Yes, a Zero. Go for more
014657 xxxx 000001065003         adx5    1,du
014660 xxxx 014561710000         tra     inext
014661 xxxx 014710001400 idOTly: tally   ioaSafe, 12, 0
014662 xxxx 000000000000 idOT:   bss     1
014663 xxxx 000000235035 idoN:   lda     0, 5*       " ^n - octal w/ no spaces inserted
014664 xxxx 015007702000         tsx2    octwd
014665 xxxx 014710757000         staq    ioaSafe     " bcd in AQ
014666 xxxx 000044773000         lrl     36          " A => Q
014667 xxxx 000006622000         eax2    6
014670 xxxx 000000235007 idoN2:  lda     =0,dl
014671 xxxx 000006737000         lls     6
014672 xxxx 000002420400         emCall  2           " output GE code char to console
014673 xxxx 777777622012         eax2    -1, 2
014674 xxxx 014670601000         tnz     idoN2
014675 xxxx 014710237000         ldaq    ioaSafe
014676 xxxx 000000235007         lda     =0, dl      " 0 => A
014677 xxxx 000006622000         eax2    6
014700 xxxx 000000235007 idoN3:  lda     =0, dl
014701 xxxx 000006737000         lls     6
014702 xxxx 000002420400         emCall  2
014703 xxxx 777777622012         eax2    -1, 2
014704 xxxx 014700601000         tnz     idoN3
014705 xxxx 000001065003         adx5    1,du
014706 xxxx 014561710000         tra     inext
014707 xxxx 000000011000         even "(allocating 1 nop)
014710 xxxx 000000000000 ioaSafe:  bss 2
014712 xxxx 000000236035 idoD:   ldq     0, 5*       " ^d
014713 xxxx 014742701000         call    toDec
014714 xxxx 014716710000 
014715 xxxx 000000000000 
014716 xxxx 000001065003         adx5    1,du
014717 xxxx 014561710000         tra     inext
014720 xxxx 000000236035 idoA:   ldq     0, 5*      " ^a (4 ascii chars into Q)
014721 xxxx 000004622000         eax2    4
014722 xxxx 000000235007 idoA2:  lda     =0,dl
014723 xxxx 000011737000         lls     9
014724 xxxx 000001420400         emCall  1
014725 xxxx 777777622012         eax2    -1, 2
014726 xxxx 014722601000         tnz     idoA2
014727 xxxx 000001065003         adx5    1,du        " into next argument
014730 xxxx 014561710000         tra     inext
014731 xxxx 000000236035 idoG:   ldq     0, 5*        " ^g (6 GE BCD chars into Q)
014732 xxxx 000006622000         eax2    6
014733 xxxx 000000235007 idoG2:  lda     =0,dl
014734 xxxx 000006737000         lls     6
014735 xxxx 000002420400         emCall  2
014736 xxxx 777777622012         eax2    -1, 2
014737 xxxx 014733601000         tnz     idoG2
014740 xxxx 000001065003         adx5    1,du        " into next argument
014741 xxxx 014561710000         tra     inext
014742 xxxx 014745710000 toDec:  save    "2,3,4,5,6,7
014743 xxxx 000000000000 
014744 xxxx 014743630000 
014745 xxxx 014743754000 
014746 xxxx 014743741000 
014747 xxxx 015053116000         cmpq    =-34359738368       " the weird one?
014750 xxxx 014754601000         tnz     toDec2
014751 xxxx 015006235000         lda     decMTly             " just print it and be done with it
014752 xxxx 015002755000         sta     decTly
014753 xxxx 014772710000         tra     toDec1
014754 xxxx 014776756000 toDec2: stq     decNo
014755 xxxx 000000116007         cmpq    =0,dl       " Q < 0?
014756 xxxx 014760605000         tpl     toDec0      " No
014757 xxxx 014776336000         lcq     decNo       " -decNo => Q
014760 xxxx 000012506007 toDec0: div     =10,dl      " divide Q by 10, remainder in A
014761 xxxx 000060075007         ada     =o060,dl    " add ascii '0' (=1A0) to A
014762 xxxx 015002755045         sta     decTly, scr " start writing characters backwards
014763 xxxx 000000076007         adq     =0,dl       " set flags to test if Q == 0
014764 xxxx 014760601000         tnz     toDec0      " if Q == 0 then we're essentially done with conversion
014765 xxxx 014776235000         lda     decNo
014766 xxxx 000000115007         cmpa    =0,dl
014767 xxxx 014772605000         tpl     toDec1
014770 xxxx 000055235007         lda     =o055,dl    " (-) => A
014771 xxxx 015002755045         sta     decTly, scr " write (-) sign
014772 xxxx 015002235052 toDec1: lda     decTly, sc
014773 xxxx 000001420400         emCall  1
014774 xxxx 014772607000         ttf     toDec1
014775 xxxx 014744710000         return  toDec
014776 xxxx 000000000000 decNo:  dec     0
014777 xxxx 000000000000 decBuf: bss     3
015002 xxxx 015001000040 decTly: tallyb  decBuf+2, , 0
015003 xxxx 055063064063 decMM:  aci     "-34359738368"  " -2^^35
015004 xxxx 065071067063 
015005 xxxx 070063066070 
015006 xxxx 015003001440 decMTly:tallyb  decMM, 12, 0
015007 xxxx 015024742000 octwd:	stx2	octx2
015010 xxxx 000006622000 	eax2	6
015011 xxxx 000003736000 	qls     3
015012 xxxx 000003777000 	llr     3
015013 xxxx 777777622012 	eax2	-1,2
015014 xxxx 015011605400 	tpnz	*-3
015015 xxxx 015046756000 	stq     octtemp
015016 xxxx 000006622000 	eax2	6
015017 xxxx 000003736000 	qls     3
015020 xxxx 000003777000 	llr     3
015021 xxxx 777777622012 	eax2	-1,2
015022 xxxx 015017605400 	tpnz	*-3
015023 xxxx 015046235000 	lda     octtemp
015024 xxxx 015024622000 octx2:	eax2	*
015025 xxxx 000000710012 	tra     0,2
015026 xxxx 015044742000 hexwd:	stx2	hexx2
015027 xxxx 000044773000 	lrl     36          "shift to Q
015030 xxxx 000006622000 	eax2	6           "	process 6 characters
015031 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
015032 xxxx 000004737000 	lls     4           "shift in 4 bits
015033 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
015034 xxxx 015036604400 	tmoz	*+2
015035 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
015036 xxxx 000006773000 	lrl     6
015037 xxxx 015046235000 	lda     octtemp		"get temporary
015040 xxxx 000006737000 	lls     6           "insert new character
015041 xxxx 015046755000 	sta     octtemp		"and store
015042 xxxx 777777622012 	eax2	-1,2		"decrement index
015043 xxxx 015031605400 	tpnz	hexloop
015044 xxxx 015044622000 hexx2:	eax2	*
015045 xxxx 000000710012 	tra     0,2		"return to caller
015046 xxxx 000000000000 octtemp:	oct	0
015047 xxxx 000000000000 decimal literal (=0)
015050 xxxx 000003641100 decimal literal (=1000000)
015051 xxxx 000000000012 octal literal (=o12)
015052 xxxx 000000000015 octal literal (=o15)
015053 xxxx 400000000000 decimal literal (=-34359738368)
