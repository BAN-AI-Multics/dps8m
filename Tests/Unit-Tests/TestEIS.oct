!SIZE 005054
000000 xxxx 004324702000        tsx2	rd_clock
000001 xxxx 000034757000        staq	Date        "MM/DD HH:MM
000002 xxxx 004531701000        call    ioa(msgHello, Date, Date+1)
000003 xxxx 000010710000 
000004 xxxx 000000000000 
000005 xxxx 000012000000 
000006 xxxx 000034000000 
000007 xxxx 000035000000 
000010 xxxx 000025634000 	ldi	ovr_mask
000011 xxxx 000042710000         tra BTD0
000012 xxxx 031124150151 msgHello:  acc         "This is TestEIS ...^g^g\r\n"
000013 xxxx 163040151163 
000014 xxxx 040124145163 
000015 xxxx 164105111123 
000016 xxxx 040056056056 
000017 xxxx 136147136147 
000020 xxxx 015012040040 
000021 xxxx 015104141164 msg1:      acc         "Date: ^g^g \r\n"
000022 xxxx 145072040136 
000023 xxxx 147136147040 
000024 xxxx 015012040040 
000025 xxxx 000000000000 ovr_mask:	oct	0"4000
000026 xxxx 000000000012 Ten:    dec 10
000027 xxxx 021124150151 TENmsg: acc     /This is ^d ... \r\n/
000030 xxxx 163040151163 
000031 xxxx 040136144040 
000032 xxxx 056056056040 
000033 xxxx 015012040040 
000034 xxxx 000000000000 Date:   bss     2
000036 xxxx 017102124104 BTDmsg:    acc         "BTD Tests ...\r\n"
000037 xxxx 040124145163 
000040 xxxx 164163040056 
000041 xxxx 056056015012 
000042 xxxx 004531701000         call    ioa(BTDmsg)
000043 xxxx 000046710000 
000044 xxxx 000000000000 
000045 xxxx 000036000000 
000046 xxxx 000000301400         BTD     (),()
000047 xxxx 000060400002         NDSC9   FLD1a,2,2        " binary operand descriptor
000050 xxxx 000061010004         NDSC9   FLD2a,0,4,1      " decimal operand descriptor
000051 xxxx 004531701000         call    ioa(msg2, FLD2a, FLD2a)
000052 xxxx 000057710000 
000053 xxxx 000000000000 
000054 xxxx 000062000000 
000055 xxxx 000061000000 
000056 xxxx 000061000000 
000057 xxxx 000077710000         tra     BTD2
000060 xxxx 777777777000 FLD1a:  dec     -512    " 7 7 7 7 7 7 7 7 7 0 0 0
000061 xxxx 000000000000 FLD2a:  bss     1       " 0 5 5 0 6 5 0 6 1 0 6 2
000062 xxxx 061122145163 msg2:   acc         "Result: ^n (^a) (Should be 055065061062 (-512))\r\n"
000063 xxxx 165154164072 
000064 xxxx 040136156040 
000065 xxxx 050136141051 
000066 xxxx 040050123150 
000067 xxxx 157165154144 
000070 xxxx 040142145040 
000071 xxxx 060065065060 
000072 xxxx 066065060066 
000073 xxxx 061060066062 
000074 xxxx 040050055065 
000075 xxxx 061062051051 
000076 xxxx 015012040040 
000077 xxxx 000000301400         BTD     (),()
000100 xxxx 000222600001         NDSC9   FLD1b,3,1
000101 xxxx 000223220003         NDSC9   FLD2b,1,3,2
000102 xxxx 004531701000         call    ioa(msg2b, FLD2b, FLD2b)
000103 xxxx 000110710000 
000104 xxxx 000000000000 
000105 xxxx 000224000000 
000106 xxxx 000223000000 
000107 xxxx 000223000000 
000110 xxxx 000111617000         tov     *+1         " reset OVR
000111 xxxx 000174710000         tra     BTD3
000112 xxxx 777777747707 N12345: dec     -12345
000113 xxxx 000000000000 errnum:     bss	,2
000115 xxxx 000000000000 errtemp:	bss	,16
000135 xxxx 000000000000 ertally:	bss	,1
000136 xxxx 000000000000 errarg:     bss	,1
000137 xxxx 000000000000 erlen:      bss	,1
000140 xxxx 401020403020 eredit_d:	vfd	9/lte+1,o9/20,9/lte+3,o9/20,9/lte+4,o9/52,9/mfls+10,9/enf
000141 xxxx 404052152040 
000142 xxxx 321000000000             vfd	9/mvc+1
000143 xxxx 065122145163 msg2_b:     acc /Result: ^n ^n (Should be 320000000001 043105XXXXXX)\r\n/
000144 xxxx 165154164072 
000145 xxxx 040136156040 
000146 xxxx 136156040050 
000147 xxxx 123150157165 
000150 xxxx 154144040142 
000151 xxxx 145040063062 
000152 xxxx 060060060060 
000153 xxxx 060060060060 
000154 xxxx 060061040060 
000155 xxxx 064063061060 
000156 xxxx 065130130130 
000157 xxxx 130130130051 
000160 xxxx 015012040040 
000161 xxxx 053122145163 msg2_c:     acc /Result: '^g^g' (Should be '      -12345')\r\n/
000162 xxxx 165154164072 
000163 xxxx 040047136147 
000164 xxxx 136147047040 
000165 xxxx 050123150157 
000166 xxxx 165154144040 
000167 xxxx 142145040047 
000170 xxxx 040040040040 
000171 xxxx 040040055061 
000172 xxxx 062063064065 
000173 xxxx 047051015012 
000174 xxxx 000112235000         lda     N12345
000175 xxxx 000136755000         sta     errarg
000176 xxxx 000000301400         btd     (),()       "convert decimal number
000177 xxxx 000136000004         desc9a	errarg,4
000200 xxxx 000113050014         desc4ls	errnum,12
000201 xxxx 004531701000         call    ioa(msg2_b, errnum, errnum+1)
000202 xxxx 000207710000 
000203 xxxx 000000000000 
000204 xxxx 000143000000 
000205 xxxx 000113000000 
000206 xxxx 000114000000 
000207 xxxx 000000024400         mvne	(),(),()	"edit the output
000210 xxxx 000113050014         desc4ls	errnum,12
000211 xxxx 000140000011         desc9a	eredit_d,9
000212 xxxx 000115020014         desc6a	errtemp,12
000213 xxxx 004531701000         call    ioa(msg2_c, errtemp, errtemp+1)
000214 xxxx 000221710000 
000215 xxxx 000000000000 
000216 xxxx 000161000000 
000217 xxxx 000115000000 
000220 xxxx 000116000000 
000221 xxxx 000245710000         tra     DTB0
000222 xxxx 000000000377 FLD1b:  dec     255     " 0 0 0 0 0 0 0 0 0 3 7 7
000223 xxxx 000000000000 FLD2b:  bss     1       " 0 0 0 0 6 5 0 6 5 0 5 3
000224 xxxx 060122145163 msg2b:  acc         "Result: ^n (^a) (Should be 000065065053 (55+))\r\n"
000225 xxxx 165154164072 
000226 xxxx 040136156040 
000227 xxxx 050136141051 
000230 xxxx 040050123150 
000231 xxxx 157165154144 
000232 xxxx 040142145040 
000233 xxxx 060060060060 
000234 xxxx 066065060066 
000235 xxxx 065060065063 
000236 xxxx 040050065065 
000237 xxxx 053051051015 
000240 xxxx 012040040040 
000241 xxxx 017104124102 DTBmsg:    acc         "DTB Tests ...\r\n"
000242 xxxx 040124145163 
000243 xxxx 164163040056 
000244 xxxx 056056015012 
000245 xxxx 004531701000 DTB0:   call    ioa(DTBmsg)
000246 xxxx 000251710000 
000247 xxxx 000000000000 
000250 xxxx 000241000000 
000251 xxxx 000000305400         DTB     (), ()
000252 xxxx 003531360005         NDSC4   FLD1c,3,5,2
000253 xxxx 003533000004         NDSC9   FLD2c,0,4
000254 xxxx 004531701000         call    ioa(msg3, FLD2c)
000255 xxxx 000261710000 
000256 xxxx 000000000000 
000257 xxxx 003466000000 
000260 xxxx 003533000000 
000261 xxxx 000000305400         DTB     (), ()
000262 xxxx 003534370003         NDSC4   FLD1d,3,3,3
000263 xxxx 003535400002         NDSC9   FLD2d,2,2
000264 xxxx 004531701000         call    ioa(msg4, FLD2d)
000265 xxxx 000271710000 
000266 xxxx 000000000000 
000267 xxxx 003500000000 
000270 xxxx 003535000000 
000271 xxxx 000000305400         DTB     (), ()
000272 xxxx 003536030004         NDSC9   FLD1e,0,4,3
000273 xxxx 003537600001         NDSC9   FLD2e,3,1
000274 xxxx 004531701000         call    ioa(msg5, FLD2e)
000275 xxxx 000301710000 
000276 xxxx 000000000000 
000277 xxxx 003512000000 
000300 xxxx 003537000000 
000301 xxxx 004531701000         call    ioa(MVNEmsg)
000302 xxxx 000305710000 
000303 xxxx 000000000000 
000304 xxxx 003524000000 
000305 xxxx 000000024400         MVNE    (),(),()
000306 xxxx 003603020012         NDSC9   FLD1f,0,10,2
000307 xxxx 003606000005         desc9a  FLD2f, 5
000310 xxxx 003620000014         desc9a  FLD3f, 12
000311 xxxx 004531701000         call    ioa(msg6, FLD3f, FLD3f+1, FLD3f+2)
000312 xxxx 000320710000 
000313 xxxx 000000000000 
000314 xxxx 003540000000 
000315 xxxx 003620000000 
000316 xxxx 003621000000 
000317 xxxx 003622000000 
000320 xxxx 000000024400         MVNE    (),(),()
000321 xxxx 003603020012         desc9ts FLD1f, 10
000322 xxxx 003610000016         desc9a  FLD2f1, 14
000323 xxxx 003623020014         desc6a  FLD3f1, 12      " 6-bit gebcd receiving string
000324 xxxx 004531701000         call    ioa(msg7, FLD3f1, FLD3f1+1)
000325 xxxx 000332710000 
000326 xxxx 000000000000 
000327 xxxx 003554000000 
000330 xxxx 003623000000 
000331 xxxx 003624000000 
000332 xxxx 000000024400         MVNE    (),(),()
000333 xxxx 003603020012         desc9ts FLD1f, 10
000334 xxxx 003614000016         desc9a  FLD2f2, 14      " play around with $ and -
000335 xxxx 003625000014         desc9a  FLD3f2, 12
000336 xxxx 004531701000         call    ioa(msg8, FLD3f2, FLD3f2+1, FLD3f2+2)
000337 xxxx 000345710000 
000340 xxxx 000000000000 
000341 xxxx 003567000000 
000342 xxxx 003625000000 
000343 xxxx 003626000000 
000344 xxxx 003627000000 
000345 xxxx 000000024400         MVNE    (), (), ()      " with (*) protection & (.) insertion
000346 xxxx 003644060010         NDSC4   FLD1g,0,8,2
000347 xxxx 003645000006         desc9a  FLD2g, 6
000350 xxxx 003647000014         desc9a  FLD3g,12
000351 xxxx 004531701000         call    ioa(msg9, FLD3g, FLD3g+1, FLD3g+2)
000352 xxxx 000360710000 
000353 xxxx 000000000000 
000354 xxxx 003630000000 
000355 xxxx 003647000000 
000356 xxxx 003650000000 
000357 xxxx 003651000000 
000360 xxxx 004531701000         call    ioa(MVEmsg)
000361 xxxx 000364710000 
000362 xxxx 000000000000 
000363 xxxx 003652000000 
000364 xxxx 000000020400         MVE    (), (), ()       " move alphanumeric edited
000365 xxxx 003677220024         desc6a   FLD1h(2),20
000366 xxxx 003703000031         desc9a   FLD2h,25       " example in DH02 had 35 - don't think so
000367 xxxx 003712020036         desc6a   FLD3h,30
000370 xxxx 004531701000         call    ioa(msg10, FLD3h, FLD3h+1, FLD3h+2, FLD3h+3, FLD3h+4) 
000371 xxxx 000401710000 
000372 xxxx 000000000000 
000373 xxxx 003656000000 
000374 xxxx 003712000000 
000375 xxxx 003713000000 
000376 xxxx 003714000000 
000377 xxxx 003715000000 
000400 xxxx 003716000000 
000401 xxxx 000000020400         MVE     (), (), ()      " move alphanumeric edited
000402 xxxx 003733000007         desc9a   FLD1i,7        " sending field operand descriptor
000403 xxxx 003735000006         desc9a   FLD2i,6        " micro-op string operand descriptor
000404 xxxx 003740200007         desc9a   FLD3i+1(1),7   " receiving field operand descriptor
000405 xxxx 004531701000         call    ioa(msg11, FLD3i, FLD3i+1, FLD3i+2) 
000406 xxxx 000414710000 
000407 xxxx 000000000000 
000410 xxxx 003717000000 
000411 xxxx 003737000000 
000412 xxxx 003740000000 
000413 xxxx 003741000000 
000414 xxxx 000436710000         tra MLR0
000415 xxxx 050122145163 msgMLR1:    acc     /Result: ^a^a^a (Should be 'QwErTyUiOp')\0xa/
000416 xxxx 165154164072 
000417 xxxx 040136141136 
000420 xxxx 141136141040 
000421 xxxx 050123150157 
000422 xxxx 165154144040 
000423 xxxx 142145040047 
000424 xxxx 121167105162 
000425 xxxx 124171125151 
000426 xxxx 117160047051 
000427 xxxx 012040040040 
000430 xxxx 047121167105 srcMLR1:    aci     /'QwErTyUiOp'/
000431 xxxx 162124171125 
000432 xxxx 151117160047 
000433 xxxx 000000000000 dstMLR1:    bss     3
000436 xxxx 004531701000 MLR0:   call    ioa(MLRmsg)
000437 xxxx 000442710000 
000440 xxxx 000000000000 
000441 xxxx 003742000000 
000442 xxxx 020000100400         MLR     (),(),fill(20)     " move with blank fill
000443 xxxx 003764020014         desc6a  FLD1j,12           " sending descriptor
000444 xxxx 003766420016         desc6a  FLD2j(4),14         " receiving descriptor
000445 xxxx 004531701000         call    ioa(msg12, FLD2j, FLD2j+1, FLD2j+2)
000446 xxxx 000454710000 
000447 xxxx 000000000000 
000450 xxxx 003747000000 
000451 xxxx 003766000000 
000452 xxxx 003767000000 
000453 xxxx 003770000000 
000454 xxxx 400000100400         MLR     (),(),fill(400)
000455 xxxx 004007320011         desc6a  FLD1k(3),9
000456 xxxx 004011640012         desc4a  FLD2k(6),10
000457 xxxx 004531701000         call    ioa(msg13, FLD2k, FLD2k+1)
000460 xxxx 000465710000 
000461 xxxx 000000000000 
000462 xxxx 003771000000 
000463 xxxx 004011000000 
000464 xxxx 004012000000 
000465 xxxx 000013223003         LDX3    =11, DU     " Original had DL which is wrong......
000466 xxxx 040000100413         MLR     (x3), (), fill(040)
000467 xxxx 004025200010         desc9a  FLD1l(1), 8
000470 xxxx 004033000010         desc9a  FLD2l, 8
000471 xxxx 004531701000         call    ioa(msg14, FLD2l, FLD2l+1)
000472 xxxx 000477710000 
000473 xxxx 000000000000 
000474 xxxx 004013000000 
000475 xxxx 004033000000 
000476 xxxx 004034000000 
000477 xxxx 000004235007         LDA     =4,DL
000500 xxxx 000003236007         LDQ     =3,DL
000501 xxxx 040006100405         MLR     (al),(ql), fill(040)
000502 xxxx 004051000003         desc9A  FLD1m, 3
000503 xxxx 004056400003         desc9a  FLD2m(2),3
000504 xxxx 004531701000         call    ioa(msg15, FLD2m, FLD2m+1, FLD2m+2)
000505 xxxx 000513710000 
000506 xxxx 000000000000 
000507 xxxx 004035000000 
000510 xxxx 004056000000 
000511 xxxx 004057000000 
000512 xxxx 004060000000 
000513 xxxx 005047762400         LAR2    =0              " SET AR2 TO ALL 0'S
000514 xxxx 004077623000         EAX3    FLD2n
000515 xxxx 200000507413         AWDX    pr2|0,3         " AR2=address of Y
000516 xxxx 040100100404         MLR     (IC),(pr),fill(040)
000517 xxxx 003355200006         desc9a  FLD1n-*+1(1),6      " was desc9a  5(1),6 ("call" takes up many words....)
000520 xxxx 200000000006         desc9a  pr2|0, 6
000521 xxxx 004531701000         call    ioa(msg16, FLD2n, FLD2n+1)
000522 xxxx 000527710000 
000523 xxxx 000000000000 
000524 xxxx 004061000000 
000525 xxxx 004077000000 
000526 xxxx 004100000000 
000527 xxxx 000430371400         epp5    srcMLR1
000530 xxxx 000433372000         epp6    dstMLR1
000531 xxxx 000014235007         lda     12,dl       " 12-bytes in message
000532 xxxx 000140100540         mlr     (pr,rl),(pr,rl)
000533 xxxx 500000000005         desc9a  pr5|0,al
000534 xxxx 600000000005         desc9a  pr6|0,al
000535 xxxx 004531701000         call    ioa(msgMLR1, dstMLR1, dstMLR1+1, dstMLR1+2)
000536 xxxx 000544710000 
000537 xxxx 000000000000 
000540 xxxx 000415000000 
000541 xxxx 000433000000 
000542 xxxx 000434000000 
000543 xxxx 000435000000 
000544 xxxx 004531701000         call    ioa(MRLmsg)
000545 xxxx 000550710000 
000546 xxxx 000000000000 
000547 xxxx 004101000000 
000550 xxxx 020000101400         MRL     (),(),fill(20)
000551 xxxx 004123020014         desc6a  FLD1o, 12            "ADSC6   FLD1,,12
000552 xxxx 004125420016         desc6a  FLD2o(4), 14         "ADSC6   FLD2,4,14
000553 xxxx 004531701000         call    ioa(msg17, FLD2o, FLD2o+1, FLD2o+2)
000554 xxxx 000562710000 
000555 xxxx 000000000000 
000556 xxxx 004106000000 
000557 xxxx 004125000000 
000560 xxxx 004126000000 
000561 xxxx 004127000000 
000562 xxxx 400000101400         MRL     (),(),fill(400)
000563 xxxx 004147320011         desc6a  FLD1p(3),9
000564 xxxx 004151440014         desc4a  FLD2p(4),12
000565 xxxx 004531701000         call    ioa(msg18, FLD2p, FLD2p+1)
000566 xxxx 000573710000 
000567 xxxx 000000000000 
000570 xxxx 004130000000 
000571 xxxx 004151000000 
000572 xxxx 004152000000 
000573 xxxx 001025710000         tra     MVT0
000574 xxxx 017115126124 MVTmsg: acc     /MVT Tests ...\r\n/ 
000575 xxxx 040124145163 
000576 xxxx 164163040056 
000577 xxxx 056056015012 
000600 xxxx 051122145163 msg19:  acc     /Result: '^n' (Should be '001043105155')\r\n/
000601 xxxx 165154164072 
000602 xxxx 040047136156 
000603 xxxx 047040050123 
000604 xxxx 150157165154 
000605 xxxx 144040142145 
000606 xxxx 040047060060 
000607 xxxx 061060064063 
000610 xxxx 061060065061 
000611 xxxx 065065047051 
000612 xxxx 015012040040 
000613 xxxx 202020202001 FLD1q:  bci     /     123456/
000614 xxxx 020304050620 
000615 xxxx 000000000000 FLD2q:  bss     1       " 0123456-      (Result)
000616 xxxx 000001002003 TABLE1: OCT     000001002003,004005006007  " 0X
000617 xxxx 004005006007 
000620 xxxx 010011017017         OCT     010011017017,017017017017  " 1X
000621 xxxx 017017017017 
000622 xxxx 000017017017         OCT     000017017017,017017017017  " 2X
000623 xxxx 017017017017 
000624 xxxx 017017017017         OCT     017017017017,017017017017  " 3X
000625 xxxx 017017017017 
000626 xxxx 017017017017         OCT     017017017017,017017017017  " 4X
000627 xxxx 017017017017 
000630 xxxx 017017015017         OCT     017017015017,017017017017  " 5X
000631 xxxx 017017017017 
000632 xxxx 014017017017         OCT     014017017017,017017017017  " 6X
000633 xxxx 017017017017 
000634 xxxx 017017017017         OCT     017017017017,017017017017  " 7X
000635 xxxx 017017017017 
000636 xxxx 051122145163 msg20:  acc     /Result: '^n' (Should be '022064126314')\r\n/
000637 xxxx 165154164072 
000640 xxxx 040047136156 
000641 xxxx 047040050123 
000642 xxxx 150157165154 
000643 xxxx 144040142145 
000644 xxxx 040047060062 
000645 xxxx 062060066064 
000646 xxxx 061062066063 
000647 xxxx 061064047051 
000650 xxxx 015012040040 
000651 xxxx 022064126317 FLD3q:  OCT     022064126317    " 123456++
000652 xxxx 000000000000 FLD4q:  BSS     1               " 022064126314  (Result)
000653 xxxx 000001002003 TAB:    OCT     000001002003,004005006007
000654 xxxx 004005006007 
000655 xxxx 010011014014         OCT     010011014014,014015014014
000656 xxxx 014015014014 
000657 xxxx 071122145163 msg21:  acc     "Result: '^a^a^a^a^a' (Should be 'TTYMESSAGE201     !!')\r\n"
000660 xxxx 165154164072 
000661 xxxx 040047136141 
000662 xxxx 136141136141 
000663 xxxx 136141136141 
000664 xxxx 047040050123 
000665 xxxx 150157165154 
000666 xxxx 144040142145 
000667 xxxx 040047124124 
000670 xxxx 131115105123 
000671 xxxx 123101107105 
000672 xxxx 062060061040 
000673 xxxx 040040040040 
000674 xxxx 041041047051 
000675 xxxx 015012040040 
000676 xxxx 636370442562 FLD1r:  BCI     /TTYMESSAGE201      /
000677 xxxx 622127250200 
000700 xxxx 012020202020 
000701 xxxx 202020202020 
000702 xxxx 000000000000 FLD2r:  BSS     5
000707 xxxx 060061062063 TABLE9: aci     '01234567'  " 0X
000710 xxxx 064065066067 
000711 xxxx 070071133043         aci     '89[#@:>?'  " 1X
000712 xxxx 100072076077 
000713 xxxx 040101102103         aci     ' ABCDEFG'  " 2X
000714 xxxx 104105106107 
000715 xxxx 110111046056         aci     'HI&.](<\'  " 3X
000716 xxxx 135050074107 
000717 xxxx 136112113114         aci     '^JKLMNOP'  " 4X
000720 xxxx 115116117120 
000721 xxxx 121122055044         aci     "QR-$*);'"  " 5X
000722 xxxx 052051073047 
000723 xxxx 054057123124         aci     ',/STUVWX'  " 6X 
000724 xxxx 125126127130 
000725 xxxx 131132137054         aci     'YZ_,%="!'  " 7X 
000726 xxxx 045075042041 
000727 xxxx 041122145163 msg22a: acc     /Result: '^a' (Should be '123M')\r\n/
000730 xxxx 165154164072 
000731 xxxx 040047136141 
000732 xxxx 047040050123 
000733 xxxx 150157165154 
000734 xxxx 144040142145 
000735 xxxx 040047061062 
000736 xxxx 063115047051 
000737 xxxx 015012040040 
000740 xxxx 041122145163 msg22b: acc     /Result: '^a' (Should be '1234')\r\n/
000741 xxxx 165154164072 
000742 xxxx 040047136141 
000743 xxxx 047040050123 
000744 xxxx 150157165154 
000745 xxxx 144040142145 
000746 xxxx 040047061062 
000747 xxxx 063064047051 
000750 xxxx 015012040040 
000751 xxxx 000015022064 P6a:    ac4     /   -1234/        "-1234 ——> 123M   (Yes, that's what it's supposed to be)
000752 xxxx 000013022064 P6b:    ac4     /   +1234/        "+1234 ——> 1234
000753 xxxx 323403000404 MOPS:   vfd     9/mvc+3,9/lte+3, o9/0, 9/lte+4  " MICROP  (MVC,3),(LTE,3)m1O000,(LTE,4),1O040,(MORS,1)
000754 xxxx 040361000000         vfd     o9/040, 9/mors+1
000755 xxxx 060061062063 TABLE22:aci     /01234567/        " 0X
000756 xxxx 064065066067 
000757 xxxx 070071000000         VFD     A18/89,18/0,36/0  " 1X
000760 xxxx 000000000000 
000761 xxxx 000000000000         OCT     0,0               " 2X
000762 xxxx 000000000000 
000763 xxxx 000000000000         OCT     0,0               " 3X
000764 xxxx 000000000000 
000765 xxxx 040112113114         ACI     / JKLMNOP/        " 4X
000766 xxxx 115116117120 
000767 xxxx 121122000000         VFD     A18/QR,18/0,36/0  " 5X
000770 xxxx 000000000000 
000771 xxxx 000000000000         OCT     0,0               " 6X
000772 xxxx 000000000000 
000773 xxxx 000000000000         OCT     0,0               " 7X
000774 xxxx 000000000000 
000775 xxxx 000000000000 PRTOUT: BSS     5
001002 xxxx 000000000000 APRINT: BSS     5
001007 xxxx 060061062063 DECTAB: aci     '0123456789+++-+F'  " decimal --> ascii
001010 xxxx 064065066067 
001011 xxxx 070071053053 
001012 xxxx 053055053106 
001013 xxxx 047122145163 msg23:  acc     /Result: '^a^a' (Should be '-1234FFF')\r\n/
001014 xxxx 165154164072 
001015 xxxx 040047136141 
001016 xxxx 136141047040 
001017 xxxx 050123150157 
001020 xxxx 165154144040 
001021 xxxx 142145040047 
001022 xxxx 055061062063 
001023 xxxx 064106106106 
001024 xxxx 047051015012 
001025 xxxx 004531701000         call    ioa(MVTmsg)
001026 xxxx 001031710000 
001027 xxxx 000000000000 
001030 xxxx 000574000000 
001031 xxxx 052000160400         MVT     (),(), fill(52)
001032 xxxx 000613420007         desc6a  FLD1q(4),7
001033 xxxx 000615040010         desc4a  FLD2q,8
001034 xxxx 000616000000         ARG     TABLE1
001035 xxxx 004531701000         call    ioa(msg19, FLD2q)
001036 xxxx 001042710000 
001037 xxxx 000000000000 
001040 xxxx 000600000000 
001041 xxxx 000615000000 
001042 xxxx 000000160400         MVT (), ()
001043 xxxx 000651040010         desc4a  FLD3q, 8     " ADSC4   FLD3,,8
001044 xxxx 000652040010         desc4a  FLD4q, 8     " ADSC4   FLD4,,8
001045 xxxx 000653000000         ARG     TAB
001046 xxxx 004531701000         call    ioa(msg20, FLD4q)
001047 xxxx 001053710000 
001050 xxxx 000000000000 
001051 xxxx 000636000000 
001052 xxxx 000652000000 
001053 xxxx 077000160400         MVT     (), (),  fill(77)    " ! fill
001054 xxxx 000676020022         desc6a  FLD1r, 18           " ADSC6   FLD1,0,18
001055 xxxx 000702000024         desc9a  FLD2r, 20           " ADSC9   FLD2,0,20
001056 xxxx 000707000000         ARG     TABLE9              " pointer to translation table
001057 xxxx 004531701000         call     ioa(msg21, FLD2r, FLD2r+1, FLD2r+2, FLD2r+3, FLD2r+4)
001060 xxxx 001070710000 
001061 xxxx 000000000000 
001062 xxxx 000657000000 
001063 xxxx 000702000000 
001064 xxxx 000703000000 
001065 xxxx 000704000000 
001066 xxxx 000705000000 
001067 xxxx 000706000000 
001070 xxxx 000000024400         MVNE     (), (), ()
001071 xxxx 000751350005         desc4ls  P6a(3),5    " NDSC4   6PACK,3,5,1
001072 xxxx 000753000006         desc9a   MOPS, 6     " ADSC9   MOPS,0,6
001073 xxxx 000775020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
001074 xxxx 000000160400         MVT      (), ()
001075 xxxx 000775020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
001076 xxxx 001002000004         desc9a   APRINT, 4   " ADSC9   APRINT,0,4
001077 xxxx 000755000000         ARG      TABLE22
001100 xxxx 004531701000         call    ioa(msg22a, APRINT)
001101 xxxx 001105710000 
001102 xxxx 000000000000 
001103 xxxx 000727000000 
001104 xxxx 001002000000 
001105 xxxx 000000024400         MVNE     (), (), ()
001106 xxxx 000752350005         desc4ls  P6b(3),5      " NDSC4   6PACK,3,5,1
001107 xxxx 000753000006         desc9a   MOPS, 6       " ADSC9   MOPS,0,6
001110 xxxx 000775020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
001111 xxxx 000000160400         MVT      (), ()
001112 xxxx 000775020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
001113 xxxx 001003000004         desc9a   APRINT+1, 4   " ADSC9   APRINT,0,4
001114 xxxx 000755000000         ARG      TABLE22
001115 xxxx 004531701000         call    ioa(msg22b, APRINT+1)
001116 xxxx 001122710000 
001117 xxxx 000000000000 
001120 xxxx 000740000000 
001121 xxxx 001003000000 
001122 xxxx 017000160400         MVT      (), (),  fill(017)
001123 xxxx 000751340005         desc4a   P6a(3), 5
001124 xxxx 001002000010         desc9a   APRINT, 8
001125 xxxx 001007000000         ARG      DECTAB
001126 xxxx 004531701000         call    ioa(msg23, APRINT, APRINT+1)
001127 xxxx 001134710000 
001130 xxxx 000000000000 
001131 xxxx 001013000000 
001132 xxxx 001002000000 
001133 xxxx 001003000000 
001134 xxxx 001330710000         tra     SCM0
001135 xxxx 042123103115 SCMmsg: acc     /SCM Tests ... (Results 3, 0 & 7)\r\n/
001136 xxxx 040124145163 
001137 xxxx 164163040056 
001140 xxxx 056056040050 
001141 xxxx 122145163165 
001142 xxxx 154164163040 
001143 xxxx 063054040060 
001144 xxxx 040046040067 
001145 xxxx 051015012040 
001146 xxxx 035131157165 BADmsg: acc     /You should not see this....\r\n/
001147 xxxx 040163150157 
001150 xxxx 165154144040 
001151 xxxx 156157164040 
001152 xxxx 163145145040 
001153 xxxx 164150151163 
001154 xxxx 056056056056 
001155 xxxx 015012040040 
001156 xxxx 014122145163 msg24:  acc     /Result: ^d\r\n/
001157 xxxx 165154164072 
001160 xxxx 040136144015 
001161 xxxx 012040040040 
001162 xxxx 101102103104 FLD1s:  aci      /ABCD/     "141 142 143 144 (before mask)
001163 xxxx 060060060064 FLD2s:  aci      /0004/     "064 (before mask)
001164 xxxx 000000000000 FLD3s:  BSS      1          "004 (after mask)
001165 xxxx 000015022064 FLD1t:   ac4     /   -1234/         "EDEC     8P-1234   "0,1,2,3,4      -- which one do we believe?
001166 xxxx 000000000000 FLD3t:   BSS     1
001167 xxxx 103041000000 FLD1u:  ac4  /4321    /     " EDEC  8PL4321  " 2 1
001170 xxxx 000000011207 FLD2u:  ac4  /    0987/     " EDEC  4P0987   " 1
001171 xxxx 000000000000 FLD3u:  BSS  1              " unmatched compare count - 1
001172 xxxx 400000040012 INDSC1u: desc4a  pr4|0, x2      "ADSC4 0,,X2,4    " FLD1 operand desc (FLD1,2,2)
001173 xxxx 001170400001 INDSC2u: desc9a  FLD2u(2),1       "ADSC9 FLD2,0     " FLD2 operand desc (FLD2,1)
001174 xxxx 022106157165 foundA: acc "Found an 'A' ...\r\n"
001175 xxxx 156144040141 
001176 xxxx 156040047101 
001177 xxxx 047040056056 
001200 xxxx 056015012040 
001201 xxxx 021106157165 foundG: acc "Found a 'G' ...\r\n"
001202 xxxx 156144040141 
001203 xxxx 040047107047 
001204 xxxx 040056056056 
001205 xxxx 015012040040 
001206 xxxx 021106157165 foundw: acc "Found a 'w' ...\r\n"
001207 xxxx 156144040141 
001210 xxxx 040047167047 
001211 xxxx 040056056056 
001212 xxxx 015012040040 
001213 xxxx 022106157165 foundo: acc "Found an 'o' ...\r\n"
001214 xxxx 156144040141 
001215 xxxx 156040047157 
001216 xxxx 047040056056 
001217 xxxx 056015012040 
001220 xxxx 021106157165 foundn: acc "Found a 'n' ...\r\n"
001221 xxxx 156144040141 
001222 xxxx 040047156047 
001223 xxxx 040056056056 
001224 xxxx 015012040040 
001225 xxxx 021106157165 foundd: acc "Found a 'd' ...\r\n"
001226 xxxx 156144040141 
001227 xxxx 040047144047 
001230 xxxx 040056056056 
001231 xxxx 015012040040 
001232 xxxx 022106157165 founda: acc "Found an 'a' ...\r\n"
001233 xxxx 156144040141 
001234 xxxx 156040047141 
001235 xxxx 047040056056 
001236 xxxx 056015012040 
001237 xxxx 021106157165 foundg: acc "Found a 'g' ...\r\n"
001240 xxxx 156144040141 
001241 xxxx 040047147047 
001242 xxxx 040056056056 
001243 xxxx 015012040040 
001244 xxxx 130130147130 SCM4in: aci     "XXgX"
001245 xxxx 000000000000 SCM4tally:  bss 1
001246 xxxx 101107167157 erkey:  aci     "AGwondag"
001247 xxxx 156144141147 
001250 xxxx 001260710000 ertable:tra     err_A
001251 xxxx 001265710000         tra     err_G
001252 xxxx 001272710000         tra     err_w
001253 xxxx 001277710000         tra     err_o
001254 xxxx 001304710000         tra     err_n
001255 xxxx 001311710000         tra     err_d
001256 xxxx 001316710000         tra     err_a
001257 xxxx 001323710000         tra     err_g
001260 xxxx 004531701000 err_A:  call    ioa(foundA)
001261 xxxx 001264710000 
001262 xxxx 000000000000 
001263 xxxx 001174000000 
001264 xxxx 001401710000         tra     SCM4
001265 xxxx 004531701000 err_G:  call    ioa(foundG)
001266 xxxx 001271710000 
001267 xxxx 000000000000 
001270 xxxx 001201000000 
001271 xxxx 001401710000         tra     SCM4
001272 xxxx 004531701000 err_w:  call    ioa(foundw)
001273 xxxx 001276710000 
001274 xxxx 000000000000 
001275 xxxx 001206000000 
001276 xxxx 001401710000         tra     SCM4
001277 xxxx 004531701000 err_o:  call    ioa(foundo)
001300 xxxx 001303710000 
001301 xxxx 000000000000 
001302 xxxx 001213000000 
001303 xxxx 001401710000         tra     SCM4
001304 xxxx 004531701000 err_n:  call    ioa(foundn)
001305 xxxx 001310710000 
001306 xxxx 000000000000 
001307 xxxx 001220000000 
001310 xxxx 001401710000         tra     SCM4
001311 xxxx 004531701000 err_d:  call    ioa(foundd)
001312 xxxx 001315710000 
001313 xxxx 000000000000 
001314 xxxx 001225000000 
001315 xxxx 001401710000         tra     SCM4
001316 xxxx 004531701000 err_a:  call    ioa(founda)
001317 xxxx 001322710000 
001320 xxxx 000000000000 
001321 xxxx 001232000000 
001322 xxxx 001401710000         tra     SCM4
001323 xxxx 004531701000 err_g:  call    ioa(foundg)
001324 xxxx 001327710000 
001325 xxxx 000000000000 
001326 xxxx 001237000000 
001327 xxxx 001401710000         tra     SCM4
001330 xxxx 004531701000         call    ioa(SCMmsg)
001331 xxxx 001334710000 
001332 xxxx 000000000000 
001333 xxxx 001135000000 
001334 xxxx 760000124400         SCM     (),(), mask(760) "mask to eliminate zone bits
001335 xxxx 001162000004         desc9a  FLD1s,4         "character string operand desc
001336 xxxx 001163600000         desc9a  FLD2s(3),0      "compare character operand desc
001337 xxxx 001164000000         ARG     FLD3s           "pointer to unmatched count word
001340 xxxx 001346607000         TTF     GOT.IT          "match found - on 4th character
001341 xxxx 004531701000 NO.GOT: call    ioa(BADmsg)     "no match -  tally runout ON
001342 xxxx 001345710000 
001343 xxxx 000000000000 
001344 xxxx 001146000000 
001345 xxxx 000000616000         dis
001346 xxxx 004531701000 GOT.IT: call    ioa(msg24, FLD3s)
001347 xxxx 001353710000 
001350 xxxx 000000000000 
001351 xxxx 001156000000 
001352 xxxx 001164000000 
001353 xxxx 000003124400         SCM      (),(DU)
001354 xxxx 001165340005         desc4a   FLD1t(3),5      "ADSC4    FLD1,3,5
001355 xxxx 321000000000         ac4      /-1      /      "EDEC     8PL-1
001356 xxxx 001166000000         ARG      FLD3t
001357 xxxx 001341606400         TTN      NO.GOT
001360 xxxx 004531701000         call    ioa(msg24, FLD3t)
001361 xxxx 001365710000 
001362 xxxx 000000000000 
001363 xxxx 001156000000 
001364 xxxx 001166000000 
001365 xxxx 000000124400         scm     (),()           "search table of keys
001366 xxxx 001246000010         desc9a	erkey,8
001367 xxxx 001244400001         desc9a  SCM4in(2),1
001370 xxxx 001245000000         arg     SCM4tally
001371 xxxx 001341606400         ttn     NO.GOT          "tra if not legal key
001372 xxxx 004531701000         call    ioa (msg24, SCM4tally)
001373 xxxx 001377710000 
001374 xxxx 000000000000 
001375 xxxx 001156000000 
001376 xxxx 001245000000 
001377 xxxx 001245236000         ldq     SCM4tally		" get character key index
001400 xxxx 001250710026         tra     ertable,ql* " dispatch on key
001401 xxxx 001420710000         tra     SCMR0
001402 xxxx 037123103115 SCMRmsg: acc     /SCMR Tests (Results 3 & 4)...\r\n/
001403 xxxx 122040124145 
001404 xxxx 163164163040 
001405 xxxx 050122145163 
001406 xxxx 165154164163 
001407 xxxx 040063040046 
001410 xxxx 040064051056 
001411 xxxx 056056015012 
001412 xxxx 145103041320 FLD1v:   ac4     /654321- /       " EDEC      8PL654321-   6, 5, 4, 3, 2, 1
001413 xxxx 000000000000 FLD3v:   DEC     0                " result - match found on 4th character
001414 xxxx 001043105155 FLD1w:  ac4      /0123456-/         " 2,3,4,5,6,-
001415 xxxx 000000000000 FLD3w:  DEC      0                  " unmatched compare count - 4
001416 xxxx 400000040016         desc4a   pr4|0,x6           " FLD1 operand desc(FLD 1,2,6)
001417 xxxx 060000000000 FLD2w:  ac4      /3       /         " FLD2 compare character 3
001420 xxxx 004531701000         call    ioa(SCMRmsg)
001421 xxxx 001424710000 
001422 xxxx 000000000000 
001423 xxxx 001402000000 
001424 xxxx 760003125400         SCMR    (),(DU), mask(760)     " DU type register mod with mask
001425 xxxx 001412040006         desc4a  FLD1v, 6               " character string operand desc
001426 xxxx 100000000000         ac4     /4       /             " 1P4 FLD2's compare character - 4
001427 xxxx 001413000000         ARG     FLD3v                  " pointer to unmatched count word
001430 xxxx 001341606400         TTN     NO.GOT
001431 xxxx 004531701000         call    ioa (msg24, FLD3v)
001432 xxxx 001436710000 
001433 xxxx 000000000000 
001434 xxxx 001156000000 
001435 xxxx 001413000000 
001436 xxxx 000006626000         EAX6     6                  " load FLD1 length (-2) into x6
001437 xxxx 000002622000         EAX2     2                  " load character modifier into x2
001440 xxxx 001414624000         EAX4     FLD1w              " load FLD1 address into x4
001441 xxxx 400000507414         AWDX     pr4|0,4            " put FLD1 address into AR4
001442 xxxx 760000125572         SCMR     (pr,rl,id,x2),(), mask(760)        " with all options
001443 xxxx 001416000000         ARG      FLD3w+1            " pointer to FLD1 indirect desc
001444 xxxx 001417040000         desc4a   FLD2w              " pointer to compare character
001445 xxxx 001415000000         ARG      FLD3w              " pointer to unmatched count word
001446 xxxx 001341606400         TTN      NO.GOT             " no match - tally runout ON
001447 xxxx 004531701000         call    ioa (msg24, FLD3w)
001450 xxxx 001454710000 
001451 xxxx 000000000000 
001452 xxxx 001156000000 
001453 xxxx 001415000000 
001454 xxxx 004531701000         call    ioa(TCTmsg)
001455 xxxx 001460710000 
001456 xxxx 000000000000 
001457 xxxx 004153000000 
001460 xxxx 000000164400         TCT      ()         "     no modification
001461 xxxx 004175020014         desc6a   FLD1x,12   " indexing string operand descr.
001462 xxxx 004200000000         ARG      TABLEx     " pointer to table
001463 xxxx 004177000000         ARG      FLD3x      " pointer to char. & count word
001464 xxxx 001341606400         TTN     NO.GOT
001465 xxxx 004531701000         call    ioa (msg24o, FLD3x)
001466 xxxx 001472710000 
001467 xxxx 000000000000 
001470 xxxx 004171000000 
001471 xxxx 004177000000 
001472 xxxx 000002622000         EAX2     2           " put 2 into X2
001473 xxxx 004205623000         EAX3     FLD1y       " put FLD1 address into X3
001474 xxxx 000006626000         EAX6     6           " put 6 into X6
001475 xxxx 700000507413         AWDX     pr7|0,3     " put FLD1 address into AR7
001476 xxxx 000000164572         TCT      (pr,rl,id,x2)   " with all modification options
001477 xxxx 004210000000         ARG      INDSCRy     " ptr. indirect operand descr.
001500 xxxx 004211000000         ARG      TABLEy
001501 xxxx 004207000000         ARG      FLD3y       " pointer to FLD3
001502 xxxx 001341606400         TTN     NO.GOT
001503 xxxx 004531701000         call    ioa (msg24o, FLD3y)
001504 xxxx 001510710000 
001505 xxxx 000000000000 
001506 xxxx 004171000000 
001507 xxxx 004207000000 
001510 xxxx 004531701000         call    ioa(TCTRmsg)
001511 xxxx 001514710000 
001512 xxxx 000000000000 
001513 xxxx 004230000000 
001514 xxxx 000000165400         TCTR                " no modification
001515 xxxx 004242640012         desc4a  FLD1z(6),10 " indexing string operand descr
001516 xxxx 004245000000         ARG     TABLEz      " pointer to table
001517 xxxx 004244000000         ARG     FLD3z       " pointer to char. & count word
001520 xxxx 001341607000         TTF     NO.GOT      " nonzero found
001521 xxxx 004531701000         call    ioa (msg24o, FLD3z)
001522 xxxx 001526710000 
001523 xxxx 000000000000 
001524 xxxx 004171000000 
001525 xxxx 004244000000 
001526 xxxx 004531701000         call    ioa (CMPCmsg)
001527 xxxx 001532710000 
001530 xxxx 000000000000 
001531 xxxx 004251000000 
001532 xxxx 020000106400         CMPC    (), (), fill(020)       " compare with blank fill
001533 xxxx 004263020006         desc6a  FLD1aa,6    " field 1 operand descriptor
001534 xxxx 004264420004         desc6a  FLD2aa(4),4 " field 2 operand descriptor
001535 xxxx 001540600000         TZE     EQUALaa     " both fields equal
001536 xxxx 001341603000         TRC     NO.GOT      " field 1 greater
001537 xxxx 001341710000         TRA     NO.GOT      " field 1 less
001540 xxxx 004531701000 EQUALaa:call    ioa(msg25)
001541 xxxx 001544710000 
001542 xxxx 000000000000 
001543 xxxx 004256000000 
001544 xxxx 001554710000         TRA     SCD0
001545 xxxx 032123103104 SCDmsg:    acc     "SCD Tests ... 5, 16, & 3\r\n"
001546 xxxx 040124145163 
001547 xxxx 164163040056 
001550 xxxx 056056040065 
001551 xxxx 054040061066 
001552 xxxx 054040046040 
001553 xxxx 063015012040 
001554 xxxx 004531701000         call    ioa (SCDmsg)
001555 xxxx 001560710000 
001556 xxxx 000000000000 
001557 xxxx 001545000000 
001560 xxxx 000000120400         SCD
001561 xxxx 001573020006         desc6a   FLD1ab,6
001562 xxxx 001574320000         desc6a   FLD2ab(3)
001563 xxxx 001575000000         ZERO     FLD3ab
001564 xxxx 001341607000         TTF      NO.GOT     " If we get a match
001565 xxxx 004531701000         call    ioa (msg24o, FLD3ab)
001566 xxxx 001572710000 
001567 xxxx 000000000000 
001570 xxxx 004171000000 
001571 xxxx 001575000000 
001572 xxxx 001576710000         TRA     NEXT
001573 xxxx 010203040506 FLD1ab:  BCI      /123456/    " 123456
001574 xxxx 060504030201 FLD2ab:  BCI      /654321/    " 32
001575 xxxx 000000000000 FLD3ab:  BSS      1           " unmatched count - 5
001576 xxxx 000000120400        SCD                 "with no options
001577 xxxx 004266020030        desc6a  DATA,24     "24 characters fetched from lower
001600 xxxx 004273020002        desc6a  COMP,2      "DATA in units of 2 chars. and
001601 xxxx 004272000000        ARG     COUNT       "compared with HH when HH found in
001602 xxxx 001341606400        TTN     NO.GOT      " no match found
001603 xxxx 004531701000        call    ioa (msg24o, COUNT)
001604 xxxx 001610710000 
001605 xxxx 000000000000 
001606 xxxx 004171000000 
001607 xxxx 004272000000 
001610 xxxx 000005625000        EAX5     5        " load 5 into X5
001611 xxxx 000007627000        EAX7     7        " load 7 into X7
001612 xxxx 004274624000        EAX4     FLD1ad   " load FLD1 address into X4
001613 xxxx 400000507414        AWDX     pr4|0,4  " put FLD1 address into AR4
001614 xxxx 000003120555        SCD      (pr,rl,x5),(DU)
001615 xxxx 400000000017        desc9a   pr4|0,X7 " FLD1 operand pointer (FLD1+1,1,7)
001616 xxxx 064065000000 FLD2ad:VFD      A18/45    " FLD2 operand  " ahould be A18
001617 xxxx 004277000000        ARG      FLD3ad   " pointer to count FLD3
001620 xxxx 001341606400        TTN      NO.GOT
001621 xxxx 004531701000        call    ioa (msg24o, FLD3ad)
001622 xxxx 001626710000 
001623 xxxx 000000000000 
001624 xxxx 004171000000 
001625 xxxx 004277000000 
001626 xxxx 001635710000         tra     SCDR0
001627 xxxx 026123103104 SCDRmsg:    acc     "SCDR Tests ... 6 & 3\r\n"
001630 xxxx 122040124145 
001631 xxxx 163164163040 
001632 xxxx 056056056040 
001633 xxxx 066040046040 
001634 xxxx 063015012040 
001635 xxxx 004531701000        call    ioa(SCDRmsg)
001636 xxxx 001641710000 
001637 xxxx 000000000000 
001640 xxxx 001627000000 
001641 xxxx 000003121400        SCDR     (),(DU)       " DU modification of FLD2 operand descriptor
001642 xxxx 001654000010        desc9a   FLD1ae,8      " scanned string operand descriptor
001643 xxxx 101102000000        VFD      A18/AB         " FLD2 character pair - A B
001644 xxxx 001656000000        ARG      FLD3ae        " pointer count word
001645 xxxx 001341606400        TTN      NO.GOT        " match not found - tally runout ON
001646 xxxx 004531701000        call    ioa (msg24o, FLD3ae)
001647 xxxx 001653710000 
001650 xxxx 000000000000 
001651 xxxx 004171000000 
001652 xxxx 001656000000 
001653 xxxx 001657710000         tra    SCDR2
001654 xxxx 101102103104 FLD1ae:aci      /ABCDE/       " A,B,C,D,E,
001655 xxxx 105000000000 
001656 xxxx 000000000000 FLD3ae:BSS      1             " unmatched count - 6
001657 xxxx 000001622000        EAX2     1           " load 1 into x2
001660 xxxx 001675623000        EAX3     FLD1af      " load FLD1 address into X3
001661 xxxx 400000507413        AWDX     PR4|0,3     " put FLD1 address into AR4
001662 xxxx 000003121512        SCDR     (pr,x2),(DU) " with address modification
001663 xxxx 400000040007        desc4a   pr4|0,7     " FLD1 operand descriptor - (FLD 1,1,7) (7 is length not x7)
001664 xxxx 043000000000        ac4      /23/        " FLD2 operand descriptor pointer
001665 xxxx 001676000000        ARG      FLD3af      " pointer to count word
001666 xxxx 001341606400        TTN      NO.GOT      " no match - tally runout ON
001667 xxxx 004531701000        call    ioa (msg24o, FLD3af)
001670 xxxx 001674710000 
001671 xxxx 000000000000 
001672 xxxx 004171000000 
001673 xxxx 001676000000 
001674 xxxx 001677710000        tra     CMPB0
001675 xxxx 000022064126 FLD1af:ac4      /  123456/    " 0123456 VS 23
001676 xxxx 000000000000 FLD3af:BSS      1             " unmatched count - 3
001677 xxxx 004531701000 CMPB0:  call    ioa(CMPBmsg)
001700 xxxx 001703710000 
001701 xxxx 000000000000 
001702 xxxx 004300000000 
001703 xxxx 400000066400 CMPB1:  CMPB    (),(),fill(1)       " fill bit 1 option
001704 xxxx 001710000055         descb   FLD1ag, 45
001705 xxxx 001712000060         descb   FLD2ag,48
001706 xxxx 001714603000         TRC     EQU.GR              " FLD1 equal/greater than FLD2
001707 xxxx 001341710000         TRA     NO.GOT
001710 xxxx 000000000000 FLD1ag: OCT     0,777700000000      " 0000000000007777
001711 xxxx 777700000000 
001712 xxxx 000000000000 FLD2ag: OCT     0,777000000000      " 0000000000007770
001713 xxxx 777000000000 
001714 xxxx 004531701000 EQU.GR: call ioa(msg26)
001715 xxxx 001720710000 
001716 xxxx 000000000000 
001717 xxxx 004305000000 
001720 xxxx 000000066400 CMPB2:  CMPB                        " no options
001721 xxxx 001726000044         descb   FLD1ah, 36
001722 xxxx 001727230023         descb   FLD2ah(12), 19
001723 xxxx 001341600000         TZE     NO.GOT              " FLD1 = FLD2
001724 xxxx 001341603000         TRC     NO.GOT              " FLD1 > FLD2
001725 xxxx 001730710000         TRA     FLD1LS              " FLD1 < FLD2
001726 xxxx 777777000000 FLD1ah: VFD     18/-1               " 777777000000
001727 xxxx 000077777740 FLD2ah: VFD     12/0,19/-1          " 777777400000
001730 xxxx 004531701000 FLD1LS: call ioa(msg27)
001731 xxxx 001734710000 
001732 xxxx 000000000000 
001733 xxxx 004312000000 
001734 xxxx 000014622000         EAX2    12          " load FLD1 bit modifier into X2
001735 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
001736 xxxx 001745624000         EAX4    FLD1ai      " load FLD1 address into X4
001737 xxxx 400000507414         AWDX    4|0,4       " put FLD1 address into AR4
001740 xxxx 000020066552         CMPB    (pr,rl,x2),(id)
001741 xxxx 400000000016         descb   pr4|0,x6  " FLD1 operand descriptor
001742 xxxx 001747000000         ARG     INDSCR      " FLD2 indirect descriptor ptr.
001743 xxxx 001750600000         TZE     EQUAL       " FLD1 = FLD2
001744 xxxx 001341710000         TRA     NO.GOT
001745 xxxx 000001000000 FLD1ai: VFD     12/0,6/1   " 770 000077000000 [sic]
001746 xxxx 000000000100 FLD2ai: VFD     24/0,6/1   " 770 000000007700 [sic]
001747 xxxx 001746460011 INDSCR: BDSC    FLD2ai,9,2,6
001750 xxxx 004531701000 EQUAL:  call     ioa(msg28)
001751 xxxx 001754710000 
001752 xxxx 000000000000 
001753 xxxx 004317000000 
001754 xxxx 001761710000         tra     CSL0
001755 xxxx 017103123114 CSLmsg:    acc     "CSL Tests ...\r\n"
001756 xxxx 040124145163 
001757 xxxx 164163040056 
001760 xxxx 056056015012 
001761 xxxx 004531701000          call    ioa(CSLmsg)
001762 xxxx 001765710000 
001763 xxxx 000000000000 
001764 xxxx 001755000000 
001765 xxxx 007000060400         CSL     (),(),bool(07)  ",enablefault " OR - truncation enable option
001766 xxxx 001776230030         descb   FLD1aj(12), 24      " FLD1 operand descriptor
001767 xxxx 001777000022         descb   FLD2aj, 18          " FLD2 operand descriptor
001770 xxxx 004531701000         call    ioa (msg24o, FLD2aj)
001771 xxxx 001775710000 
001772 xxxx 000000000000 
001773 xxxx 004171000000 
001774 xxxx 001777000000 
001775 xxxx 002000710000         tra     CSL2
001776 xxxx 000077777700 FLD1aj: VFD      12/0,18/-1,6/0     " 000077777700
001777 xxxx 000000235012 FLD2aj: LDA      0,2                " 000000235012
002000 xxxx 406000060400         CSL     (),(),bool(06),fill(1)      " exclusive OR, fill bit 1 opt
002001 xxxx 000000000000         descb   0, 0         " FLD1 operand descriptor (0-length field)
002002 xxxx 002011400022         descb   FLD2ak(18),18  " FLD2 operand descriptor
002003 xxxx 004531701000         call    ioa (msg24o, FLD2ak)
002004 xxxx 002010710000 
002005 xxxx 000000000000 
002006 xxxx 004171000000 
002007 xxxx 002011000000 
002010 xxxx 002012710000         tra     CSL3
002011 xxxx 000000000000 FLD2ak: DEC     0           " 000000000000
002012 xxxx 000014626000         EAX6    12              " char/bit address mod to X6
002013 xxxx 000066627000         EAX7    54              " load FLD2 length into X7
002014 xxxx 002034624000         EAX4    FLD2al          " load FLD2 address into X4
002015 xxxx 400000507414         AWDX    pr4|0,4         " put FLD2 address into AR4
002016 xxxx 000156060420         CSL     (id),(ar,rl,x6) " clear operation with address modifications
002017 xxxx 000002000014         ARG     2,4             " pointer to FLD1 indirect operand descriptor
002020 xxxx 400000000017         descb   pr4|0, x7       " FLD2 operand descriptor (FLD2,54,1,3)
002021 xxxx 004531701000         call    ioa (msg24o, FLD2al)
002022 xxxx 002026710000 
002023 xxxx 000000000000 
002024 xxxx 004171000000 
002025 xxxx 002034000000 
002026 xxxx 004531701000         call    ioa (msg24o, FLD2al+1)
002027 xxxx 002033710000 
002030 xxxx 000000000000 
002031 xxxx 004171000000 
002032 xxxx 002035000000 
002033 xxxx 002043710000         tra     CSR0
002034 xxxx 777777777777 FLD2al: VFD      36/-1,36/-1    " 777777777777
002035 xxxx 777777777777 
002036 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor (control field zeros)
002037 xxxx 017103123122 CSRmsg: acc     "CSR Tests ...\r\n"
002040 xxxx 040124145163 
002041 xxxx 164163040056 
002042 xxxx 056056015012 
002043 xxxx 004531701000         call    ioa(CSRmsg)
002044 xxxx 002047710000 
002045 xxxx 000000000000 
002046 xxxx 002037000000 
002047 xxxx 014000061400         CSR     (),(),bool(14)",enablefault  " invert with truncation fault enable option
002050 xxxx 002060400022         descb   FLD1am(18),18   " FLD1 operand descriptor
002051 xxxx 002061000014         descb   FLD2am,12       " FLD2 operand descriptor
002052 xxxx 004531701000         call    ioa(msg24o, FLD2am)
002053 xxxx 002057710000 
002054 xxxx 000000000000 
002055 xxxx 004171000000 
002056 xxxx 002061000000 
002057 xxxx 002062710000         tra     CSR2
002060 xxxx 000000444444 FLD1am: OCT     444444          " 000000444444
002061 xxxx 000000000000 FLD2am: DEC     0               " 333300000000  (Result)
002062 xxxx 017000061400         CSR     (),(),bool(17)  " force ones operation
002063 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor
002064 xxxx 002073000044         BDSC    FLD2an,36,0,0   " FLD2 operand descriptor
002065 xxxx 004531701000         call    ioa(msg24o, FLD2an)
002066 xxxx 002072710000 
002067 xxxx 000000000000 
002070 xxxx 004171000000 
002071 xxxx 002073000000 
002072 xxxx 002107710000         tra     SZTL0
002073 xxxx 000000000000 FLD2an: BSS     1               " 777777777777   (Result)
002074 xxxx 020123132124 SZTLmsg:   acc  "SZTL Tests ...\r\n"
002075 xxxx 114040124145 
002076 xxxx 163164163040 
002077 xxxx 056056056015 
002100 xxxx 012040040040 
002101 xxxx 013061056040 msg29:     acc  "1. Passed\r\n"
002102 xxxx 120141163163 
002103 xxxx 145144015012 
002104 xxxx 013062056040 msg30:     acc  "2. Passed\r\n"
002105 xxxx 120141163163 
002106 xxxx 145144015012 
002107 xxxx 004531701000        call     ioa(SZTLmsg)
002110 xxxx 002113710000 
002111 xxxx 000000000000 
002112 xxxx 002074000000 
002113 xxxx 006000064400         SZTL     (),(),bool(6)   " exclusive OR operation
002114 xxxx 002121000044         BDSC     FLD1ao,36,0,0   " FLD1 operand descriptor
002115 xxxx 002122010043         BDSC     FLD2ao,35,0,1   " FLD2 operand descriptor
002116 xxxx 001341601000         TNZ      NO.GOT          " zero should be ON
002117 xxxx 002123600400         TRTN     SZTL1b          " truncation indicator ON
002120 xxxx 001341710000         TRA      NO.GOT          " memory contents in octal
002121 xxxx 777777777777 FLD1ao: DEC      -1              " 777777777777
002122 xxxx 777777777777 FLD2ao: DEC      -1              " 777777777777
002123 xxxx 004531701000         call    ioa(msg29)
002124 xxxx 002127710000 
002125 xxxx 000000000000 
002126 xxxx 002101000000 
002127 xxxx 000000634007        LDI      0,DL        
002130 xxxx 777777227003        LDX7     -1,DU           " load negative value into X7
002131 xxxx 002137754000        STI      FLD1ap          " store processor indicators
002132 xxxx 001000064400        SZTL     (),(),bool(1)   " AND operation
002133 xxxx 002137410001        descb    FLD1ap(19),1    " FLD1 operand descriptor
002134 xxxx 002140410001        descb    FLD2ap(19),1    " FLD2 operand descriptor
002135 xxxx 001341600000        TZE      NO.GOT          " If ZERO is ON then this is an error. not zero - neg indicator ON
002136 xxxx 002141710000        TRA      SZTL2b          " memory contents in octal
002137 xxxx 000000000000 FLD1ap:BSS      1               " x x x x x x 2 0 0 0 0 0
002140 xxxx 000000200000 FLD2ap:oct      200000          " 0 0 0 0 0 0 2 0 0 0 0 0
002141 xxxx 004531701000         call    ioa(msg30)
002142 xxxx 002145710000 
002143 xxxx 000000000000 
002144 xxxx 002104000000 
002145 xxxx 000025634000 	ldi	ovr_mask
002146 xxxx 002162710000         tra     SZTR0
002147 xxxx 021123132124 SCTRmsg: acc    "SZTR Tests ....\r\n"
002150 xxxx 122040124145 
002151 xxxx 163164163040 
002152 xxxx 056056056056 
002153 xxxx 015012040040 
002154 xxxx 013061056040 msg31:   acc    "1. Passed\r\n"
002155 xxxx 120141163163 
002156 xxxx 145144015012 
002157 xxxx 013062056040 msg32:   acc    "2. Passed\r\n"
002160 xxxx 120141163163 
002161 xxxx 145144015012 
002162 xxxx 004531701000         call    ioa(SCTRmsg)
002163 xxxx 002166710000 
002164 xxxx 000000000000 
002165 xxxx 002147000000 
002166 xxxx 003000065400        SZTR     (),(),bool(3)",enablefault       " evaluate FLD1 as is (move)
002167 xxxx 002173410001        descb    FLD1aq(19),1    " FLD1 operand descr. (bit 19)
002170 xxxx 000000000001        descb    0,1             " FLD2 operand descriptor
002171 xxxx 001341600000        TZE      NO.GOT          " if ZERO it's an error
002172 xxxx 002174710000        TRA      SZTR1b
002173 xxxx 000000200000 FLD1aq:  oct      200000     " 0 0 0 0 0 0 2 0 0 0 0 0
002174 xxxx 004531701000 SZTR1b: call    ioa(msg31)
002175 xxxx 002200710000 
002176 xxxx 000000000000 
002177 xxxx 002154000000 
002200 xxxx 004531701000         call    ioa(msg24o, FLD1aq)
002201 xxxx 002205710000 
002202 xxxx 000000000000 
002203 xxxx 004171000000 
002204 xxxx 002173000000 
002205 xxxx 000000634007         LDI     0,DL       " clear processor indicators
002206 xxxx 000000227003         LDX7    0,DU       " load zeros into X7
002207 xxxx 002227754000         STI     FLD1ar     " store processor indicators
002210 xxxx 014000065400         SZTR    (),(),bool(14) " invert
002211 xxxx 002227400001         descb   FLD1ar(18),1 " FLD1 operand descr. (bit 18)
002212 xxxx 000000000001         BDSC    0,1        " FLD2 operand descriptor
002213 xxxx 001341601000         TNZ     NO.GOT     " zero indicator ON
002214 xxxx 004531701000         call     ioa(msg32)
002215 xxxx 002220710000 
002216 xxxx 000000000000 
002217 xxxx 002157000000 
002220 xxxx 004531701000         call    ioa(msg24o, FLD1ar)
002221 xxxx 002225710000 
002222 xxxx 000000000000 
002223 xxxx 004171000000 
002224 xxxx 002227000000 
002225 xxxx 000025634000 	ldi	ovr_mask
002226 xxxx 002306710000         tra     EISdec0
002227 xxxx 000000000000 FLD1ar: dec     0           " x x x x x x 4 0 0 0 0 0 (Hey what about NBAR & ABS?)
002230 xxxx 021101104062 AD2Dmsg:    acc     "AD2D Tests ....\r\n"
002231 xxxx 104040124145 
002232 xxxx 163164163040 
002233 xxxx 056056056056 
002234 xxxx 015012040040 
002235 xxxx 070061056040 msg33:      acc     /1. Result: ^n ^n (Should be 053071070066 063066066000)\r\n/
002236 xxxx 122145163165 
002237 xxxx 154164072040 
002240 xxxx 136156040136 
002241 xxxx 156040050123 
002242 xxxx 150157165154 
002243 xxxx 144040142145 
002244 xxxx 040060065063 
002245 xxxx 060067061060 
002246 xxxx 067060060066 
002247 xxxx 066040060066 
002250 xxxx 063060066066 
002251 xxxx 060066066060 
002252 xxxx 060060051015 
002253 xxxx 012040040040 
002254 xxxx 070062056040 msg34:      acc     /2. Result: ^n ^n (Should be 053061063063 064000000000)\r\n/
002255 xxxx 122145163165 
002256 xxxx 154164072040 
002257 xxxx 136156040136 
002260 xxxx 156040050123 
002261 xxxx 150157165154 
002262 xxxx 144040142145 
002263 xxxx 040060065063 
002264 xxxx 060066061060 
002265 xxxx 066063060066 
002266 xxxx 063040060066 
002267 xxxx 064060060060 
002270 xxxx 060060060060 
002271 xxxx 060060051015 
002272 xxxx 012040040040 
002273 xxxx 050063056040 msg35:      acc     /3. Result: ^n (Should be 001023105153)\r\n/
002274 xxxx 122145163165 
002275 xxxx 154164072040 
002276 xxxx 136156040050 
002277 xxxx 123150157165 
002300 xxxx 154144040142 
002301 xxxx 145040060060 
002302 xxxx 061060062063 
002303 xxxx 061060065061 
002304 xxxx 065063051015 
002305 xxxx 012040040040 
002306 xxxx 004531701000             call    ioa (AD2Dmsg)
002307 xxxx 002312710000 
002310 xxxx 000000000000 
002311 xxxx 002230000000 
002312 xxxx 000200202400             ad2d    (), (), round
002313 xxxx 002324227607             ndsc9   FLD1as,1,7,2,-2
002314 xxxx 002326000010             ndsc9   FLD2as,0,8
002315 xxxx 004531701000             call    ioa(msg33, FLD2as, FLD2as+1)
002316 xxxx 002323710000 
002317 xxxx 000000000000 
002320 xxxx 002235000000 
002321 xxxx 002326000000 
002322 xxxx 002327000000 
002323 xxxx 002330710000             tra     AD2D2
002324 xxxx 040061062063 FLD1as:     aci     / 123450-/      " -1234.50
002325 xxxx 064065060055 
002326 xxxx 053060060071 FLD2as:     aci     /+009/
002327 xxxx 070067066002             vfd     a27/876,9/2
002330 xxxx 000000202400             AD2D    (), ()  ", enablefault "with truncation enable option
002331 xxxx 002342067610             NDSC4   FLD1at,0,8,2,-2     "FLD1 addend operand descriptor
002332 xxxx 002343000006             NDSC9   FLD2at,0,6          "FLD2 addend operand descriptor memory contents
002333 xxxx 004531701000             call    ioa(msg34, FLD2at, FLD2at+1)
002334 xxxx 002341710000 
002335 xxxx 000000000000 
002336 xxxx 002254000000 
002337 xxxx 002343000000 
002340 xxxx 002344000000 
002341 xxxx 002345710000             tra     AD2D3
002342 xxxx 001043105153 FLD1at:     ac4     /0123456+/      "0123456+
002343 xxxx 053060060060 FLD2at:     vfd     a36/+000,a9/1, 9/2   "+00012
002344 xxxx 061002000000 
002345 xxxx 400000202400             AD2D    (),(),ascii     "   with plus sign octal 13 option
002346 xxxx 002356000004             NDSC9   FLD1au,0,4      "FLD1 addend operand descriptor
002347 xxxx 002357167407             NDSC4   FLD2au,1,7,2,-4 "FLD2 addend operand descriptor
002350 xxxx 004531701000             call    ioa(msg35, FLD2au)
002351 xxxx 002355710000 
002352 xxxx 000000000000 
002353 xxxx 002273000000 
002354 xxxx 002357000000 
002355 xxxx 002411710000             TRA     AD3D0
002356 xxxx 053071071000 FLD1au:     vfd     a27/+99, 9/0     "+990
002357 xxxx 001043105153 FLD2au:     ac4     /0123456+/      "0123456+
002360 xxxx 021101104063 AD3Dmsg:    acc     /AD3D Tests ... \r\n/
002361 xxxx 104040124145 
002362 xxxx 163164163040 
002363 xxxx 056056056040 
002364 xxxx 015012040040 
002365 xxxx 047061056040 msg36:      acc     /1. Result ^n (Should be 000260145126)\r\n/
002366 xxxx 122145163165 
002367 xxxx 154164040136 
002370 xxxx 156040050123 
002371 xxxx 150157165154 
002372 xxxx 144040142145 
002373 xxxx 040060060060 
002374 xxxx 062066060061 
002375 xxxx 064065061062 
002376 xxxx 066051015012 
002377 xxxx 047062056040 msg37:      acc     /2. Result ^n (Should be 000013003106)\r\n/
002400 xxxx 122145163165 
002401 xxxx 154164040136 
002402 xxxx 156040050123 
002403 xxxx 150157165154 
002404 xxxx 144040142145 
002405 xxxx 040060060060 
002406 xxxx 060061063060 
002407 xxxx 060063061060 
002410 xxxx 066051015012 
002411 xxxx 004531701000             call    ioa(AD3Dmsg)
002412 xxxx 002415710000 
002413 xxxx 000000000000 
002414 xxxx 002360000000 
002415 xxxx 400200222400         AD3D    (),(),(),ROUND,ascii " w/ rounding, plus sign options
002416 xxxx 002427037604         desc9ns FLD1av,4,-2     " FLD1 addend operand descriptor
002417 xxxx 002430027610         desc9ts FLD2av,8,-2     " FLD2 addend operand descriptor
002420 xxxx 002432250006         desc4ls FLD3av(2),6     " operand descriptor, sum field
002421 xxxx 004531701000         call    ioa(msg36, FLD3av)
002422 xxxx 002426710000 
002423 xxxx 000000000000 
002424 xxxx 002365000000 
002425 xxxx 002432000000 
002426 xxxx 002434710000         tra     AD3D2
002427 xxxx 061062063064 FLD1av: aci     /1234/          "  1234
002430 xxxx 060066065064 FLD2av: aci     /0654321+/      " 0654321+
002431 xxxx 063062061053 
002432 xxxx 000000000000 FLD3av: BSS     2              " xx+06556   (Sum)
002434 xxxx 000002622000         EAX2     2          " load character modifier into X2
002435 xxxx 000006626000         EAX6     6          " load FLD2 length into X6
002436 xxxx 002452624000         EAX4     FLD1aw       " load FLD1 address into X4
002437 xxxx 400000507414         AWDX     pr4|0,4    " put FLD1 address into AR4
002440 xxxx 420252222500         AD3D     (ar),(rl,x2),(id),round,ascii
002441 xxxx 400000000004         desc9fl  pr4|0,4    " FLD1 operand descriptor (FLD1,0,4,0)
002442 xxxx 002453077616         desc4ns  FLD2aw,x6,-2 " FLD2 operand descriptor (FLD2,2,6,3,-2)
002443 xxxx 002455000000         ARG      DFLD3aw      " pointer,FLD3 operand descriptor
002444 xxxx 004531701000         call    ioa(msg37, FLD3aw)
002445 xxxx 002451710000 
002446 xxxx 000000000000 
002447 xxxx 002377000000 
002450 xxxx 002454000000 
002451 xxxx 002513710000         tra     SB2D0
002452 xxxx 055061062002 FLD1aw: vfd     a27/-12, 9/2     " -12 2
002453 xxxx 000022064126 FLD2aw: ac4     /00123456/      " 00123456
002454 xxxx 000000000000 FLD3aw: BSS     1               " xxx+0346   (Sum)
002455 xxxx 002454357705 DFLD3aw:desc4ls FLD3aw(3),5,-1  " FLD3 sum operand descriptor
002456 xxxx 017123102062 SB2Dmsg:    acc /SB2D Tests...\r\n/
002457 xxxx 104040124145 
002460 xxxx 163164163056 
002461 xxxx 056056015012 
002462 xxxx 070061056040 msg38:  acc /1. result ^n ^n (Should be 055066065064 063060071376) \r\n/
002463 xxxx 162145163165 
002464 xxxx 154164040136 
002465 xxxx 156040136156 
002466 xxxx 040050123150 
002467 xxxx 157165154144 
002470 xxxx 040142145040 
002471 xxxx 060065065060 
002472 xxxx 066066060066 
002473 xxxx 065060066064 
002474 xxxx 040060066063 
002475 xxxx 060066060060 
002476 xxxx 067061063067 
002477 xxxx 066051040015 
002500 xxxx 012040040040 
002501 xxxx 047062056040 msg39:  acc /2. result ^a ^a (Should be 8753 0864)\r\n/
002502 xxxx 162145163165 
002503 xxxx 154164040136 
002504 xxxx 141040136141 
002505 xxxx 040050123150 
002506 xxxx 157165154144 
002507 xxxx 040142145040 
002510 xxxx 070067065063 
002511 xxxx 040060070066 
002512 xxxx 064051015012 
002513 xxxx 004531701000         call    ioa(SB2Dmsg)
002514 xxxx 002517710000 
002515 xxxx 000000000000 
002516 xxxx 002456000000 
002517 xxxx 000200203400         SB2D     (),(),round      " with rounding option
002520 xxxx 002531067504         NDSC4    FLD1ax,0,4,2,-3  " minuend operand descriptor
002521 xxxx 002532000010         NDSC9    FLD2ax,0,8       " subtrahend operand descriptor
002522 xxxx 004531701000         call    ioa(msg38, FLD2ax, FLD2ax+1)
002523 xxxx 002530710000 
002524 xxxx 000000000000 
002525 xxxx 002462000000 
002526 xxxx 002532000000 
002527 xxxx 002533000000 
002530 xxxx 002534710000         tra     SB2D2
002531 xxxx 022133000000 FLD1ax: ac4      /125+/         " 125+
002532 xxxx 053066065064 FLD2ax: vfd     a36/+654, a27/321, 9/-2
002533 xxxx 063062061776 
002534 xxxx 000000203400         SB2D    (),()",enablefault   " with truncation enable option
002535 xxxx 002546077410         NDSC4   FLD1ay,0,8,3,-4       " minuend operand descriptor
002536 xxxx 002547037610         NDSC9   FLD2ay,0,8,3,-2       " subtrahend operand descriptor
002537 xxxx 004531701000         call    ioa(msg39, FLD2ay, FLD2ay+1)
002540 xxxx 002545710000 
002541 xxxx 000000000000 
002542 xxxx 002501000000 
002543 xxxx 002547000000 
002544 xxxx 002550000000 
002545 xxxx 002606710000         tra     SB3D0
002546 xxxx 022064126170 FLD1ay: ac4     /12345678/          " 12345678
002547 xxxx 070067066065 FLD2ay: aci     /87654321/          " 87654321
002550 xxxx 064063062061 
002551 xxxx 021123102063 SB3Dmsg:    acc "SB3D Tests ... \r\n"
002552 xxxx 104040124145 
002553 xxxx 163164163040 
002554 xxxx 056056056040 
002555 xxxx 015012040040 
002556 xxxx 067061056040 msg40:  acc     /1. Result ^n ^n (Should be 000000000053 060060060177)\r\n/
002557 xxxx 122145163165 
002560 xxxx 154164040136 
002561 xxxx 156040136156 
002562 xxxx 040050123150 
002563 xxxx 157165154144 
002564 xxxx 040142145040 
002565 xxxx 060060060060 
002566 xxxx 060060060060 
002567 xxxx 060060065063 
002570 xxxx 040060066060 
002571 xxxx 060066060060 
002572 xxxx 066060061067 
002573 xxxx 067051015012 
002574 xxxx 047062056040 msg41:  acc     /2. Result ^n (Should be 320010144031)\r\n/
002575 xxxx 122145163165 
002576 xxxx 154164040136 
002577 xxxx 156040050123 
002600 xxxx 150157165154 
002601 xxxx 144040142145 
002602 xxxx 040063062060 
002603 xxxx 060061060061 
002604 xxxx 064064060063 
002605 xxxx 061051015012 
002606 xxxx 004531701000         call    ioa(SB3Dmsg)
002607 xxxx 002612710000 
002610 xxxx 000000000000 
002611 xxxx 002551000000 
002612 xxxx 000200223400         SB3D    (),(),(),round  "with rounding option
002613 xxxx 002626060004         desc4ts FLD1az,4        "subtrahend operand descriptor
002614 xxxx 002627050004         desc4ls FLD2az,4        "minuend operand descriptor
002615 xxxx 002630600005         desc9fl FLD3az(3),5     "operand desc for result field
002616 xxxx 001341601000         tnz     NO.GOT
002617 xxxx 004531701000         call    ioa(msg40, FLD3az, FLD3az+1)
002620 xxxx 002625710000 
002621 xxxx 000000000000 
002622 xxxx 002556000000 
002623 xxxx 002630000000 
002624 xxxx 002631000000 
002625 xxxx 002632710000         tra     SB3D2
002626 xxxx 022075000000 FLD1az: ac4     /123-/         " 123-
002627 xxxx 321043000000 FLD2az: ac4     /-123/         " -123
002630 xxxx 000000000000 FLD3az: BSS     2              " XXX+000+127 (Result) zero indicator ON
002632 xxxx 000000223400         SB3D    (),(),()",enablefault   " with truncation enable option
002633 xxxx 002646000010         desc9fl FLD1ba, 8              " minuend operand descriptor
002634 xxxx 002650000010         desc9fl FLD2ba, 8              " subtrahend operand descriptor
002635 xxxx 002652057610         desc4ls FLD3ba, 8, -2          " result operand descriptor
002636 xxxx 001341605000         tpl     NO.GOT                 "indicators on? -  negative and truncation
002637 xxxx 001341601400         trtf    NO.GOT
002640 xxxx 004531701000        call     ioa(msg41, FLD3ba)
002641 xxxx 002645710000 
002642 xxxx 000000000000 
002643 xxxx 002574000000 
002644 xxxx 002652000000 
002645 xxxx 002704710000         tra     MP2D0
002646 xxxx 055071070067 FLD1ba: vfd  a36/-987, a27/654, 9/-3   " - 9 8 7 6 5 4 -3
002647 xxxx 066065064775 
002650 xxxx 055061062063 FLD2ba: vfd  a36/-123, a27/456, 9/-3   " - 1 2 3 4 5 6 -3
002651 xxxx 064065066775 
002652 xxxx 000000000000 FLD3ba: BSS      1                   " -0086419   (Result)
002653 xxxx 020115120062 MP2Dmsg:    acc     ?MP2D Tests ...\r\n?
002654 xxxx 104040124145 
002655 xxxx 163164163040 
002656 xxxx 056056056015 
002657 xxxx 012040040040 
002660 xxxx 047061056040 msg42:      acc     ?1. Result ^n (Should be 260000044151)\r\n?
002661 xxxx 122145163165 
002662 xxxx 154164040136 
002663 xxxx 156040050123 
002664 xxxx 150157165154 
002665 xxxx 144040142145 
002666 xxxx 040062066060 
002667 xxxx 060060060060 
002670 xxxx 064064061065 
002671 xxxx 061051015012 
002672 xxxx 047062056040 msg43:      acc     ?2. Result ^n (Should be 301043105375)\r\n?
002673 xxxx 122145163165 
002674 xxxx 154164040136 
002675 xxxx 156040050123 
002676 xxxx 150157165154 
002677 xxxx 144040142145 
002700 xxxx 040063060061 
002701 xxxx 060064063061 
002702 xxxx 060065063067 
002703 xxxx 065051015012 
002704 xxxx 004531701000             call    ioa(MP2Dmsg)
002705 xxxx 002710710000 
002706 xxxx 000000000000 
002707 xxxx 002653000000 
002710 xxxx 400200206400         MP2D    (),(),round,ascii   "rounding and plus sign options
002711 xxxx 002721027504         desc9ts FLD1bb, 4, -3       "multiplier operand descriptor
002712 xxxx 002722057610         desc4ls FLD2bb, 8, -2       "multiplicand operand descriptor
002713 xxxx 004531701000         call    ioa(msg42, FLD2bb)
002714 xxxx 002720710000 
002715 xxxx 000000000000 
002716 xxxx 002660000000 
002717 xxxx 002722000000 
002720 xxxx 002723710000         tra MP2D2
002721 xxxx 060060062053 FLD1bb: aci     /002+/          " 002+
002722 xxxx 261043105147 FLD2bb: ac4     /+1234567/      " +1234567
002723 xxxx 000200206400        MP2D     (),(),round     "rounding option
002724 xxxx 002734077610        desc4ns  FLD1bc, 8, -2   "multiplier operand descriptor
002725 xxxx 002735040010        desc4fl  FLD2bc, 8       "multiplicand operand descriptor
002726 xxxx 004531701000        call     ioa(msg43, FLD2bc)
002727 xxxx 002733710000 
002730 xxxx 000000000000 
002731 xxxx 002672000000 
002732 xxxx 002735000000 
002733 xxxx 002767710000        tra      MP3D0
002734 xxxx 000000000020 FLD1bc:  ac4    /00000010/      " 00000010
002735 xxxx 261043105376 FLD2bc:  ac4    /+12345ON/      " +12345-2
002736 xxxx 021115120063 MP3Dmsg:    acc /MP3D Tests ... \r\n/
002737 xxxx 104040124145 
002740 xxxx 163164163040 
002741 xxxx 056056056040 
002742 xxxx 015012040040 
002743 xxxx 046061056040 msg44:      acc /1. Result ^a ^a (Should be +61 7284)\r\n/
002744 xxxx 122145163165 
002745 xxxx 154164040136 
002746 xxxx 141040136141 
002747 xxxx 040050123150 
002750 xxxx 157165154144 
002751 xxxx 040142145040 
002752 xxxx 053066061040 
002753 xxxx 067062070064 
002754 xxxx 051015012040 
002755 xxxx 047062056040 msg45:      acc /2. Result ^n (Should be 275060206377)\r\n/
002756 xxxx 122145163165 
002757 xxxx 154164040136 
002760 xxxx 156040050123 
002761 xxxx 150157165154 
002762 xxxx 144040142145 
002763 xxxx 040062067065 
002764 xxxx 060066060062 
002765 xxxx 060066063067 
002766 xxxx 067051015012 
002767 xxxx 004531701000         call    ioa(MP3Dmsg)
002770 xxxx 002773710000 
002771 xxxx 000000000000 
002772 xxxx 002736000000 
002773 xxxx 000200226400         MP3D    (),(),(),round   "with rounding option
002774 xxxx 003006660002         desc4ts FLD1bd(6),2      "multiplier operand descriptor
002775 xxxx 003007057510         desc4ls FLD2bd,8,-3      "multiplicand op descriptor
002776 xxxx 003010217607         desc9ls FLD3bd(1),7,-2   " product operand descriptor
002777 xxxx 004531701000         call    ioa(msg44, FLD3bd, FLD3bd+1)
003000 xxxx 003005710000 
003001 xxxx 000000000000 
003002 xxxx 002743000000 
003003 xxxx 003010000000 
003004 xxxx 003011000000 
003005 xxxx 003012710000         tra     MP3D2
003006 xxxx 000000000133 FLD1bd:  ac4      /0000005+/      " 0000005+
003007 xxxx 261043105147 FLD2bd:  ac4      /+1234567/      " +1234567
003010 xxxx 000000000000 FLD3bd:  BSS      2               " +617284    (Product)
003012 xxxx 000000226400         MP3D    (),(),()", enablefault
003013 xxxx 003026077602         desc4ns FLD1be, 2, -2   " multiplier operand descriptor
003014 xxxx 003027057510         desc4ls FLD2be, 8, -3   " multiplicand op descriptor
003015 xxxx 003030140007         desc4fl FLD3be(1), 7    " product operand descriptor
003016 xxxx 001341605000         tpl     NO.GOT          " indicators on? -  negative and truncation
003017 xxxx 001341601400         trtf    NO.GOT
003020 xxxx 004531701000         call    ioa(msg45, FLD3be)
003021 xxxx 003025710000 
003022 xxxx 000000000000 
003023 xxxx 002755000000 
003024 xxxx 003030000000 
003025 xxxx 003062710000         tra     DV2D0
003026 xxxx 045000000000 FLD1be:   ac4     /25000000/      " 25000000
003027 xxxx 321043105147 FLD2be:   ac4     /-1234567/      "-1234567
003030 xxxx 260000000000 FLD3be:   ac4     /+/             "+-3086-1    (Product)
003031 xxxx 021104126062 DV2Dmsg:    acc     /DV2D Tests ... \r\n/
003032 xxxx 104040124145 
003033 xxxx 163164163040 
003034 xxxx 056056056040 
003035 xxxx 015012040040 
003036 xxxx 047061056040 msg46:      acc     /1. Result ^n (Should be 304062020003)\r\n/
003037 xxxx 122145163165 
003040 xxxx 154164040136 
003041 xxxx 156040050123 
003042 xxxx 150157165154 
003043 xxxx 144040142145 
003044 xxxx 040063060064 
003045 xxxx 060066062060 
003046 xxxx 062060060060 
003047 xxxx 063051015012 
003050 xxxx 047062056040 msg47:      acc     /2. Result ^n (Should be 300044150000)\r\n/
003051 xxxx 122145163165 
003052 xxxx 154164040136 
003053 xxxx 156040050123 
003054 xxxx 150157165154 
003055 xxxx 144040142145 
003056 xxxx 040063060060 
003057 xxxx 060064064061 
003060 xxxx 065060060060 
003061 xxxx 060051015012 
003062 xxxx 004531701000             call    ioa(DV2Dmsg)
003063 xxxx 003066710000 
003064 xxxx 000000000000 
003065 xxxx 003031000000 
003066 xxxx 000000207400             DV2D    (), ()
003067 xxxx 003077467404             DESC4TS FLD1bf(4), 4, -4 "divisor operand descriptor
003070 xxxx 003100040010             DESC4FL FLD2bf,8         "dividend operand descriptor
003071 xxxx 004531701000             call    ioa(msg46, FLD2bf)
003072 xxxx 003076710000 
003073 xxxx 000000000000 
003074 xxxx 003036000000 
003075 xxxx 003100000000 
003076 xxxx 003101710000             tra     DV2D2
003077 xxxx 000000000053 FLD1bf:     ac4     /   0002+/      "0002+
003100 xxxx 260206102000 FLD2bf:     ac4     /+0864200/      "+08642 +0
003101 xxxx 000200207400         DV2D    (),(),round     " with rounding option
003102 xxxx 003112017504         DESC9LS FLD1bg,4,-3     " divisor operand descriptor
003103 xxxx 003113057610         DESC4LS FLD2bg,8,-2     " dividend operand descriptor
003104 xxxx 004531701000         call    ioa(msg47, FLD2bg)
003105 xxxx 003111710000 
003106 xxxx 000000000000 
003107 xxxx 003050000000 
003110 xxxx 003113000000 
003111 xxxx 003145710000         tra     DV3D0
003112 xxxx 053060060065 FLD1bg: aci     /+005/          " +005
003113 xxxx 260000022064 FLD2bg: ac4     /+0001234/      " +0001234
003114 xxxx 021104126063 DVD3msg:    acc     /DV3D Tests ... \r\n/
003115 xxxx 104040124145 
003116 xxxx 163164163040 
003117 xxxx 056056056040 
003120 xxxx 015012040040 
003121 xxxx 047061056040 msg48:      acc     /1. Result ^n (Should be 000263202162)\r\n/
003122 xxxx 122145163165 
003123 xxxx 154164040136 
003124 xxxx 156040050123 
003125 xxxx 150157165154 
003126 xxxx 144040142145 
003127 xxxx 040060060060 
003130 xxxx 062066063062 
003131 xxxx 060062061066 
003132 xxxx 062051015012 
003133 xxxx 047062056040 msg49:      acc     /2. Result ^n (Should be 013103202162)\r\n/
003134 xxxx 122145163165 
003135 xxxx 154164040136 
003136 xxxx 156040050123 
003137 xxxx 150157165154 
003140 xxxx 144040142145 
003141 xxxx 040060061063 
003142 xxxx 061060063062 
003143 xxxx 060062061066 
003144 xxxx 062051015012 
003145 xxxx 004531701000         call    ioa(DVD3msg)
003146 xxxx 003151710000 
003147 xxxx 000000000000 
003150 xxxx 003114000000 
003151 xxxx 400200227400         DV3D    (),(),(),round,ascii    " rounding, plus sign options
003152 xxxx 003163227603         desc9ts FLD1bh(1),3,-2          " divisor operand descriptor
003153 xxxx 003164040011         desc4fl FLD2bh,9                " dividend operand descriptor
003154 xxxx 003166257706         desc4ls FLD3bh(2),6,-1          " quotient operand descriptor
003155 xxxx 004531701000         call    ioa(msg48, FLD3bh)
003156 xxxx 003162710000 
003157 xxxx 000000000000 
003160 xxxx 003121000000 
003161 xxxx 003166000000 
003162 xxxx 003167710000         tra     DV3D2
003163 xxxx 060060062055 FLD1bh: aci      /002-/                 " 002-
003164 xxxx 330166124077 FLD2bh: ac4      /-876543OM/            " -876543-3
003165 xxxx 320000000000 
003166 xxxx 000000000000 FLD3bh: BSS      1                      " xx+38272   (Quotient)
003167 xxxx 000002622000         EAX2    2               " load character mod into X2
003170 xxxx 000010627000         EAX7    8               " load FLD2 length into X7
003171 xxxx 003205624000         EAX4    FLD1bi          " load FLD1 address into X4
003172 xxxx 400000507414         AWDX    pr4|0, 4        " put FLD1 address into AR4
003173 xxxx 420240227512         DV3D    (pr,x2),(rl),(id),round,ascii  " with addr mod options
003174 xxxx 400000037602         desc9ns pr4|0, 2, -2    " divisor operand descriptor (FLD1,2,2,3,-2)
003175 xxxx 003206000017         desc9fl FLD2bi, x7      " dividend operand descriptor (FLD2,0,8,0)
003176 xxxx 400002000112         ARG     pr4|2, 2        " ptr quotient operand desc
003177 xxxx 004531701000         call    ioa(msg49, FLD3bi)
003200 xxxx 003204710000 
003201 xxxx 000000000000 
003202 xxxx 003133000000 
003203 xxxx 003210000000 
003204 xxxx 003241710000         tra     CMPN0
003205 xxxx 060060060062 FLD1bi: aci     /0002/          " 0002
003206 xxxx 053070067066 FLD2bi: vfd     a36/+876, a27/543, 9/-3    " +876543-3
003207 xxxx 065064063775 
003210 xxxx 000000000000 FLD3bi: BSS     1               " x+438272
003211 xxxx 003210157707         desc4ls FLD3bi(1),7,-1  " quotient operand descriptor
003212 xxxx 021103115120 CMPNmsg:    acc     "CMPN Tests ... \r\n"
003213 xxxx 116040124145 
003214 xxxx 163164163040 
003215 xxxx 056056056040 
003216 xxxx 015012040040 
003217 xxxx 027061056040 msg50:      acc     "1. Result FLD2 = FLD1\r\n"
003220 xxxx 122145163165 
003221 xxxx 154164040106 
003222 xxxx 114104062040 
003223 xxxx 075040106114 
003224 xxxx 104061015012 
003225 xxxx 027062056040 msg51:      acc     "2. Result FLD2 = FLD1\r\n"
003226 xxxx 122145163165 
003227 xxxx 154164040106 
003230 xxxx 114104062040 
003231 xxxx 075040106114 
003232 xxxx 104061015012 
003233 xxxx 027063056040 msg52:      acc     "3. Result FLD2 > FLD1\r\n"
003234 xxxx 122145163165 
003235 xxxx 154164040106 
003236 xxxx 114104062040 
003237 xxxx 076040106114 
003240 xxxx 104061015012 
003241 xxxx 004531701000         call    ioa(CMPNmsg)
003242 xxxx 003245710000 
003243 xxxx 000000000000 
003244 xxxx 003212000000 
003245 xxxx 000000303400         CMPN     (),()           "no modification
003246 xxxx 003261057610         NDSC4    FLD1bj,0,8,1,-2 "FLD1 operand descriptor
003247 xxxx 003262040010         NDSC4    FLD2bj,0,8,0    "FLD2 operand descriptor
003250 xxxx 003254600000         TZE      EQUAL2          "FLD2 = FLD1 (Result - FLD2 =  FLD1)
003251 xxxx 001341604000         TMI      NO.GOT          "FLD2 < FLD1
003252 xxxx 001341602000         TNC      NO.GOT          "|FLD2| < |FLD1|
003253 xxxx 001341710000         TRA      NO.GOT
003254 xxxx 004531701000 EQUAL2: call    ioa(msg50)
003255 xxxx 003260710000 
003256 xxxx 000000000000 
003257 xxxx 003217000000 
003260 xxxx 003263710000         tra     CMPN2
003261 xxxx 320001043105 FLD1bj: ac4     /-0012345/      " -0012345
003262 xxxx 321043105376 FLD2bj: ac4     /-12345ON/      " -12345 -2
003263 xxxx 000000303400         CMPN     (),()           " no modification
003264 xxxx 003271430002         desc9ns FLD1bk(2),2      " FLD1 operand descriptor
003265 xxxx 003272067510         desc4ts FLD2bk, 8, -3    " FLD2 operand descriptor
003266 xxxx 003273600000         TZE      EQUAL3          " FLD2 = FLD1
003267 xxxx 001341604000         TMI      NO.GOT          " FLD2 < FLD1
003270 xxxx 001341710000         TRA      NO.GOT          " FLD2 > FLD1
003271 xxxx 060060061062 FLD1bk: aci     /0012/           " +0012000
003272 xxxx 000022000013 FLD2bk: ac4     /0012000+/       " +0012000
003273 xxxx 004531701000 EQUAL3: call    ioa(msg51)
003274 xxxx 003277710000 
003275 xxxx 000000000000 
003276 xxxx 003225000000 
003277 xxxx 000002622000         EAX2    2           " load character mod into X2
003300 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
003301 xxxx 003463624000         EAX4    FLD1bl      " load FLD1 address into X4
003302 xxxx 400000507414         AWDX    0,4,4       " put FLD1 address into AR4
003303 xxxx 000020303552         CMPN    (ar,rl,x2),(id)    " with address modification
003304 xxxx 400000077516         desc4ns pr4|0,x6,-3 " FLD1 operand descriptor (FLD1,2,6,3,-3)
003305 xxxx 003465000000         ARG     FLD2bl.I    " pointer to operand descriptor
003306 xxxx 001341600000         TZE     NO.GOT      " FLD2 = FLD1
003307 xxxx 003311605000         TPL     MORE        " FLD2 > FLD1 Result - FLD2 > FLD1
003310 xxxx 001341710000         TRA     NO.GOT      " FLD2 < FLD1
003311 xxxx 004531701000         call    ioa(msg52)
003312 xxxx 003315710000 
003313 xxxx 000000000000 
003314 xxxx 003233000000 
003315 xxxx 003410710000         tra     MVN0
003316 xxxx 017115126116 MVNmsg:     acc     /MVN Tests ...\r\n/
003317 xxxx 040124145163 
003320 xxxx 164163040056 
003321 xxxx 056056015012 
003322 xxxx 045122145163 MVNmsg1:    acc     /Result: ^n (Should be 014022064127)\r\n/
003323 xxxx 165154164072 
003324 xxxx 040136156040 
003325 xxxx 050123150157 
003326 xxxx 165154144040 
003327 xxxx 142145040060 
003330 xxxx 061064060062 
003331 xxxx 062060066064 
003332 xxxx 061062067051 
003333 xxxx 015012040040 
003334 xxxx 045122145163 MVNmsg2:    acc     /Result: ^n (Should be 321043105001)\r\n/
003335 xxxx 165154164072 
003336 xxxx 040136156040 
003337 xxxx 050123150157 
003340 xxxx 165154144040 
003341 xxxx 142145040063 
003342 xxxx 062061060064 
003343 xxxx 063061060065 
003344 xxxx 060060061051 
003345 xxxx 015012040040 
003346 xxxx 045122145163 MVNmsg3:    acc     /Result: ^n (Should be 000000022065)\r\n/
003347 xxxx 165154164072 
003350 xxxx 040136156040 
003351 xxxx 050123150157 
003352 xxxx 165154144040 
003353 xxxx 142145040060 
003354 xxxx 060060060060 
003355 xxxx 060060062062 
003356 xxxx 060066065051 
003357 xxxx 015012040040 
003360 xxxx 046042053060 MVNmsg4:    acc     /"+0 Test" - Result: ^o (Should be 0)\r\n/
003361 xxxx 040124145163 
003362 xxxx 164042040055 
003363 xxxx 040122145163 
003364 xxxx 165154164072 
003365 xxxx 040136157040 
003366 xxxx 050123150157 
003367 xxxx 165154144040 
003370 xxxx 142145040060 
003371 xxxx 051015012040 
003372 xxxx 022064126173 FLD1bm:     ac4     /1234567+/  "8P1234567+
003373 xxxx 000000000000 FLD2bm:     DEC     0           " 0+123457 (Result)
003374 xxxx 060060060061 FLD1bn:     aci     /00012345678-/  " 00012345678-
003375 xxxx 062063064065 
003376 xxxx 066067070055 
003377 xxxx 000000000000 FLD2bn:     BSS 1               " -12345+1 (Result) negative and truncation set ON
003400 xxxx 060061062063 FLD1bo:     aci     /0123456+/  " 8A123456+ (0123456+)
003401 xxxx 064065066053 
003402 xxxx 000000000000 FLD2bo:     BSS 1               " 00001235 (Result)
003403 xxxx 003402277606             desc4ns FLD2bo(2),6,-2
003404 xxxx 040053060060 FLD1bp:     aci     / +000000/  " 8A123456+ (0123456+)
003405 xxxx 060060060060 
003406 xxxx 000000000000 FLD2bp:     BSS 1               " 00001235 (Result)
003407 xxxx 003402277606             desc4ns FLD2bo(2),6,-2
003410 xxxx 004531701000         call    ioa(MVNmsg)
003411 xxxx 003414710000 
003412 xxxx 000000000000 
003413 xxxx 003316000000 
003414 xxxx 000200300400         MVN     (),(),round         ",,1                  "with rounding option
003415 xxxx 003372067510         NDSC4   FLD1bm,0,8,2,-3     "sending field operand descr.
003416 xxxx 003373157607         NDSC4   FLD2bm,1,7,1,-2     "receiving field operand descr.
003417 xxxx 004531701000         call    ioa(MVNmsg1, FLD2bm)
003420 xxxx 003424710000 
003421 xxxx 000000000000 
003422 xxxx 003322000000 
003423 xxxx 003373000000 
003424 xxxx 000000300400         MVN     (),()",t             ",,,,1 truncation fault enable option
003425 xxxx 003374627611         NDSC9   FLD1bn,3,9,2,-2     "sending field operand descr.
003426 xxxx 003377040010         NDSC4   FLD2bn,0,8,0        "receiving field operand descr.
003427 xxxx 004531701000         call    ioa(MVNmsg2, FLD2bn)
003430 xxxx 003434710000 
003431 xxxx 000000000000 
003432 xxxx 003334000000 
003433 xxxx 003377000000 
003434 xxxx 000001621000         eax1    1
003435 xxxx 000002622000         eax2    2
003436 xxxx 000007627000         eax7    7
003437 xxxx 003400624000         eax4    FLD1bo
003440 xxxx 400000507414         awdx    pr4|0,4
003441 xxxx 400000507414         awdx    0,4,4
003442 xxxx 400220300551         MVN     (pr,rl,x1),(id),round,p              " with rounding and plus sign options
003443 xxxx 400000027617         desc9ts pr4|0,x7,-2
003444 xxxx 003403000000         ARG     FLD2bo+1
003445 xxxx 004531701000         call    ioa(MVNmsg3, FLD2bo)
003446 xxxx 003452710000 
003447 xxxx 000000000000 
003450 xxxx 003346000000 
003451 xxxx 003402000000 
003452 xxxx 400200300400         MVN     (),(),round,p              " with rounding and plus sign options
003453 xxxx 003404217607         desc9ls FLD1bp(1),7,-2
003454 xxxx 003406277606         NDSC4   FLD2bp,2,6,3,-2        "receiving field operand descr.
003455 xxxx 004531701000         call    ioa(MVNmsg4, FLD2bp)
003456 xxxx 003462710000 
003457 xxxx 000000000000 
003460 xxxx 003360000000 
003461 xxxx 003406000000 
003462 xxxx 000000616000         dis
003463 xxxx 000022064126 FLD1bl: ac4     /00123456/      " +00123456
003464 xxxx 001043105153 FLD2bl: ac4     /0123456+/      " +01234560
003465 xxxx 003464067610 FLD2bl.I: desc4ts FLD2bl,8,-2
003466 xxxx 045122145163 msg3:      acc         "Result: ^n (Should be 777777775456)\r\n"
003467 xxxx 165154164072 
003470 xxxx 040136156040 
003471 xxxx 050123150157 
003472 xxxx 165154144040 
003473 xxxx 142145040067 
003474 xxxx 067067067067 
003475 xxxx 067067067065 
003476 xxxx 064065066051 
003477 xxxx 015012040040 
003500 xxxx 045122145163 msg4:      acc         "Result: ^n (Should be 777777001000)\r\n"
003501 xxxx 165154164072 
003502 xxxx 040136156040 
003503 xxxx 050123150157 
003504 xxxx 165154144040 
003505 xxxx 142145040067 
003506 xxxx 067067067067 
003507 xxxx 067060060061 
003510 xxxx 060060060051 
003511 xxxx 015012040040 
003512 xxxx 045122145163 msg5:      acc         "Result: ^n (Should be 000000000777)\r\n"
003513 xxxx 165154164072 
003514 xxxx 040136156040 
003515 xxxx 050123150157 
003516 xxxx 165154144040 
003517 xxxx 142145040060 
003520 xxxx 060060060060 
003521 xxxx 060060060060 
003522 xxxx 067067067051 
003523 xxxx 015012040040 
003524 xxxx 020115126116 MVNEmsg:   acc         "MVNE Tests ...\r\n"
003525 xxxx 105040124145 
003526 xxxx 163164163040 
003527 xxxx 056056056015 
003530 xxxx 012040040040 
003531 xxxx 000001043115 FLD1c:  oct     000001043115    " 8P1234-
003532 xxxx 000001043115         ac4     "0001234-"
003533 xxxx 000000000000 FLD2c:  bss     1               " 777777775456  (Result)
003534 xxxx 000005022000 FLD1d:  oct     000005022000    " 8P51200
003535 xxxx 777777777777 FLD2d:  dec     -1
003536 xxxx 061060062063 FLD1e:  oct     061060062063    " 4A1023
003537 xxxx 000000000000 FLD2e:  dec     0
003540 xxxx 055122145163 msg6:   acc     "Result: '^a^a^a' (Should be '   $3004.05-')\r\n"
003541 xxxx 165154164072 
003542 xxxx 040047136141 
003543 xxxx 136141136141 
003544 xxxx 047040050123 
003545 xxxx 150157165154 
003546 xxxx 144040142145 
003547 xxxx 040047040040 
003550 xxxx 040044063060 
003551 xxxx 060064056060 
003552 xxxx 065055047051 
003553 xxxx 015012040040 
003554 xxxx 053122145163 msg7:   acc     "Result: '^g^g' (Should be '   $3004.05-')\r\n"
003555 xxxx 165154164072 
003556 xxxx 040047136147 
003557 xxxx 136147047040 
003560 xxxx 050123150157 
003561 xxxx 165154144040 
003562 xxxx 142145040047 
003563 xxxx 040040040044 
003564 xxxx 063060060064 
003565 xxxx 056060065055 
003566 xxxx 047051015012 
003567 xxxx 055122145163 msg8:   acc     "Result: '^a^a^a' (Should be '   ?3004.05@')\r\n"
003570 xxxx 165154164072 
003571 xxxx 040047136141 
003572 xxxx 136141136141 
003573 xxxx 047040050123 
003574 xxxx 150157165154 
003575 xxxx 144040142145 
003576 xxxx 040047040040 
003577 xxxx 040077063060 
003600 xxxx 060064056060 
003601 xxxx 065100047051 
003602 xxxx 015012040040 
003603 xxxx 060060060063 FLD1f:  aci     /000300405-/
003604 xxxx 060060064060 
003605 xxxx 065055000000 
003606 xxxx 167050207322 FLD2f:  vfd     9/mflc+7,9/enf+8,9/insb+7,9/mvc+2   "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003607 xxxx 244000000000         vfd     9/insn+4                           "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003610 xxxx 420020054060 FLD2f1: vfd     9/cht, h27/ *+       "need to be able to combine these 1st two -- h2 + h3 = h5 == 45-bits!!!
003611 xxxx 052053020033         vfd     h18/-$, o9/020, h9/.
003612 xxxx 000167050207         vfd     h9/0,9/mflc+7, 9/enf+8, 9/insb+7,9/mvc+2, 9/insn+4
003613 xxxx 322244000000 
003614 xxxx 420040052053 FLD2f2: vfd     9/cht, a27/ *+
003615 xxxx 100077054056         vfd     a18/@?, o9/054, a9/.
003616 xxxx 060167050207         vfd     a9/0, 9/mflc+7, 9/enf+8, 9/insb+7  "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003617 xxxx 322244000000         vfd     9/mvc+2, 9/insn+4                  "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003620 xxxx 000000000000 FLD3f:  bss     3
003623 xxxx 000000000000 FLD3f1: bss     2
003625 xxxx 000000000000 FLD3f2: bss     3
003630 xxxx 054122145163 msg9:   acc     "Result '^a^a^a' (Should be '*2505,09-   ')\r\n"
003631 xxxx 165154164040 
003632 xxxx 047136141136 
003633 xxxx 141136141047 
003634 xxxx 040050123150 
003635 xxxx 157165154144 
003636 xxxx 040142145040 
003637 xxxx 047052062065 
003640 xxxx 060065054060 
003641 xxxx 071055040040 
003642 xxxx 040047051015 
003643 xxxx 012040040040 
003644 xxxx 002120120235 FLD1g:  ac4     /0250509-/  "8P250509-
003645 xxxx 125070226322 FLD2g:  vfd     9/mvza+5, 9/ses+8, 9/insa+6, 9/mvc+2        "MICROP  (MVZA,5),(SES,8),(INSA,6),(MVC,2)
003646 xxxx 244023000000         vfd     9/insn+4, 9/insm+3                          "MICROP  (INSN,4),(INSM,3)
003647 xxxx 000000000000 FLD3g:  BSS     3
003652 xxxx 017115126105 MVEmsg: acc     "MVE Tests ...\r\n" 
003653 xxxx 040124145163 
003654 xxxx 164163040056 
003655 xxxx 056056015012 
003656 xxxx 103122145163 msg10:  acc     "Result: '^g^g^g^g^g' (Should be '* SMITHROGER, WILLIAM S. - #25')\r\n"
003657 xxxx 165154164072 
003660 xxxx 040047136147 
003661 xxxx 136147136147 
003662 xxxx 136147136147 
003663 xxxx 047040050123 
003664 xxxx 150157165154 
003665 xxxx 144040142145 
003666 xxxx 040047052040 
003667 xxxx 123115111124 
003670 xxxx 110122117107 
003671 xxxx 105122054040 
003672 xxxx 127111114114 
003673 xxxx 111101115040 
003674 xxxx 123056040055 
003675 xxxx 040043062065 
003676 xxxx 047051015012 
003677 xxxx 010262443163 FLD1h:  BCI     "12SMITHROGERWILLIAMS25AB"
003700 xxxx 305146272551 
003701 xxxx 663143433121 
003702 xxxx 446202052122 
003703 xxxx 420054073033 FLD2h:  vfd     9/cht, h9/*, o9/073, h9/.               "MICROP  (CHT,0),8H*,.-
003704 xxxx 052020020020         vfd     h9/-, o9/020, o9/020, o9/020
003705 xxxx 020070201205         vfd     o9/020, 9/ses+8, 9/insb+1, 9/insb+5     "MICROP  (SES,8),(INSB,1),(INSB,5)
003706 xxxx 332202205327         vfd     9/mvc+10, 9/insb+2, 9/insb+5, 9/mvc+7   "MICROP  (MVC,10),(INSB,2)(INSB,5),(MVC,7)
003707 xxxx 205321203205         vfd     9/insb+5, 9/mvc+1, 9/insb+3, 9/insb+5   "MICROP  (INSB,5),(MVC,1),(INSB,3),(INSB,5)
003710 xxxx 204205200013         vfd     9/insb+4, 9/insb+5, 9/insb+0, h9/#      "MICROP  (INSB,4),(INSB,5),(INSB,0),1H#
003711 xxxx 322000000000         vfd     9/mvc+2                                 "MICROP  (MCV,2)
003712 xxxx 000000000000 FLD3h:  bss     5
003717 xxxx 055122145163 msg11:  acc     "Result: '^a^a^a' (Should be 'code error#2')\r\n"
003720 xxxx 165154164072 
003721 xxxx 040047136141 
003722 xxxx 136141136141 
003723 xxxx 047040050123 
003724 xxxx 150157165154 
003725 xxxx 144040142145 
003726 xxxx 040047143157 
003727 xxxx 144145040145 
003730 xxxx 162162157162 
003731 xxxx 043062047051 
003732 xxxx 015012040040 
003733 xxxx 145162162157 FLD1i:  ACI     "error-2"
003734 xxxx 162055062000 
003735 xxxx 401043325021 FLD2i:  vfd     9/lte+1, A9/#, 9/mvc+5, 9/insm+1    "MICROP  (LTE,1),1A#,(MVC,5),(INSM,1),(IGN,1),(MVC,1)
003736 xxxx 301321000000         vfd     9/ign+1, 9/mvc+1
003737 xxxx 143157144145 FLD3i:  ACI     "code ", 12
003740 xxxx 040000000000 
003741 xxxx 000000000000 
003742 xxxx 021115114122 MLRmsg:    acc         "MLR Tests .....\r\n"
003743 xxxx 040124145163 
003744 xxxx 164163040056 
003745 xxxx 056056056056 
003746 xxxx 015012040040 
003747 xxxx 063122145163 msg12:  acc     /Result: '^g^g^g' (Should be 'xxxxABCDEFGHIJKL  ')\r\n/
003750 xxxx 165154164072 
003751 xxxx 040047136147 
003752 xxxx 136147136147 
003753 xxxx 047040050123 
003754 xxxx 150157165154 
003755 xxxx 144040142145 
003756 xxxx 040047170170 
003757 xxxx 170170101102 
003760 xxxx 103104105106 
003761 xxxx 107110111112 
003762 xxxx 113114040040 
003763 xxxx 047051015012 
003764 xxxx 212223242526 FLD1j:  BCI     /ABCDEFGHIJKL/ " memory contents
003765 xxxx 273031414243 
003766 xxxx 000000000000 FLD2j:  bss     3              "xxxxABCDEFGHIJKL  " (Result)
003771 xxxx 065122145163 msg13:  acc     /Result: ^n ^n (Should be 000000000022 064126170235)\r\n/
003772 xxxx 165154164072 
003773 xxxx 040136156040 
003774 xxxx 136156040050 
003775 xxxx 123150157165 
003776 xxxx 154144040142 
003777 xxxx 145040060060 
004000 xxxx 060060060060 
004001 xxxx 060060060060 
004002 xxxx 062062040060 
004003 xxxx 066064061062 
004004 xxxx 066061067060 
004005 xxxx 062063065051 
004006 xxxx 015012040040 
004007 xxxx 202020010203 FLD1k:  BCI     /   12345678R/
004010 xxxx 040506071051 
004011 xxxx 000000000000 FLD2k:  bss     2               "xxxxxx123456789-  (Result)
004013 xxxx 047122145163 msg14:  acc     /Result: '^a^a' (Should be 'SOURCE T')\r\n/
004014 xxxx 165154164072 
004015 xxxx 040047136141 
004016 xxxx 136141047040 
004017 xxxx 050123150157 
004020 xxxx 165154144040 
004021 xxxx 142145040047 
004022 xxxx 123117125122 
004023 xxxx 103105040124 
004024 xxxx 047051015012 
004025 xxxx 124110111123 FLD1l:  Aci     /THIS IS THE SOURCE TEXT/
004026 xxxx 040111123040 
004027 xxxx 124110105040 
004030 xxxx 123117125122 
004031 xxxx 103105040124 
004032 xxxx 105130124000 
004033 xxxx 000000000000 FLD2l:  BSS     2
004035 xxxx 055122145163 msg15:  acc     /Result: '^a^a^a' (Should be '.....LE ....')\r\n/
004036 xxxx 165154164072 
004037 xxxx 040047136141 
004040 xxxx 136141136141 
004041 xxxx 047040050123 
004042 xxxx 150157165154 
004043 xxxx 144040142145 
004044 xxxx 040047056056 
004045 xxxx 056056056114 
004046 xxxx 105040056056 
004047 xxxx 056056047051 
004050 xxxx 015012040040 
004051 xxxx 123101115120 FLD1m:  ACi     /SAMPLE TEXT TO MOVE/
004052 xxxx 114105040124 
004053 xxxx 105130124040 
004054 xxxx 124117040115 
004055 xxxx 117126105000 
004056 xxxx 056056056056 FLD2m:  aci     /............/
004057 xxxx 056056056056 
004060 xxxx 056056056056 
004061 xxxx 045122145163 msg16:  acc     /Result: "^a^a" (Should be "HIS IS")\r\n/
004062 xxxx 165154164072 
004063 xxxx 040042136141 
004064 xxxx 136141042040 
004065 xxxx 050123150157 
004066 xxxx 165154144040 
004067 xxxx 142145040042 
004070 xxxx 110111123040 
004071 xxxx 111123042051 
004072 xxxx 015012040040 
004073 xxxx 124110111123 FLD1n:  ACI     /THIS IS THE TEXT/
004074 xxxx 040111123040 
004075 xxxx 124110105040 
004076 xxxx 124105130124 
004077 xxxx 000000000000 FLD2n:  BSS     2
004101 xxxx 021115122114 MRLmsg:    acc         "MRL Tests .....\r\n"
004102 xxxx 040124145163 
004103 xxxx 164163040056 
004104 xxxx 056056056056 
004105 xxxx 015012040040 
004106 xxxx 063122145163 msg17:  acc     /Result: '^g^g^g' (Should be 'xxxx  ABCDEFGHIJKL')\r\n/
004107 xxxx 165154164072 
004110 xxxx 040047136147 
004111 xxxx 136147136147 
004112 xxxx 047040050123 
004113 xxxx 150157165154 
004114 xxxx 144040142145 
004115 xxxx 040047170170 
004116 xxxx 170170040040 
004117 xxxx 101102103104 
004120 xxxx 105106107110 
004121 xxxx 111112113114 
004122 xxxx 047051015012 
004123 xxxx 212223242526 FLD1o:  BCI     /ABCDEFGHIJKL/
004124 xxxx 273031414243 
004125 xxxx 000000000000 FLD2o:  BSS     3
004130 xxxx 071122145163 msg18:  acc     /Result: '^n ^n' (Should be '000000320001 043105147211')\r\n/
004131 xxxx 165154164072 
004132 xxxx 040047136156 
004133 xxxx 040136156047 
004134 xxxx 040050123150 
004135 xxxx 157165154144 
004136 xxxx 040142145040 
004137 xxxx 047060060060 
004140 xxxx 060060060063 
004141 xxxx 062060060060 
004142 xxxx 061040060064 
004143 xxxx 063061060065 
004144 xxxx 061064067062 
004145 xxxx 061061047051 
004146 xxxx 015012040040 
004147 xxxx 202020010203 FLD1p:  BCI     /   12345678R/
004150 xxxx 040506071051 
004151 xxxx 000000000000 FLD2p:  bss     2               "xxxx-00123456789  (Result)
004153 xxxx 065124103124 TCTmsg: acc     /TCT Tests ... (Results 020000000013 & 040000000004)\r\n/
004154 xxxx 040124145163 
004155 xxxx 164163040056 
004156 xxxx 056056040050 
004157 xxxx 122145163165 
004160 xxxx 154164163040 
004161 xxxx 060062060060 
004162 xxxx 060060060060 
004163 xxxx 060060061063 
004164 xxxx 040046040060 
004165 xxxx 064060060060 
004166 xxxx 060060060060 
004167 xxxx 060060064051 
004170 xxxx 015012040040 
004171 xxxx 014122145163 msg24o: acc     /Result: ^n\r\n/
004172 xxxx 165154164072 
004173 xxxx 040136156015 
004174 xxxx 012040040040 
004175 xxxx 200102030405 FLD1x:  bci     / 1234567890#/  " 200102030405060710110013 (oct)
004176 xxxx 060710110013 
004177 xxxx 000000000000 FLD3x:  BSS 1                   " char. & count - 020000000013
004200 xxxx 000000000000 TABLEx: OCT 000000000000,000000000000        "0X
004201 xxxx 000000000000 
004202 xxxx 000000020020         OCT 000000020020,020020020020        "1X
004203 xxxx 020020020020 
004204 xxxx 000000000000         OCT 000000000000                     "2X
004205 xxxx 040040061062 FLD1y:  aci      /  1234;5/  " 040040061062063064073065  (oct)
004206 xxxx 063064073065 
004207 xxxx 000000000000 FLD3y:  BSS     1            " char. and count 040000000004
004210 xxxx 700000000016 INDSCRy:desc9a   pr7|0, x6   " indexing FLD1 operand descr.
004211 xxxx 000000000000 TABLEy: BSS 12               " generate 60 (oct) table chars.
004225 xxxx 000000000000         OCt 000000000000,000000000000  " (060-067)
004226 xxxx 000000000000 
004227 xxxx 000000000040         OCT 000000000040               " (070-073)
004230 xxxx 046124103124 TCTRmsg:    acc        /TCTR Tests (Result 000000000012) ...\r\n/
004231 xxxx 122040124145 
004232 xxxx 163164163040 
004233 xxxx 050122145163 
004234 xxxx 165154164040 
004235 xxxx 060060060060 
004236 xxxx 060060060060 
004237 xxxx 060060061062 
004240 xxxx 051040056056 
004241 xxxx 056015012040 
004242 xxxx 000000000022 FLD1z:  ac4     /0000001234567890/  " 0000001234567890
004243 xxxx 064126170220 
004244 xxxx 000000000000 FLD3z:  BSS     1           " char/count 000000000012 (oct)
004245 xxxx 000000000000 TABLEz: OCT            0,           0
004246 xxxx 000000000000 
004247 xxxx 000000014014         OCT 000000014014,000000014014
004250 xxxx 000000014014 
004251 xxxx 020103115120 CMPCmsg:    acc     "CMPC Tests ...\r\n"
004252 xxxx 103040124145 
004253 xxxx 163164163040 
004254 xxxx 056056056015 
004255 xxxx 012040040040 
004256 xxxx 020124150145 msg25:  acc     "They are equal\r\n"
004257 xxxx 171040141162 
004260 xxxx 145040145161 
004261 xxxx 165141154015 
004262 xxxx 012040040040 
004263 xxxx 212223242020 FLD1aa: BCI     /ABCD/          "     'ABCD  '
004264 xxxx 676767672122 FLD2aa: BCI     /XXXXABCDXXXX/  " 'XXXXABCDXXXX'
004265 xxxx 232467676767 
004266 xxxx 212122222323 DATA:  BCI      /AABBCCDDEEFF/
004267 xxxx 242425252626 
004270 xxxx 272730303131        BCI      /GGHHIIJJKKLL/
004271 xxxx 414142424343 
004272 xxxx 000000000000 COUNT: BSS      1           "COUNT contains decimal 14 (octal 16)
004273 xxxx 303020202020 COMP:  BCI      /HH/
004274 xxxx 060060060060 FLD1ad:  aci      /000001234567/
004275 xxxx 060061062063 
004276 xxxx 064065066067 
004277 xxxx 000000000000 FLD3ad:  DEC      0           "unmatched count - 3
004300 xxxx 020103115120 CMPBmsg:    acc     "CMPB Tests ...\r\n"
004301 xxxx 102040124145 
004302 xxxx 163164163040 
004303 xxxx 056056056015 
004304 xxxx 012040040040 
004305 xxxx 020061056040 msg26:      acc     "1. FLD1 > FLD2\r\n"
004306 xxxx 106114104061 
004307 xxxx 040076040106 
004310 xxxx 114104062015 
004311 xxxx 012040040040 
004312 xxxx 020062056040 msg27:      acc     "2. FLD1 < FLD2\r\n"
004313 xxxx 106114104061 
004314 xxxx 040074040106 
004315 xxxx 114104062015 
004316 xxxx 012040040040 
004317 xxxx 020063056040 msg28:      acc     "3. FLD1 = FLD2\r\n"
004320 xxxx 106114104061 
004321 xxxx 040075040106 
004322 xxxx 114104062015 
004323 xxxx 012040040040 
004324 xxxx 000000633000 rd_clock:	rccl                " read the clock
004325 xxxx 004450757000 cv_clock:	staq	rdctime     " save clock reading
004326 xxxx 004420742000 	stx2	datx2               " save XR's
004327 xxxx 004421740000 	stx0	datx2+1             " ..
004330 xxxx 000034235007 	lda     28,dl               " Initialize montab
004331 xxxx 004453755000 	sta     montab+1			" to prime Feb
004332 xxxx 004450237000 	ldaq	rdctime             " Get clock reading
004333 xxxx 000001737000 	lls     1                   " Set for dvf
004334 xxxx 005050507000 	dvf     =1000000			" Get seconds since 1900.
004335 xxxx 000044777000 	llr     36                  " Into Q.
004336 xxxx 000074506007 	div     60,dl               " Seconds since min to A, mins to Q.
004337 xxxx 004433755000 	sta     rdclock.sec         " Save for inspection.
004340 xxxx 000074506007 	div     60,dl               " Min since hr to A, hrs to Q.
004341 xxxx 004432755000 	sta     rdclock.min
004342 xxxx 000006627000 	eax7	6
004343 xxxx 004423702000 	tsx2	datecv              " Convert the minutes.
004344 xxxx 004443176000 	sbq     rdclock.zone_temp	" Adjust for GMT.
004345 xxxx 000030506007 	div     24,dl               " Days since 1900 in q.
004346 xxxx 004442756000 	stq     rdclock.day_of_century	" save for  later.
004347 xxxx 004431755000 	sta     rdclock.hr          " Hours since daybreak.
004350 xxxx 004423702000 	tsx2	datecv              " Convert the hours
004351 xxxx 002665506007 	div     365*4+1,dl          " get leap year cycle
004352 xxxx 002110115007 	cmpa	365*3+1,dl          " if in last year of cycle (the leap year)
004353 xxxx 004355604000 	tmi     *+2                 " no
004354 xxxx 004453054000 	aos     montab+1			" allow for feb 29
004355 xxxx 000002736000 	qls     2                   " 4*# leap year cycles
004356 xxxx 003555036007 	adlq	1901,dl
004357 xxxx 004441756000 	stq     rdclock.year		" Save
004360 xxxx 000044777000 	llr     36
004361 xxxx 000555506007 	div     365,dl              " Years complete since l.y.c. =>Q
004362 xxxx 000004116007 	cmpq	4,dl                " Dec 31st of leap year?
004363 xxxx 004366601000 	tnz     *+3                 " No.
004364 xxxx 000001176007 	sbq     1,dl                " Adjust year and
004365 xxxx 000555235007 	lda     365,dl              " day numbers.
004366 xxxx 004441056000 	asq     rdclock.year		" Add in years complete.
004367 xxxx 000000626000 	eax6	0                   " search for correct month
004370 xxxx 030220520201 	rpt     12,1,tmi			" ..
004371 xxxx 004452175016 	sba     montab,6			" subtract off days for each month
004372 xxxx 777777075016 	ada     -1,6                " put back last entry
004373 xxxx 000001075007 	ada     1,dl                " plus one more
004374 xxxx 004436755000 	sta     rdclock.day_of_month	" Day of month
004375 xxxx 004423702000 	tsx2	datecv              " convert day
004376 xxxx 000000635016 	eaa     0,6
004377 xxxx 004452135003 	sbla	montab,du			" get index into month table
004400 xxxx 000022771000 	arl     18                  "..
004401 xxxx 004434755000 	sta     rdclock.month		" Save month number
004402 xxxx 004477236005 	ldq     rdc.months-1,al		" Get name of month.
004403 xxxx 004435756000 	stq     rdclock.month_name
004404 xxxx 004423702000 	tsx2	datecv              " convert month
004405 xxxx 000000024400 	mvne	(),(),()			" edit the date and time
004406 xxxx 004446070010 	desc4ns	date,8
004407 xxxx 004466000014 	desc9a	datedit,12
004410 xxxx 004450020014 	desc6a	rdctime,12
004411 xxxx 004442236000 	ldq     rdclock.day_of_century
004412 xxxx 000002076007 	adq     2,dl                " Bump Tuesday into place.
004413 xxxx 000007506007 	div     7,dl
004414 xxxx 004437755000 	sta     rdclock.day_of_week
004415 xxxx 004471236005 	ldq     rdc.days,al         " Get name of day.
004416 xxxx 004440756000 	stq     rdclock.day_name
004417 xxxx 004450237000 	ldaq	rdctime             " get conversion in AQ
004420 xxxx 004420622000 datx2:	eax2	*			" restore XR's
004421 xxxx 004421620000 	eax0    *               " ..
004422 xxxx 000000710012 	tra     0,2             " return to caller
004423 xxxx 004445755000 datecv:	sta	datenum			" save number
004424 xxxx 000017301400 	btd     (),(x7)         " convert into proper place
004425 xxxx 004445000004 	desc9a	datenum,4
004426 xxxx 004446070002 	desc4ns	date,2
004427 xxxx 777776627017 	eax7	-2,7			" move offset index
004430 xxxx 000000710012 	tra     0,2             " and return
004431 xxxx 000000000000 	bss	,1
004432 xxxx 000000000000 	bss	,1
004433 xxxx 000000000000 	bss	,1
004434 xxxx 000000000000 	bss	,1
004435 xxxx 000000000000 	bss	,1
004436 xxxx 000000000000 	bss	,1
004437 xxxx 000000000000 	bss	,1
004440 xxxx 000000000000 	bss	,1
004441 xxxx 000000000000 	bss	,1
004442 xxxx 000000000000 	bss	,1
004443 xxxx 000000000010     dec     8
004444 xxxx 160144164040     aci     'pdt '
004445 xxxx 000000000000 datenum:	bss	,1
004446 xxxx 000000000000 date:	bss	,1
004447 xxxx 000000011000 	even "(allocating 1 nop)
004450 xxxx 000000000000 rdctime:	bss	,2
004452 xxxx 000000000037 montab:	dec	31,28,31,30,31,30,31,31,30,31,30,31
004453 xxxx 000000000034 
004454 xxxx 000000000037 
004455 xxxx 000000000036 
004456 xxxx 000000000037 
004457 xxxx 000000000036 
004460 xxxx 000000000037 
004461 xxxx 000000000037 
004462 xxxx 000000000036 
004463 xxxx 000000000037 
004464 xxxx 000000000036 
004465 xxxx 000000000037 
004466 xxxx 401020102260 datedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
004467 xxxx 061322021322 
004470 xxxx 260015322021 	vfd	9/insp,o9/15,9/mvc+2,9/insm+1
004471 xxxx 163165156040 rdc.days: aci	'sun mon tue wed thurfri sat '
004472 xxxx 155157156040 
004473 xxxx 164165145040 
004474 xxxx 167145144040 
004475 xxxx 164150165162 
004476 xxxx 146162151040 
004477 xxxx 163141164040 
004500 xxxx 152141156040 	aci	'jan feb mar apr may jun jul aug septoct nov dec '
004501 xxxx 146145142040 
004502 xxxx 155141162040 
004503 xxxx 141160162040 
004504 xxxx 155141171040 
004505 xxxx 152165156040 
004506 xxxx 152165154040 
004507 xxxx 141165147040 
004510 xxxx 163145160164 
004511 xxxx 157143164040 
004512 xxxx 156157166040 
004513 xxxx 144145143040 
004514 xxxx 004517710000 crlf:	save
004515 xxxx 000000000000 
004516 xxxx 004515630000 
004517 xxxx 004515754000 
004520 xxxx 004515741000 
004521 xxxx 004530755000         sta     saveA
004522 xxxx 005051235000         lda     =012
004523 xxxx 000001420400         emCall  1
004524 xxxx 005052235000         lda     =015
004525 xxxx 000001420400         emcall  1
004526 xxxx 004530235000         lda     saveA
004527 xxxx 004516710000         return  crlf
004530 xxxx 000000000000 saveA:  bss     1
004531 xxxx 004540710000 ioa:    save    2, 4, 5, 6
004532 xxxx 000000000000 
004533 xxxx 000000222003 
004534 xxxx 000001224003 
004535 xxxx 000002225003 
004536 xxxx 000003226003 
004537 xxxx 004532630000 
004540 xxxx 004532754000 
004541 xxxx 004532741000 
004542 xxxx 004533742000 
004543 xxxx 004534744000 
004544 xxxx 004535745000 
004545 xxxx 004536746000 
004546 xxxx 000002624031 ioa1:   eax4    2, 1*   " 1st arg is control string
004547 xxxx 000003625011         eax5    3, 1    " next arg is the 1st of the numeric args. x5 points to next argument
004550 xxxx 000000626015         eax6    0, x5
004551 xxxx 000041235007         lda     041, dl " make a blank tallyb word .....
004552 xxxx 004567755000         sta     i29
004553 xxxx 000000235014     	lda     0, x4   " get 1st data word into A
004554 xxxx 000033731000         ars     27      " determine word count
004555 xxxx 000006735000     	als     6       " count to upper word of tally
004556 xxxx 004567255000     	orsa    i29
004557 xxxx 000000626014     	eax6    0, x4   " address of string into X6
004560 xxxx 004567746000     	stx6    i29     " address to upper word of tally
004561 xxxx 004567235052 inext:  lda     i29, sc
004562 xxxx 000136115007         cmpa    =o000136,dl		" ^
004563 xxxx 004570600000         tze     iernot      " if so, go process it
004564 xxxx 000001420400 out1:  	emCall  1
004565 xxxx 004561607000     	ttf     inext
004566 xxxx 004533710000         return  ioa
004567 xxxx 000000000041 i29:	tallyb  0, 0, 1
004570 xxxx 004567235052 iernot: lda     i29, sc         " get next char ...
004571 xxxx 000136115007         cmpa    =o000136,dl     " is it another "^"?
004572 xxxx 004610600000         tze     i21             " No, just print it ...
004573 xxxx 000167115007         cmpa    =o000167,dl     " is it a "w"?
004574 xxxx 004612600000         tze     idoW            " do full word octal
004575 xxxx 000157115007         cmpa    =o000157,dl     " is it an "o"?
004576 xxxx 004640600000         tze     idoO            " print zero suppressed octal
004577 xxxx 000156115007         cmpa    =o000156,dl     " is it a "n"?
004600 xxxx 004663600000         tze     idoN            " octal w/ no spaces inserted
004601 xxxx 000144115007         cmpa    =o000144,dl     " is it a "d"?
004602 xxxx 004712600000         tze     idoD            " decimal
004603 xxxx 000141115007         cmpa    =o000141,dl     " is it a ^a?
004604 xxxx 004720600000         tze     idoA            " 4 char ascii display
004605 xxxx 000147115007         cmpa    =o000147,dl     " is it a ^g?
004606 xxxx 004731600000         tze     idoG            " 6 char GE BCD display
004607 xxxx 004564710000         tra     out1        " unknown just print it....
004610 xxxx 000001420400 i21:    emCall  1           " output A to console
004611 xxxx 004561710000         tra     inext
004612 xxxx 000000235035 idoW:   lda     0, 5*       " ^w - full-word octal xxxxxx xxxxxx
004613 xxxx 005007702000         tsx2    octwd
004614 xxxx 004710757000         staq    ioaSafe     " bcd in AQ
004615 xxxx 000044773000         lrl     36          " A => Q
004616 xxxx 000006622000         eax2    6
004617 xxxx 000000235007 idoW2:  lda     =0, dl
004620 xxxx 000006737000         lls     6
004621 xxxx 000002420400         emCall  2           " output GE code char to console
004622 xxxx 777777622012         eax2    -1, 2
004623 xxxx 004617601000         tnz     idoW2
004624 xxxx 004710237000         ldaq    ioaSafe
004625 xxxx 000000235007         lda     =0, dl      " 0 => A
004626 xxxx 000020235007         lda     =020 ,dl     " bcd ' ' => A
004627 xxxx 000002420400         emcall  2
004630 xxxx 000006622000         eax2    6
004631 xxxx 000000235007 idoW3:  lda     =0,dl
004632 xxxx 000006737000         lls     6
004633 xxxx 000002420400         emCall  2
004634 xxxx 777777622012         eax2    -1, 2
004635 xxxx 004631601000         tnz     idoW3
004636 xxxx 000001065003         adx5    1,du
004637 xxxx 004561710000         tra     inext
004640 xxxx 000000235035 idoO:   lda     0, 5*           " ^o - Zero-suppressed octal
004641 xxxx 005007702000         tsx2    octwd
004642 xxxx 004710757000         staq    ioaSafe         " bcd in AQ
004643 xxxx 004661235000         lda     idOTly
004644 xxxx 004662755000         sta     idOT
004645 xxxx 004662235052 idO1:   lda     idOT, sc        " get char into A
004646 xxxx 000000115007         cmpa    =0, dl          " a zero?
004647 xxxx 004655601000         tnz     idONZ + 1       " nope
004650 xxxx 004645607000         ttf     idO1            " Yes, a Zero. Go for more
004651 xxxx 000002420400         emCall  2               " output a single 0
004652 xxxx 000001065003         adx5    1,du
004653 xxxx 004561710000         tra     inext
004654 xxxx 004662235052 idONZ:  lda     idOT, sc        " get char into A
004655 xxxx 000002420400         emCall  2
004656 xxxx 004654607000         ttf     idONZ           " Yes, a Zero. Go for more
004657 xxxx 000001065003         adx5    1,du
004660 xxxx 004561710000         tra     inext
004661 xxxx 004710001400 idOTly: tally   ioaSafe, 12, 0
004662 xxxx 000000000000 idOT:   bss     1
004663 xxxx 000000235035 idoN:   lda     0, 5*       " ^n - octal w/ no spaces inserted
004664 xxxx 005007702000         tsx2    octwd
004665 xxxx 004710757000         staq    ioaSafe     " bcd in AQ
004666 xxxx 000044773000         lrl     36          " A => Q
004667 xxxx 000006622000         eax2    6
004670 xxxx 000000235007 idoN2:  lda     =0,dl
004671 xxxx 000006737000         lls     6
004672 xxxx 000002420400         emCall  2           " output GE code char to console
004673 xxxx 777777622012         eax2    -1, 2
004674 xxxx 004670601000         tnz     idoN2
004675 xxxx 004710237000         ldaq    ioaSafe
004676 xxxx 000000235007         lda     =0, dl      " 0 => A
004677 xxxx 000006622000         eax2    6
004700 xxxx 000000235007 idoN3:  lda     =0, dl
004701 xxxx 000006737000         lls     6
004702 xxxx 000002420400         emCall  2
004703 xxxx 777777622012         eax2    -1, 2
004704 xxxx 004700601000         tnz     idoN3
004705 xxxx 000001065003         adx5    1,du
004706 xxxx 004561710000         tra     inext
004707 xxxx 000000011000         even "(allocating 1 nop)
004710 xxxx 000000000000 ioaSafe:  bss 2
004712 xxxx 000000236035 idoD:   ldq     0, 5*       " ^d
004713 xxxx 004742701000         call    toDec
004714 xxxx 004716710000 
004715 xxxx 000000000000 
004716 xxxx 000001065003         adx5    1,du
004717 xxxx 004561710000         tra     inext
004720 xxxx 000000236035 idoA:   ldq     0, 5*      " ^a (4 ascii chars into Q)
004721 xxxx 000004622000         eax2    4
004722 xxxx 000000235007 idoA2:  lda     =0,dl
004723 xxxx 000011737000         lls     9
004724 xxxx 000001420400         emCall  1
004725 xxxx 777777622012         eax2    -1, 2
004726 xxxx 004722601000         tnz     idoA2
004727 xxxx 000001065003         adx5    1,du        " into next argument
004730 xxxx 004561710000         tra     inext
004731 xxxx 000000236035 idoG:   ldq     0, 5*        " ^g (6 GE BCD chars into Q)
004732 xxxx 000006622000         eax2    6
004733 xxxx 000000235007 idoG2:  lda     =0,dl
004734 xxxx 000006737000         lls     6
004735 xxxx 000002420400         emCall  2
004736 xxxx 777777622012         eax2    -1, 2
004737 xxxx 004733601000         tnz     idoG2
004740 xxxx 000001065003         adx5    1,du        " into next argument
004741 xxxx 004561710000         tra     inext
004742 xxxx 004745710000 toDec:  save    "2,3,4,5,6,7
004743 xxxx 000000000000 
004744 xxxx 004743630000 
004745 xxxx 004743754000 
004746 xxxx 004743741000 
004747 xxxx 005053116000         cmpq    =-34359738368       " the weird one?
004750 xxxx 004754601000         tnz     toDec2
004751 xxxx 005006235000         lda     decMTly             " just print it and be done with it
004752 xxxx 005002755000         sta     decTly
004753 xxxx 004772710000         tra     toDec1
004754 xxxx 004776756000 toDec2: stq     decNo
004755 xxxx 000000116007         cmpq    =0,dl       " Q < 0?
004756 xxxx 004760605000         tpl     toDec0      " No
004757 xxxx 004776336000         lcq     decNo       " -decNo => Q
004760 xxxx 000012506007 toDec0: div     =10,dl      " divide Q by 10, remainder in A
004761 xxxx 000060075007         ada     =o060,dl    " add ascii '0' (=1A0) to A
004762 xxxx 005002755045         sta     decTly, scr " start writing characters backwards
004763 xxxx 000000076007         adq     =0,dl       " set flags to test if Q == 0
004764 xxxx 004760601000         tnz     toDec0      " if Q == 0 then we're essentially done with conversion
004765 xxxx 004776235000         lda     decNo
004766 xxxx 000000115007         cmpa    =0,dl
004767 xxxx 004772605000         tpl     toDec1
004770 xxxx 000055235007         lda     =o055,dl    " (-) => A
004771 xxxx 005002755045         sta     decTly, scr " write (-) sign
004772 xxxx 005002235052 toDec1: lda     decTly, sc
004773 xxxx 000001420400         emCall  1
004774 xxxx 004772607000         ttf     toDec1
004775 xxxx 004744710000         return  toDec
004776 xxxx 000000000000 decNo:  dec     0
004777 xxxx 000000000000 decBuf: bss     3
005002 xxxx 005001000040 decTly: tallyb  decBuf+2, , 0
005003 xxxx 055063064063 decMM:  aci     "-34359738368"  " -2^^35
005004 xxxx 065071067063 
005005 xxxx 070063066070 
005006 xxxx 005003001440 decMTly:tallyb  decMM, 12, 0
005007 xxxx 005024742000 octwd:	stx2	octx2
005010 xxxx 000006622000 	eax2	6
005011 xxxx 000003736000 	qls     3
005012 xxxx 000003777000 	llr     3
005013 xxxx 777777622012 	eax2	-1,2
005014 xxxx 005011605400 	tpnz	*-3
005015 xxxx 005046756000 	stq     octtemp
005016 xxxx 000006622000 	eax2	6
005017 xxxx 000003736000 	qls     3
005020 xxxx 000003777000 	llr     3
005021 xxxx 777777622012 	eax2	-1,2
005022 xxxx 005017605400 	tpnz	*-3
005023 xxxx 005046235000 	lda     octtemp
005024 xxxx 005024622000 octx2:	eax2	*
005025 xxxx 000000710012 	tra     0,2
005026 xxxx 005044742000 hexwd:	stx2	hexx2
005027 xxxx 000044773000 	lrl     36          "shift to Q
005030 xxxx 000006622000 	eax2	6           "	process 6 characters
005031 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
005032 xxxx 000004737000 	lls     4           "shift in 4 bits
005033 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
005034 xxxx 005036604400 	tmoz	*+2
005035 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
005036 xxxx 000006773000 	lrl     6
005037 xxxx 005046235000 	lda     octtemp		"get temporary
005040 xxxx 000006737000 	lls     6           "insert new character
005041 xxxx 005046755000 	sta     octtemp		"and store
005042 xxxx 777777622012 	eax2	-1,2		"decrement index
005043 xxxx 005031605400 	tpnz	hexloop
005044 xxxx 005044622000 hexx2:	eax2	*
005045 xxxx 000000710012 	tra     0,2		"return to caller
005046 xxxx 000000000000 octtemp:	oct	0
005047 xxxx 000000000000 decimal literal (=0)
005050 xxxx 000003641100 decimal literal (=1000000)
005051 xxxx 000000000012 octal literal (=o12)
005052 xxxx 000000000015 octal literal (=o15)
005053 xxxx 400000000000 decimal literal (=-34359738368)
