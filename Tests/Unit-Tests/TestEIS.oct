!SIZE 005050
000000 xxxx 004320702000        tsx2	rd_clock
000001 xxxx 000032757000        staq	Date        "MM/DD HH:MM
000002 xxxx 004525701000        call    ioa(msgHello, Date, Date+1)
000003 xxxx 000010710000 
000004 xxxx 000000000000 
000005 xxxx 000011000000 
000006 xxxx 000032000000 
000007 xxxx 000033000000 
000010 xxxx 000040710000         tra BTD0
000011 xxxx 031124150151 msgHello:  acc         "This is TestEIS ...^g^g\r\n"
000012 xxxx 163040151163 
000013 xxxx 040124145163 
000014 xxxx 164105111123 
000015 xxxx 040056056056 
000016 xxxx 136147136147 
000017 xxxx 015012040040 
000020 xxxx 015104141164 msg1:      acc         "Date: ^g^g \r\n"
000021 xxxx 145072040136 
000022 xxxx 147136147040 
000023 xxxx 015012040040 
000024 xxxx 000000000012 Ten:    dec 10
000025 xxxx 021124150151 TENmsg: acc     /This is ^d ... \r\n/
000026 xxxx 163040151163 
000027 xxxx 040136144040 
000030 xxxx 056056056040 
000031 xxxx 015012040040 
000032 xxxx 000000000000 Date:   bss     2
000034 xxxx 017102124104 BTDmsg:    acc         "BTD Tests ...\r\n"
000035 xxxx 040124145163 
000036 xxxx 164163040056 
000037 xxxx 056056015012 
000040 xxxx 004525701000         call    ioa(BTDmsg)
000041 xxxx 000044710000 
000042 xxxx 000000000000 
000043 xxxx 000034000000 
000044 xxxx 000000301400         BTD     (),()
000045 xxxx 000056400002         NDSC9   FLD1a,2,2        " binary operand descriptor
000046 xxxx 000057010004         NDSC9   FLD2a,0,4,1      " decimal operand descriptor
000047 xxxx 004525701000         call    ioa(msg2, FLD2a, FLD2a)
000050 xxxx 000055710000 
000051 xxxx 000000000000 
000052 xxxx 000060000000 
000053 xxxx 000057000000 
000054 xxxx 000057000000 
000055 xxxx 000075710000         tra     BTD2
000056 xxxx 777777777000 FLD1a:  dec     -512    " 7 7 7 7 7 7 7 7 7 0 0 0
000057 xxxx 000000000000 FLD2a:  bss     1       " 0 5 5 0 6 5 0 6 1 0 6 2
000060 xxxx 061122145163 msg2:   acc         "Result: ^n (^a) (Should be 055065061062 (-512))\r\n"
000061 xxxx 165154164072 
000062 xxxx 040136156040 
000063 xxxx 050136141051 
000064 xxxx 040050123150 
000065 xxxx 157165154144 
000066 xxxx 040142145040 
000067 xxxx 060065065060 
000070 xxxx 066065060066 
000071 xxxx 061060066062 
000072 xxxx 040050055065 
000073 xxxx 061062051051 
000074 xxxx 015012040040 
000075 xxxx 000000301400         BTD     (),()
000076 xxxx 000220600001         NDSC9   FLD1b,3,1
000077 xxxx 000221220003         NDSC9   FLD2b,1,3,2
000100 xxxx 004525701000         call    ioa(msg2b, FLD2b, FLD2b)
000101 xxxx 000106710000 
000102 xxxx 000000000000 
000103 xxxx 000222000000 
000104 xxxx 000221000000 
000105 xxxx 000221000000 
000106 xxxx 000107617000         tov     *+1         " reset OVR
000107 xxxx 000172710000         tra     BTD3
000110 xxxx 777777747707 N12345: dec     -12345
000111 xxxx 000000000000 errnum:     bss	,2
000113 xxxx 000000000000 errtemp:	bss	,16
000133 xxxx 000000000000 ertally:	bss	,1
000134 xxxx 000000000000 errarg:     bss	,1
000135 xxxx 000000000000 erlen:      bss	,1
000136 xxxx 401020403020 eredit_d:	vfd	9/lte+1,o9/20,9/lte+3,o9/20,9/lte+4,o9/52,9/mfls+10,9/enf
000137 xxxx 404052152040 
000140 xxxx 321000000000             vfd	9/mvc+1
000141 xxxx 065122145163 msg2_b:     acc /Result: ^n ^n (Should be 320000000001 043105XXXXXX)\r\n/
000142 xxxx 165154164072 
000143 xxxx 040136156040 
000144 xxxx 136156040050 
000145 xxxx 123150157165 
000146 xxxx 154144040142 
000147 xxxx 145040063062 
000150 xxxx 060060060060 
000151 xxxx 060060060060 
000152 xxxx 060061040060 
000153 xxxx 064063061060 
000154 xxxx 065130130130 
000155 xxxx 130130130051 
000156 xxxx 015012040040 
000157 xxxx 053122145163 msg2_c:     acc /Result: '^g^g' (Should be '      -12345')\r\n/
000160 xxxx 165154164072 
000161 xxxx 040047136147 
000162 xxxx 136147047040 
000163 xxxx 050123150157 
000164 xxxx 165154144040 
000165 xxxx 142145040047 
000166 xxxx 040040040040 
000167 xxxx 040040055061 
000170 xxxx 062063064065 
000171 xxxx 047051015012 
000172 xxxx 000110235000         lda     N12345
000173 xxxx 000134755000         sta     errarg
000174 xxxx 000000301400         btd     (),()       "convert decimal number
000175 xxxx 000134000004         desc9a	errarg,4
000176 xxxx 000111050014         desc4ls	errnum,12
000177 xxxx 004525701000         call    ioa(msg2_b, errnum, errnum+1)
000200 xxxx 000205710000 
000201 xxxx 000000000000 
000202 xxxx 000141000000 
000203 xxxx 000111000000 
000204 xxxx 000112000000 
000205 xxxx 000000024400         mvne	(),(),()	"edit the output
000206 xxxx 000111050014         desc4ls	errnum,12
000207 xxxx 000136000011         desc9a	eredit_d,9
000210 xxxx 000113020014         desc6a	errtemp,12
000211 xxxx 004525701000         call    ioa(msg2_c, errtemp, errtemp+1)
000212 xxxx 000217710000 
000213 xxxx 000000000000 
000214 xxxx 000157000000 
000215 xxxx 000113000000 
000216 xxxx 000114000000 
000217 xxxx 000243710000         tra     DTB0
000220 xxxx 000000000377 FLD1b:  dec     255     " 0 0 0 0 0 0 0 0 0 3 7 7
000221 xxxx 000000000000 FLD2b:  bss     1       " 0 0 0 0 6 5 0 6 5 0 5 3
000222 xxxx 060122145163 msg2b:  acc         "Result: ^n (^a) (Should be 000065065053 (55+))\r\n"
000223 xxxx 165154164072 
000224 xxxx 040136156040 
000225 xxxx 050136141051 
000226 xxxx 040050123150 
000227 xxxx 157165154144 
000230 xxxx 040142145040 
000231 xxxx 060060060060 
000232 xxxx 066065060066 
000233 xxxx 065060065063 
000234 xxxx 040050065065 
000235 xxxx 053051051015 
000236 xxxx 012040040040 
000237 xxxx 017104124102 DTBmsg:    acc         "DTB Tests ...\r\n"
000240 xxxx 040124145163 
000241 xxxx 164163040056 
000242 xxxx 056056015012 
000243 xxxx 004525701000 DTB0:   call    ioa(DTBmsg)
000244 xxxx 000247710000 
000245 xxxx 000000000000 
000246 xxxx 000237000000 
000247 xxxx 000000305400         DTB     (), ()
000250 xxxx 003525360005         NDSC4   FLD1c,3,5,2
000251 xxxx 003527000004         NDSC9   FLD2c,0,4
000252 xxxx 004525701000         call    ioa(msg3, FLD2c)
000253 xxxx 000257710000 
000254 xxxx 000000000000 
000255 xxxx 003462000000 
000256 xxxx 003527000000 
000257 xxxx 000000305400         DTB     (), ()
000260 xxxx 003530370003         NDSC4   FLD1d,3,3,3
000261 xxxx 003531400002         NDSC9   FLD2d,2,2
000262 xxxx 004525701000         call    ioa(msg4, FLD2d)
000263 xxxx 000267710000 
000264 xxxx 000000000000 
000265 xxxx 003474000000 
000266 xxxx 003531000000 
000267 xxxx 000000305400         DTB     (), ()
000270 xxxx 003532030004         NDSC9   FLD1e,0,4,3
000271 xxxx 003533600001         NDSC9   FLD2e,3,1
000272 xxxx 004525701000         call    ioa(msg5, FLD2e)
000273 xxxx 000277710000 
000274 xxxx 000000000000 
000275 xxxx 003506000000 
000276 xxxx 003533000000 
000277 xxxx 004525701000         call    ioa(MVNEmsg)
000300 xxxx 000303710000 
000301 xxxx 000000000000 
000302 xxxx 003520000000 
000303 xxxx 000000024400         MVNE    (),(),()
000304 xxxx 003577020012         NDSC9   FLD1f,0,10,2
000305 xxxx 003602000005         desc9a  FLD2f, 5
000306 xxxx 003614000014         desc9a  FLD3f, 12
000307 xxxx 004525701000         call    ioa(msg6, FLD3f, FLD3f+1, FLD3f+2)
000310 xxxx 000316710000 
000311 xxxx 000000000000 
000312 xxxx 003534000000 
000313 xxxx 003614000000 
000314 xxxx 003615000000 
000315 xxxx 003616000000 
000316 xxxx 000000024400         MVNE    (),(),()
000317 xxxx 003577020012         desc9ts FLD1f, 10
000320 xxxx 003604000016         desc9a  FLD2f1, 14
000321 xxxx 003617020014         desc6a  FLD3f1, 12      " 6-bit gebcd receiving string
000322 xxxx 004525701000         call    ioa(msg7, FLD3f1, FLD3f1+1)
000323 xxxx 000330710000 
000324 xxxx 000000000000 
000325 xxxx 003550000000 
000326 xxxx 003617000000 
000327 xxxx 003620000000 
000330 xxxx 000000024400         MVNE    (),(),()
000331 xxxx 003577020012         desc9ts FLD1f, 10
000332 xxxx 003610000016         desc9a  FLD2f2, 14      " play around with $ and -
000333 xxxx 003621000014         desc9a  FLD3f2, 12
000334 xxxx 004525701000         call    ioa(msg8, FLD3f2, FLD3f2+1, FLD3f2+2)
000335 xxxx 000343710000 
000336 xxxx 000000000000 
000337 xxxx 003563000000 
000340 xxxx 003621000000 
000341 xxxx 003622000000 
000342 xxxx 003623000000 
000343 xxxx 000000024400         MVNE    (), (), ()      " with (*) protection & (.) insertion
000344 xxxx 003640060010         NDSC4   FLD1g,0,8,2
000345 xxxx 003641000006         desc9a  FLD2g, 6
000346 xxxx 003643000014         desc9a  FLD3g,12
000347 xxxx 004525701000         call    ioa(msg9, FLD3g, FLD3g+1, FLD3g+2)
000350 xxxx 000356710000 
000351 xxxx 000000000000 
000352 xxxx 003624000000 
000353 xxxx 003643000000 
000354 xxxx 003644000000 
000355 xxxx 003645000000 
000356 xxxx 004525701000         call    ioa(MVEmsg)
000357 xxxx 000362710000 
000360 xxxx 000000000000 
000361 xxxx 003646000000 
000362 xxxx 000000020400         MVE    (), (), ()       " move alphanumeric edited
000363 xxxx 003673220024         desc6a   FLD1h(2),20
000364 xxxx 003677000031         desc9a   FLD2h,25       " example in DH02 had 35 - don't think so
000365 xxxx 003706020036         desc6a   FLD3h,30
000366 xxxx 004525701000         call    ioa(msg10, FLD3h, FLD3h+1, FLD3h+2, FLD3h+3, FLD3h+4) 
000367 xxxx 000377710000 
000370 xxxx 000000000000 
000371 xxxx 003652000000 
000372 xxxx 003706000000 
000373 xxxx 003707000000 
000374 xxxx 003710000000 
000375 xxxx 003711000000 
000376 xxxx 003712000000 
000377 xxxx 000000020400         MVE     (), (), ()      " move alphanumeric edited
000400 xxxx 003727000007         desc9a   FLD1i,7        " sending field operand descriptor
000401 xxxx 003731000006         desc9a   FLD2i,6        " micro-op string operand descriptor
000402 xxxx 003734200007         desc9a   FLD3i+1(1),7   " receiving field operand descriptor
000403 xxxx 004525701000         call    ioa(msg11, FLD3i, FLD3i+1, FLD3i+2) 
000404 xxxx 000412710000 
000405 xxxx 000000000000 
000406 xxxx 003713000000 
000407 xxxx 003733000000 
000410 xxxx 003734000000 
000411 xxxx 003735000000 
000412 xxxx 000434710000         tra MLR0
000413 xxxx 050122145163 msgMLR1:    acc     /Result: ^a^a^a (Should be 'QwErTyUiOp')\0xa/
000414 xxxx 165154164072 
000415 xxxx 040136141136 
000416 xxxx 141136141040 
000417 xxxx 050123150157 
000420 xxxx 165154144040 
000421 xxxx 142145040047 
000422 xxxx 121167105162 
000423 xxxx 124171125151 
000424 xxxx 117160047051 
000425 xxxx 012040040040 
000426 xxxx 047121167105 srcMLR1:    aci     /'QwErTyUiOp'/
000427 xxxx 162124171125 
000430 xxxx 151117160047 
000431 xxxx 000000000000 dstMLR1:    bss     3
000434 xxxx 004525701000 MLR0:   call    ioa(MLRmsg)
000435 xxxx 000440710000 
000436 xxxx 000000000000 
000437 xxxx 003736000000 
000440 xxxx 020000100400         MLR     (),(),fill(20)     " move with blank fill
000441 xxxx 003760020014         desc6a  FLD1j,12           " sending descriptor
000442 xxxx 003762420016         desc6a  FLD2j(4),14         " receiving descriptor
000443 xxxx 004525701000         call    ioa(msg12, FLD2j, FLD2j+1, FLD2j+2)
000444 xxxx 000452710000 
000445 xxxx 000000000000 
000446 xxxx 003743000000 
000447 xxxx 003762000000 
000450 xxxx 003763000000 
000451 xxxx 003764000000 
000452 xxxx 400000100400         MLR     (),(),fill(400)
000453 xxxx 004003320011         desc6a  FLD1k(3),9
000454 xxxx 004005640012         desc4a  FLD2k(6),10
000455 xxxx 004525701000         call    ioa(msg13, FLD2k, FLD2k+1)
000456 xxxx 000463710000 
000457 xxxx 000000000000 
000460 xxxx 003765000000 
000461 xxxx 004005000000 
000462 xxxx 004006000000 
000463 xxxx 000013223003         LDX3    =11, DU     " Original had DL which is wrong......
000464 xxxx 040000100413         MLR     (x3), (), fill(040)
000465 xxxx 004021200010         desc9a  FLD1l(1), 8
000466 xxxx 004027000010         desc9a  FLD2l, 8
000467 xxxx 004525701000         call    ioa(msg14, FLD2l, FLD2l+1)
000470 xxxx 000475710000 
000471 xxxx 000000000000 
000472 xxxx 004007000000 
000473 xxxx 004027000000 
000474 xxxx 004030000000 
000475 xxxx 000004235007         LDA     =4,DL
000476 xxxx 000003236007         LDQ     =3,DL
000477 xxxx 040006100405         MLR     (al),(ql), fill(040)
000500 xxxx 004045000003         desc9A  FLD1m, 3
000501 xxxx 004052400003         desc9a  FLD2m(2),3
000502 xxxx 004525701000         call    ioa(msg15, FLD2m, FLD2m+1, FLD2m+2)
000503 xxxx 000511710000 
000504 xxxx 000000000000 
000505 xxxx 004031000000 
000506 xxxx 004052000000 
000507 xxxx 004053000000 
000510 xxxx 004054000000 
000511 xxxx 005043762400         LAR2    =0              " SET AR2 TO ALL 0'S
000512 xxxx 004073623000         EAX3    FLD2n
000513 xxxx 200000507413         AWDX    pr2|0,3         " AR2=address of Y
000514 xxxx 040100100404         MLR     (IC),(pr),fill(040)
000515 xxxx 003353200006         desc9a  FLD1n-*+1(1),6      " was desc9a  5(1),6 ("call" takes up many words....)
000516 xxxx 200000000006         desc9a  pr2|0, 6
000517 xxxx 004525701000         call    ioa(msg16, FLD2n, FLD2n+1)
000520 xxxx 000525710000 
000521 xxxx 000000000000 
000522 xxxx 004055000000 
000523 xxxx 004073000000 
000524 xxxx 004074000000 
000525 xxxx 000426371400         epp5    srcMLR1
000526 xxxx 000431372000         epp6    dstMLR1
000527 xxxx 000014235007         lda     12,dl       " 12-bytes in message
000530 xxxx 000140100540         mlr     (pr,rl),(pr,rl)
000531 xxxx 500000000005         desc9a  pr5|0,al
000532 xxxx 600000000005         desc9a  pr6|0,al
000533 xxxx 004525701000         call    ioa(msgMLR1, dstMLR1, dstMLR1+1, dstMLR1+2)
000534 xxxx 000542710000 
000535 xxxx 000000000000 
000536 xxxx 000413000000 
000537 xxxx 000431000000 
000540 xxxx 000432000000 
000541 xxxx 000433000000 
000542 xxxx 004525701000         call    ioa(MRLmsg)
000543 xxxx 000546710000 
000544 xxxx 000000000000 
000545 xxxx 004075000000 
000546 xxxx 020000101400         MRL     (),(),fill(20)
000547 xxxx 004117020014         desc6a  FLD1o, 12            "ADSC6   FLD1,,12
000550 xxxx 004121420016         desc6a  FLD2o(4), 14         "ADSC6   FLD2,4,14
000551 xxxx 004525701000         call    ioa(msg17, FLD2o, FLD2o+1, FLD2o+2)
000552 xxxx 000560710000 
000553 xxxx 000000000000 
000554 xxxx 004102000000 
000555 xxxx 004121000000 
000556 xxxx 004122000000 
000557 xxxx 004123000000 
000560 xxxx 400000101400         MRL     (),(),fill(400)
000561 xxxx 004143320011         desc6a  FLD1p(3),9
000562 xxxx 004145440014         desc4a  FLD2p(4),12
000563 xxxx 004525701000         call    ioa(msg18, FLD2p, FLD2p+1)
000564 xxxx 000571710000 
000565 xxxx 000000000000 
000566 xxxx 004124000000 
000567 xxxx 004145000000 
000570 xxxx 004146000000 
000571 xxxx 001023710000         tra     MVT0
000572 xxxx 017115126124 MVTmsg: acc     /MVT Tests ...\r\n/ 
000573 xxxx 040124145163 
000574 xxxx 164163040056 
000575 xxxx 056056015012 
000576 xxxx 051122145163 msg19:  acc     /Result: '^n' (Should be '001043105155')\r\n/
000577 xxxx 165154164072 
000600 xxxx 040047136156 
000601 xxxx 047040050123 
000602 xxxx 150157165154 
000603 xxxx 144040142145 
000604 xxxx 040047060060 
000605 xxxx 061060064063 
000606 xxxx 061060065061 
000607 xxxx 065065047051 
000610 xxxx 015012040040 
000611 xxxx 202020202001 FLD1q:  bci     /     123456/
000612 xxxx 020304050620 
000613 xxxx 000000000000 FLD2q:  bss     1       " 0123456-      (Result)
000614 xxxx 000001002003 TABLE1: OCT     000001002003,004005006007  " 0X
000615 xxxx 004005006007 
000616 xxxx 010011017017         OCT     010011017017,017017017017  " 1X
000617 xxxx 017017017017 
000620 xxxx 000017017017         OCT     000017017017,017017017017  " 2X
000621 xxxx 017017017017 
000622 xxxx 017017017017         OCT     017017017017,017017017017  " 3X
000623 xxxx 017017017017 
000624 xxxx 017017017017         OCT     017017017017,017017017017  " 4X
000625 xxxx 017017017017 
000626 xxxx 017017015017         OCT     017017015017,017017017017  " 5X
000627 xxxx 017017017017 
000630 xxxx 014017017017         OCT     014017017017,017017017017  " 6X
000631 xxxx 017017017017 
000632 xxxx 017017017017         OCT     017017017017,017017017017  " 7X
000633 xxxx 017017017017 
000634 xxxx 051122145163 msg20:  acc     /Result: '^n' (Should be '022064126314')\r\n/
000635 xxxx 165154164072 
000636 xxxx 040047136156 
000637 xxxx 047040050123 
000640 xxxx 150157165154 
000641 xxxx 144040142145 
000642 xxxx 040047060062 
000643 xxxx 062060066064 
000644 xxxx 061062066063 
000645 xxxx 061064047051 
000646 xxxx 015012040040 
000647 xxxx 022064126317 FLD3q:  OCT     022064126317    " 123456++
000650 xxxx 000000000000 FLD4q:  BSS     1               " 022064126314  (Result)
000651 xxxx 000001002003 TAB:    OCT     000001002003,004005006007
000652 xxxx 004005006007 
000653 xxxx 010011014014         OCT     010011014014,014015014014
000654 xxxx 014015014014 
000655 xxxx 071122145163 msg21:  acc     "Result: '^a^a^a^a^a' (Should be 'TTYMESSAGE201     !!')\r\n"
000656 xxxx 165154164072 
000657 xxxx 040047136141 
000660 xxxx 136141136141 
000661 xxxx 136141136141 
000662 xxxx 047040050123 
000663 xxxx 150157165154 
000664 xxxx 144040142145 
000665 xxxx 040047124124 
000666 xxxx 131115105123 
000667 xxxx 123101107105 
000670 xxxx 062060061040 
000671 xxxx 040040040040 
000672 xxxx 041041047051 
000673 xxxx 015012040040 
000674 xxxx 636370442562 FLD1r:  BCI     /TTYMESSAGE201      /
000675 xxxx 622127250200 
000676 xxxx 012020202020 
000677 xxxx 202020202020 
000700 xxxx 000000000000 FLD2r:  BSS     5
000705 xxxx 060061062063 TABLE9: aci     '01234567'  " 0X
000706 xxxx 064065066067 
000707 xxxx 070071133043         aci     '89[#@:>?'  " 1X
000710 xxxx 100072076077 
000711 xxxx 040101102103         aci     ' ABCDEFG'  " 2X
000712 xxxx 104105106107 
000713 xxxx 110111046056         aci     'HI&.](<\'  " 3X
000714 xxxx 135050074107 
000715 xxxx 136112113114         aci     '^JKLMNOP'  " 4X
000716 xxxx 115116117120 
000717 xxxx 121122055044         aci     "QR-$*);'"  " 5X
000720 xxxx 052051073047 
000721 xxxx 054057123124         aci     ',/STUVWX'  " 6X 
000722 xxxx 125126127130 
000723 xxxx 131132137054         aci     'YZ_,%="!'  " 7X 
000724 xxxx 045075042041 
000725 xxxx 041122145163 msg22a: acc     /Result: '^a' (Should be '123M')\r\n/
000726 xxxx 165154164072 
000727 xxxx 040047136141 
000730 xxxx 047040050123 
000731 xxxx 150157165154 
000732 xxxx 144040142145 
000733 xxxx 040047061062 
000734 xxxx 063115047051 
000735 xxxx 015012040040 
000736 xxxx 041122145163 msg22b: acc     /Result: '^a' (Should be '1234')\r\n/
000737 xxxx 165154164072 
000740 xxxx 040047136141 
000741 xxxx 047040050123 
000742 xxxx 150157165154 
000743 xxxx 144040142145 
000744 xxxx 040047061062 
000745 xxxx 063064047051 
000746 xxxx 015012040040 
000747 xxxx 000015022064 P6a:    ac4     /   -1234/        "-1234 ——> 123M   (Yes, that's what it's supposed to be)
000750 xxxx 000013022064 P6b:    ac4     /   +1234/        "+1234 ——> 1234
000751 xxxx 323403000404 MOPS:   vfd     9/mvc+3,9/lte+3, o9/0, 9/lte+4  " MICROP  (MVC,3),(LTE,3)m1O000,(LTE,4),1O040,(MORS,1)
000752 xxxx 040361000000         vfd     o9/040, 9/mors+1
000753 xxxx 060061062063 TABLE22:aci     /01234567/        " 0X
000754 xxxx 064065066067 
000755 xxxx 070071000000         VFD     A18/89,18/0,36/0  " 1X
000756 xxxx 000000000000 
000757 xxxx 000000000000         OCT     0,0               " 2X
000760 xxxx 000000000000 
000761 xxxx 000000000000         OCT     0,0               " 3X
000762 xxxx 000000000000 
000763 xxxx 040112113114         ACI     / JKLMNOP/        " 4X
000764 xxxx 115116117120 
000765 xxxx 121122000000         VFD     A18/QR,18/0,36/0  " 5X
000766 xxxx 000000000000 
000767 xxxx 000000000000         OCT     0,0               " 6X
000770 xxxx 000000000000 
000771 xxxx 000000000000         OCT     0,0               " 7X
000772 xxxx 000000000000 
000773 xxxx 000000000000 PRTOUT: BSS     5
001000 xxxx 000000000000 APRINT: BSS     5
001005 xxxx 060061062063 DECTAB: aci     '0123456789+++-+F'  " decimal --> ascii
001006 xxxx 064065066067 
001007 xxxx 070071053053 
001010 xxxx 053055053106 
001011 xxxx 047122145163 msg23:  acc     /Result: '^a^a' (Should be '-1234FFF')\r\n/
001012 xxxx 165154164072 
001013 xxxx 040047136141 
001014 xxxx 136141047040 
001015 xxxx 050123150157 
001016 xxxx 165154144040 
001017 xxxx 142145040047 
001020 xxxx 055061062063 
001021 xxxx 064106106106 
001022 xxxx 047051015012 
001023 xxxx 004525701000         call    ioa(MVTmsg)
001024 xxxx 001027710000 
001025 xxxx 000000000000 
001026 xxxx 000572000000 
001027 xxxx 052000160400         MVT     (),(), fill(52)
001030 xxxx 000611420007         desc6a  FLD1q(4),7
001031 xxxx 000613040010         desc4a  FLD2q,8
001032 xxxx 000614000000         ARG     TABLE1
001033 xxxx 004525701000         call    ioa(msg19, FLD2q)
001034 xxxx 001040710000 
001035 xxxx 000000000000 
001036 xxxx 000576000000 
001037 xxxx 000613000000 
001040 xxxx 000000160400         MVT (), ()
001041 xxxx 000647040010         desc4a  FLD3q, 8     " ADSC4   FLD3,,8
001042 xxxx 000650040010         desc4a  FLD4q, 8     " ADSC4   FLD4,,8
001043 xxxx 000651000000         ARG     TAB
001044 xxxx 004525701000         call    ioa(msg20, FLD4q)
001045 xxxx 001051710000 
001046 xxxx 000000000000 
001047 xxxx 000634000000 
001050 xxxx 000650000000 
001051 xxxx 077000160400         MVT     (), (),  fill(77)    " ! fill
001052 xxxx 000674020022         desc6a  FLD1r, 18           " ADSC6   FLD1,0,18
001053 xxxx 000700000024         desc9a  FLD2r, 20           " ADSC9   FLD2,0,20
001054 xxxx 000705000000         ARG     TABLE9              " pointer to translation table
001055 xxxx 004525701000         call     ioa(msg21, FLD2r, FLD2r+1, FLD2r+2, FLD2r+3, FLD2r+4)
001056 xxxx 001066710000 
001057 xxxx 000000000000 
001060 xxxx 000655000000 
001061 xxxx 000700000000 
001062 xxxx 000701000000 
001063 xxxx 000702000000 
001064 xxxx 000703000000 
001065 xxxx 000704000000 
001066 xxxx 000000024400         MVNE     (), (), ()
001067 xxxx 000747350005         desc4ls  P6a(3),5    " NDSC4   6PACK,3,5,1
001070 xxxx 000751000006         desc9a   MOPS, 6     " ADSC9   MOPS,0,6
001071 xxxx 000773020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
001072 xxxx 000000160400         MVT      (), ()
001073 xxxx 000773020004         desc6a   PRTOUT, 4   " ADSC6   PRTOUT,0,4
001074 xxxx 001000000004         desc9a   APRINT, 4   " ADSC9   APRINT,0,4
001075 xxxx 000753000000         ARG      TABLE22
001076 xxxx 004525701000         call    ioa(msg22a, APRINT)
001077 xxxx 001103710000 
001100 xxxx 000000000000 
001101 xxxx 000725000000 
001102 xxxx 001000000000 
001103 xxxx 000000024400         MVNE     (), (), ()
001104 xxxx 000750350005         desc4ls  P6b(3),5      " NDSC4   6PACK,3,5,1
001105 xxxx 000751000006         desc9a   MOPS, 6       " ADSC9   MOPS,0,6
001106 xxxx 000773020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
001107 xxxx 000000160400         MVT      (), ()
001110 xxxx 000773020004         desc6a   PRTOUT, 4     " ADSC6   PRTOUT,0,4
001111 xxxx 001001000004         desc9a   APRINT+1, 4   " ADSC9   APRINT,0,4
001112 xxxx 000753000000         ARG      TABLE22
001113 xxxx 004525701000         call    ioa(msg22b, APRINT+1)
001114 xxxx 001120710000 
001115 xxxx 000000000000 
001116 xxxx 000736000000 
001117 xxxx 001001000000 
001120 xxxx 017000160400         MVT      (), (),  fill(017)
001121 xxxx 000747340005         desc4a   P6a(3), 5
001122 xxxx 001000000010         desc9a   APRINT, 8
001123 xxxx 001005000000         ARG      DECTAB
001124 xxxx 004525701000         call    ioa(msg23, APRINT, APRINT+1)
001125 xxxx 001132710000 
001126 xxxx 000000000000 
001127 xxxx 001011000000 
001130 xxxx 001000000000 
001131 xxxx 001001000000 
001132 xxxx 001326710000         tra     SCM0
001133 xxxx 042123103115 SCMmsg: acc     /SCM Tests ... (Results 3, 0 & 7)\r\n/
001134 xxxx 040124145163 
001135 xxxx 164163040056 
001136 xxxx 056056040050 
001137 xxxx 122145163165 
001140 xxxx 154164163040 
001141 xxxx 063054040060 
001142 xxxx 040046040067 
001143 xxxx 051015012040 
001144 xxxx 035131157165 BADmsg: acc     /You should not see this....\r\n/
001145 xxxx 040163150157 
001146 xxxx 165154144040 
001147 xxxx 156157164040 
001150 xxxx 163145145040 
001151 xxxx 164150151163 
001152 xxxx 056056056056 
001153 xxxx 015012040040 
001154 xxxx 014122145163 msg24:  acc     /Result: ^d\r\n/
001155 xxxx 165154164072 
001156 xxxx 040136144015 
001157 xxxx 012040040040 
001160 xxxx 101102103104 FLD1s:  aci      /ABCD/     "141 142 143 144 (before mask)
001161 xxxx 060060060064 FLD2s:  aci      /0004/     "064 (before mask)
001162 xxxx 000000000000 FLD3s:  BSS      1          "004 (after mask)
001163 xxxx 000015022064 FLD1t:   ac4     /   -1234/         "EDEC     8P-1234   "0,1,2,3,4      -- which one do we believe?
001164 xxxx 000000000000 FLD3t:   BSS     1
001165 xxxx 103041000000 FLD1u:  ac4  /4321    /     " EDEC  8PL4321  " 2 1
001166 xxxx 000000011207 FLD2u:  ac4  /    0987/     " EDEC  4P0987   " 1
001167 xxxx 000000000000 FLD3u:  BSS  1              " unmatched compare count - 1
001170 xxxx 400000040012 INDSC1u: desc4a  pr4|0, x2      "ADSC4 0,,X2,4    " FLD1 operand desc (FLD1,2,2)
001171 xxxx 001166400001 INDSC2u: desc9a  FLD2u(2),1       "ADSC9 FLD2,0     " FLD2 operand desc (FLD2,1)
001172 xxxx 022106157165 foundA: acc "Found an 'A' ...\r\n"
001173 xxxx 156144040141 
001174 xxxx 156040047101 
001175 xxxx 047040056056 
001176 xxxx 056015012040 
001177 xxxx 021106157165 foundG: acc "Found a 'G' ...\r\n"
001200 xxxx 156144040141 
001201 xxxx 040047107047 
001202 xxxx 040056056056 
001203 xxxx 015012040040 
001204 xxxx 021106157165 foundw: acc "Found a 'w' ...\r\n"
001205 xxxx 156144040141 
001206 xxxx 040047167047 
001207 xxxx 040056056056 
001210 xxxx 015012040040 
001211 xxxx 022106157165 foundo: acc "Found an 'o' ...\r\n"
001212 xxxx 156144040141 
001213 xxxx 156040047157 
001214 xxxx 047040056056 
001215 xxxx 056015012040 
001216 xxxx 021106157165 foundn: acc "Found a 'n' ...\r\n"
001217 xxxx 156144040141 
001220 xxxx 040047156047 
001221 xxxx 040056056056 
001222 xxxx 015012040040 
001223 xxxx 021106157165 foundd: acc "Found a 'd' ...\r\n"
001224 xxxx 156144040141 
001225 xxxx 040047144047 
001226 xxxx 040056056056 
001227 xxxx 015012040040 
001230 xxxx 022106157165 founda: acc "Found an 'a' ...\r\n"
001231 xxxx 156144040141 
001232 xxxx 156040047141 
001233 xxxx 047040056056 
001234 xxxx 056015012040 
001235 xxxx 021106157165 foundg: acc "Found a 'g' ...\r\n"
001236 xxxx 156144040141 
001237 xxxx 040047147047 
001240 xxxx 040056056056 
001241 xxxx 015012040040 
001242 xxxx 130130147130 SCM4in: aci     "XXgX"
001243 xxxx 000000000000 SCM4tally:  bss 1
001244 xxxx 101107167157 erkey:  aci     "AGwondag"
001245 xxxx 156144141147 
001246 xxxx 001256710000 ertable:tra     err_A
001247 xxxx 001263710000         tra     err_G
001250 xxxx 001270710000         tra     err_w
001251 xxxx 001275710000         tra     err_o
001252 xxxx 001302710000         tra     err_n
001253 xxxx 001307710000         tra     err_d
001254 xxxx 001314710000         tra     err_a
001255 xxxx 001321710000         tra     err_g
001256 xxxx 004525701000 err_A:  call    ioa(foundA)
001257 xxxx 001262710000 
001260 xxxx 000000000000 
001261 xxxx 001172000000 
001262 xxxx 001377710000         tra     SCM4
001263 xxxx 004525701000 err_G:  call    ioa(foundG)
001264 xxxx 001267710000 
001265 xxxx 000000000000 
001266 xxxx 001177000000 
001267 xxxx 001377710000         tra     SCM4
001270 xxxx 004525701000 err_w:  call    ioa(foundw)
001271 xxxx 001274710000 
001272 xxxx 000000000000 
001273 xxxx 001204000000 
001274 xxxx 001377710000         tra     SCM4
001275 xxxx 004525701000 err_o:  call    ioa(foundo)
001276 xxxx 001301710000 
001277 xxxx 000000000000 
001300 xxxx 001211000000 
001301 xxxx 001377710000         tra     SCM4
001302 xxxx 004525701000 err_n:  call    ioa(foundn)
001303 xxxx 001306710000 
001304 xxxx 000000000000 
001305 xxxx 001216000000 
001306 xxxx 001377710000         tra     SCM4
001307 xxxx 004525701000 err_d:  call    ioa(foundd)
001310 xxxx 001313710000 
001311 xxxx 000000000000 
001312 xxxx 001223000000 
001313 xxxx 001377710000         tra     SCM4
001314 xxxx 004525701000 err_a:  call    ioa(founda)
001315 xxxx 001320710000 
001316 xxxx 000000000000 
001317 xxxx 001230000000 
001320 xxxx 001377710000         tra     SCM4
001321 xxxx 004525701000 err_g:  call    ioa(foundg)
001322 xxxx 001325710000 
001323 xxxx 000000000000 
001324 xxxx 001235000000 
001325 xxxx 001377710000         tra     SCM4
001326 xxxx 004525701000         call    ioa(SCMmsg)
001327 xxxx 001332710000 
001330 xxxx 000000000000 
001331 xxxx 001133000000 
001332 xxxx 760000124400         SCM     (),(), mask(760) "mask to eliminate zone bits
001333 xxxx 001160000004         desc9a  FLD1s,4         "character string operand desc
001334 xxxx 001161600000         desc9a  FLD2s(3),0      "compare character operand desc
001335 xxxx 001162000000         ARG     FLD3s           "pointer to unmatched count word
001336 xxxx 001344607000         TTF     GOT.IT          "match found - on 4th character
001337 xxxx 004525701000 NO.GOT: call    ioa(BADmsg)     "no match -  tally runout ON
001340 xxxx 001343710000 
001341 xxxx 000000000000 
001342 xxxx 001144000000 
001343 xxxx 000000616000         dis
001344 xxxx 004525701000 GOT.IT: call    ioa(msg24, FLD3s)
001345 xxxx 001351710000 
001346 xxxx 000000000000 
001347 xxxx 001154000000 
001350 xxxx 001162000000 
001351 xxxx 000003124400         SCM      (),(DU)
001352 xxxx 001163340005         desc4a   FLD1t(3),5      "ADSC4    FLD1,3,5
001353 xxxx 321000000000         ac4      /-1      /      "EDEC     8PL-1
001354 xxxx 001164000000         ARG      FLD3t
001355 xxxx 001337606400         TTN      NO.GOT
001356 xxxx 004525701000         call    ioa(msg24, FLD3t)
001357 xxxx 001363710000 
001360 xxxx 000000000000 
001361 xxxx 001154000000 
001362 xxxx 001164000000 
001363 xxxx 000000124400         scm     (),()           "search table of keys
001364 xxxx 001244000010         desc9a	erkey,8
001365 xxxx 001242400001         desc9a  SCM4in(2),1
001366 xxxx 001243000000         arg     SCM4tally
001367 xxxx 001337606400         ttn     NO.GOT          "tra if not legal key
001370 xxxx 004525701000         call    ioa (msg24, SCM4tally)
001371 xxxx 001375710000 
001372 xxxx 000000000000 
001373 xxxx 001154000000 
001374 xxxx 001243000000 
001375 xxxx 001243236000         ldq     SCM4tally		" get character key index
001376 xxxx 001246710026         tra     ertable,ql* " dispatch on key
001377 xxxx 001416710000         tra     SCMR0
001400 xxxx 037123103115 SCMRmsg: acc     /SCMR Tests (Results 3 & 4)...\r\n/
001401 xxxx 122040124145 
001402 xxxx 163164163040 
001403 xxxx 050122145163 
001404 xxxx 165154164163 
001405 xxxx 040063040046 
001406 xxxx 040064051056 
001407 xxxx 056056015012 
001410 xxxx 145103041320 FLD1v:   ac4     /654321- /       " EDEC      8PL654321-   6, 5, 4, 3, 2, 1
001411 xxxx 000000000000 FLD3v:   DEC     0                " result - match found on 4th character
001412 xxxx 001043105155 FLD1w:  ac4      /0123456-/         " 2,3,4,5,6,-
001413 xxxx 000000000000 FLD3w:  DEC      0                  " unmatched compare count - 4
001414 xxxx 400000040016         desc4a   pr4|0,x6           " FLD1 operand desc(FLD 1,2,6)
001415 xxxx 060000000000 FLD2w:  ac4      /3       /         " FLD2 compare character 3
001416 xxxx 004525701000         call    ioa(SCMRmsg)
001417 xxxx 001422710000 
001420 xxxx 000000000000 
001421 xxxx 001400000000 
001422 xxxx 760003125400         SCMR    (),(DU), mask(760)     " DU type register mod with mask
001423 xxxx 001410040006         desc4a  FLD1v, 6               " character string operand desc
001424 xxxx 100000000000         ac4     /4       /             " 1P4 FLD2's compare character - 4
001425 xxxx 001411000000         ARG     FLD3v                  " pointer to unmatched count word
001426 xxxx 001337606400         TTN     NO.GOT
001427 xxxx 004525701000         call    ioa (msg24, FLD3v)
001430 xxxx 001434710000 
001431 xxxx 000000000000 
001432 xxxx 001154000000 
001433 xxxx 001411000000 
001434 xxxx 000006626000         EAX6     6                  " load FLD1 length (-2) into x6
001435 xxxx 000002622000         EAX2     2                  " load character modifier into x2
001436 xxxx 001412624000         EAX4     FLD1w              " load FLD1 address into x4
001437 xxxx 400000507414         AWDX     pr4|0,4            " put FLD1 address into AR4
001440 xxxx 760000125572         SCMR     (pr,rl,id,x2),(), mask(760)        " with all options
001441 xxxx 001414000000         ARG      FLD3w+1            " pointer to FLD1 indirect desc
001442 xxxx 001415040000         desc4a   FLD2w              " pointer to compare character
001443 xxxx 001413000000         ARG      FLD3w              " pointer to unmatched count word
001444 xxxx 001337606400         TTN      NO.GOT             " no match - tally runout ON
001445 xxxx 004525701000         call    ioa (msg24, FLD3w)
001446 xxxx 001452710000 
001447 xxxx 000000000000 
001450 xxxx 001154000000 
001451 xxxx 001413000000 
001452 xxxx 004525701000         call    ioa(TCTmsg)
001453 xxxx 001456710000 
001454 xxxx 000000000000 
001455 xxxx 004147000000 
001456 xxxx 000000164400         TCT      ()         "     no modification
001457 xxxx 004171020014         desc6a   FLD1x,12   " indexing string operand descr.
001460 xxxx 004174000000         ARG      TABLEx     " pointer to table
001461 xxxx 004173000000         ARG      FLD3x      " pointer to char. & count word
001462 xxxx 001337606400         TTN     NO.GOT
001463 xxxx 004525701000         call    ioa (msg24o, FLD3x)
001464 xxxx 001470710000 
001465 xxxx 000000000000 
001466 xxxx 004165000000 
001467 xxxx 004173000000 
001470 xxxx 000002622000         EAX2     2           " put 2 into X2
001471 xxxx 004201623000         EAX3     FLD1y       " put FLD1 address into X3
001472 xxxx 000006626000         EAX6     6           " put 6 into X6
001473 xxxx 700000507413         AWDX     pr7|0,3     " put FLD1 address into AR7
001474 xxxx 000000164572         TCT      (pr,rl,id,x2)   " with all modification options
001475 xxxx 004204000000         ARG      INDSCRy     " ptr. indirect operand descr.
001476 xxxx 004205000000         ARG      TABLEy
001477 xxxx 004203000000         ARG      FLD3y       " pointer to FLD3
001500 xxxx 001337606400         TTN     NO.GOT
001501 xxxx 004525701000         call    ioa (msg24o, FLD3y)
001502 xxxx 001506710000 
001503 xxxx 000000000000 
001504 xxxx 004165000000 
001505 xxxx 004203000000 
001506 xxxx 004525701000         call    ioa(TCTRmsg)
001507 xxxx 001512710000 
001510 xxxx 000000000000 
001511 xxxx 004224000000 
001512 xxxx 000000165400         TCTR                " no modification
001513 xxxx 004236640012         desc4a  FLD1z(6),10 " indexing string operand descr
001514 xxxx 004241000000         ARG     TABLEz      " pointer to table
001515 xxxx 004240000000         ARG     FLD3z       " pointer to char. & count word
001516 xxxx 001337607000         TTF     NO.GOT      " nonzero found
001517 xxxx 004525701000         call    ioa (msg24o, FLD3z)
001520 xxxx 001524710000 
001521 xxxx 000000000000 
001522 xxxx 004165000000 
001523 xxxx 004240000000 
001524 xxxx 004525701000         call    ioa (CMPCmsg)
001525 xxxx 001530710000 
001526 xxxx 000000000000 
001527 xxxx 004245000000 
001530 xxxx 020000106400         CMPC    (), (), fill(020)       " compare with blank fill
001531 xxxx 004257020006         desc6a  FLD1aa,6    " field 1 operand descriptor
001532 xxxx 004260420004         desc6a  FLD2aa(4),4 " field 2 operand descriptor
001533 xxxx 001536600000         TZE     EQUALaa     " both fields equal
001534 xxxx 001337603000         TRC     NO.GOT      " field 1 greater
001535 xxxx 001337710000         TRA     NO.GOT      " field 1 less
001536 xxxx 004525701000 EQUALaa:call    ioa(msg25)
001537 xxxx 001542710000 
001540 xxxx 000000000000 
001541 xxxx 004252000000 
001542 xxxx 001552710000         TRA     SCD0
001543 xxxx 032123103104 SCDmsg:    acc     "SCD Tests ... 5, 16, & 3\r\n"
001544 xxxx 040124145163 
001545 xxxx 164163040056 
001546 xxxx 056056040065 
001547 xxxx 054040061066 
001550 xxxx 054040046040 
001551 xxxx 063015012040 
001552 xxxx 004525701000         call    ioa (SCDmsg)
001553 xxxx 001556710000 
001554 xxxx 000000000000 
001555 xxxx 001543000000 
001556 xxxx 000000120400         SCD
001557 xxxx 001571020006         desc6a   FLD1ab,6
001560 xxxx 001572320000         desc6a   FLD2ab(3)
001561 xxxx 001573000000         ZERO     FLD3ab
001562 xxxx 001337607000         TTF      NO.GOT     " If we get a match
001563 xxxx 004525701000         call    ioa (msg24o, FLD3ab)
001564 xxxx 001570710000 
001565 xxxx 000000000000 
001566 xxxx 004165000000 
001567 xxxx 001573000000 
001570 xxxx 001574710000         TRA     NEXT
001571 xxxx 010203040506 FLD1ab:  BCI      /123456/    " 123456
001572 xxxx 060504030201 FLD2ab:  BCI      /654321/    " 32
001573 xxxx 000000000000 FLD3ab:  BSS      1           " unmatched count - 5
001574 xxxx 000000120400        SCD                 "with no options
001575 xxxx 004262020030        desc6a  DATA,24     "24 characters fetched from lower
001576 xxxx 004267020002        desc6a  COMP,2      "DATA in units of 2 chars. and
001577 xxxx 004266000000        ARG     COUNT       "compared with HH when HH found in
001600 xxxx 001337606400        TTN     NO.GOT      " no match found
001601 xxxx 004525701000        call    ioa (msg24o, COUNT)
001602 xxxx 001606710000 
001603 xxxx 000000000000 
001604 xxxx 004165000000 
001605 xxxx 004266000000 
001606 xxxx 000005625000        EAX5     5        " load 5 into X5
001607 xxxx 000007627000        EAX7     7        " load 7 into X7
001610 xxxx 004270624000        EAX4     FLD1ad   " load FLD1 address into X4
001611 xxxx 400000507414        AWDX     pr4|0,4  " put FLD1 address into AR4
001612 xxxx 000003120555        SCD      (pr,rl,x5),(DU)
001613 xxxx 400000000017        desc9a   pr4|0,X7 " FLD1 operand pointer (FLD1+1,1,7)
001614 xxxx 064065000000 FLD2ad:VFD      A18/45    " FLD2 operand  " ahould be A18
001615 xxxx 004273000000        ARG      FLD3ad   " pointer to count FLD3
001616 xxxx 001337606400        TTN      NO.GOT
001617 xxxx 004525701000        call    ioa (msg24o, FLD3ad)
001620 xxxx 001624710000 
001621 xxxx 000000000000 
001622 xxxx 004165000000 
001623 xxxx 004273000000 
001624 xxxx 001633710000         tra     SCDR0
001625 xxxx 026123103104 SCDRmsg:    acc     "SCDR Tests ... 6 & 3\r\n"
001626 xxxx 122040124145 
001627 xxxx 163164163040 
001630 xxxx 056056056040 
001631 xxxx 066040046040 
001632 xxxx 063015012040 
001633 xxxx 004525701000        call    ioa(SCDRmsg)
001634 xxxx 001637710000 
001635 xxxx 000000000000 
001636 xxxx 001625000000 
001637 xxxx 000003121400        SCDR     (),(DU)       " DU modification of FLD2 operand descriptor
001640 xxxx 001652000010        desc9a   FLD1ae,8      " scanned string operand descriptor
001641 xxxx 101102000000        VFD      A18/AB         " FLD2 character pair - A B
001642 xxxx 001654000000        ARG      FLD3ae        " pointer count word
001643 xxxx 001337606400        TTN      NO.GOT        " match not found - tally runout ON
001644 xxxx 004525701000        call    ioa (msg24o, FLD3ae)
001645 xxxx 001651710000 
001646 xxxx 000000000000 
001647 xxxx 004165000000 
001650 xxxx 001654000000 
001651 xxxx 001655710000         tra    SCDR2
001652 xxxx 101102103104 FLD1ae:aci      /ABCDE/       " A,B,C,D,E,
001653 xxxx 105000000000 
001654 xxxx 000000000000 FLD3ae:BSS      1             " unmatched count - 6
001655 xxxx 000001622000        EAX2     1           " load 1 into x2
001656 xxxx 001673623000        EAX3     FLD1af      " load FLD1 address into X3
001657 xxxx 400000507413        AWDX     PR4|0,3     " put FLD1 address into AR4
001660 xxxx 000003121512        SCDR     (pr,x2),(DU) " with address modification
001661 xxxx 400000040007        desc4a   pr4|0,7     " FLD1 operand descriptor - (FLD 1,1,7) (7 is length not x7)
001662 xxxx 043000000000        ac4      /23/        " FLD2 operand descriptor pointer
001663 xxxx 001674000000        ARG      FLD3af      " pointer to count word
001664 xxxx 001337606400        TTN      NO.GOT      " no match - tally runout ON
001665 xxxx 004525701000        call    ioa (msg24o, FLD3af)
001666 xxxx 001672710000 
001667 xxxx 000000000000 
001670 xxxx 004165000000 
001671 xxxx 001674000000 
001672 xxxx 001675710000        tra     CMPB0
001673 xxxx 000022064126 FLD1af:ac4      /  123456/    " 0123456 VS 23
001674 xxxx 000000000000 FLD3af:BSS      1             " unmatched count - 3
001675 xxxx 004525701000 CMPB0:  call    ioa(CMPBmsg)
001676 xxxx 001701710000 
001677 xxxx 000000000000 
001700 xxxx 004274000000 
001701 xxxx 400000066400 CMPB1:  CMPB    (),(),fill(1)       " fill bit 1 option
001702 xxxx 001706000055         descb   FLD1ag, 45
001703 xxxx 001710000060         descb   FLD2ag,48
001704 xxxx 001712603000         TRC     EQU.GR              " FLD1 equal/greater than FLD2
001705 xxxx 001337710000         TRA     NO.GOT
001706 xxxx 000000000000 FLD1ag: OCT     0,777700000000      " 0000000000007777
001707 xxxx 777700000000 
001710 xxxx 000000000000 FLD2ag: OCT     0,777000000000      " 0000000000007770
001711 xxxx 777000000000 
001712 xxxx 004525701000 EQU.GR: call ioa(msg26)
001713 xxxx 001716710000 
001714 xxxx 000000000000 
001715 xxxx 004301000000 
001716 xxxx 000000066400 CMPB2:  CMPB                        " no options
001717 xxxx 001724000044         descb   FLD1ah, 36
001720 xxxx 001725230023         descb   FLD2ah(12), 19
001721 xxxx 001337600000         TZE     NO.GOT              " FLD1 = FLD2
001722 xxxx 001337603000         TRC     NO.GOT              " FLD1 > FLD2
001723 xxxx 001726710000         TRA     FLD1LS              " FLD1 < FLD2
001724 xxxx 777777000000 FLD1ah: VFD     18/-1               " 777777000000
001725 xxxx 000077777740 FLD2ah: VFD     12/0,19/-1          " 777777400000
001726 xxxx 004525701000 FLD1LS: call ioa(msg27)
001727 xxxx 001732710000 
001730 xxxx 000000000000 
001731 xxxx 004306000000 
001732 xxxx 000014622000         EAX2    12          " load FLD1 bit modifier into X2
001733 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
001734 xxxx 001743624000         EAX4    FLD1ai      " load FLD1 address into X4
001735 xxxx 400000507414         AWDX    4|0,4       " put FLD1 address into AR4
001736 xxxx 000020066552         CMPB    (pr,rl,x2),(id)
001737 xxxx 400000000016         descb   pr4|0,x6  " FLD1 operand descriptor
001740 xxxx 001745000000         ARG     INDSCR      " FLD2 indirect descriptor ptr.
001741 xxxx 001746600000         TZE     EQUAL       " FLD1 = FLD2
001742 xxxx 001337710000         TRA     NO.GOT
001743 xxxx 000001000000 FLD1ai: VFD     12/0,6/1   " 770 000077000000 [sic]
001744 xxxx 000000000100 FLD2ai: VFD     24/0,6/1   " 770 000000007700 [sic]
001745 xxxx 001744460011 INDSCR: BDSC    FLD2ai,9,2,6
001746 xxxx 004525701000 EQUAL:  call     ioa(msg28)
001747 xxxx 001752710000 
001750 xxxx 000000000000 
001751 xxxx 004313000000 
001752 xxxx 001757710000         tra     CSL0
001753 xxxx 017103123114 CSLmsg:    acc     "CSL Tests ...\r\n"
001754 xxxx 040124145163 
001755 xxxx 164163040056 
001756 xxxx 056056015012 
001757 xxxx 004525701000          call    ioa(CSLmsg)
001760 xxxx 001763710000 
001761 xxxx 000000000000 
001762 xxxx 001753000000 
001763 xxxx 007000060400         CSL     (),(),bool(07)  ",enablefault " OR - truncation enable option
001764 xxxx 001774230030         descb   FLD1aj(12), 24      " FLD1 operand descriptor
001765 xxxx 001775000022         descb   FLD2aj, 18          " FLD2 operand descriptor
001766 xxxx 004525701000         call    ioa (msg24o, FLD2aj)
001767 xxxx 001773710000 
001770 xxxx 000000000000 
001771 xxxx 004165000000 
001772 xxxx 001775000000 
001773 xxxx 001776710000         tra     CSL2
001774 xxxx 000077777700 FLD1aj: VFD      12/0,18/-1,6/0     " 000077777700
001775 xxxx 000000235012 FLD2aj: LDA      0,2                " 000000235012
001776 xxxx 406000060400         CSL     (),(),bool(06),fill(1)      " exclusive OR, fill bit 1 opt
001777 xxxx 000000000000         descb   0, 0         " FLD1 operand descriptor (0-length field)
002000 xxxx 002007400022         descb   FLD2ak(18),18  " FLD2 operand descriptor
002001 xxxx 004525701000         call    ioa (msg24o, FLD2ak)
002002 xxxx 002006710000 
002003 xxxx 000000000000 
002004 xxxx 004165000000 
002005 xxxx 002007000000 
002006 xxxx 002010710000         tra     CSL3
002007 xxxx 000000000000 FLD2ak: DEC     0           " 000000000000
002010 xxxx 000014626000         EAX6    12              " char/bit address mod to X6
002011 xxxx 000066627000         EAX7    54              " load FLD2 length into X7
002012 xxxx 002032624000         EAX4    FLD2al          " load FLD2 address into X4
002013 xxxx 400000507414         AWDX    pr4|0,4         " put FLD2 address into AR4
002014 xxxx 000156060420         CSL     (id),(ar,rl,x6) " clear operation with address modifications
002015 xxxx 000002000014         ARG     2,4             " pointer to FLD1 indirect operand descriptor
002016 xxxx 400000000017         descb   pr4|0, x7       " FLD2 operand descriptor (FLD2,54,1,3)
002017 xxxx 004525701000         call    ioa (msg24o, FLD2al)
002020 xxxx 002024710000 
002021 xxxx 000000000000 
002022 xxxx 004165000000 
002023 xxxx 002032000000 
002024 xxxx 004525701000         call    ioa (msg24o, FLD2al+1)
002025 xxxx 002031710000 
002026 xxxx 000000000000 
002027 xxxx 004165000000 
002030 xxxx 002033000000 
002031 xxxx 002041710000         tra     CSR0
002032 xxxx 777777777777 FLD2al: VFD      36/-1,36/-1    " 777777777777
002033 xxxx 777777777777 
002034 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor (control field zeros)
002035 xxxx 017103123122 CSRmsg: acc     "CSR Tests ...\r\n"
002036 xxxx 040124145163 
002037 xxxx 164163040056 
002040 xxxx 056056015012 
002041 xxxx 004525701000         call    ioa(CSRmsg)
002042 xxxx 002045710000 
002043 xxxx 000000000000 
002044 xxxx 002035000000 
002045 xxxx 014000061400         CSR     (),(),bool(14)",enablefault  " invert with truncation fault enable option
002046 xxxx 002056400022         descb   FLD1am(18),18   " FLD1 operand descriptor
002047 xxxx 002057000014         descb   FLD2am,12       " FLD2 operand descriptor
002050 xxxx 004525701000         call    ioa(msg24o, FLD2am)
002051 xxxx 002055710000 
002052 xxxx 000000000000 
002053 xxxx 004165000000 
002054 xxxx 002057000000 
002055 xxxx 002060710000         tra     CSR2
002056 xxxx 000000444444 FLD1am: OCT     444444          " 000000444444
002057 xxxx 000000000000 FLD2am: DEC     0               " 333300000000  (Result)
002060 xxxx 017000061400         CSR     (),(),bool(17)  " force ones operation
002061 xxxx 000000000000         BDSC    0,0             " FLD1 operand descriptor
002062 xxxx 002071000044         BDSC    FLD2an,36,0,0   " FLD2 operand descriptor
002063 xxxx 004525701000         call    ioa(msg24o, FLD2an)
002064 xxxx 002070710000 
002065 xxxx 000000000000 
002066 xxxx 004165000000 
002067 xxxx 002071000000 
002070 xxxx 002105710000         tra     SZTL0
002071 xxxx 000000000000 FLD2an: BSS     1               " 777777777777   (Result)
002072 xxxx 020123132124 SZTLmsg:   acc  "SZTL Tests ...\r\n"
002073 xxxx 114040124145 
002074 xxxx 163164163040 
002075 xxxx 056056056015 
002076 xxxx 012040040040 
002077 xxxx 013061056040 msg29:     acc  "1. Passed\r\n"
002100 xxxx 120141163163 
002101 xxxx 145144015012 
002102 xxxx 013062056040 msg30:     acc  "2. Passed\r\n"
002103 xxxx 120141163163 
002104 xxxx 145144015012 
002105 xxxx 004525701000        call     ioa(SZTLmsg)
002106 xxxx 002111710000 
002107 xxxx 000000000000 
002110 xxxx 002072000000 
002111 xxxx 006000064400         SZTL     (),(),bool(6)   " exclusive OR operation
002112 xxxx 002117000044         BDSC     FLD1ao,36,0,0   " FLD1 operand descriptor
002113 xxxx 002120010043         BDSC     FLD2ao,35,0,1   " FLD2 operand descriptor
002114 xxxx 001337601000         TNZ      NO.GOT          " zero should be ON
002115 xxxx 002121600400         TRTN     SZTL1b          " truncation indicator ON
002116 xxxx 001337710000         TRA      NO.GOT          " memory contents in octal
002117 xxxx 777777777777 FLD1ao: DEC      -1              " 777777777777
002120 xxxx 777777777777 FLD2ao: DEC      -1              " 777777777777
002121 xxxx 004525701000         call    ioa(msg29)
002122 xxxx 002125710000 
002123 xxxx 000000000000 
002124 xxxx 002077000000 
002125 xxxx 000000634007        LDI      0,DL        
002126 xxxx 777777227003        LDX7     -1,DU           " load negative value into X7
002127 xxxx 002135754000        STI      FLD1ap          " store processor indicators
002130 xxxx 001000064400        SZTL     (),(),bool(1)   " AND operation
002131 xxxx 002135410001        descb    FLD1ap(19),1    " FLD1 operand descriptor
002132 xxxx 002136410001        descb    FLD2ap(19),1    " FLD2 operand descriptor
002133 xxxx 001337600000        TZE      NO.GOT          " If ZERO is ON then this is an error. not zero - neg indicator ON
002134 xxxx 002137710000        TRA      SZTL2b          " memory contents in octal
002135 xxxx 000000000000 FLD1ap:BSS      1               " x x x x x x 2 0 0 0 0 0
002136 xxxx 000000200000 FLD2ap:oct      200000          " 0 0 0 0 0 0 2 0 0 0 0 0
002137 xxxx 004525701000         call    ioa(msg30)
002140 xxxx 002143710000 
002141 xxxx 000000000000 
002142 xxxx 002102000000 
002143 xxxx 002157710000         tra     SZTR0
002144 xxxx 021123132124 SCTRmsg: acc    "SZTR Tests ....\r\n"
002145 xxxx 122040124145 
002146 xxxx 163164163040 
002147 xxxx 056056056056 
002150 xxxx 015012040040 
002151 xxxx 013061056040 msg31:   acc    "1. Passed\r\n"
002152 xxxx 120141163163 
002153 xxxx 145144015012 
002154 xxxx 013062056040 msg32:   acc    "2. Passed\r\n"
002155 xxxx 120141163163 
002156 xxxx 145144015012 
002157 xxxx 004525701000         call    ioa(SCTRmsg)
002160 xxxx 002163710000 
002161 xxxx 000000000000 
002162 xxxx 002144000000 
002163 xxxx 003000065400        SZTR     (),(),bool(3)",enablefault       " evaluate FLD1 as is (move)
002164 xxxx 002170410001        descb    FLD1aq(19),1    " FLD1 operand descr. (bit 19)
002165 xxxx 000000000001        descb    0,1             " FLD2 operand descriptor
002166 xxxx 001337600000        TZE      NO.GOT          " if ZERO it's an error
002167 xxxx 002171710000        TRA      SZTR1b
002170 xxxx 000000200000 FLD1aq:  oct      200000     " 0 0 0 0 0 0 2 0 0 0 0 0
002171 xxxx 004525701000 SZTR1b: call    ioa(msg31)
002172 xxxx 002175710000 
002173 xxxx 000000000000 
002174 xxxx 002151000000 
002175 xxxx 004525701000         call    ioa(msg24o, FLD1aq)
002176 xxxx 002202710000 
002177 xxxx 000000000000 
002200 xxxx 004165000000 
002201 xxxx 002170000000 
002202 xxxx 000000634007         LDI     0,DL       " clear processor indicators
002203 xxxx 000000227003         LDX7    0,DU       " load zeros into X7
002204 xxxx 002223754000         STI     FLD1ar     " store processor indicators
002205 xxxx 014000065400         SZTR    (),(),bool(14) " invert
002206 xxxx 002223400001         descb   FLD1ar(18),1 " FLD1 operand descr. (bit 18)
002207 xxxx 000000000001         BDSC    0,1        " FLD2 operand descriptor
002210 xxxx 001337601000         TNZ     NO.GOT     " zero indicator ON
002211 xxxx 004525701000         call     ioa(msg32)
002212 xxxx 002215710000 
002213 xxxx 000000000000 
002214 xxxx 002154000000 
002215 xxxx 004525701000         call    ioa(msg24o, FLD1ar)
002216 xxxx 002222710000 
002217 xxxx 000000000000 
002220 xxxx 004165000000 
002221 xxxx 002223000000 
002222 xxxx 002302710000         tra     EISdec0
002223 xxxx 000000000000 FLD1ar: dec     0           " x x x x x x 4 0 0 0 0 0 (Hey what about NBAR & ABS?)
002224 xxxx 021101104062 AD2Dmsg:    acc     "AD2D Tests ....\r\n"
002225 xxxx 104040124145 
002226 xxxx 163164163040 
002227 xxxx 056056056056 
002230 xxxx 015012040040 
002231 xxxx 070061056040 msg33:      acc     /1. Result: ^n ^n (Should be 053071070066 063066066000)\r\n/
002232 xxxx 122145163165 
002233 xxxx 154164072040 
002234 xxxx 136156040136 
002235 xxxx 156040050123 
002236 xxxx 150157165154 
002237 xxxx 144040142145 
002240 xxxx 040060065063 
002241 xxxx 060067061060 
002242 xxxx 067060060066 
002243 xxxx 066040060066 
002244 xxxx 063060066066 
002245 xxxx 060066066060 
002246 xxxx 060060051015 
002247 xxxx 012040040040 
002250 xxxx 070062056040 msg34:      acc     /2. Result: ^n ^n (Should be 053061063063 064000000000)\r\n/
002251 xxxx 122145163165 
002252 xxxx 154164072040 
002253 xxxx 136156040136 
002254 xxxx 156040050123 
002255 xxxx 150157165154 
002256 xxxx 144040142145 
002257 xxxx 040060065063 
002260 xxxx 060066061060 
002261 xxxx 066063060066 
002262 xxxx 063040060066 
002263 xxxx 064060060060 
002264 xxxx 060060060060 
002265 xxxx 060060051015 
002266 xxxx 012040040040 
002267 xxxx 050063056040 msg35:      acc     /3. Result: ^n (Should be 001023105153)\r\n/
002270 xxxx 122145163165 
002271 xxxx 154164072040 
002272 xxxx 136156040050 
002273 xxxx 123150157165 
002274 xxxx 154144040142 
002275 xxxx 145040060060 
002276 xxxx 061060062063 
002277 xxxx 061060065061 
002300 xxxx 065063051015 
002301 xxxx 012040040040 
002302 xxxx 004525701000             call    ioa (AD2Dmsg)
002303 xxxx 002306710000 
002304 xxxx 000000000000 
002305 xxxx 002224000000 
002306 xxxx 000200202400             ad2d    (), (), round
002307 xxxx 002320227607             ndsc9   FLD1as,1,7,2,-2
002310 xxxx 002322000010             ndsc9   FLD2as,0,8
002311 xxxx 004525701000             call    ioa(msg33, FLD2as, FLD2as+1)
002312 xxxx 002317710000 
002313 xxxx 000000000000 
002314 xxxx 002231000000 
002315 xxxx 002322000000 
002316 xxxx 002323000000 
002317 xxxx 002324710000             tra     AD2D2
002320 xxxx 040061062063 FLD1as:     aci     / 123450-/      " -1234.50
002321 xxxx 064065060055 
002322 xxxx 053060060071 FLD2as:     aci     /+009/
002323 xxxx 070067066002             vfd     a27/876,9/2
002324 xxxx 000000202400             AD2D    (), ()  ", enablefault "with truncation enable option
002325 xxxx 002336067610             NDSC4   FLD1at,0,8,2,-2     "FLD1 addend operand descriptor
002326 xxxx 002337000006             NDSC9   FLD2at,0,6          "FLD2 addend operand descriptor memory contents
002327 xxxx 004525701000             call    ioa(msg34, FLD2at, FLD2at+1)
002330 xxxx 002335710000 
002331 xxxx 000000000000 
002332 xxxx 002250000000 
002333 xxxx 002337000000 
002334 xxxx 002340000000 
002335 xxxx 002341710000             tra     AD2D3
002336 xxxx 001043105153 FLD1at:     ac4     /0123456+/      "0123456+
002337 xxxx 053060060060 FLD2at:     vfd     a36/+000,a9/1, 9/2   "+00012
002340 xxxx 061002000000 
002341 xxxx 400000202400             AD2D    (),(),ascii     "   with plus sign octal 13 option
002342 xxxx 002352000004             NDSC9   FLD1au,0,4      "FLD1 addend operand descriptor
002343 xxxx 002353167407             NDSC4   FLD2au,1,7,2,-4 "FLD2 addend operand descriptor
002344 xxxx 004525701000             call    ioa(msg35, FLD2au)
002345 xxxx 002351710000 
002346 xxxx 000000000000 
002347 xxxx 002267000000 
002350 xxxx 002353000000 
002351 xxxx 002405710000             TRA     AD3D0
002352 xxxx 053071071000 FLD1au:     vfd     a27/+99, 9/0     "+990
002353 xxxx 001043105153 FLD2au:     ac4     /0123456+/      "0123456+
002354 xxxx 021101104063 AD3Dmsg:    acc     /AD3D Tests ... \r\n/
002355 xxxx 104040124145 
002356 xxxx 163164163040 
002357 xxxx 056056056040 
002360 xxxx 015012040040 
002361 xxxx 047061056040 msg36:      acc     /1. Result ^n (Should be 000260145126)\r\n/
002362 xxxx 122145163165 
002363 xxxx 154164040136 
002364 xxxx 156040050123 
002365 xxxx 150157165154 
002366 xxxx 144040142145 
002367 xxxx 040060060060 
002370 xxxx 062066060061 
002371 xxxx 064065061062 
002372 xxxx 066051015012 
002373 xxxx 047062056040 msg37:      acc     /2. Result ^n (Should be 000013003106)\r\n/
002374 xxxx 122145163165 
002375 xxxx 154164040136 
002376 xxxx 156040050123 
002377 xxxx 150157165154 
002400 xxxx 144040142145 
002401 xxxx 040060060060 
002402 xxxx 060061063060 
002403 xxxx 060063061060 
002404 xxxx 066051015012 
002405 xxxx 004525701000             call    ioa(AD3Dmsg)
002406 xxxx 002411710000 
002407 xxxx 000000000000 
002410 xxxx 002354000000 
002411 xxxx 400200222400         AD3D    (),(),(),ROUND,ascii " w/ rounding, plus sign options
002412 xxxx 002423037604         desc9ns FLD1av,4,-2     " FLD1 addend operand descriptor
002413 xxxx 002424027610         desc9ts FLD2av,8,-2     " FLD2 addend operand descriptor
002414 xxxx 002426250006         desc4ls FLD3av(2),6     " operand descriptor, sum field
002415 xxxx 004525701000         call    ioa(msg36, FLD3av)
002416 xxxx 002422710000 
002417 xxxx 000000000000 
002420 xxxx 002361000000 
002421 xxxx 002426000000 
002422 xxxx 002430710000         tra     AD3D2
002423 xxxx 061062063064 FLD1av: aci     /1234/          "  1234
002424 xxxx 060066065064 FLD2av: aci     /0654321+/      " 0654321+
002425 xxxx 063062061053 
002426 xxxx 000000000000 FLD3av: BSS     2              " xx+06556   (Sum)
002430 xxxx 000002622000         EAX2     2          " load character modifier into X2
002431 xxxx 000006626000         EAX6     6          " load FLD2 length into X6
002432 xxxx 002446624000         EAX4     FLD1aw       " load FLD1 address into X4
002433 xxxx 400000507414         AWDX     pr4|0,4    " put FLD1 address into AR4
002434 xxxx 420252222500         AD3D     (ar),(rl,x2),(id),round,ascii
002435 xxxx 400000000004         desc9fl  pr4|0,4    " FLD1 operand descriptor (FLD1,0,4,0)
002436 xxxx 002447077616         desc4ns  FLD2aw,x6,-2 " FLD2 operand descriptor (FLD2,2,6,3,-2)
002437 xxxx 002451000000         ARG      DFLD3aw      " pointer,FLD3 operand descriptor
002440 xxxx 004525701000         call    ioa(msg37, FLD3aw)
002441 xxxx 002445710000 
002442 xxxx 000000000000 
002443 xxxx 002373000000 
002444 xxxx 002450000000 
002445 xxxx 002507710000         tra     SB2D0
002446 xxxx 055061062002 FLD1aw: vfd     a27/-12, 9/2     " -12 2
002447 xxxx 000022064126 FLD2aw: ac4     /00123456/      " 00123456
002450 xxxx 000000000000 FLD3aw: BSS     1               " xxx+0346   (Sum)
002451 xxxx 002450357705 DFLD3aw:desc4ls FLD3aw(3),5,-1  " FLD3 sum operand descriptor
002452 xxxx 017123102062 SB2Dmsg:    acc /SB2D Tests...\r\n/
002453 xxxx 104040124145 
002454 xxxx 163164163056 
002455 xxxx 056056015012 
002456 xxxx 070061056040 msg38:  acc /1. result ^n ^n (Should be 055066065064 063060071376) \r\n/
002457 xxxx 162145163165 
002460 xxxx 154164040136 
002461 xxxx 156040136156 
002462 xxxx 040050123150 
002463 xxxx 157165154144 
002464 xxxx 040142145040 
002465 xxxx 060065065060 
002466 xxxx 066066060066 
002467 xxxx 065060066064 
002470 xxxx 040060066063 
002471 xxxx 060066060060 
002472 xxxx 067061063067 
002473 xxxx 066051040015 
002474 xxxx 012040040040 
002475 xxxx 047062056040 msg39:  acc /2. result ^a ^a (Should be 8753 0864)\r\n/
002476 xxxx 162145163165 
002477 xxxx 154164040136 
002500 xxxx 141040136141 
002501 xxxx 040050123150 
002502 xxxx 157165154144 
002503 xxxx 040142145040 
002504 xxxx 070067065063 
002505 xxxx 040060070066 
002506 xxxx 064051015012 
002507 xxxx 004525701000         call    ioa(SB2Dmsg)
002510 xxxx 002513710000 
002511 xxxx 000000000000 
002512 xxxx 002452000000 
002513 xxxx 000200203400         SB2D     (),(),round      " with rounding option
002514 xxxx 002525067504         NDSC4    FLD1ax,0,4,2,-3  " minuend operand descriptor
002515 xxxx 002526000010         NDSC9    FLD2ax,0,8       " subtrahend operand descriptor
002516 xxxx 004525701000         call    ioa(msg38, FLD2ax, FLD2ax+1)
002517 xxxx 002524710000 
002520 xxxx 000000000000 
002521 xxxx 002456000000 
002522 xxxx 002526000000 
002523 xxxx 002527000000 
002524 xxxx 002530710000         tra     SB2D2
002525 xxxx 022133000000 FLD1ax: ac4      /125+/         " 125+
002526 xxxx 053066065064 FLD2ax: vfd     a36/+654, a27/321, 9/-2
002527 xxxx 063062061776 
002530 xxxx 000000203400         SB2D    (),()",enablefault   " with truncation enable option
002531 xxxx 002542077410         NDSC4   FLD1ay,0,8,3,-4       " minuend operand descriptor
002532 xxxx 002543037610         NDSC9   FLD2ay,0,8,3,-2       " subtrahend operand descriptor
002533 xxxx 004525701000         call    ioa(msg39, FLD2ay, FLD2ay+1)
002534 xxxx 002541710000 
002535 xxxx 000000000000 
002536 xxxx 002475000000 
002537 xxxx 002543000000 
002540 xxxx 002544000000 
002541 xxxx 002602710000         tra     SB3D0
002542 xxxx 022064126170 FLD1ay: ac4     /12345678/          " 12345678
002543 xxxx 070067066065 FLD2ay: aci     /87654321/          " 87654321
002544 xxxx 064063062061 
002545 xxxx 021123102063 SB3Dmsg:    acc "SB3D Tests ... \r\n"
002546 xxxx 104040124145 
002547 xxxx 163164163040 
002550 xxxx 056056056040 
002551 xxxx 015012040040 
002552 xxxx 067061056040 msg40:  acc     /1. Result ^n ^n (Should be 000000000053 060060060177)\r\n/
002553 xxxx 122145163165 
002554 xxxx 154164040136 
002555 xxxx 156040136156 
002556 xxxx 040050123150 
002557 xxxx 157165154144 
002560 xxxx 040142145040 
002561 xxxx 060060060060 
002562 xxxx 060060060060 
002563 xxxx 060060065063 
002564 xxxx 040060066060 
002565 xxxx 060066060060 
002566 xxxx 066060061067 
002567 xxxx 067051015012 
002570 xxxx 047062056040 msg41:  acc     /2. Result ^n (Should be 320010144031)\r\n/
002571 xxxx 122145163165 
002572 xxxx 154164040136 
002573 xxxx 156040050123 
002574 xxxx 150157165154 
002575 xxxx 144040142145 
002576 xxxx 040063062060 
002577 xxxx 060061060061 
002600 xxxx 064064060063 
002601 xxxx 061051015012 
002602 xxxx 004525701000         call    ioa(SB3Dmsg)
002603 xxxx 002606710000 
002604 xxxx 000000000000 
002605 xxxx 002545000000 
002606 xxxx 000200223400         SB3D    (),(),(),round  "with rounding option
002607 xxxx 002622060004         desc4ts FLD1az,4        "subtrahend operand descriptor
002610 xxxx 002623050004         desc4ls FLD2az,4        "minuend operand descriptor
002611 xxxx 002624600005         desc9fl FLD3az(3),5     "operand desc for result field
002612 xxxx 001337601000         tnz     NO.GOT
002613 xxxx 004525701000         call    ioa(msg40, FLD3az, FLD3az+1)
002614 xxxx 002621710000 
002615 xxxx 000000000000 
002616 xxxx 002552000000 
002617 xxxx 002624000000 
002620 xxxx 002625000000 
002621 xxxx 002626710000         tra     SB3D2
002622 xxxx 022075000000 FLD1az: ac4     /123-/         " 123-
002623 xxxx 321043000000 FLD2az: ac4     /-123/         " -123
002624 xxxx 000000000000 FLD3az: BSS     2              " XXX+000+127 (Result) zero indicator ON
002626 xxxx 000000223400         SB3D    (),(),()",enablefault   " with truncation enable option
002627 xxxx 002642000010         desc9fl FLD1ba, 8              " minuend operand descriptor
002630 xxxx 002644000010         desc9fl FLD2ba, 8              " subtrahend operand descriptor
002631 xxxx 002646057610         desc4ls FLD3ba, 8, -2          " result operand descriptor
002632 xxxx 001337605000         tpl     NO.GOT                 "indicators on? -  negative and truncation
002633 xxxx 001337601400         trtf    NO.GOT
002634 xxxx 004525701000        call     ioa(msg41, FLD3ba)
002635 xxxx 002641710000 
002636 xxxx 000000000000 
002637 xxxx 002570000000 
002640 xxxx 002646000000 
002641 xxxx 002700710000         tra     MP2D0
002642 xxxx 055071070067 FLD1ba: vfd  a36/-987, a27/654, 9/-3   " - 9 8 7 6 5 4 -3
002643 xxxx 066065064775 
002644 xxxx 055061062063 FLD2ba: vfd  a36/-123, a27/456, 9/-3   " - 1 2 3 4 5 6 -3
002645 xxxx 064065066775 
002646 xxxx 000000000000 FLD3ba: BSS      1                   " -0086419   (Result)
002647 xxxx 020115120062 MP2Dmsg:    acc     ?MP2D Tests ...\r\n?
002650 xxxx 104040124145 
002651 xxxx 163164163040 
002652 xxxx 056056056015 
002653 xxxx 012040040040 
002654 xxxx 047061056040 msg42:      acc     ?1. Result ^n (Should be 260000044151)\r\n?
002655 xxxx 122145163165 
002656 xxxx 154164040136 
002657 xxxx 156040050123 
002660 xxxx 150157165154 
002661 xxxx 144040142145 
002662 xxxx 040062066060 
002663 xxxx 060060060060 
002664 xxxx 064064061065 
002665 xxxx 061051015012 
002666 xxxx 047062056040 msg43:      acc     ?2. Result ^n (Should be 301043105375)\r\n?
002667 xxxx 122145163165 
002670 xxxx 154164040136 
002671 xxxx 156040050123 
002672 xxxx 150157165154 
002673 xxxx 144040142145 
002674 xxxx 040063060061 
002675 xxxx 060064063061 
002676 xxxx 060065063067 
002677 xxxx 065051015012 
002700 xxxx 004525701000             call    ioa(MP2Dmsg)
002701 xxxx 002704710000 
002702 xxxx 000000000000 
002703 xxxx 002647000000 
002704 xxxx 400200206400         MP2D    (),(),round,ascii   "rounding and plus sign options
002705 xxxx 002715027504         desc9ts FLD1bb, 4, -3       "multiplier operand descriptor
002706 xxxx 002716057610         desc4ls FLD2bb, 8, -2       "multiplicand operand descriptor
002707 xxxx 004525701000         call    ioa(msg42, FLD2bb)
002710 xxxx 002714710000 
002711 xxxx 000000000000 
002712 xxxx 002654000000 
002713 xxxx 002716000000 
002714 xxxx 002717710000         tra MP2D2
002715 xxxx 060060062053 FLD1bb: aci     /002+/          " 002+
002716 xxxx 261043105147 FLD2bb: ac4     /+1234567/      " +1234567
002717 xxxx 000200206400        MP2D     (),(),round     "rounding option
002720 xxxx 002730077610        desc4ns  FLD1bc, 8, -2   "multiplier operand descriptor
002721 xxxx 002731040010        desc4fl  FLD2bc, 8       "multiplicand operand descriptor
002722 xxxx 004525701000        call     ioa(msg43, FLD2bc)
002723 xxxx 002727710000 
002724 xxxx 000000000000 
002725 xxxx 002666000000 
002726 xxxx 002731000000 
002727 xxxx 002763710000        tra      MP3D0
002730 xxxx 000000000020 FLD1bc:  ac4    /00000010/      " 00000010
002731 xxxx 261043105376 FLD2bc:  ac4    /+12345ON/      " +12345-2
002732 xxxx 021115120063 MP3Dmsg:    acc /MP3D Tests ... \r\n/
002733 xxxx 104040124145 
002734 xxxx 163164163040 
002735 xxxx 056056056040 
002736 xxxx 015012040040 
002737 xxxx 046061056040 msg44:      acc /1. Result ^a ^a (Should be +61 7284)\r\n/
002740 xxxx 122145163165 
002741 xxxx 154164040136 
002742 xxxx 141040136141 
002743 xxxx 040050123150 
002744 xxxx 157165154144 
002745 xxxx 040142145040 
002746 xxxx 053066061040 
002747 xxxx 067062070064 
002750 xxxx 051015012040 
002751 xxxx 047062056040 msg45:      acc /2. Result ^n (Should be 275060206377)\r\n/
002752 xxxx 122145163165 
002753 xxxx 154164040136 
002754 xxxx 156040050123 
002755 xxxx 150157165154 
002756 xxxx 144040142145 
002757 xxxx 040062067065 
002760 xxxx 060066060062 
002761 xxxx 060066063067 
002762 xxxx 067051015012 
002763 xxxx 004525701000         call    ioa(MP3Dmsg)
002764 xxxx 002767710000 
002765 xxxx 000000000000 
002766 xxxx 002732000000 
002767 xxxx 000200226400         MP3D    (),(),(),round   "with rounding option
002770 xxxx 003002660002         desc4ts FLD1bd(6),2      "multiplier operand descriptor
002771 xxxx 003003057510         desc4ls FLD2bd,8,-3      "multiplicand op descriptor
002772 xxxx 003004217607         desc9ls FLD3bd(1),7,-2   " product operand descriptor
002773 xxxx 004525701000         call    ioa(msg44, FLD3bd, FLD3bd+1)
002774 xxxx 003001710000 
002775 xxxx 000000000000 
002776 xxxx 002737000000 
002777 xxxx 003004000000 
003000 xxxx 003005000000 
003001 xxxx 003006710000         tra     MP3D2
003002 xxxx 000000000133 FLD1bd:  ac4      /0000005+/      " 0000005+
003003 xxxx 261043105147 FLD2bd:  ac4      /+1234567/      " +1234567
003004 xxxx 000000000000 FLD3bd:  BSS      2               " +617284    (Product)
003006 xxxx 000000226400         MP3D    (),(),()", enablefault
003007 xxxx 003022077602         desc4ns FLD1be, 2, -2   " multiplier operand descriptor
003010 xxxx 003023057510         desc4ls FLD2be, 8, -3   " multiplicand op descriptor
003011 xxxx 003024140007         desc4fl FLD3be(1), 7    " product operand descriptor
003012 xxxx 001337605000         tpl     NO.GOT          " indicators on? -  negative and truncation
003013 xxxx 001337601400         trtf    NO.GOT
003014 xxxx 004525701000         call    ioa(msg45, FLD3be)
003015 xxxx 003021710000 
003016 xxxx 000000000000 
003017 xxxx 002751000000 
003020 xxxx 003024000000 
003021 xxxx 003056710000         tra     DV2D0
003022 xxxx 045000000000 FLD1be:   ac4     /25000000/      " 25000000
003023 xxxx 321043105147 FLD2be:   ac4     /-1234567/      "-1234567
003024 xxxx 260000000000 FLD3be:   ac4     /+/             "+-3086-1    (Product)
003025 xxxx 021104126062 DV2Dmsg:    acc     /DV2D Tests ... \r\n/
003026 xxxx 104040124145 
003027 xxxx 163164163040 
003030 xxxx 056056056040 
003031 xxxx 015012040040 
003032 xxxx 047061056040 msg46:      acc     /1. Result ^n (Should be 304062020003)\r\n/
003033 xxxx 122145163165 
003034 xxxx 154164040136 
003035 xxxx 156040050123 
003036 xxxx 150157165154 
003037 xxxx 144040142145 
003040 xxxx 040063060064 
003041 xxxx 060066062060 
003042 xxxx 062060060060 
003043 xxxx 063051015012 
003044 xxxx 047062056040 msg47:      acc     /2. Result ^n (Should be 300044150000)\r\n/
003045 xxxx 122145163165 
003046 xxxx 154164040136 
003047 xxxx 156040050123 
003050 xxxx 150157165154 
003051 xxxx 144040142145 
003052 xxxx 040063060060 
003053 xxxx 060064064061 
003054 xxxx 065060060060 
003055 xxxx 060051015012 
003056 xxxx 004525701000             call    ioa(DV2Dmsg)
003057 xxxx 003062710000 
003060 xxxx 000000000000 
003061 xxxx 003025000000 
003062 xxxx 000000207400             DV2D    (), ()
003063 xxxx 003073467404             DESC4TS FLD1bf(4), 4, -4 "divisor operand descriptor
003064 xxxx 003074040010             DESC4FL FLD2bf,8         "dividend operand descriptor
003065 xxxx 004525701000             call    ioa(msg46, FLD2bf)
003066 xxxx 003072710000 
003067 xxxx 000000000000 
003070 xxxx 003032000000 
003071 xxxx 003074000000 
003072 xxxx 003075710000             tra     DV2D2
003073 xxxx 000000000053 FLD1bf:     ac4     /   0002+/      "0002+
003074 xxxx 260206102000 FLD2bf:     ac4     /+0864200/      "+08642 +0
003075 xxxx 000200207400         DV2D    (),(),round     " with rounding option
003076 xxxx 003106017504         DESC9LS FLD1bg,4,-3     " divisor operand descriptor
003077 xxxx 003107057610         DESC4LS FLD2bg,8,-2     " dividend operand descriptor
003100 xxxx 004525701000         call    ioa(msg47, FLD2bg)
003101 xxxx 003105710000 
003102 xxxx 000000000000 
003103 xxxx 003044000000 
003104 xxxx 003107000000 
003105 xxxx 003141710000         tra     DV3D0
003106 xxxx 053060060065 FLD1bg: aci     /+005/          " +005
003107 xxxx 260000022064 FLD2bg: ac4     /+0001234/      " +0001234
003110 xxxx 021104126063 DVD3msg:    acc     /DV3D Tests ... \r\n/
003111 xxxx 104040124145 
003112 xxxx 163164163040 
003113 xxxx 056056056040 
003114 xxxx 015012040040 
003115 xxxx 047061056040 msg48:      acc     /1. Result ^n (Should be 000263202162)\r\n/
003116 xxxx 122145163165 
003117 xxxx 154164040136 
003120 xxxx 156040050123 
003121 xxxx 150157165154 
003122 xxxx 144040142145 
003123 xxxx 040060060060 
003124 xxxx 062066063062 
003125 xxxx 060062061066 
003126 xxxx 062051015012 
003127 xxxx 047062056040 msg49:      acc     /2. Result ^n (Should be 013103202162)\r\n/
003130 xxxx 122145163165 
003131 xxxx 154164040136 
003132 xxxx 156040050123 
003133 xxxx 150157165154 
003134 xxxx 144040142145 
003135 xxxx 040060061063 
003136 xxxx 061060063062 
003137 xxxx 060062061066 
003140 xxxx 062051015012 
003141 xxxx 004525701000         call    ioa(DVD3msg)
003142 xxxx 003145710000 
003143 xxxx 000000000000 
003144 xxxx 003110000000 
003145 xxxx 400200227400         DV3D    (),(),(),round,ascii    " rounding, plus sign options
003146 xxxx 003157227603         desc9ts FLD1bh(1),3,-2          " divisor operand descriptor
003147 xxxx 003160040011         desc4fl FLD2bh,9                " dividend operand descriptor
003150 xxxx 003162257706         desc4ls FLD3bh(2),6,-1          " quotient operand descriptor
003151 xxxx 004525701000         call    ioa(msg48, FLD3bh)
003152 xxxx 003156710000 
003153 xxxx 000000000000 
003154 xxxx 003115000000 
003155 xxxx 003162000000 
003156 xxxx 003163710000         tra     DV3D2
003157 xxxx 060060062055 FLD1bh: aci      /002-/                 " 002-
003160 xxxx 330166124077 FLD2bh: ac4      /-876543OM/            " -876543-3
003161 xxxx 320000000000 
003162 xxxx 000000000000 FLD3bh: BSS      1                      " xx+38272   (Quotient)
003163 xxxx 000002622000         EAX2    2               " load character mod into X2
003164 xxxx 000010627000         EAX7    8               " load FLD2 length into X7
003165 xxxx 003201624000         EAX4    FLD1bi          " load FLD1 address into X4
003166 xxxx 400000507414         AWDX    pr4|0, 4        " put FLD1 address into AR4
003167 xxxx 420240227512         DV3D    (pr,x2),(rl),(id),round,ascii  " with addr mod options
003170 xxxx 400000037602         desc9ns pr4|0, 2, -2    " divisor operand descriptor (FLD1,2,2,3,-2)
003171 xxxx 003202000017         desc9fl FLD2bi, x7      " dividend operand descriptor (FLD2,0,8,0)
003172 xxxx 400002000112         ARG     pr4|2, 2        " ptr quotient operand desc
003173 xxxx 004525701000         call    ioa(msg49, FLD3bi)
003174 xxxx 003200710000 
003175 xxxx 000000000000 
003176 xxxx 003127000000 
003177 xxxx 003204000000 
003200 xxxx 003235710000         tra     CMPN0
003201 xxxx 060060060062 FLD1bi: aci     /0002/          " 0002
003202 xxxx 053070067066 FLD2bi: vfd     a36/+876, a27/543, 9/-3    " +876543-3
003203 xxxx 065064063775 
003204 xxxx 000000000000 FLD3bi: BSS     1               " x+438272
003205 xxxx 003204157707         desc4ls FLD3bi(1),7,-1  " quotient operand descriptor
003206 xxxx 021103115120 CMPNmsg:    acc     "CMPN Tests ... \r\n"
003207 xxxx 116040124145 
003210 xxxx 163164163040 
003211 xxxx 056056056040 
003212 xxxx 015012040040 
003213 xxxx 027061056040 msg50:      acc     "1. Result FLD2 = FLD1\r\n"
003214 xxxx 122145163165 
003215 xxxx 154164040106 
003216 xxxx 114104062040 
003217 xxxx 075040106114 
003220 xxxx 104061015012 
003221 xxxx 027062056040 msg51:      acc     "2. Result FLD2 = FLD1\r\n"
003222 xxxx 122145163165 
003223 xxxx 154164040106 
003224 xxxx 114104062040 
003225 xxxx 075040106114 
003226 xxxx 104061015012 
003227 xxxx 027063056040 msg52:      acc     "3. Result FLD2 > FLD1\r\n"
003230 xxxx 122145163165 
003231 xxxx 154164040106 
003232 xxxx 114104062040 
003233 xxxx 076040106114 
003234 xxxx 104061015012 
003235 xxxx 004525701000         call    ioa(CMPNmsg)
003236 xxxx 003241710000 
003237 xxxx 000000000000 
003240 xxxx 003206000000 
003241 xxxx 000000303400         CMPN     (),()           "no modification
003242 xxxx 003255057610         NDSC4    FLD1bj,0,8,1,-2 "FLD1 operand descriptor
003243 xxxx 003256040010         NDSC4    FLD2bj,0,8,0    "FLD2 operand descriptor
003244 xxxx 003250600000         TZE      EQUAL2          "FLD2 = FLD1 (Result - FLD2 =  FLD1)
003245 xxxx 001337604000         TMI      NO.GOT          "FLD2 < FLD1
003246 xxxx 001337602000         TNC      NO.GOT          "|FLD2| < |FLD1|
003247 xxxx 001337710000         TRA      NO.GOT
003250 xxxx 004525701000 EQUAL2: call    ioa(msg50)
003251 xxxx 003254710000 
003252 xxxx 000000000000 
003253 xxxx 003213000000 
003254 xxxx 003257710000         tra     CMPN2
003255 xxxx 320001043105 FLD1bj: ac4     /-0012345/      " -0012345
003256 xxxx 321043105376 FLD2bj: ac4     /-12345ON/      " -12345 -2
003257 xxxx 000000303400         CMPN     (),()           " no modification
003260 xxxx 003265430002         desc9ns FLD1bk(2),2      " FLD1 operand descriptor
003261 xxxx 003266067510         desc4ts FLD2bk, 8, -3    " FLD2 operand descriptor
003262 xxxx 003267600000         TZE      EQUAL3          " FLD2 = FLD1
003263 xxxx 001337604000         TMI      NO.GOT          " FLD2 < FLD1
003264 xxxx 001337710000         TRA      NO.GOT          " FLD2 > FLD1
003265 xxxx 060060061062 FLD1bk: aci     /0012/           " +0012000
003266 xxxx 000022000013 FLD2bk: ac4     /0012000+/       " +0012000
003267 xxxx 004525701000 EQUAL3: call    ioa(msg51)
003270 xxxx 003273710000 
003271 xxxx 000000000000 
003272 xxxx 003221000000 
003273 xxxx 000002622000         EAX2    2           " load character mod into X2
003274 xxxx 000006626000         EAX6    6           " load FLD1 length into X6
003275 xxxx 003457624000         EAX4    FLD1bl      " load FLD1 address into X4
003276 xxxx 400000507414         AWDX    0,4,4       " put FLD1 address into AR4
003277 xxxx 000020303552         CMPN    (ar,rl,x2),(id)    " with address modification
003300 xxxx 400000077516         desc4ns pr4|0,x6,-3 " FLD1 operand descriptor (FLD1,2,6,3,-3)
003301 xxxx 003461000000         ARG     FLD2bl.I    " pointer to operand descriptor
003302 xxxx 001337600000         TZE     NO.GOT      " FLD2 = FLD1
003303 xxxx 003305605000         TPL     MORE        " FLD2 > FLD1 Result - FLD2 > FLD1
003304 xxxx 001337710000         TRA     NO.GOT      " FLD2 < FLD1
003305 xxxx 004525701000         call    ioa(msg52)
003306 xxxx 003311710000 
003307 xxxx 000000000000 
003310 xxxx 003227000000 
003311 xxxx 003404710000         tra     MVN0
003312 xxxx 017115126116 MVNmsg:     acc     /MVN Tests ...\r\n/
003313 xxxx 040124145163 
003314 xxxx 164163040056 
003315 xxxx 056056015012 
003316 xxxx 045122145163 MVNmsg1:    acc     /Result: ^n (Should be 014022064127)\r\n/
003317 xxxx 165154164072 
003320 xxxx 040136156040 
003321 xxxx 050123150157 
003322 xxxx 165154144040 
003323 xxxx 142145040060 
003324 xxxx 061064060062 
003325 xxxx 062060066064 
003326 xxxx 061062067051 
003327 xxxx 015012040040 
003330 xxxx 045122145163 MVNmsg2:    acc     /Result: ^n (Should be 321043105001)\r\n/
003331 xxxx 165154164072 
003332 xxxx 040136156040 
003333 xxxx 050123150157 
003334 xxxx 165154144040 
003335 xxxx 142145040063 
003336 xxxx 062061060064 
003337 xxxx 063061060065 
003340 xxxx 060060061051 
003341 xxxx 015012040040 
003342 xxxx 045122145163 MVNmsg3:    acc     /Result: ^n (Should be 000000022065)\r\n/
003343 xxxx 165154164072 
003344 xxxx 040136156040 
003345 xxxx 050123150157 
003346 xxxx 165154144040 
003347 xxxx 142145040060 
003350 xxxx 060060060060 
003351 xxxx 060060062062 
003352 xxxx 060066065051 
003353 xxxx 015012040040 
003354 xxxx 046042053060 MVNmsg4:    acc     /"+0 Test" - Result: ^o (Should be 0)\r\n/
003355 xxxx 040124145163 
003356 xxxx 164042040055 
003357 xxxx 040122145163 
003360 xxxx 165154164072 
003361 xxxx 040136157040 
003362 xxxx 050123150157 
003363 xxxx 165154144040 
003364 xxxx 142145040060 
003365 xxxx 051015012040 
003366 xxxx 022064126173 FLD1bm:     ac4     /1234567+/  "8P1234567+
003367 xxxx 000000000000 FLD2bm:     DEC     0           " 0+123457 (Result)
003370 xxxx 060060060061 FLD1bn:     aci     /00012345678-/  " 00012345678-
003371 xxxx 062063064065 
003372 xxxx 066067070055 
003373 xxxx 000000000000 FLD2bn:     BSS 1               " -12345+1 (Result) negative and truncation set ON
003374 xxxx 060061062063 FLD1bo:     aci     /0123456+/  " 8A123456+ (0123456+)
003375 xxxx 064065066053 
003376 xxxx 000000000000 FLD2bo:     BSS 1               " 00001235 (Result)
003377 xxxx 003376277606             desc4ns FLD2bo(2),6,-2
003400 xxxx 040053060060 FLD1bp:     aci     / +000000/  " 8A123456+ (0123456+)
003401 xxxx 060060060060 
003402 xxxx 000000000000 FLD2bp:     BSS 1               " 00001235 (Result)
003403 xxxx 003376277606             desc4ns FLD2bo(2),6,-2
003404 xxxx 004525701000         call    ioa(MVNmsg)
003405 xxxx 003410710000 
003406 xxxx 000000000000 
003407 xxxx 003312000000 
003410 xxxx 000200300400         MVN     (),(),round         ",,1                  "with rounding option
003411 xxxx 003366067510         NDSC4   FLD1bm,0,8,2,-3     "sending field operand descr.
003412 xxxx 003367157607         NDSC4   FLD2bm,1,7,1,-2     "receiving field operand descr.
003413 xxxx 004525701000         call    ioa(MVNmsg1, FLD2bm)
003414 xxxx 003420710000 
003415 xxxx 000000000000 
003416 xxxx 003316000000 
003417 xxxx 003367000000 
003420 xxxx 000000300400         MVN     (),()",t             ",,,,1 truncation fault enable option
003421 xxxx 003370627611         NDSC9   FLD1bn,3,9,2,-2     "sending field operand descr.
003422 xxxx 003373040010         NDSC4   FLD2bn,0,8,0        "receiving field operand descr.
003423 xxxx 004525701000         call    ioa(MVNmsg2, FLD2bn)
003424 xxxx 003430710000 
003425 xxxx 000000000000 
003426 xxxx 003330000000 
003427 xxxx 003373000000 
003430 xxxx 000001621000         eax1    1
003431 xxxx 000002622000         eax2    2
003432 xxxx 000007627000         eax7    7
003433 xxxx 003374624000         eax4    FLD1bo
003434 xxxx 400000507414         awdx    pr4|0,4
003435 xxxx 400000507414         awdx    0,4,4
003436 xxxx 400220300551         MVN     (pr,rl,x1),(id),round,p              " with rounding and plus sign options
003437 xxxx 400000027617         desc9ts pr4|0,x7,-2
003440 xxxx 003377000000         ARG     FLD2bo+1
003441 xxxx 004525701000         call    ioa(MVNmsg3, FLD2bo)
003442 xxxx 003446710000 
003443 xxxx 000000000000 
003444 xxxx 003342000000 
003445 xxxx 003376000000 
003446 xxxx 400200300400         MVN     (),(),round,p              " with rounding and plus sign options
003447 xxxx 003400217607         desc9ls FLD1bp(1),7,-2
003450 xxxx 003402277606         NDSC4   FLD2bp,2,6,3,-2        "receiving field operand descr.
003451 xxxx 004525701000         call    ioa(MVNmsg4, FLD2bp)
003452 xxxx 003456710000 
003453 xxxx 000000000000 
003454 xxxx 003354000000 
003455 xxxx 003402000000 
003456 xxxx 000000616000         dis
003457 xxxx 000022064126 FLD1bl: ac4     /00123456/      " +00123456
003460 xxxx 001043105153 FLD2bl: ac4     /0123456+/      " +01234560
003461 xxxx 003460067610 FLD2bl.I: desc4ts FLD2bl,8,-2
003462 xxxx 045122145163 msg3:      acc         "Result: ^n (Should be 777777775456)\r\n"
003463 xxxx 165154164072 
003464 xxxx 040136156040 
003465 xxxx 050123150157 
003466 xxxx 165154144040 
003467 xxxx 142145040067 
003470 xxxx 067067067067 
003471 xxxx 067067067065 
003472 xxxx 064065066051 
003473 xxxx 015012040040 
003474 xxxx 045122145163 msg4:      acc         "Result: ^n (Should be 777777001000)\r\n"
003475 xxxx 165154164072 
003476 xxxx 040136156040 
003477 xxxx 050123150157 
003500 xxxx 165154144040 
003501 xxxx 142145040067 
003502 xxxx 067067067067 
003503 xxxx 067060060061 
003504 xxxx 060060060051 
003505 xxxx 015012040040 
003506 xxxx 045122145163 msg5:      acc         "Result: ^n (Should be 000000000777)\r\n"
003507 xxxx 165154164072 
003510 xxxx 040136156040 
003511 xxxx 050123150157 
003512 xxxx 165154144040 
003513 xxxx 142145040060 
003514 xxxx 060060060060 
003515 xxxx 060060060060 
003516 xxxx 067067067051 
003517 xxxx 015012040040 
003520 xxxx 020115126116 MVNEmsg:   acc         "MVNE Tests ...\r\n"
003521 xxxx 105040124145 
003522 xxxx 163164163040 
003523 xxxx 056056056015 
003524 xxxx 012040040040 
003525 xxxx 000001043115 FLD1c:  oct     000001043115    " 8P1234-
003526 xxxx 000001043115         ac4     "0001234-"
003527 xxxx 000000000000 FLD2c:  bss     1               " 777777775456  (Result)
003530 xxxx 000005022000 FLD1d:  oct     000005022000    " 8P51200
003531 xxxx 777777777777 FLD2d:  dec     -1
003532 xxxx 061060062063 FLD1e:  oct     061060062063    " 4A1023
003533 xxxx 000000000000 FLD2e:  dec     0
003534 xxxx 055122145163 msg6:   acc     "Result: '^a^a^a' (Should be '   $3004.05-')\r\n"
003535 xxxx 165154164072 
003536 xxxx 040047136141 
003537 xxxx 136141136141 
003540 xxxx 047040050123 
003541 xxxx 150157165154 
003542 xxxx 144040142145 
003543 xxxx 040047040040 
003544 xxxx 040044063060 
003545 xxxx 060064056060 
003546 xxxx 065055047051 
003547 xxxx 015012040040 
003550 xxxx 053122145163 msg7:   acc     "Result: '^g^g' (Should be '   $3004.05-')\r\n"
003551 xxxx 165154164072 
003552 xxxx 040047136147 
003553 xxxx 136147047040 
003554 xxxx 050123150157 
003555 xxxx 165154144040 
003556 xxxx 142145040047 
003557 xxxx 040040040044 
003560 xxxx 063060060064 
003561 xxxx 056060065055 
003562 xxxx 047051015012 
003563 xxxx 055122145163 msg8:   acc     "Result: '^a^a^a' (Should be '   ?3004.05@')\r\n"
003564 xxxx 165154164072 
003565 xxxx 040047136141 
003566 xxxx 136141136141 
003567 xxxx 047040050123 
003570 xxxx 150157165154 
003571 xxxx 144040142145 
003572 xxxx 040047040040 
003573 xxxx 040077063060 
003574 xxxx 060064056060 
003575 xxxx 065100047051 
003576 xxxx 015012040040 
003577 xxxx 060060060063 FLD1f:  aci     /000300405-/
003600 xxxx 060060064060 
003601 xxxx 065055000000 
003602 xxxx 167050207322 FLD2f:  vfd     9/mflc+7,9/enf+8,9/insb+7,9/mvc+2   "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003603 xxxx 244000000000         vfd     9/insn+4                           "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003604 xxxx 420020054060 FLD2f1: vfd     9/cht, h27/ *+       "need to be able to combine these 1st two -- h2 + h3 = h5 == 45-bits!!!
003605 xxxx 052053020033         vfd     h18/-$, o9/020, h9/.
003606 xxxx 000167050207         vfd     h9/0,9/mflc+7, 9/enf+8, 9/insb+7,9/mvc+2, 9/insn+4
003607 xxxx 322244000000 
003610 xxxx 420040052053 FLD2f2: vfd     9/cht, a27/ *+
003611 xxxx 100077054056         vfd     a18/@?, o9/054, a9/.
003612 xxxx 060167050207         vfd     a9/0, 9/mflc+7, 9/enf+8, 9/insb+7  "MICROP (CHT,0),8H *+-$,.0,(MFLC,7),(ENF,8),(INSB,7)
003613 xxxx 322244000000         vfd     9/mvc+2, 9/insn+4                  "MICROP  (MVC,2),(INSN,4) memory contents in BCD char.
003614 xxxx 000000000000 FLD3f:  bss     3
003617 xxxx 000000000000 FLD3f1: bss     2
003621 xxxx 000000000000 FLD3f2: bss     3
003624 xxxx 054122145163 msg9:   acc     "Result '^a^a^a' (Should be '*2505,09-   ')\r\n"
003625 xxxx 165154164040 
003626 xxxx 047136141136 
003627 xxxx 141136141047 
003630 xxxx 040050123150 
003631 xxxx 157165154144 
003632 xxxx 040142145040 
003633 xxxx 047052062065 
003634 xxxx 060065054060 
003635 xxxx 071055040040 
003636 xxxx 040047051015 
003637 xxxx 012040040040 
003640 xxxx 002120120235 FLD1g:  ac4     /0250509-/  "8P250509-
003641 xxxx 125070226322 FLD2g:  vfd     9/mvza+5, 9/ses+8, 9/insa+6, 9/mvc+2        "MICROP  (MVZA,5),(SES,8),(INSA,6),(MVC,2)
003642 xxxx 244023000000         vfd     9/insn+4, 9/insm+3                          "MICROP  (INSN,4),(INSM,3)
003643 xxxx 000000000000 FLD3g:  BSS     3
003646 xxxx 017115126105 MVEmsg: acc     "MVE Tests ...\r\n" 
003647 xxxx 040124145163 
003650 xxxx 164163040056 
003651 xxxx 056056015012 
003652 xxxx 103122145163 msg10:  acc     "Result: '^g^g^g^g^g' (Should be '* SMITHROGER, WILLIAM S. - #25')\r\n"
003653 xxxx 165154164072 
003654 xxxx 040047136147 
003655 xxxx 136147136147 
003656 xxxx 136147136147 
003657 xxxx 047040050123 
003660 xxxx 150157165154 
003661 xxxx 144040142145 
003662 xxxx 040047052040 
003663 xxxx 123115111124 
003664 xxxx 110122117107 
003665 xxxx 105122054040 
003666 xxxx 127111114114 
003667 xxxx 111101115040 
003670 xxxx 123056040055 
003671 xxxx 040043062065 
003672 xxxx 047051015012 
003673 xxxx 010262443163 FLD1h:  BCI     "12SMITHROGERWILLIAMS25AB"
003674 xxxx 305146272551 
003675 xxxx 663143433121 
003676 xxxx 446202052122 
003677 xxxx 420054073033 FLD2h:  vfd     9/cht, h9/*, o9/073, h9/.               "MICROP  (CHT,0),8H*,.-
003700 xxxx 052020020020         vfd     h9/-, o9/020, o9/020, o9/020
003701 xxxx 020070201205         vfd     o9/020, 9/ses+8, 9/insb+1, 9/insb+5     "MICROP  (SES,8),(INSB,1),(INSB,5)
003702 xxxx 332202205327         vfd     9/mvc+10, 9/insb+2, 9/insb+5, 9/mvc+7   "MICROP  (MVC,10),(INSB,2)(INSB,5),(MVC,7)
003703 xxxx 205321203205         vfd     9/insb+5, 9/mvc+1, 9/insb+3, 9/insb+5   "MICROP  (INSB,5),(MVC,1),(INSB,3),(INSB,5)
003704 xxxx 204205200013         vfd     9/insb+4, 9/insb+5, 9/insb+0, h9/#      "MICROP  (INSB,4),(INSB,5),(INSB,0),1H#
003705 xxxx 322000000000         vfd     9/mvc+2                                 "MICROP  (MCV,2)
003706 xxxx 000000000000 FLD3h:  bss     5
003713 xxxx 055122145163 msg11:  acc     "Result: '^a^a^a' (Should be 'code error#2')\r\n"
003714 xxxx 165154164072 
003715 xxxx 040047136141 
003716 xxxx 136141136141 
003717 xxxx 047040050123 
003720 xxxx 150157165154 
003721 xxxx 144040142145 
003722 xxxx 040047143157 
003723 xxxx 144145040145 
003724 xxxx 162162157162 
003725 xxxx 043062047051 
003726 xxxx 015012040040 
003727 xxxx 145162162157 FLD1i:  ACI     "error-2"
003730 xxxx 162055062000 
003731 xxxx 401043325021 FLD2i:  vfd     9/lte+1, A9/#, 9/mvc+5, 9/insm+1    "MICROP  (LTE,1),1A#,(MVC,5),(INSM,1),(IGN,1),(MVC,1)
003732 xxxx 301321000000         vfd     9/ign+1, 9/mvc+1
003733 xxxx 143157144145 FLD3i:  ACI     "code ", 12
003734 xxxx 040000000000 
003735 xxxx 000000000000 
003736 xxxx 021115114122 MLRmsg:    acc         "MLR Tests .....\r\n"
003737 xxxx 040124145163 
003740 xxxx 164163040056 
003741 xxxx 056056056056 
003742 xxxx 015012040040 
003743 xxxx 063122145163 msg12:  acc     /Result: '^g^g^g' (Should be 'xxxxABCDEFGHIJKL  ')\r\n/
003744 xxxx 165154164072 
003745 xxxx 040047136147 
003746 xxxx 136147136147 
003747 xxxx 047040050123 
003750 xxxx 150157165154 
003751 xxxx 144040142145 
003752 xxxx 040047170170 
003753 xxxx 170170101102 
003754 xxxx 103104105106 
003755 xxxx 107110111112 
003756 xxxx 113114040040 
003757 xxxx 047051015012 
003760 xxxx 212223242526 FLD1j:  BCI     /ABCDEFGHIJKL/ " memory contents
003761 xxxx 273031414243 
003762 xxxx 000000000000 FLD2j:  bss     3              "xxxxABCDEFGHIJKL  " (Result)
003765 xxxx 065122145163 msg13:  acc     /Result: ^n ^n (Should be 000000000022 064126170235)\r\n/
003766 xxxx 165154164072 
003767 xxxx 040136156040 
003770 xxxx 136156040050 
003771 xxxx 123150157165 
003772 xxxx 154144040142 
003773 xxxx 145040060060 
003774 xxxx 060060060060 
003775 xxxx 060060060060 
003776 xxxx 062062040060 
003777 xxxx 066064061062 
004000 xxxx 066061067060 
004001 xxxx 062063065051 
004002 xxxx 015012040040 
004003 xxxx 202020010203 FLD1k:  BCI     /   12345678R/
004004 xxxx 040506071051 
004005 xxxx 000000000000 FLD2k:  bss     2               "xxxxxx123456789-  (Result)
004007 xxxx 047122145163 msg14:  acc     /Result: '^a^a' (Should be 'SOURCE T')\r\n/
004010 xxxx 165154164072 
004011 xxxx 040047136141 
004012 xxxx 136141047040 
004013 xxxx 050123150157 
004014 xxxx 165154144040 
004015 xxxx 142145040047 
004016 xxxx 123117125122 
004017 xxxx 103105040124 
004020 xxxx 047051015012 
004021 xxxx 124110111123 FLD1l:  Aci     /THIS IS THE SOURCE TEXT/
004022 xxxx 040111123040 
004023 xxxx 124110105040 
004024 xxxx 123117125122 
004025 xxxx 103105040124 
004026 xxxx 105130124000 
004027 xxxx 000000000000 FLD2l:  BSS     2
004031 xxxx 055122145163 msg15:  acc     /Result: '^a^a^a' (Should be '.....LE ....')\r\n/
004032 xxxx 165154164072 
004033 xxxx 040047136141 
004034 xxxx 136141136141 
004035 xxxx 047040050123 
004036 xxxx 150157165154 
004037 xxxx 144040142145 
004040 xxxx 040047056056 
004041 xxxx 056056056114 
004042 xxxx 105040056056 
004043 xxxx 056056047051 
004044 xxxx 015012040040 
004045 xxxx 123101115120 FLD1m:  ACi     /SAMPLE TEXT TO MOVE/
004046 xxxx 114105040124 
004047 xxxx 105130124040 
004050 xxxx 124117040115 
004051 xxxx 117126105000 
004052 xxxx 056056056056 FLD2m:  aci     /............/
004053 xxxx 056056056056 
004054 xxxx 056056056056 
004055 xxxx 045122145163 msg16:  acc     /Result: "^a^a" (Should be "HIS IS")\r\n/
004056 xxxx 165154164072 
004057 xxxx 040042136141 
004060 xxxx 136141042040 
004061 xxxx 050123150157 
004062 xxxx 165154144040 
004063 xxxx 142145040042 
004064 xxxx 110111123040 
004065 xxxx 111123042051 
004066 xxxx 015012040040 
004067 xxxx 124110111123 FLD1n:  ACI     /THIS IS THE TEXT/
004070 xxxx 040111123040 
004071 xxxx 124110105040 
004072 xxxx 124105130124 
004073 xxxx 000000000000 FLD2n:  BSS     2
004075 xxxx 021115122114 MRLmsg:    acc         "MRL Tests .....\r\n"
004076 xxxx 040124145163 
004077 xxxx 164163040056 
004100 xxxx 056056056056 
004101 xxxx 015012040040 
004102 xxxx 063122145163 msg17:  acc     /Result: '^g^g^g' (Should be 'xxxx  ABCDEFGHIJKL')\r\n/
004103 xxxx 165154164072 
004104 xxxx 040047136147 
004105 xxxx 136147136147 
004106 xxxx 047040050123 
004107 xxxx 150157165154 
004110 xxxx 144040142145 
004111 xxxx 040047170170 
004112 xxxx 170170040040 
004113 xxxx 101102103104 
004114 xxxx 105106107110 
004115 xxxx 111112113114 
004116 xxxx 047051015012 
004117 xxxx 212223242526 FLD1o:  BCI     /ABCDEFGHIJKL/
004120 xxxx 273031414243 
004121 xxxx 000000000000 FLD2o:  BSS     3
004124 xxxx 071122145163 msg18:  acc     /Result: '^n ^n' (Should be '000000320001 043105147211')\r\n/
004125 xxxx 165154164072 
004126 xxxx 040047136156 
004127 xxxx 040136156047 
004130 xxxx 040050123150 
004131 xxxx 157165154144 
004132 xxxx 040142145040 
004133 xxxx 047060060060 
004134 xxxx 060060060063 
004135 xxxx 062060060060 
004136 xxxx 061040060064 
004137 xxxx 063061060065 
004140 xxxx 061064067062 
004141 xxxx 061061047051 
004142 xxxx 015012040040 
004143 xxxx 202020010203 FLD1p:  BCI     /   12345678R/
004144 xxxx 040506071051 
004145 xxxx 000000000000 FLD2p:  bss     2               "xxxx-00123456789  (Result)
004147 xxxx 065124103124 TCTmsg: acc     /TCT Tests ... (Results 020000000013 & 040000000004)\r\n/
004150 xxxx 040124145163 
004151 xxxx 164163040056 
004152 xxxx 056056040050 
004153 xxxx 122145163165 
004154 xxxx 154164163040 
004155 xxxx 060062060060 
004156 xxxx 060060060060 
004157 xxxx 060060061063 
004160 xxxx 040046040060 
004161 xxxx 064060060060 
004162 xxxx 060060060060 
004163 xxxx 060060064051 
004164 xxxx 015012040040 
004165 xxxx 014122145163 msg24o: acc     /Result: ^n\r\n/
004166 xxxx 165154164072 
004167 xxxx 040136156015 
004170 xxxx 012040040040 
004171 xxxx 200102030405 FLD1x:  bci     / 1234567890#/  " 200102030405060710110013 (oct)
004172 xxxx 060710110013 
004173 xxxx 000000000000 FLD3x:  BSS 1                   " char. & count - 020000000013
004174 xxxx 000000000000 TABLEx: OCT 000000000000,000000000000        "0X
004175 xxxx 000000000000 
004176 xxxx 000000020020         OCT 000000020020,020020020020        "1X
004177 xxxx 020020020020 
004200 xxxx 000000000000         OCT 000000000000                     "2X
004201 xxxx 040040061062 FLD1y:  aci      /  1234;5/  " 040040061062063064073065  (oct)
004202 xxxx 063064073065 
004203 xxxx 000000000000 FLD3y:  BSS     1            " char. and count 040000000004
004204 xxxx 700000000016 INDSCRy:desc9a   pr7|0, x6   " indexing FLD1 operand descr.
004205 xxxx 000000000000 TABLEy: BSS 12               " generate 60 (oct) table chars.
004221 xxxx 000000000000         OCt 000000000000,000000000000  " (060-067)
004222 xxxx 000000000000 
004223 xxxx 000000000040         OCT 000000000040               " (070-073)
004224 xxxx 046124103124 TCTRmsg:    acc        /TCTR Tests (Result 000000000012) ...\r\n/
004225 xxxx 122040124145 
004226 xxxx 163164163040 
004227 xxxx 050122145163 
004230 xxxx 165154164040 
004231 xxxx 060060060060 
004232 xxxx 060060060060 
004233 xxxx 060060061062 
004234 xxxx 051040056056 
004235 xxxx 056015012040 
004236 xxxx 000000000022 FLD1z:  ac4     /0000001234567890/  " 0000001234567890
004237 xxxx 064126170220 
004240 xxxx 000000000000 FLD3z:  BSS     1           " char/count 000000000012 (oct)
004241 xxxx 000000000000 TABLEz: OCT            0,           0
004242 xxxx 000000000000 
004243 xxxx 000000014014         OCT 000000014014,000000014014
004244 xxxx 000000014014 
004245 xxxx 020103115120 CMPCmsg:    acc     "CMPC Tests ...\r\n"
004246 xxxx 103040124145 
004247 xxxx 163164163040 
004250 xxxx 056056056015 
004251 xxxx 012040040040 
004252 xxxx 020124150145 msg25:  acc     "They are equal\r\n"
004253 xxxx 171040141162 
004254 xxxx 145040145161 
004255 xxxx 165141154015 
004256 xxxx 012040040040 
004257 xxxx 212223242020 FLD1aa: BCI     /ABCD/          "     'ABCD  '
004260 xxxx 676767672122 FLD2aa: BCI     /XXXXABCDXXXX/  " 'XXXXABCDXXXX'
004261 xxxx 232467676767 
004262 xxxx 212122222323 DATA:  BCI      /AABBCCDDEEFF/
004263 xxxx 242425252626 
004264 xxxx 272730303131        BCI      /GGHHIIJJKKLL/
004265 xxxx 414142424343 
004266 xxxx 000000000000 COUNT: BSS      1           "COUNT contains decimal 14 (octal 16)
004267 xxxx 303020202020 COMP:  BCI      /HH/
004270 xxxx 060060060060 FLD1ad:  aci      /000001234567/
004271 xxxx 060061062063 
004272 xxxx 064065066067 
004273 xxxx 000000000000 FLD3ad:  DEC      0           "unmatched count - 3
004274 xxxx 020103115120 CMPBmsg:    acc     "CMPB Tests ...\r\n"
004275 xxxx 102040124145 
004276 xxxx 163164163040 
004277 xxxx 056056056015 
004300 xxxx 012040040040 
004301 xxxx 020061056040 msg26:      acc     "1. FLD1 > FLD2\r\n"
004302 xxxx 106114104061 
004303 xxxx 040076040106 
004304 xxxx 114104062015 
004305 xxxx 012040040040 
004306 xxxx 020062056040 msg27:      acc     "2. FLD1 < FLD2\r\n"
004307 xxxx 106114104061 
004310 xxxx 040074040106 
004311 xxxx 114104062015 
004312 xxxx 012040040040 
004313 xxxx 020063056040 msg28:      acc     "3. FLD1 = FLD2\r\n"
004314 xxxx 106114104061 
004315 xxxx 040075040106 
004316 xxxx 114104062015 
004317 xxxx 012040040040 
004320 xxxx 000000633000 rd_clock:	rccl                " read the clock
004321 xxxx 004444757000 cv_clock:	staq	rdctime     " save clock reading
004322 xxxx 004414742000 	stx2	datx2               " save XR's
004323 xxxx 004415740000 	stx0	datx2+1             " ..
004324 xxxx 000034235007 	lda     28,dl               " Initialize montab
004325 xxxx 004447755000 	sta     montab+1			" to prime Feb
004326 xxxx 004444237000 	ldaq	rdctime             " Get clock reading
004327 xxxx 000001737000 	lls     1                   " Set for dvf
004330 xxxx 005044507000 	dvf     =1000000			" Get seconds since 1900.
004331 xxxx 000044777000 	llr     36                  " Into Q.
004332 xxxx 000074506007 	div     60,dl               " Seconds since min to A, mins to Q.
004333 xxxx 004427755000 	sta     rdclock.sec         " Save for inspection.
004334 xxxx 000074506007 	div     60,dl               " Min since hr to A, hrs to Q.
004335 xxxx 004426755000 	sta     rdclock.min
004336 xxxx 000006627000 	eax7	6
004337 xxxx 004417702000 	tsx2	datecv              " Convert the minutes.
004340 xxxx 004437176000 	sbq     rdclock.zone_temp	" Adjust for GMT.
004341 xxxx 000030506007 	div     24,dl               " Days since 1900 in q.
004342 xxxx 004436756000 	stq     rdclock.day_of_century	" save for  later.
004343 xxxx 004425755000 	sta     rdclock.hr          " Hours since daybreak.
004344 xxxx 004417702000 	tsx2	datecv              " Convert the hours
004345 xxxx 002665506007 	div     365*4+1,dl          " get leap year cycle
004346 xxxx 002110115007 	cmpa	365*3+1,dl          " if in last year of cycle (the leap year)
004347 xxxx 004351604000 	tmi     *+2                 " no
004350 xxxx 004447054000 	aos     montab+1			" allow for feb 29
004351 xxxx 000002736000 	qls     2                   " 4*# leap year cycles
004352 xxxx 003555036007 	adlq	1901,dl
004353 xxxx 004435756000 	stq     rdclock.year		" Save
004354 xxxx 000044777000 	llr     36
004355 xxxx 000555506007 	div     365,dl              " Years complete since l.y.c. =>Q
004356 xxxx 000004116007 	cmpq	4,dl                " Dec 31st of leap year?
004357 xxxx 004362601000 	tnz     *+3                 " No.
004360 xxxx 000001176007 	sbq     1,dl                " Adjust year and
004361 xxxx 000555235007 	lda     365,dl              " day numbers.
004362 xxxx 004435056000 	asq     rdclock.year		" Add in years complete.
004363 xxxx 000000626000 	eax6	0                   " search for correct month
004364 xxxx 030220520201 	rpt     12,1,tmi			" ..
004365 xxxx 004446175016 	sba     montab,6			" subtract off days for each month
004366 xxxx 777777075016 	ada     -1,6                " put back last entry
004367 xxxx 000001075007 	ada     1,dl                " plus one more
004370 xxxx 004432755000 	sta     rdclock.day_of_month	" Day of month
004371 xxxx 004417702000 	tsx2	datecv              " convert day
004372 xxxx 000000635016 	eaa     0,6
004373 xxxx 004446135003 	sbla	montab,du			" get index into month table
004374 xxxx 000022771000 	arl     18                  "..
004375 xxxx 004430755000 	sta     rdclock.month		" Save month number
004376 xxxx 004473236005 	ldq     rdc.months-1,al		" Get name of month.
004377 xxxx 004431756000 	stq     rdclock.month_name
004400 xxxx 004417702000 	tsx2	datecv              " convert month
004401 xxxx 000000024400 	mvne	(),(),()			" edit the date and time
004402 xxxx 004442070010 	desc4ns	date,8
004403 xxxx 004462000014 	desc9a	datedit,12
004404 xxxx 004444020014 	desc6a	rdctime,12
004405 xxxx 004436236000 	ldq     rdclock.day_of_century
004406 xxxx 000002076007 	adq     2,dl                " Bump Tuesday into place.
004407 xxxx 000007506007 	div     7,dl
004410 xxxx 004433755000 	sta     rdclock.day_of_week
004411 xxxx 004465236005 	ldq     rdc.days,al         " Get name of day.
004412 xxxx 004434756000 	stq     rdclock.day_name
004413 xxxx 004444237000 	ldaq	rdctime             " get conversion in AQ
004414 xxxx 004414622000 datx2:	eax2	*			" restore XR's
004415 xxxx 004415620000 	eax0    *               " ..
004416 xxxx 000000710012 	tra     0,2             " return to caller
004417 xxxx 004441755000 datecv:	sta	datenum			" save number
004420 xxxx 000017301400 	btd     (),(x7)         " convert into proper place
004421 xxxx 004441000004 	desc9a	datenum,4
004422 xxxx 004442070002 	desc4ns	date,2
004423 xxxx 777776627017 	eax7	-2,7			" move offset index
004424 xxxx 000000710012 	tra     0,2             " and return
004425 xxxx 000000000000 	bss	,1
004426 xxxx 000000000000 	bss	,1
004427 xxxx 000000000000 	bss	,1
004430 xxxx 000000000000 	bss	,1
004431 xxxx 000000000000 	bss	,1
004432 xxxx 000000000000 	bss	,1
004433 xxxx 000000000000 	bss	,1
004434 xxxx 000000000000 	bss	,1
004435 xxxx 000000000000 	bss	,1
004436 xxxx 000000000000 	bss	,1
004437 xxxx 000000000010     dec     8
004440 xxxx 160144164040     aci     'pdt '
004441 xxxx 000000000000 datenum:	bss	,1
004442 xxxx 000000000000 date:	bss	,1
004443 xxxx 000000011000 	even "(allocating 1 nop)
004444 xxxx 000000000000 rdctime:	bss	,2
004446 xxxx 000000000037 montab:	dec	31,28,31,30,31,30,31,31,30,31,30,31
004447 xxxx 000000000034 
004450 xxxx 000000000037 
004451 xxxx 000000000036 
004452 xxxx 000000000037 
004453 xxxx 000000000036 
004454 xxxx 000000000037 
004455 xxxx 000000000037 
004456 xxxx 000000000036 
004457 xxxx 000000000037 
004460 xxxx 000000000036 
004461 xxxx 000000000037 
004462 xxxx 401020102260 datedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
004463 xxxx 061322021322 
004464 xxxx 260015322021 	vfd	9/insp,o9/15,9/mvc+2,9/insm+1
004465 xxxx 163165156040 rdc.days: aci	'sun mon tue wed thurfri sat '
004466 xxxx 155157156040 
004467 xxxx 164165145040 
004470 xxxx 167145144040 
004471 xxxx 164150165162 
004472 xxxx 146162151040 
004473 xxxx 163141164040 
004474 xxxx 152141156040 	aci	'jan feb mar apr may jun jul aug septoct nov dec '
004475 xxxx 146145142040 
004476 xxxx 155141162040 
004477 xxxx 141160162040 
004500 xxxx 155141171040 
004501 xxxx 152165156040 
004502 xxxx 152165154040 
004503 xxxx 141165147040 
004504 xxxx 163145160164 
004505 xxxx 157143164040 
004506 xxxx 156157166040 
004507 xxxx 144145143040 
004510 xxxx 004513710000 crlf:	save
004511 xxxx 000000000000 
004512 xxxx 004511630000 
004513 xxxx 004511754000 
004514 xxxx 004511741000 
004515 xxxx 004524755000         sta     saveA
004516 xxxx 005045235000         lda     =012
004517 xxxx 000001420400         emCall  1
004520 xxxx 005046235000         lda     =015
004521 xxxx 000001420400         emcall  1
004522 xxxx 004524235000         lda     saveA
004523 xxxx 004512710000         return  crlf
004524 xxxx 000000000000 saveA:  bss     1
004525 xxxx 004534710000 ioa:    save    2, 4, 5, 6
004526 xxxx 000000000000 
004527 xxxx 000000222003 
004530 xxxx 000001224003 
004531 xxxx 000002225003 
004532 xxxx 000003226003 
004533 xxxx 004526630000 
004534 xxxx 004526754000 
004535 xxxx 004526741000 
004536 xxxx 004527742000 
004537 xxxx 004530744000 
004540 xxxx 004531745000 
004541 xxxx 004532746000 
004542 xxxx 000002624031 ioa1:   eax4    2, 1*   " 1st arg is control string
004543 xxxx 000003625011         eax5    3, 1    " next arg is the 1st of the numeric args. x5 points to next argument
004544 xxxx 000000626015         eax6    0, x5
004545 xxxx 000041235007         lda     041, dl " make a blank tallyb word .....
004546 xxxx 004563755000         sta     i29
004547 xxxx 000000235014     	lda     0, x4   " get 1st data word into A
004550 xxxx 000033731000         ars     27      " determine word count
004551 xxxx 000006735000     	als     6       " count to upper word of tally
004552 xxxx 004563255000     	orsa    i29
004553 xxxx 000000626014     	eax6    0, x4   " address of string into X6
004554 xxxx 004563746000     	stx6    i29     " address to upper word of tally
004555 xxxx 004563235052 inext:  lda     i29, sc
004556 xxxx 000136115007         cmpa    =o000136,dl		" ^
004557 xxxx 004564600000         tze     iernot      " if so, go process it
004560 xxxx 000001420400 out1:  	emCall  1
004561 xxxx 004555607000     	ttf     inext
004562 xxxx 004527710000         return  ioa
004563 xxxx 000000000041 i29:	tallyb  0, 0, 1
004564 xxxx 004563235052 iernot: lda     i29, sc         " get next char ...
004565 xxxx 000136115007         cmpa    =o000136,dl     " is it another "^"?
004566 xxxx 004604600000         tze     i21             " No, just print it ...
004567 xxxx 000167115007         cmpa    =o000167,dl     " is it a "w"?
004570 xxxx 004606600000         tze     idoW            " do full word octal
004571 xxxx 000157115007         cmpa    =o000157,dl     " is it an "o"?
004572 xxxx 004634600000         tze     idoO            " print zero suppressed octal
004573 xxxx 000156115007         cmpa    =o000156,dl     " is it a "n"?
004574 xxxx 004657600000         tze     idoN            " octal w/ no spaces inserted
004575 xxxx 000144115007         cmpa    =o000144,dl     " is it a "d"?
004576 xxxx 004706600000         tze     idoD            " decimal
004577 xxxx 000141115007         cmpa    =o000141,dl     " is it a ^a?
004600 xxxx 004714600000         tze     idoA            " 4 char ascii display
004601 xxxx 000147115007         cmpa    =o000147,dl     " is it a ^g?
004602 xxxx 004725600000         tze     idoG            " 6 char GE BCD display
004603 xxxx 004560710000         tra     out1        " unknown just print it....
004604 xxxx 000001420400 i21:    emCall  1           " output A to console
004605 xxxx 004555710000         tra     inext
004606 xxxx 000000235035 idoW:   lda     0, 5*       " ^w - full-word octal xxxxxx xxxxxx
004607 xxxx 005003702000         tsx2    octwd
004610 xxxx 004704757000         staq    ioaSafe     " bcd in AQ
004611 xxxx 000044773000         lrl     36          " A => Q
004612 xxxx 000006622000         eax2    6
004613 xxxx 000000235007 idoW2:  lda     =0, dl
004614 xxxx 000006737000         lls     6
004615 xxxx 000002420400         emCall  2           " output GE code char to console
004616 xxxx 777777622012         eax2    -1, 2
004617 xxxx 004613601000         tnz     idoW2
004620 xxxx 004704237000         ldaq    ioaSafe
004621 xxxx 000000235007         lda     =0, dl      " 0 => A
004622 xxxx 000020235007         lda     =020 ,dl     " bcd ' ' => A
004623 xxxx 000002420400         emcall  2
004624 xxxx 000006622000         eax2    6
004625 xxxx 000000235007 idoW3:  lda     =0,dl
004626 xxxx 000006737000         lls     6
004627 xxxx 000002420400         emCall  2
004630 xxxx 777777622012         eax2    -1, 2
004631 xxxx 004625601000         tnz     idoW3
004632 xxxx 000001065003         adx5    1,du
004633 xxxx 004555710000         tra     inext
004634 xxxx 000000235035 idoO:   lda     0, 5*           " ^o - Zero-suppressed octal
004635 xxxx 005003702000         tsx2    octwd
004636 xxxx 004704757000         staq    ioaSafe         " bcd in AQ
004637 xxxx 004655235000         lda     idOTly
004640 xxxx 004656755000         sta     idOT
004641 xxxx 004656235052 idO1:   lda     idOT, sc        " get char into A
004642 xxxx 000000115007         cmpa    =0, dl          " a zero?
004643 xxxx 004651601000         tnz     idONZ + 1       " nope
004644 xxxx 004641607000         ttf     idO1            " Yes, a Zero. Go for more
004645 xxxx 000002420400         emCall  2               " output a single 0
004646 xxxx 000001065003         adx5    1,du
004647 xxxx 004555710000         tra     inext
004650 xxxx 004656235052 idONZ:  lda     idOT, sc        " get char into A
004651 xxxx 000002420400         emCall  2
004652 xxxx 004650607000         ttf     idONZ           " Yes, a Zero. Go for more
004653 xxxx 000001065003         adx5    1,du
004654 xxxx 004555710000         tra     inext
004655 xxxx 004704001400 idOTly: tally   ioaSafe, 12, 0
004656 xxxx 000000000000 idOT:   bss     1
004657 xxxx 000000235035 idoN:   lda     0, 5*       " ^n - octal w/ no spaces inserted
004660 xxxx 005003702000         tsx2    octwd
004661 xxxx 004704757000         staq    ioaSafe     " bcd in AQ
004662 xxxx 000044773000         lrl     36          " A => Q
004663 xxxx 000006622000         eax2    6
004664 xxxx 000000235007 idoN2:  lda     =0,dl
004665 xxxx 000006737000         lls     6
004666 xxxx 000002420400         emCall  2           " output GE code char to console
004667 xxxx 777777622012         eax2    -1, 2
004670 xxxx 004664601000         tnz     idoN2
004671 xxxx 004704237000         ldaq    ioaSafe
004672 xxxx 000000235007         lda     =0, dl      " 0 => A
004673 xxxx 000006622000         eax2    6
004674 xxxx 000000235007 idoN3:  lda     =0, dl
004675 xxxx 000006737000         lls     6
004676 xxxx 000002420400         emCall  2
004677 xxxx 777777622012         eax2    -1, 2
004700 xxxx 004674601000         tnz     idoN3
004701 xxxx 000001065003         adx5    1,du
004702 xxxx 004555710000         tra     inext
004703 xxxx 000000011000         even "(allocating 1 nop)
004704 xxxx 000000000000 ioaSafe:  bss 2
004706 xxxx 000000236035 idoD:   ldq     0, 5*       " ^d
004707 xxxx 004736701000         call    toDec
004710 xxxx 004712710000 
004711 xxxx 000000000000 
004712 xxxx 000001065003         adx5    1,du
004713 xxxx 004555710000         tra     inext
004714 xxxx 000000236035 idoA:   ldq     0, 5*      " ^a (4 ascii chars into Q)
004715 xxxx 000004622000         eax2    4
004716 xxxx 000000235007 idoA2:  lda     =0,dl
004717 xxxx 000011737000         lls     9
004720 xxxx 000001420400         emCall  1
004721 xxxx 777777622012         eax2    -1, 2
004722 xxxx 004716601000         tnz     idoA2
004723 xxxx 000001065003         adx5    1,du        " into next argument
004724 xxxx 004555710000         tra     inext
004725 xxxx 000000236035 idoG:   ldq     0, 5*        " ^g (6 GE BCD chars into Q)
004726 xxxx 000006622000         eax2    6
004727 xxxx 000000235007 idoG2:  lda     =0,dl
004730 xxxx 000006737000         lls     6
004731 xxxx 000002420400         emCall  2
004732 xxxx 777777622012         eax2    -1, 2
004733 xxxx 004727601000         tnz     idoG2
004734 xxxx 000001065003         adx5    1,du        " into next argument
004735 xxxx 004555710000         tra     inext
004736 xxxx 004741710000 toDec:  save    "2,3,4,5,6,7
004737 xxxx 000000000000 
004740 xxxx 004737630000 
004741 xxxx 004737754000 
004742 xxxx 004737741000 
004743 xxxx 005047116000         cmpq    =-34359738368       " the weird one?
004744 xxxx 004750601000         tnz     toDec2
004745 xxxx 005002235000         lda     decMTly             " just print it and be done with it
004746 xxxx 004776755000         sta     decTly
004747 xxxx 004766710000         tra     toDec1
004750 xxxx 004772756000 toDec2: stq     decNo
004751 xxxx 000000116007         cmpq    =0,dl       " Q < 0?
004752 xxxx 004754605000         tpl     toDec0      " No
004753 xxxx 004772336000         lcq     decNo       " -decNo => Q
004754 xxxx 000012506007 toDec0: div     =10,dl      " divide Q by 10, remainder in A
004755 xxxx 000060075007         ada     =o060,dl    " add ascii '0' (=1A0) to A
004756 xxxx 004776755045         sta     decTly, scr " start writing characters backwards
004757 xxxx 000000076007         adq     =0,dl       " set flags to test if Q == 0
004760 xxxx 004754601000         tnz     toDec0      " if Q == 0 then we're essentially done with conversion
004761 xxxx 004772235000         lda     decNo
004762 xxxx 000000115007         cmpa    =0,dl
004763 xxxx 004766605000         tpl     toDec1
004764 xxxx 000055235007         lda     =o055,dl    " (-) => A
004765 xxxx 004776755045         sta     decTly, scr " write (-) sign
004766 xxxx 004776235052 toDec1: lda     decTly, sc
004767 xxxx 000001420400         emCall  1
004770 xxxx 004766607000         ttf     toDec1
004771 xxxx 004740710000         return  toDec
004772 xxxx 000000000000 decNo:  dec     0
004773 xxxx 000000000000 decBuf: bss     3
004776 xxxx 004775000040 decTly: tallyb  decBuf+2, , 0
004777 xxxx 055063064063 decMM:  aci     "-34359738368"  " -2^^35
005000 xxxx 065071067063 
005001 xxxx 070063066070 
005002 xxxx 004777001440 decMTly:tallyb  decMM, 12, 0
005003 xxxx 005020742000 octwd:	stx2	octx2
005004 xxxx 000006622000 	eax2	6
005005 xxxx 000003736000 	qls     3
005006 xxxx 000003777000 	llr     3
005007 xxxx 777777622012 	eax2	-1,2
005010 xxxx 005005605400 	tpnz	*-3
005011 xxxx 005042756000 	stq     octtemp
005012 xxxx 000006622000 	eax2	6
005013 xxxx 000003736000 	qls     3
005014 xxxx 000003777000 	llr     3
005015 xxxx 777777622012 	eax2	-1,2
005016 xxxx 005013605400 	tpnz	*-3
005017 xxxx 005042235000 	lda     octtemp
005020 xxxx 005020622000 octx2:	eax2	*
005021 xxxx 000000710012 	tra     0,2
005022 xxxx 005040742000 hexwd:	stx2	hexx2
005023 xxxx 000044773000 	lrl     36          "shift to Q
005024 xxxx 000006622000 	eax2	6           "	process 6 characters
005025 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
005026 xxxx 000004737000 	lls     4           "shift in 4 bits
005027 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
005030 xxxx 005032604400 	tmoz	*+2
005031 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
005032 xxxx 000006773000 	lrl     6
005033 xxxx 005042235000 	lda     octtemp		"get temporary
005034 xxxx 000006737000 	lls     6           "insert new character
005035 xxxx 005042755000 	sta     octtemp		"and store
005036 xxxx 777777622012 	eax2	-1,2		"decrement index
005037 xxxx 005025605400 	tpnz	hexloop
005040 xxxx 005040622000 hexx2:	eax2	*
005041 xxxx 000000710012 	tra     0,2		"return to caller
005042 xxxx 000000000000 octtemp:	oct	0
005043 xxxx 000000000000 decimal literal (=0)
005044 xxxx 000003641100 decimal literal (=1000000)
005045 xxxx 000000000012 octal literal (=o12)
005046 xxxx 000000000015 octal literal (=o15)
005047 xxxx 400000000000 decimal literal (=-34359738368)
