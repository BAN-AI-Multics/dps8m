zero-initialized segments 0 .. 7
zero-initialized SDWAM
segment created for 'main'
segdef created for segment main, symbol 'main', addr:000001
segdef created for segment main, symbol 'Data_1', addr:000154
segdef created for segment main, symbol 'magicM', addr:000156
segref created for segment 'UtilsA' symbol:ioa, addr:000232
segref created for segment 'UtilsA' symbol:rd_clockA, addr:000234
segref created for segment 'lot_' symbol:lot_, addr:000236
segref created for segment 'stack_0' symbol:stack_0, addr:000240
segref created for segment 'TAM' symbol:_main, addr:000242
segref created for segment 'TAM' symbol:pi, addr:000244
segref created for segment 'TAM' symbol:E, addr:000246
segref created for segment 'TAM' symbol:fltTmp, addr:000250
segref created for segment 'TAM' symbol:_print, addr:000252
segref created for segment 'TIND' symbol:_main_2, addr:000254
segref created for segment 'TINDC' symbol:_main_C, addr:000256
segref created for segment 'TINDC' symbol:magicC, addr:000260
segref created for segment 'TAM' symbol:magicA, addr:000262
segref created for segment 'TAM' symbol:magicA, addr:000264
segref created for segment 'simh_operators_' symbol:operator_table, addr:000266
segref created for segment 'simh_operators_' symbol:operator_table+632, addr:000270
segref created for segment 'simh_operators_' symbol:operator_table+633, addr:000272
segref created for segment 'simh_operators_' symbol:operator_table+634, addr:000274
segref created for segment 'simh_operators_' symbol:operator_table+635, addr:000276
segref created for segment 'simh_operators_' symbol:operator_table+636, addr:000300
!GO address: 000001
Writing SDW to address 00001000 (DSBR.ADDR+2*0 offset) 
193 (000301) words loaded into segment 0(0) at address 000000
segment created for 'TAM'
segdef created for segment TAM, symbol 'pi', addr:001723
segdef created for segment TAM, symbol 'E', addr:001724
segdef created for segment TAM, symbol 'fltTmp', addr:001725
segdef created for segment TAM, symbol 'magicA', addr:000004
entrypoint created for segment main, symbol '_main', addr:001752
entrypoint created for segment main, symbol '_print', addr:001754
segref created for segment 'UtilsA' symbol:ioa, addr:001756
segref created for segment 'TIND' symbol:magicB, addr:001760
996 (001744) words loaded into segment TAM
segment created for 'TIND'
segdef created for segment TIND, symbol 'magicB', addr:002324
entrypoint created for segment main, symbol '_main_2', addr:002562
segref created for segment 'UtilsA' symbol:ioa, addr:002570
segref created for segment 'main' symbol:Data_1, addr:002572
segref created for segment 'main' symbol:magicM, addr:002574
151 (000227) words loaded into segment TIND
segment created for 'TINDC'
segdef created for segment TINDC, symbol 'magicC', addr:000025
entrypoint created for segment main, symbol '_main_C', addr:000410
segref created for segment 'UtilsA' symbol:ioa, addr:000422
251 (000373) words loaded into segment TINDC
segment created for 'UtilsA'
segdef created for segment UtilsA, symbol 'A0', addr:000005
segdef created for segment UtilsA, symbol 'A1', addr:000050
segdef created for segment UtilsA, symbol 'rd_clockA', addr:000207
segdef created for segment UtilsA, symbol 'ioa', addr:000271
857 (001531) words loaded into segment UtilsA
segment created for 'simh_operators_'
segdef created for segment simh_operators_, symbol 'alm_call', addr:001175
segdef created for segment simh_operators_, symbol 'alm_entry', addr:001215
segdef created for segment simh_operators_, symbol 'alm_operators_begin', addr:001175
segdef created for segment simh_operators_, symbol 'alm_operators_end', addr:001237
segdef created for segment simh_operators_, symbol 'alm_push', addr:001201
segdef created for segment simh_operators_, symbol 'alm_return', addr:001225
segdef created for segment simh_operators_, symbol 'alm_return_no_pop', addr:001233
segdef created for segment simh_operators_, symbol 'transfer_vector', addr:000551
segdef created for segment simh_operators_, symbol 'operator_table', addr:000000
40 (000050) words loaded into segment simh_operators_
lot_ segment created with 6 sparse entries.
stack_0 segment created as segment# 8 (10) [DSBR.STACK=0001]
Examining segments ... segment numbering begins at: 9
    Processing segment main...
        Resolving segref UtilsA$ioa...found ioa (000232)
            ITS Pair: [even:000011000043, odd:000271000000]
        Resolving segref UtilsA$rd_clockA...found rd_clockA (000234)
            ITS Pair: [even:000011000043, odd:000207000000]
        Resolving segref lot_$lot_...found lot_ (000236)
            ITS Pair: [even:000012000043, odd:000000000000]
        Resolving segref stack_0$stack_0...found stack_0 (000240)
            ITS Pair: [even:000010000043, odd:000000000000]
        Resolving segref TAM$_main...found _main (000242)
            ITS Pair: [even:000013000043, odd:001752000000]
        Resolving segref TAM$pi...found pi (000244)
            ITS Pair: [even:000013000043, odd:001723000000]
        Resolving segref TAM$E...found E (000246)
            ITS Pair: [even:000013000043, odd:001724000000]
        Resolving segref TAM$fltTmp...found fltTmp (000250)
            ITS Pair: [even:000013000043, odd:001725000000]
        Resolving segref TAM$_print...found _print (000252)
            ITS Pair: [even:000013000043, odd:001754000000]
        Resolving segref TIND$_main_2...found _main_2 (000254)
            ITS Pair: [even:000014000043, odd:002562000000]
        Resolving segref TINDC$_main_C...found _main_C (000256)
            ITS Pair: [even:000015000043, odd:000410000000]
        Resolving segref TINDC$magicC...found magicC (000260)
            ITS Pair: [even:000015000043, odd:000025000000]
        Resolving segref TAM$magicA...found magicA (000262)
            ITS Pair: [even:000013000043, odd:000004000000]
        Resolving segref TAM$magicA...found magicA (000264)
            ITS Pair: [even:000013000043, odd:000004000000]
        Resolving segref simh_operators_$operator_table...found operator_table (000266)
            ITS Pair: [even:000016000043, odd:000000000000]
        Resolving segref simh_operators_$operator_table...found operator_table+632 (000270)
            ITS Pair: [even:000016000043, odd:001170000000]
        Resolving segref simh_operators_$operator_table...found operator_table+633 (000272)
            ITS Pair: [even:000016000043, odd:001171000000]
        Resolving segref simh_operators_$operator_table...found operator_table+634 (000274)
            ITS Pair: [even:000016000043, odd:001172000000]
        Resolving segref simh_operators_$operator_table...found operator_table+635 (000276)
            ITS Pair: [even:000016000043, odd:001173000000]
        Resolving segref simh_operators_$operator_table...found operator_table+636 (000300)
            ITS Pair: [even:000016000043, odd:001174000000]
    Processing segment TAM...
        Resolving segref UtilsA$ioa...found ioa (001756)
            ITS Pair: [even:000011000043, odd:000271000000]
        Resolving segref TIND$magicB...found magicB (001760)
            ITS Pair: [even:000014000043, odd:002324000000]
    Processing segment TIND...
        Resolving segref UtilsA$ioa...found ioa (002570)
            ITS Pair: [even:000011000043, odd:000271000000]
        Resolving segref main$Data_1...found Data_1 (002572)
            ITS Pair: [even:000000000043, odd:000154000000]
        Resolving segref main$magicM...found magicM (002574)
            ITS Pair: [even:000000000043, odd:000156000000]
    Processing segment TINDC...
        Resolving segref UtilsA$ioa...found ioa (000422)
            ITS Pair: [even:000011000043, odd:000271000000]
    Processing segment UtilsA...
    Processing segment simh_operators_...
    Processing segment lot_...
    Processing segment stack_0...
Loading deferred segments ...
    loading TAM as segment# 013
Writing SDW to address 00001026 (DSBR.ADDR+2*11 offset) 
      1010 (001762) words loaded into segment 11 (13) at address 201000
    loading TIND as segment# 014
Writing SDW to address 00001030 (DSBR.ADDR+2*12 offset) 
      1406 (002576) words loaded into segment 12 (14) at address 203000
    loading TINDC as segment# 015
Writing SDW to address 00001032 (DSBR.ADDR+2*13 offset) 
      276 (000424) words loaded into segment 13 (15) at address 205600
    loading UtilsA as segment# 011
Writing SDW to address 00001022 (DSBR.ADDR+2*9 offset) 
      1064 (002050) words loaded into segment 9 (11) at address 206240
    loading simh_operators_ as segment# 016
Writing SDW to address 00001034 (DSBR.ADDR+2*14 offset) 
      671 (001237) words loaded into segment 14 (16) at address 210320
    loading lot_ as segment# 012
Writing SDW to address 00001024 (DSBR.ADDR+2*10 offset) 
      4095 (007777) words loaded into segment 10 (12) at address 211560
LOT => PR[4]: SNR=00012 RNR=0 WORDNO=000000 BITNO:00
LOT => PR[5]: SNR=00012 RNR=0 WORDNO=000000 BITNO:00
    loading stack_0 as segment# 010
Writing SDW to address 00001020 (DSBR.ADDR+2*8 offset) 
      49152 (140000) words loaded into segment 8 (10) at address 221560
snapping lot_ links...

dps-8/m simulator V4.0-0 Beta        git commit id: c8ae76cb
	211560 + 0 => 000000000232
	211560 + 13 => 000013001756
	211560 + 14 => 000014002570
	211560 + 15 => 000015000422
Howdy world this is 'TestIndirect'! - It's ' 6/19 10:06 '
TINDC$magicC was = 2718281828 (Should be 2718281828)
TestIndirectA: magicA: 14 000043 2324 000000

R mods ...
'If this works, that means were in TAM$...'
Should be ... 006000 0100 03 is 6000010003
Should be ... 006000 0100 03 is 6000010003
Should be ... 400000000003 is 400000000003
Should be ... 000000000012 is 12
Should be ... 000005 000004 is 000005 000004
Should be ... 5 is 5
Should be ... 17 is 17
Should be ... 000006777776 (6,-2) is 000006 777776
Should be ... 3 is 3
Should be ... 700 is 700
Should be ... 000000235004 is 000000 235004
Should be ... 123456000000/000000543210 is 123456000000/543210
RI mods ...
Should be ... 42/400000000002 is 42/400000000002
Should be ... 616 is 616
Should be ... 77 is 77
Should be ... 2012 is 2012
Should be ... ??? (since l+2 & m move) is 1623000000
Should be ... 400000000003 is 400000000003
Should be ... 3 is 3
Should be ... 42 is 42
IR mods ...
Should be ... 400000000001 is 400000000001
Should be ... ??? (this will move as x moves) is 000000 001647
Should be ... 377777777523 is 377777777523
Should be ... 000000000222 is 222
Should be ... 000000000333 is 333
Should be ... 00000000042 is 42
Should be ... ??? is 1643 (Yup, &w. But, &w will change)
Should be ... 616 is 616
Should be ... 00000000013 is 13
Should be ... 0000000002012 is 2012
Should be ... 34359738195 is 34359738195
Should be ... 000007777777 is 7777777
IT mods ...
Should be ... 000000000046 .. 000000000034 is 46
Should be ... 000000000046 .. 000000000034 is 44
Should be ... 000000000046 .. 000000000034 is 42
Should be ... 000000000046 .. 000000000034 is 40
Should be ... 000000000046 .. 000000000034 is 36
Should be ... 000000000046 .. 000000000034 is 34
Should be ... 000000000013 .. 000000000025 is 13
Should be ... 000000000013 .. 000000000025 is 15
Should be ... 000000000013 .. 000000000025 is 17
Should be ... 000000000013 .. 000000000025 is 21
Should be ... 000000000013 .. 000000000025 is 23
Should be ... 000000000013 .. 000000000025 is 25
Should be ... 'This ' is 'T'
Should be ... 'This ' is 'h'
Should be ... 'This ' is 'i'
Should be ... 'This ' is 's'
Should be ... 'This ' is ' '
Should be ... 'gfedc' is 'g'
Should be ... 'gfedc' is 'f'
Should be ... 'gfedc' is 'e'
Should be ... 'gfedc' is 'd'
Should be ... 'gfedc' is 'c'
Should be ... '000I' is '00000I'
Should be ... '000B' is '00000B'
Should be ... '000M' is '00000M'
Should be ... 42 is 42
Should be ... 616,42,5,4,3,2,1 is 616
Should be ... 616,42,5,4,3,2,1 is 42
Should be ... 616,42,5,4,3,2,1 is 5
Should be ... 616,42,5,4,3,2,1 is 4
Should be ... 616,42,5,4,3,2,1 is 3
Should be ... 616,42,5,4,3,2,1 is 2
Should be ... 616,42,5,4,3,2,1 is 1
Should be ... 100, 200, ..., 700, 7777 is 100
Should be ... 100, 200, ..., 700, 7777 is 200
Should be ... 100, 200, ..., 700, 7777 is 300
Should be ... 100, 200, ..., 700, 7777 is 400
Should be ... 100, 200, ..., 700, 7777 is 500
Should be ... 100, 200, ..., 700, 7777 is 600
Should be ... 100, 200, ..., 700, 7777 is 700
Should be ... 100, 200, ..., 700, 7777 is 7777
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 400000000001
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 400000000002
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 400000000003
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 0
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 1
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 2
Should be ... o-1, o-2, o-3, 0, 1, 2, 3 is 3
Should be ... 100 .. 700 is 100
Should be ... 100 .. 700 is 200
Should be ... 100 .. 700 is 300
Should be ... 100 .. 700 is 400
Should be ... 100 .. 700 is 500
Should be ... 100 .. 700 is 600
Should be ... 100 .. 700 is 700
Should be ... -1, 0, o13 is 400000000001
Should be ... -1, 0, o13 is 0
Should be ... -1, 0, o13 is 13
Should be ... 012, 345, o-255, 670 is 12
Should be ... 012, 345, o-255, 670 is 345
Should be ... 012, 345, o-255, 670 is 400000000255
Should be ... 012, 345, o-255, 670 is 670
That's all folks!!! (TAM$_main)
   3.1415927   2.7182818   8.5397341
This is from TAM$_print ...
   3.1415927   2.7182818   -123.4567
TestIndirect: magicM: 000013 000043 000004 000020

Hallooooo from TIND$_main...
main$Data_1 a: 12345654321 (Should be 12345654321)
main$Data_1 b: 666 (Should be 666)
main$Data_1 c: 49510627 (Should be 49510627 [Thanks Lexi!])
main$Data_1 d: 982187 (Should be 982187 [Thanks Lydia!])
main$magicM 1: 3141592653 (Should be 3141592653)
main$magicM 2: 412345654321 (Should be 412345654321)
Now leaving TIND$_main ...
This is TINC$_main_C...
_main_C:1: magicC = 31415926536 (Should be 31415926536)
_main_C:1: t1 2718271828 (addr:Even:000010 000043 Odd:000230 000000)
_main_C:2: d1 236776060576 265223074736 (addr:Even:000010 000043 Odd:000246 000000)
_main_C:3: addr t2 Even:000010 000043 Odd:000231 000000)
_main_C:4: filling t2 with 13 values from 30..42 : 30 31 32 33 34 35 36 37 38 39 40 41 42 
_main_C:5: addr d2 Even:000010 000043 Odd:000250 000000)
   8.5397342
   26.828366
   84.283798
   264.78536
   831.84775
   2613.3268
   8210.0082
   25792.501
   81029.533
   254561.79
   799729.43
   2512424.1
   7893013.1
    24796632
    77900917
2.4473295e+08

_printTemps:1: t1 2718271828 (Should be: 2718271828)
_printTemps:2: d1 236776060576 265223074736 (Should be: 236776060576 265223074736)
_printTemps:3: t2(0)=30
_printTemps:3: t2(1)=31
_printTemps:3: t2(2)=32
_printTemps:3: t2(3)=33
_printTemps:3: t2(4)=34
_printTemps:3: t2(5)=35
_printTemps:3: t2(6)=36
_printTemps:3: t2(7)=37
_printTemps:3: t2(8)=38
_printTemps:3: t2(9)=39
_printTemps:3: t2(10)=40
_printTemps:3: t2(11)=41
_printTemps:3: t2(12)=42
Now leaving TINC$_main_C ...
T-H-A-T-S all folks (from 0|main) !!! 

cpuCycles = 118430
TestIndirect-29> g 1 

DIS instruction, IC: main|145 (00000145) (000000616000)
Goodbye
