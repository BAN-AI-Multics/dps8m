000000 xxxx 000025701000     call    ioa (m1)
000001 xxxx 000004710000
000002 xxxx 000000000000
000003 xxxx 000005000000
000004 xxxx 000000616000         DIS
000005 xxxx 027110145154     acc         /Hello from dps8m!!!!!\r\n/ 
000006 xxxx 154157040146  
000007 xxxx 162157155040  
000010 xxxx 144160163070  
000011 xxxx 155041041041  
000012 xxxx 041041015012  
000013 xxxx 000016710000 crlf:	save
000014 xxxx 000000000000
000015 xxxx 000014630000
000016 xxxx 000014754000
000017 xxxx 000014741000
000020 xxxx 000343235000         lda     =012
000021 xxxx 000001420400         emCall  1
000022 xxxx 000344235000         lda     =015
000023 xxxx 000001420400         emcall      1
000024 xxxx 000015710000         return  crlf
000025 xxxx 000034710000 ioa:    save    2, 4, 5, 6
000026 xxxx 000000000000
000027 xxxx 000000222003
000030 xxxx 000001224003
000031 xxxx 000002225003
000032 xxxx 000003226003
000033 xxxx 000026630000
000034 xxxx 000026754000
000035 xxxx 000026741000
000036 xxxx 000027742000
000037 xxxx 000030744000
000040 xxxx 000031745000
000041 xxxx 000032746000
000042 xxxx 000002624031 ioa1:   eax4    2, 1*   " 1st arg is control string
000043 xxxx 000003625011         eax5    3, 1    " next arg is the 1st of the numeric args. x5 points to next argument
000044 xxxx 000000626015         eax6    0, x5
000045 xxxx 000041235007         lda     041, dl " make a blank tallyb word .....
000046 xxxx 000063755000         sta     i29
000047 xxxx 000000235014     	lda     0, x4   " get 1st data word into A
000050 xxxx 000033731000         ars     27      " determine word count
000051 xxxx 000006735000     	als     6       " count to upper word of tally
000052 xxxx 000063255000     	orsa    i29
000053 xxxx 000000626014     	eax6    0, x4   " address of string into X6
000054 xxxx 000063746000     	stx6    i29     " address to upper word of tally
000055 xxxx 000063235052 inext:  lda     i29, sc
000056 xxxx 000136115007         cmpa    =1a^, dl
000057 xxxx 000064600000         tze     iernot      " if so, go process it
000060 xxxx 000001420400 out1:  	emCall  1
000061 xxxx 000055607000     	ttf     inext
000062 xxxx 000027710000         return  ioa
000063 xxxx 000000000041 i29:	tallyb  0, 0, 1 
000064 xxxx 000063235052 iernot: lda     i29, sc     " get next char ...
000065 xxxx 000136115007         cmpa    =1a^, dl    " is it another "^"?
000066 xxxx 000104600000         tze     i21         " No, just print it ...
000067 xxxx 000167115007         cmpa    =1aw, dl    " is it a "w"?
000070 xxxx 000106600000         tze     idoW        " do full word octal
000071 xxxx 000157115007         cmpa    =1ao, dl    " is it an "o"?
000072 xxxx 000134600000         tze     idoO        " print zero suppressed octal
000073 xxxx 000156115007         cmpa    =1an, dl    " is it a "n"?
000074 xxxx 000157600000         tze     idoN        " octal w/ no spaces inserted
000075 xxxx 000144115007         cmpa    =1ad, dl    " is it a "d"?
000076 xxxx 000206600000         tze     idoD        " decimal
000077 xxxx 000141115007         cmpa    =1aa, dl    " is it a ^a?
000100 xxxx 000214600000         tze     idoA        " 4 char ascii display
000101 xxxx 000147115007         cmpa    =1ag, dl    " is it a ^g?
000102 xxxx 000225600000         tze     idoG        " 6 char GE BCD display
000103 xxxx 000060710000         tra     out1        " unknown just print it....
000104 xxxx 000001420400 i21:    emCall  1           " output A to console
000105 xxxx 000055710000         tra     inext
000106 xxxx 000000235035 idoW:   lda     0, 5*       " ^w - full-word octal xxxxxx xxxxxx
000107 xxxx 000303702000         tsx2    octwd
000110 xxxx 000204757000         staq    ioaSafe     " bcd in AQ
000111 xxxx 000044773000         lrl     36          " A => Q
000112 xxxx 000006622000         eax2    6
000113 xxxx 000000235007 idoW2:  lda     =0, dl
000114 xxxx 000006737000         lls     6
000115 xxxx 000002420400         emCall  2           " output GE code char to console
000116 xxxx 777777622012         eax2    -1, 2
000117 xxxx 000113601000         tnz     idoW2
000120 xxxx 000204237000         ldaq    ioaSafe
000121 xxxx 000000235007         lda     =0, dl      " 0 => A
000122 xxxx 000020235007         lda     =020 ,dl     " bcd ' ' => A
000123 xxxx 000002420400         emcall  2
000124 xxxx 000006622000         eax2    6
000125 xxxx 000000235007 idoW3:  lda     =0,dl
000126 xxxx 000006737000         lls     6
000127 xxxx 000002420400         emCall  2
000130 xxxx 777777622012         eax2    -1, 2
000131 xxxx 000125601000         tnz     idoW3
000132 xxxx 000001065003         adx5    1,du
000133 xxxx 000055710000         tra     inext
000134 xxxx 000000235035 idoO:   lda     0, 5*           " ^o - Zero-suppressed octal
000135 xxxx 000303702000         tsx2    octwd
000136 xxxx 000204757000         staq    ioaSafe         " bcd in AQ
000137 xxxx 000155235000         lda     idOTly
000140 xxxx 000156755000         sta     idOT
000141 xxxx 000156235052 idO1:   lda     idOT, sc        " get char into A
000142 xxxx 000000115007         cmpa    =0, dl          " a zero?
000143 xxxx 000151601000         tnz     idONZ + 1       " nope
000144 xxxx 000141607000         ttf     idO1            " Yes, a Zero. Go for more
000145 xxxx 000002420400         emCall  2               " output a single 0
000146 xxxx 000001065003         adx5    1,du
000147 xxxx 000055710000         tra     inext
000150 xxxx 000156235052 idONZ:  lda     idOT, sc        " get char into A
000151 xxxx 000002420400         emCall  2
000152 xxxx 000150607000         ttf     idONZ           " Yes, a Zero. Go for more
000153 xxxx 000001065003         adx5    1,du
000154 xxxx 000055710000         tra     inext
000155 xxxx 000204001400 idOTly: tally   ioaSafe, 12, 0 
000156 xxxx 000000000000 idOT:   bss     1
000157 xxxx 000000235035 idoN:   lda     0, 5*       " ^n - octal w/ no spaces inserted
000160 xxxx 000303702000         tsx2    octwd
000161 xxxx 000204757000         staq    ioaSafe     " bcd in AQ
000162 xxxx 000044773000         lrl     36          " A => Q
000163 xxxx 000006622000         eax2    6
000164 xxxx 000000235007 idoN2:  lda     =0,dl
000165 xxxx 000006737000         lls     6
000166 xxxx 000002420400         emCall  2           " output GE code char to console
000167 xxxx 777777622012         eax2    -1, 2
000170 xxxx 000164601000         tnz     idoN2
000171 xxxx 000204237000         ldaq    ioaSafe
000172 xxxx 000000235007         lda     =0, dl      " 0 => A
000173 xxxx 000006622000         eax2    6
000174 xxxx 000000235007 idoN3:  lda     =0, dl
000175 xxxx 000006737000         lls     6
000176 xxxx 000002420400         emCall  2
000177 xxxx 777777622012         eax2    -1, 2
000200 xxxx 000174601000         tnz     idoN3
000201 xxxx 000001065003         adx5    1,du
000202 xxxx 000055710000         tra     inext
000204 xxxx 000000000000 ioaSafe:  bss 2
000206 xxxx 000000236035 idoD:   ldq     0, 5*       " ^d
000207 xxxx 000236701000         call    toDec
000210 xxxx 000212710000
000211 xxxx 000000000000
000212 xxxx 000001065003         adx5    1,du
000213 xxxx 000055710000         tra     inext
000214 xxxx 000000236035 idoA:   ldq     0, 5*      " ^a (4 ascii chars into Q)
000215 xxxx 000004622000         eax2    4
000216 xxxx 000000235007 idoA2:  lda     =0,dl
000217 xxxx 000011737000         lls     9
000220 xxxx 000001420400         emCall  1
000221 xxxx 777777622012         eax2    -1, 2
000222 xxxx 000216601000         tnz     idoA2
000223 xxxx 000001065003         adx5    1,du        " into next argument
000224 xxxx 000055710000         tra     inext
000225 xxxx 000000236035 idoG:   ldq     0, 5*        " ^g (6 GE BCD chars into Q)
000226 xxxx 000006622000         eax2    6
000227 xxxx 000000235007 idoG2:  lda     =0,dl
000230 xxxx 000006737000         lls     6
000231 xxxx 000002420400         emCall  2
000232 xxxx 777777622012         eax2    -1, 2
000233 xxxx 000227601000         tnz     idoG2
000234 xxxx 000001065003         adx5    1,du        " into next argument
000235 xxxx 000055710000         tra     inext
000236 xxxx 000241710000 toDec:  save    "2,3,4,5,6,7
000237 xxxx 000000000000
000240 xxxx 000237630000
000241 xxxx 000237754000
000242 xxxx 000237741000
000243 xxxx 000345116000         cmpq    =-34359738368       " the weird one?
000244 xxxx 000250601000         tnz     toDec2
000245 xxxx 000302235000         lda     decMTly             " just print it and be done with it
000246 xxxx 000276755000         sta     decTly
000247 xxxx 000266710000         tra     toDec1
000250 xxxx 000272756000 toDec2: stq     decNo
000251 xxxx 000000116007         cmpq    =0,dl       " Q < 0?
000252 xxxx 000254605000         tpl     toDec0      " No
000253 xxxx 000272336000         lcq     decNo       " -decNo => Q
000254 xxxx 000012506007 toDec0: div     =10,dl      " divide Q by 10, remainder in A
000255 xxxx 000060075007         ada     =1a0,dl     " add ascii '0' (=1A0) to A
000256 xxxx 000276755045         sta     decTly, scr " start writing characters backwards
000257 xxxx 000000076007         adq     =0,dl       " set flags to test if Q == 0
000260 xxxx 000254601000         tnz     toDec0      " if Q == 0 then we're essentially done with conversion
000261 xxxx 000272235000         lda     decNo
000262 xxxx 000000115007         cmpa    =0,dl
000263 xxxx 000266605000         tpl     toDec1
000264 xxxx 000055235007         lda     =1a-,dl     " (-) => A
000265 xxxx 000276755045         sta     decTly, scr " write (-) sign
000266 xxxx 000276235052 toDec1: lda     decTly, sc
000267 xxxx 000001420400         emCall  1
000270 xxxx 000266607000         ttf     toDec1
000271 xxxx 000240710000         return  toDec
000272 xxxx 000000000000 decNo:  dec     0
000273 xxxx 000000000000 decBuf: bss     3
000276 xxxx 000275000040 decTly: tallyb  decBuf+2, , 0 
000277 xxxx 055063064063 decMM:  aci     "-34359738368"  " -2^^35 
000300 xxxx 065071067063  
000301 xxxx 070063066070  
000302 xxxx 000277001440 decMTly:tallyb  decMM, 12, 0 
000303 xxxx 000320742000 octwd:	stx2	octx2
000304 xxxx 000006622000 	eax2	6
000305 xxxx 000003736000 	qls     3
000306 xxxx 000003777000 	llr     3
000307 xxxx 777777622012 	eax2	-1,2
000310 xxxx 000305605400 	tpnz	*-3
000311 xxxx 000342756000 	stq     octtemp
000312 xxxx 000006622000 	eax2	6
000313 xxxx 000003736000 	qls     3
000314 xxxx 000003777000 	llr     3
000315 xxxx 777777622012 	eax2	-1,2
000316 xxxx 000313605400 	tpnz	*-3
000317 xxxx 000342235000 	lda     octtemp
000320 xxxx 000320622000 octx2:	eax2	*
000321 xxxx 000000710012 	tra     0,2
000322 xxxx 000340742000 hexwd:	stx2	hexx2
000323 xxxx 000044773000 	lrl     36          "shift to Q
000324 xxxx 000006622000 	eax2	6           "	process 6 characters
000325 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
000326 xxxx 000004737000 	lls     4           "shift in 4 bits
000327 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
000330 xxxx 000332604400 	tmoz	*+2
000331 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
000332 xxxx 000006773000 	lrl     6
000333 xxxx 000342235000 	lda     octtemp		"get temporary
000334 xxxx 000006737000 	lls     6           "insert new character
000335 xxxx 000342755000 	sta     octtemp		"and store
000336 xxxx 777777622012 	eax2	-1,2		"decrement index
000337 xxxx 000325605400 	tpnz	hexloop
000340 xxxx 000340622000 hexx2:	eax2	*
000341 xxxx 000000710012 	tra     0,2		"return to caller
000342 xxxx 000000000000 octtemp:	oct	0
000343 xxxx 000000000012 lit Lit000020 (=012)
000344 xxxx 000000000015 lit Lit000022 (=015)
000345 xxxx 400000000000 lit Lit000243 (=-34359738368)
