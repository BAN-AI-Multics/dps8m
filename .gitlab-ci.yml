# SPDX-License-Identifier: FSFAP
# scspell-id: 5a5d276b-f778-11ec-bbe8-80ee73e9b8e7

############################################################################
#
# Copyright (c) 2018-2019 Charles Anthony <charles.unix.pro@gmail.com>
# Copyright (c) 2019-2020 Eric Swenson <eric@swenson.org>
# Copyright (c) 2021 Jeffrey H. Johnson <trnsz@pobox.com>
# Copyright (c) 2021-2022 The DPS8M Development Team
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered "AS-IS",
# without any warranty.
#
############################################################################

.scriptAlma9Setup: &scriptAlma9Setup |
    # *scriptAlma9Setup - Update AlmaLinux 9 (RHEL9 binary compatible) and install required tools ...
    echo -e "section_start:`date +%s`:alma9install_section[collapsed=true]\r\e[0K\033[0;36mSetting up AlmaLinux 9 ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    dnf -y --refresh --allowerasing --best update || dnf -y --refresh --allowerasing --nobest update
    dnf -y --allowerasing --best install epel-release || dnf -y --allowerasing --nobest epel-release
    curl -fsSL https://repo.almalinux.org/almalinux/9/devel/almalinux-devel.repo -o /etc/yum.repos.d/almalinux-devel.repo || curl -fsSL https://repo.almalinux.org/almalinux/9/devel/almalinux-devel.repo -o /etc/yum.repos.d/almalinux-devel.repo
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-devel.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-highavailability.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-plus.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-rt.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-crb.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-nfv.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-saphana.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-sap.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-extras.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-appstream.repo || true
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-resilientstorage.repo || true
    dnf -y --refresh --allowerasing --best update || dnf -y --refresh --allowerasing --nobest update
    dnf -y install rpmconf || dnf -y install rpmconf
    yes | rpmconf -a -u use_maintainer || true
    dnf -y --refresh --allowerasing --best update || dnf -y --refresh --allowerasing --nobest update
    echo -e "section_end:`date +%s`:alma9install_section\r\e[0K" || true

############################################################################

.scriptAlpineSetup: &scriptAlpineSetup |
    # *scriptAlpineSetup - Update Alpine Linux and install required tools ...
    echo -e "section_start:`date +%s`:alpinesetup_section[collapsed=true]\r\e[0K\033[0;36mSetting up Alpine Linux ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Running apk update ..."
    apk update || apk update
    echo "Running apk upgrade ..."
    apk upgrade || apk upgrade
    echo "Installing software ..."
    export ARGS="libc-dev linux-headers musl-dev gcc g++ llvm llvm-dev llvm-static clang clang-libs clang-dev git unzip zip curl wget sed tar gawk file bash coreutils make ctags lzip gzip libuv-dev libuv-static psmisc grep moreutils gnupg libtool util-linux pigz autoconf autoconf-archive bzip2 ccache popt-dev automake"; apk add ${ARGS:?} || apk add ${ARGS:?}
    ln -fs "$(command -v bash)" "/bin/sh"
    echo -e "section_end:`date +%s`:alpinesetup_section\r\e[0K" || true

############################################################################

.scriptAptInstallLibuv1: &scriptAptInstallLibuv1 |
    # *scriptAptInstallLibuv1 - Install the libuv1-dev package using apt-get
    echo -e "section_start:`date +%s`:aptinstalllibuv1_section[collapsed=true]\r\e[0K\033[0;36mInstalling libuv1-dev ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Installing libuv1-dev ..."
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq libuv1-dev || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq libuv1-dev
    echo -e "section_end:`date +%s`:aptinstalllibuv1_section\r\e[0K" || true

############################################################################

.scriptAptSetup: &scriptAptSetup |
    # *scriptAptSetup - Update and install required tools using apt-get ...
    echo -e "section_start:`date +%s`:aptgetinstall_section[collapsed=true]\r\e[0K\033[0;36mSetting up system ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Running apt-get update ..."
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update -y -qq
    echo "Installing software ..."
    export ARGS="gawk moreutils apt-utils gnupg2 bash curl wget git lsb-release software-properties-common time"; env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?} || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?}
    echo "Running apt-get upgrade ..."
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq
    echo "Running apt-get dist-upgrade ..."
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq
    echo "Installing additional software ..."
    export ARGS="lzip bash wget gcc libtool unzip autoconf-archive util-linux psmisc clang zip pigz make"; env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?} || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?}
    echo -e "section_end:`date +%s`:aptgetinstall_section\r\e[0K" || true

############################################################################

.scriptBuildInfo: &scriptBuildInfo |
    # *scriptBuildInfo - Show information on completed build
    echo -e "section_start:`date +%s`:buildinfo_section[collapsed=true]\r\e[0K\033[0;36mBuild Information ...\033[0m" || true
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && file ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && ldd ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe && file ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && file ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && ldd ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe && file ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && file ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && ldd ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe && file ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool && file ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool && ldd ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool.exe && file ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/unifdef/unifdef && file ${CI_PROJECT_DIR:?}/src/unifdef/unifdef 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/unifdef/unifdef && ldd ${CI_PROJECT_DIR:?}/src/unifdef/unifdef 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/unifdef/unifdef.exe && file ${CI_PROJECT_DIR:?}/src/unifdef/unifdef.exe 2> /dev/null || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:buildinfo_section\r\e[0K" || true

############################################################################

.scriptBuildlibbacktrace: &scriptBuildlibbacktrace |
    # *scriptBuildlibbacktrace - Build static libbacktrace from git master ...
    echo -e "section_start:`date +%s`:buildlibbacktrace_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libbacktrace library ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libbacktrace from GitHub ..."
    wget -nv https://github.com/ianlancetaylor/libbacktrace/archive/refs/heads/master.tar.gz
    echo "Preparing libbacktrace ..."
    tar zxvf master.tar.gz && cd libbacktrace-master && autoreconf -vfi
    echo "Configuring libbacktrace ..."
    env CFLAGS="-fPIE" sh ./configure --enable-static --disable-shared --disable-werror
    echo "Compiling libbacktrace ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    ldconfig || true
    echo -e "section_end:`date +%s`:buildlibbacktrace_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvFCygwin64: &scriptBuildlibuvFCygwin64 |
    # *scriptBuildlibuvFCygwin64 - Build static libuv from git with Fedora Cygwin64 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvfedoracygwin64_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with Fedora Cygwin64 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Configuring libuv ..."
    cygwin64-configure --disable-shared --enable-static --disable-dependency-tracking
    echo "Compiling libuv ..."
    cygwin64-make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && cygwin64-make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvfedoracygwin64_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvLLVMMGW64-aarch64: &scriptBuildlibuvLLVMMGW64-aarch64 |
    # *scriptBuildlibuvLLVMMGW64-aarch64 - Build static libuv from git with LLVM-MinGW-Aarch64 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvllvmmgwaarch64_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with LLVM-MinGW-Aarch64 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Configuring libuv ..."
    ./configure --disable-shared --enable-static --host=aarch64-w64-mingw32 --disable-dependency-tracking
    echo "Compiling libuv ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvllvmmgwaarch64_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvLLVMMGW64-armv7: &scriptBuildlibuvLLVMMGW64-armv7 |
    # *scriptBuildlibuvLLVMMGW64-armv7 - Build static libuv from git with LLVM-MinGW-ARMv7 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvllvmmgwarmv7_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with LLVM-MinGW-ARMv7 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Configuring libuv ..."
    ./configure --disable-shared --enable-static --host=armv7-w64-mingw32 --disable-dependency-tracking
    echo "Compiling libuv ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvllvmmgwarmv7_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvLLVMMGW64-i686: &scriptBuildlibuvLLVMMGW64-i686 |
    # *scriptBuildlibuvLLVMMGW64-i686 - Build static libuv from git with LLVM-MinGW-i686 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvllvmmgwi686_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with LLVM-MinGW-i686 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Patching libuv for MinGW32 ..."
    (curl -fsSL https://gist.githubusercontent.com/johnsonjh/0ee49cbafdc918cb8023b9ba8a041939/raw 2> /dev/null || curl -fsSL https://gist.githubusercontent.com/johnsonjh/0ee49cbafdc918cb8023b9ba8a041939/raw 2> /dev/null) | patch -p1
    echo "Configuring libuv ..."
    ./configure --disable-shared --enable-static --host=i686-w64-mingw32 --disable-dependency-tracking
    echo "Compiling libuv ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvllvmmgwi686_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvLLVMMGW64-x86_64: &scriptBuildlibuvLLVMMGW64-x86_64 |
    # *scriptBuildlibuvLLVMMGW64-x86_64 - Build static libuv from git with LLVM-MinGW-x86_64 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvllvmmgwx8664_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with LLVM-MinGW-x86_64 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Configuring libuv ..."
    ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 --disable-dependency-tracking
    echo "Compiling libuv ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvllvmmgwx8664_section\r\e[0K" || true

############################################################################

.scriptBuildlibuvMGW64: &scriptBuildlibuvMGW64 |
    # *scriptBuildlibuvMGW64 - Build static libuv from git with mingw64 cross-compiler ...
    echo -e "section_start:`date +%s`:buildlibuvmingw64c_section[collapsed=true]\r\e[0K\033[0;36mBuilding static libuv with mingw64 cross-compiler ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Getting libuv from GitHub ..."
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    echo "Preparing libuv ..."
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    echo "Configuring libuv ..."
    ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 --disable-dependency-tracking
    echo "Compiling libuv ..."
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") && make install && cd ..
    echo -e "section_end:`date +%s`:buildlibuvmingw64c_section\r\e[0K" || true

############################################################################

.scriptCommon: &scriptCommon |
    # *scriptCommon - Show common CI/CD configuration information
    echo -e "section_start:`date +%s`:common_section[collapsed=false]\r\e[0K\033[0;36mCommon Information ...\033[0m" || true
    echo "Project Name              : ${CI_PROJECT_TITLE:-Unknown}"
    echo "Project Git Commit        : ${CI_COMMIT_SHA:-Unknown}"
    echo "Project Git Branch        : ${CI_COMMIT_BRANCH:-Unknown}"
    echo "GitLab CI User Details    : ${GITLAB_USER_LOGIN:-Unknown} - ${GITLAB_USER_NAME:-Unknown} (${GITLAB_USER_ID:-Unknown}) ${GITLAB_USER_EMAIL:-}"
    echo "GitLab CI Job Name        : ${CI_JOB_NAME:-Unknown}"
    echo "GitLab CI Job ID          : ${CI_JOB_ID:-Unknown}"
    echo "GitLab CI Job Stage       : ${CI_JOB_STAGE:-Unknown}"
    echo "GitLab CI Runner Details  : ${CI_RUNNER_VERSION:-Unknown} (${CI_RUNNER_REVISION:-Unknown})"
    git status || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:common_section\r\e[0K" || true

############################################################################

.scriptCompressArtifacts: &scriptCompressArtifacts |
    # *scriptCompressArtifacts - Compress build artifacts
    echo -e "section_start:`date +%s`:compress_section[collapsed=true]\r\e[0K\033[0;36mCompress Artifacts ...\033[0m" || true
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && lzip -9v ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && lzip -9v ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && lzip -9v ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool && lzip -9v ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/unifdef/unifdef && lzip -9v ${CI_PROJECT_DIR:?}/src/unifdef/unifdef 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt && lzip -9v ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe  2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/vmpctool/vmpctool.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/unifdef/unifdef.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/unifdef/unifdef.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/cygwin1.dll && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/cygwin1.dll 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/libwinpthread-1.dll && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/libwinpthread-1.dll 2> /dev/null || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:compress_section\r\e[0K" || true

############################################################################

.scriptDnfSetup: &scriptDnfSetup |
    # *scriptDnfSetup - Update system and install required tools using dnf on RH-based systems ...
    echo -e "section_start:`date +%s`:dnfuinstall_section[collapsed=true]\r\e[0K\033[0;36mSetting up system ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Updating system ..."
    dnf -y --refresh --allowerasing --best update || dnf -y --refresh --allowerasing --nobest update
    echo "Installing software ..."
    export ARGS="ccache lzip libuv-devel libtool unzip autoconf autoconf-archive util-linux psmisc zip pigz make gnupg2 bash curl wget git time gcc clang"; dnf -y --allowerasing --best install ${ARGS:?} || dnf -y --allowerasing --nobest install ${ARGS:?}
    echo -e "section_end:`date +%s`:dnfuinstall_section\r\e[0K" || true

############################################################################

.scriptDPS8Mods: &scriptDPS8Mods |
    # *scriptDPS8Mods - Configure build for CI/CD environment ...
    echo -e "section_start:`date +%s`:dps8mods_section[collapsed=true]\r\e[0K\033[0;36mConfigure build system ...\033[0m" || true
    echo -n "Setting Build string ... "
    echo "The DPS8M Development Team - Build ${CI_JOB_ID:-}" 2> /dev/null | tee .builder.txt 2> /dev/null || true > /dev/null 2>&1
    echo ""
    echo -e "section_end:`date +%s`:dps8mods_section\r\e[0K" || true

############################################################################

.scriptExtraInfo: &scriptExtraInfo |
    # *scriptExtraInfo - Show extra system information ...
    echo -e "section_start:`date +%s`:extrainfo_section[collapsed=false]\r\e[0K\033[0;36mExtra system information ...\033[0m" || true
    echo -n "Default CFLAGS   : "; echo -n "${CFLAGS:-}" 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "Default CXXFLAGS : "; echo -n "${CXXFLAGS:-}" 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "Default LDFLAGS  : "; echo -n "${LDFLAGS:-}" 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "uname -a         : "; uname -a 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "oslevel -s       : "; oslevel -s 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo    "prtconf          : "; prtconf 2> /dev/null | grep -E '(^Processor|CPU|Kernel|Number)' 2> /dev/null | grep -v Clock 2> /dev/null || true > /dev/null 2>&1
    echo    "lsb_release      : "; lsb_release -d 2> /dev/null || true > /dev/null 2>&1
    echo    "cat /etc/*elease : "; cat /etc/*elease 2> /dev/null || true > /dev/null 2>&1
    echo -n "uptime           : "; uptime 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo    "df               : "; df . 2> /dev/null || true > /dev/null 2>&1
    echo    "free             : "; free 2> /dev/null || true > /dev/null 2>&1
    echo    "git status       : "; git status 2> /dev/null || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:extrainfo_section\r\e[0K" || true

############################################################################

.scriptInstallDnfCoprCygwin: &scriptInstallDnfCoprCygwin |
    # *scriptInstallDnfCoprCygwin - Enable and install Fedora Cygwin64 from Fedora Copr ...
    echo -e "section_start:`date +%s`:coprcygwinstall_section[collapsed=true]\r\e[0K\033[0;36mInstalling Fedora Cygwin64 ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Installing DNF Copr plugins ..."
    dnf -y --best install 'dnf-command(copr)' || dnf -y --nobest install 'dnf-command(copr)'
    echo "Enabling Cygwin repo ..."
    dnf -y copr enable yselkowitz/cygwin || dnf -y copr enable yselkowitz/cygwin
    echo "Installing Cygwin software ..."
    dnf --best install -y cygport cygwin64-binutils cygwin64-w32api-headers cygwin64-w32api-runtime cygwin64-libltdl cygwin64-cpp cygwin64-gcc cygwin64-libtool cygwin64-filesystem cygwin64 || dnf --skip-broken --nobest install -y cygport cygwin64-binutils cygwin64-w32api-headers cygwin64-w32api-runtime cygwin64-libltdl cygwin64-cpp cygwin64-gcc cygwin64-libtool cygwin64-filesystem cygwin64 cygwin64
    echo -e "section_end:`date +%s`:coprcygwinstall_section\r\e[0K" || true

############################################################################

.scriptInstallNfpm: &scriptInstallNfpm |
    # *scriptInstallNfpm - NFPM placeholder
    true

############################################################################

.scriptOUL8Setup: &scriptOUL8Setup |
    # *scriptOUL8Setup - Update Oracle Unbreakable Linux 8 and install required tools ...
    echo -e "section_start:`date +%s`:oracleinstall_section[collapsed=true]\r\e[0K\033[0;36mSetting up Oracle Linux 8 ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Installing latest EPEL-8 release ..."
    dnf -y --refresh --allowerasing --best install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm || dnf -y --refresh --allowerasing --nobest install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    echo "Enabling Oracle Linux 8 CodeReady Builder repo ..."
    echo '[OL8_codeready_builder]' > /etc/yum.repos.d/codeready_builder.repo
    echo 'name=OL8_codeready_builder' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'baseurl=https://yum.oracle.com/repo/OracleLinux/OL8/codeready/builder/x86_64/' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'enabled=1' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'gpgcheck=0' >> /etc/yum.repos.d/codeready_builder.repo
    echo -e "section_end:`date +%s`:oracleinstall_section\r\e[0K" || true

############################################################################

.scriptSanity: &scriptSanity |
    # *scriptSanity - Ensure commit is on a branch and valid working directory
    echo -e "section_start:`date +%s`:sanity_section[collapsed=true]\r\e[0K\033[0;36mSanity Check ...\033[0m" || true
    echo "Checking that a branch exists ..."
    echo "${CI_COMMIT_BRANCH:?}" > /dev/null 2>&1
    echo "Checking for a valid working directory ..."
    IPWD="$(pwd -P)" && export IPWD && if [ "X${CI_PROJECT_DIR:?}X" != "X${IPWD:?}X" ]; then exit 1; fi
    echo "Checking out branch \"${CI_COMMIT_BRANCH:?}\" with git ..."
    git checkout -b "${CI_COMMIT_BRANCH:?}"
    echo -e "section_end:`date +%s`:sanity_section\r\e[0K" || true

############################################################################

.scriptVoidSetup: &scriptVoidSetup |
    # *scriptVoidSetup - Update Void Linux and install required tools ...
    echo -e "section_start:`date +%s`:voidlsetup_section[collapsed=true]\r\e[0K\033[0;36mSetting up Void Linux ...\033[0m" || true
    echo "Checking for Docker ..."
    test -f /.dockerenv || exit 1
    echo "Updating xbps ..."
    xbps-install -Suy xbps || xbps-install -Suy xbps
    echo "Updating system ..."
    xbps-install -Suy || xbps-install -Suy
    echo "Installing software ..."
    export ARGS="automake m4 libtool pkg-config mksh gcc clang llvm clang-tools-extra git unzip zip curl wget sed tar gawk file bash coreutils make ctags lzip gzip libuv-devel psmisc grep moreutils gnupg libtool util-linux pigz autoconf autoconf-archive bzip2 ccache popt-devel"; xbps-install -Suy ${ARGS:?} || xbps-install -Suy ${ARGS:?}
    echo -e "section_end:`date +%s`:voidlsetup_section\r\e[0K" || true

############################################################################

.scriptVerifyVersion: &scriptVerifyVersion |
    # *scriptVerifyVersion - Smoke-test ...
    ./src/dps8/dps8 --version | grep 'imulator'
    echo "SHOW VERSION" | ./src/dps8/dps8 | grep 'imulator '
    printf '%s\n' "SHOW BUILDINFO" "ECHO" "SHOW VERSION" | ./src/dps8/dps8

############################################################################
# Workflow

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /-noci$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "chat"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external"
      when: never
    - when: always

############################################################################
# CI/CD Stages

stages:
  - build
  - cmb_test
  - test
  - src_test
  - ci_test
  - docs
  - deploy

############################################################################
# Jobs

Linux/x86_64, AlmaLinux 9, Clang, GCC:
  image: almalinux:9
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="AlmaLinuxEL9x64" && export DTIMESTAMP="$(stat -c "%Y" /etc/passwd)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptAlma9Setup
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Alpine Edge, Clang, GCC:
  image:
    name: alpine:edge
    entrypoint: [ '/bin/sh', '-c', 'sed -i "s/https/http/g" /etc/apk/repositories; apk update; apk add bash; apk add bash && ln -snf /bin/bash /bin/sh && exec /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptAlpineSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - env LDFLAGS=-static make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-x86.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-linux-x86.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-x86.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/powerpc64el, IBM Advance Toolchain 16:
  stage: build
  tags:
    - Linux
    - Cross-AT16
    - Linux-Shell
  script:
    - export GLCICD_JOB="crossAT16job" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - export DISTDIR="dps8m-master"
    - *scriptExtraInfo
    - *scriptDPS8Mods
    - env LOCAL_CONFOPTS="--host=powerpc64le-linux-gnu" CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power8 -mtune=power8 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") libuvrel --output-sync
    - env CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power8 -mtune=power8 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-ate.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-linux-ate.tar
    - rm -rf "src/${DISTDIR:?}"
    - gmake distclean
    - *scriptDPS8Mods
    - env LOCAL_CONFOPTS="--host=powerpc64le-linux-gnu" CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power9 -mtune=power9 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") libuvrel --output-sync
    - env CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power9 -mtune=power9 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-atn.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-linux-atn.tar
    - rm -rf "src/${DISTDIR:?}"
    - gmake distclean
    - *scriptDPS8Mods
    - env LOCAL_CONFOPTS="--host=powerpc64le-linux-gnu" CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power10 -mtune=power10 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") libuvrel --output-sync
    - env CC="/opt/at16.0/bin/powerpc64le-linux-gnu-gcc" CFLAGS="-DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power10 -mtune=power10 -fsigned-char -flto" gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-att.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-linux-att.tar
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-ate.tar.gz
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-atn.tar.gz
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-att.tar.gz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Windows/x86_64, Cygwin64-GCC:
  image: fedora:latest
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="CYGWIN64GCC" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptDnfSetup
    - *scriptInstallDnfCoprCygwin
    - *scriptBuildlibuvFCygwin64
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - cygwin64-make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - *scriptBuildInfo
    - cp -vf /usr/x86_64-pc-cygwin/sys-root/usr/bin/cygwin1.dll ${CI_PROJECT_DIR:?}
    - rm -f "${CI_PROJECT_DIR:?}/cygwin1.dll"
    - export DISTDIR="dps8-master-cygwin-64"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-cygwin-64.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-cygwin-64.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-cygwin-64.tar.gz
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, Intel oneAPI DPC++/C++:
  stage: build
  tags:
    - Linux
    - Intel
    - oneAPI
    - amd64
    - Linux-Shell
  script:
    - export GLCICD_JOB="oneAPIDPCx64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - . /opt/intel/oneapi/common.sh 2> /dev/null && . /opt/intel/oneapi/setvars.sh 2> /dev/null && icx -V && CFLAGS="-Wno-tautological-constant-compare" make CC=icx WITH_BACKTRACE=1 NO_LTO=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, Oracle Developer Studio:
  stage: build
  tags:
    - Linux
    - Sun-CC
    - amd64
    - Linux-Shell
    - POSIX
  script:
    - export GLCICD_JOB="SunCCLinuxX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - pkill suncc > /dev/null 2>&1 || true
    - export CSTD="c11" && export CFLAGS="-DNO_C_ELLIPSIS -DUSE_FLOCK=1 -DUSE_FCNTL=1" && make CC="ccache /opt/oracle/developerstudio-latest/bin/suncc -xatomic=studio -xautopar -Qy -fd -xO5 -m64 -xlibmil -xvpara -xCC -mt -xlibmopt -xloopinfo -fno-semantic-interposition -xregs=frameptr -xprefetch=auto -xprefetch_level=3 -xjobs=$(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4")" SUNPRO=1 NEED_128=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync 2>&1 | grep --line-buffered -v -e " not parallelized" -e " enumerator value overflows INT_MAX"
    - pkill suncc > /dev/null 2>&1 || true
    - printf %s\\n "SHOW VERSION" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - lzip -9vk < /opt/oracle/developerstudio12.6/lib/compilers/atomic/amd64/libstatomic.so.1 > libstatomic.so.1.lz
    - lzip -9vk < /opt/oracle/developerstudio12.6/lib/compilers/rtlibs/usr/lib/amd64/libmtsk.so.1 > libmtsk.so.1.lz
    - lzip -9vk < /opt/oracle/developerstudio12.6/lib/compilers/rtlibs/usr/lib/amd64/libmtsk_crt.so.1 > libmtsk_crt.so.1.lz
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
      - ${CI_PROJECT_DIR:?}/libstatomic.so.1.lz
      - ${CI_PROJECT_DIR:?}/libmtsk_crt.so.1.lz
      - ${CI_PROJECT_DIR:?}/libmtsk.so.1.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, AOCC, AOCL:
  stage: build
  tags:
    - Linux
    - AOCC
    - AOCL
    - amd64
    - Linux-Shell
  script:
    - export GLCICD_JOB="AMDAOCCAMD64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - ( . /opt/AMD/aocc-latest/setenv_AOCC.sh 2> /dev/null && export PATH="/opt/AMD/aocc-latest/bin:${PATH:?}" && export LD_LIBRARY_PATH="/opt/AMD/aocc-latest/lib:/opt/AMD/aocl/latest/lib:${LD_LIBRARY_PATH:-}" && clang --version && export CFLAGS="-Wno-unused-command-line-argument -I/usr/local/include -Ofast -ffast-math"; make WITH_BACKTRACE=1 CC="clang -mllvm -vector-library=AMDLIBM" LIBS="-L/opt/AMD/aocl/latest/lib -L/opt/AMD/aocc-latest/lib -L/usr/local/lib /opt/AMD/aocl/latest/lib/libalm.a -laocl-libmem /usr/local/lib/libbacktrace.a -lpthread -luv -lm" -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync )
    - printf %s\\n "SHOW VERSION" | env LD_LIBRARY_PATH="/opt/AMD/aocc-latest/lib:/opt/AMD/aocl/latest/lib:${LD_LIBRARY_PATH:-}" ./src/dps8/dps8
    - printf %s\\n "SHOW BUILDINFO" | env LD_LIBRARY_PATH="/opt/AMD/aocc-latest/lib:/opt/AMD/aocl/latest/lib:${LD_LIBRARY_PATH:-}" ./src/dps8/dps8
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, Clang, GCC:
  image: fedora:latest
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="FedoraX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

GNU GLOBAL Hypertext:
  image: fedora:latest
  stage: docs
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="GlobalX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y global bzip2 || dnf -q install -y global bzip2
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - make distclean
    - *scriptDPS8Mods
    - make CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - htags --map-file --auto-completion --colorize-warned-line -h -I --tabs 4 -v -n -o -s --tabs 4 --table-flist --statistics
  dependencies: []
  artifacts:
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/HTML
  retry: 1
  timeout: 30 minutes
  interruptible: true

############################################################################

Hugo:
  image: fedora:latest
  stage: docs
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="Hugogen64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y hugo bzip2 || dnf -q install -y hugo bzip2
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - cd docs/hpages && ./hugobuild.sh
  dependencies: []
  artifacts:
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/docs/hpages/public
  retry: 1
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora Rawhide, Clang, GCC:
  image: fedora:rawhide
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="FedoraRawhideX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

AIX/powerpc64, IBM AIX, GCC:
  stage: build
  tags:
    - AIX
    - IBM
    - ppc64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - env CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" gmake WITH_BACKTRACE=1 CC=gcc-10 NO_LTO=1 -j 6 --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-aixv7-gcc.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-aixv7-gcc.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-aixv7-gcc.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 60 minutes
  interruptible: true

############################################################################

AIX/powerpc64, IBM AIX, IBM XL C/C++ V16.1:
  stage: build
  tags:
    - AIX
    - IBM
    - ppc64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export XLCXLC="xlc_r" && export XLCVER="16.1.0" && gmake -j 6 NO_LTO=1 CC="/opt/IBM/xlC/${XLCVER:?}/bin/${XLCXLC:?} -O3 -qhot -qarch=pwr8 -qchars=signed -q64 -qalign=natural -qtls" CFLAGS="-DUSE_POPT=1 -DUSE_FLOCK=1 -DUSE_FCNTL=1 -DAIX_ATOMICS=1 -DNEED_128=1 -DLOCKLESS=1 -I/opt/freeware/include -I../simh -I../decNumber -D_GNU_SOURCE -U__STRICT_POSIX__" USE_POPT=1 NEED_128=1 PULIBS="-lpopt" LDFLAGS="-L/opt/freeware/lib -b64" LIBS="-luv -lbsd -lm" --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-aixv7-xlc.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-aixv7-xlc.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-aixv7-xlc.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 60 minutes
  interruptible: true

############################################################################

AIX/powerpc64, IBM AIX, IBM XL Clang V16.1:
  stage: build
  tags:
    - AIX
    - IBM
    - ppc64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export XLCVER="16.1.0" && LDFLAGS="-L/opt/freeware/lib -b64 -m64" CFLAGS="-m64 -I/opt/freeware/include" gmake -j 6 NO_LTO=1 CC="/opt/IBM/xlC/${XLCVER:?}/bin/xlclang" NEED_128=1 --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 60 minutes
  interruptible: true

############################################################################

Linux/powerpc64el, Ubuntu LTS, IBM XL C/C++:
  stage: build
  tags:
    - Shell-Linux
    - Linux
    - XLC-POWER
    - IBM
    - ppc64le
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export IBMXLCVER="latest" && /opt/ibm/xlC/"${IBMXLCVER:?}"/bin/c99_r -qversion 2>&1 | grep "Version" && make NO_LTO=1 CC=/opt/ibm/xlC/"${IBMXLCVER:?}"/bin/c99_r -j $(grep -c "^cpu" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-xlc.tar "./${DISTDIR:?}" )
    - pigz -11 -f -n dps8m-master-linux-xlc.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-xlc.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 60 minutes
  interruptible: true

############################################################################

Linux/powerpc64el, IBM Advance Toolchain 15:
  stage: build
  tags:
    - Shell-Linux
    - Linux
    - IBM-AT
    - IBM
    - ppc64le
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export IBMATVER="15.0" && export PATH="/opt/at${IBMATVER:?}/bin:/opt/at${IBMATVER:?}/sbin:/opt/at${IBMATVER:?}/powerpc64le-linux-gnu/bin:${PATH:?}" && cc --version 2>&1 | grep "Advance" && make CC="gcc -DNO_WARN_X86_INTRINSICS -ftree-vectorize -fpeel-loops -mcpu=power8 -mtune=power8 -fsigned-char -Ofast -flto" LIBS="-L/opt/at${IBMATVER:?}/lib64 -luv -ldl -lrt -lm -flto" -j $(grep -c "^cpu" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-linux-at8.tar "./${DISTDIR:?}" )
    - pigz -11 -f -n dps8m-master-linux-at8.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-linux-at8.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 60 minutes
  interruptible: true

############################################################################

Windows/ARM64, LLVM-MinGW:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="LLVMMINGWARM64" && export DTIMESTAMP="$(stat -c "%Y" /opt/llvm-mingw)"
    - *scriptBuildlibuvLLVMMGW64-aarch64
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make CC="aarch64-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - mkdir -p src/dps8-master-mingw-a64
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt src/dps8-master-mingw-a64
    - cp -f src/dps8/dps8.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe src/dps8-master-mingw-a64
    - ( cd src && zip -9 ../dps8m-master-mingw-a64.zip ./dps8-master-mingw-a64/* )
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mingw-a64.zip
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Windows/ARMv7, LLVM-MinGW:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="LLVMMINGWARM" && export DTIMESTAMP="$(stat -c "%Y" /opt/llvm-mingw)"
    - *scriptBuildlibuvLLVMMGW64-armv7
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make CC="armv7-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread -D__int64_t=int64_t -D__MINGW64__" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" NEED_128=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - mkdir -p src/dps8-master-mingw-av7
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt src/dps8-master-mingw-av7
    - cp -f src/dps8/dps8.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe src/dps8-master-mingw-av7
    - ( cd src && zip -9 ../dps8m-master-mingw-av7.zip ./dps8-master-mingw-av7/* )
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mingw-av7.zip
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Windows/i686, LLVM-MinGW:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="LLVMMINGWI686" && export DTIMESTAMP="$(stat -c "%Y" /opt/llvm-mingw)"
    - *scriptBuildlibuvLLVMMGW64-i686
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make CC="i686-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread -D__int64_t=int64_t -D__MINGW64__" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" NEED_128=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - mkdir -p src/dps8-master-mingw-x32
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt src/dps8-master-mingw-x32
    - cp -f src/dps8/dps8.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe src/dps8-master-mingw-x32
    - ( cd src && zip -9 ../dps8m-master-mingw-x32.zip ./dps8-master-mingw-x32/* )
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mingw-x32.zip
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Windows/x86_64, LLVM-MinGW:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="LLVMMINGWX8664" && export DTIMESTAMP="$(stat -c "%Y" /opt/llvm-mingw)"
    - *scriptBuildlibuvLLVMMGW64-x86_64
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make CC="x86_64-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - *scriptBuildInfo
    - test -f src/dps8/dps8.exe
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Windows/x86_64, MinGW64-GCC:
  image:
    name: alpine:latest
    entrypoint: [ '/bin/sh', '-c', 'sed -i "s/https/http/g" /etc/apk/repositories; apk update; apk add bash; apk add bash && ln -snf /bin/bash /bin/sh && exec /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptAlpineSetup
    - apk add zip mingw-w64-binutils mingw-w64-headers mingw-w64-gcc mingw-w64-winpthreads mingw-w64-crt || apk add zip mingw-w64-binutils mingw-w64-headers mingw-w64-gcc mingw-w64-winpthreads mingw-w64-crt
    - *scriptBuildlibuvMGW64
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make CC="x86_64-w64-mingw32-gcc -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - *scriptBuildInfo
    - test -f src/dps8/dps8.exe
    - mkdir -p src/dps8-master-mingw-x86
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt src/dps8-master-mingw-x86
    - cp -f src/dps8/dps8.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe src/dps8-master-mingw-x86
    - ( cd src && zip -9 ../dps8m-master-mingw-x86.zip ./dps8-master-mingw-x86/* )
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mingw-x86.zip
      - ${CI_PROJECT_DIR:?}/dps8m.zip
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Oracle Linux 8, Clang, GCC:
  image: oraclelinux:8
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="OracleLinux8x64" && export DTIMESTAMP="$(stat -c "%Y" /etc/passwd)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptOUL8Setup
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

###########################################################################

Source Kits:
  image: debian:sid
  stage: build
  tags:
    - Docker-x64-slow
    - amd64
    - Linux
  script:
    - ( (apt-get -qq -y update > /dev/null || apt-get -qq -y update > /dev/null); apt-get -qq -y install zpaq zip advancecomp pigz tar make git lzip 7zip > /dev/null || apt-get -qq -y install zpaq zip advancecomp pigz tar make git lzip 7zip > /dev/null )
    - *scriptSanity
    - *scriptCommon
    - make distclean && make dist COMPRESS="pigz -11 -f -m -n" COMPRESSXT="gz"
    - cp -vf sources.tar.gz /tmp
    - make distclean && make zipdist
    - cp -vf /tmp/sources.tar.gz .
    - mv sources.zip dps8m-master-src.zip
    - mv sources.tar.gz dps8m-master-src.tar.gz
    - make distclean && make dist COMPRESS="lzip -9 -s 512Mi" COMPRESSXT="lz"
    - mv sources.tar.lz dps8m-master-src.tar.lz
    - make distclean && env COMPRESSXT="7z" COMPRESS='( mkdir -p 7ztmp && cd 7ztmp && tar xf ../../../$(KITNAME).$(TARXT) && 7zz a -y -m0=lzma -mx=9 -mfb=273 -ssc -ssw -spf -snl -md=512m -ms=on -stl -sdel ../../../$(KITNAME).$(COMPRESSXT) . ) && $(RMDIR) 7ztmp && $(RMF) $(KITNAME).$(TARXT)' make dist
    - mv sources.7z dps8m-master-src.7z
    - make distclean && env COMPRESSXT="zpaq" COMPRESS='( mkdir -p zpaqtmp && cd zpaqtmp && tar xf ../../../$(KITNAME).$(TARXT) && zpaq -f add ../../../$(KITNAME).$(COMPRESSXT) . -m5 ) && $(RMF) -r ./zpaqtmp && $(RMF) $(KITNAME).$(TARXT)' make dist
    - mv sources.zpaq dps8m-master-src.zpaq
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-src.tar.lz
      - ${CI_PROJECT_DIR:?}/dps8m-master-src.tar.gz
      - ${CI_PROJECT_DIR:?}/dps8m-master-src.7z
      - ${CI_PROJECT_DIR:?}/dps8m-master-src.zip
      - ${CI_PROJECT_DIR:?}/dps8m-master-src.zpaq
  retry: 2
  timeout: 45 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu, Clang, GCC:
  image: ubuntu:rolling
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="UbuntuCurrentx64" && export DTIMESTAMP="$(stat -c "%Y" /etc/os-release)"
    - ( (apt-get -qq -y update > /dev/null || apt-get -qq -y update > /dev/null); apt-get -qq -y install bzip2 wget > /dev/null || apt-get -qq -y install wget bzip2 > /dev/null )
    - *scriptAptSetup
    - *scriptInstallNfpm
    - *scriptAptInstallLibuv1
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu LTS, Clang, GCC:
  image: ubuntu:latest
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="UbuntuLTSx64" && export DTIMESTAMP="$(stat -c "%Y" /etc/os-release)"
    - ( (apt-get -qq -y update > /dev/null || apt-get -qq -y update > /dev/null); apt-get -qq -y install bzip2 wget > /dev/null || apt-get -qq -y install wget bzip2 > /dev/null )
    - *scriptAptSetup
    - *scriptInstallNfpm
    - *scriptAptInstallLibuv1
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void glibc, Clang, GCC:
  image:
    name: voidlinux/voidlinux:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="VoidGlibcX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/passwd)"
    - xbps-install -y wget bzip2 || xbps-install -y wget bzip2
    - *scriptVoidSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 45 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void musl, static, Clang, GCC:
  image:
    name: voidlinux/voidlinux-musl:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="VoidMuslX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/passwd)"
    - xbps-install -y wget bzip2 || xbps-install -y wget bzip2
    - *scriptVoidSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - ( export LDFLAGS="-static"; make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync )
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - ( export LDFLAGS="-static"; make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync )
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 45 minutes
  interruptible: true

############################################################################

Solaris/x86_64, Oracle Solaris 11.4, GCC:
  stage: build
  tags:
    - Solaris
    - SunOS
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - ( gcc -v; gmake WITH_BACKTRACE=1 CC=gcc -j 6 --output-sync )
    - echo "SHOW VERSION" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | gawk '{ print $3 }' | gtr -cd '0-9A-z.\-\_\+' | gtr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-s114-x86.tar "./${DISTDIR:?}" )
    - pigz -11 -f -n dps8m-master-s114-x86.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-s114-x86.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

Solaris/x86_64, Oracle Solaris 11.4, Oracle Developer Studio:
  stage: build
  tags:
    - Solaris
    - SunOS
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export CSTD="c11" && export CFLAGS="-DNO_C_ELLIPSIS -I/usr/local/include" && export LDFLAGS="-I/usr/local/lib" && gmake CC="/opt/developerstudio-latest/bin/suncc -xatomic=studio -xautopar -Qy -xO5 -m64 -xlibmil -xvpara -xCC -mt -xlibmopt -xloopinfo -fno-semantic-interposition -xregs=frameptr -xprefetch=auto -xprefetch_level=3 -xjobs=$(psrinfo -p 2> /dev/null || printf %s\\n "4")" --output-sync SUNPRO=1 NEED_128=1 -j $(psrinfo -p 2> /dev/null || printf %s\\n "4") 2>&1 | grep -v " not parallelized" | grep -v " enumerator value overflows INT_MAX"
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - lzip -9vk < /opt/developerstudio-latest/lib/compilers/atomic/amd64/libstatomic.so.1 > libstatomic.so.1.lz
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
      - ${CI_PROJECT_DIR:?}/libstatomic.so.1.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

############################################################################

illumos/x86_64, OpenIndiana Hipster, Clang, GCC:
  stage: build
  tags:
    - OpenIndiana
    - SunOS
    - amd64
    - illumos
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - gmake CC=clang NO_LTO=1 -j 6 --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - gmake distclean
    - *scriptDPS8Mods
    - gmake WITH_BACKTRACE=1 CC=gcc-11 -j 6 --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-iloi-x86.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-iloi-x86.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-iloi-x86.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################

Darwin/x86_64, macOS, Xcode:
  stage: build
  tags:
    - Darwin
    - macOS
    - amd64
    - Xcode
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j 6
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-macos-x86.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-macos-x86.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-macos-x86.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################

Darwin/x86_64, macOS, static, Xcode:
  stage: build
  tags:
    - Darwin
    - macOS
    - amd64
    - Xcode
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export DEPLOY="10.13"
    - env CFLAGS="-target x86_64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" LOCAL_CONFOPTS="--host=x86_64-apple-darwin" make libuvrel HOMEBREW_INC= HOMEBREW_LIB= && env CFLAGS="-target x86_64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" LDFLAGS="-target x86_64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" make HOMEBREW_INC= HOMEBREW_LIB= WITH_BACKTRACE=1
    - otool -l src/dps8/dps8 || true
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - export DISTDIR="dps8-$(./src/dps8/dps8 --version | awk '{ print $3 }' | tr -cd '0-9A-z.\-\_\+' | tr '+' '_')"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-mac10-x86.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-mac10-x86.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mac10-x86.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################

Darwin/ARM64, macOS, static, Xcode:
  stage: build
  tags:
    - Darwin
    - macOS
    - amd64
    - Xcode
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export DEPLOY="11.0"
    - env CFLAGS="-target arm64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" LOCAL_CONFOPTS="--host=arm64-apple-darwin" make libuvrel HOMEBREW_INC= HOMEBREW_LIB= && env CFLAGS="-target arm64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" LDFLAGS="-target arm64-apple-macos${DEPLOY} -mmacosx-version-min=${DEPLOY}" make HOMEBREW_INC= HOMEBREW_LIB=
    - otool -l src/dps8/dps8 || true
    - export DISTDIR="dps8-master"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-mac11-a64.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-mac11-a64.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-mac11-a64.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################

Darwin/Universal, macOS, static, Xcode:
  stage: build
  tags:
    - Darwin
    - macOS
    - amd64
    - Xcode
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make distclean && env CFLAGS="-target arm64-apple-macos11 -mmacosx-version-min=11.0" LOCAL_CONFOPTS="--host=arm64-apple-darwin" make libuvrel HOMEBREW_INC= HOMEBREW_LIB=
    - env CFLAGS="-target arm64-apple-macos11 -mmacosx-version-min=11.0" LDFLAGS="-target arm64-apple-macos11 -mmacosx-version-min=11.0" make HOMEBREW_INC= HOMEBREW_LIB= && cp -f "src/dps8/dps8" "dps8.arm64" && cp -f "src/prt2pdf/prt2pdf" "prt2pdf.arm64" && cp -f "src/punutil/punutil" "punutil.arm64"
    - make distclean && env CFLAGS="-target x86_64-apple-macos10.15 -mmacosx-version-min=10.15" LOCAL_CONFOPTS="--host=x86_64-apple-darwin" make libuvrel HOMEBREW_INC= HOMEBREW_LIB=
    - env CFLAGS="-target x86_64-apple-macos10.15 -mmacosx-version-min=10.15" LDFLAGS="-target x86_64-apple-macos10.15 -mmacosx-version-min=10.15" make HOMEBREW_INC= HOMEBREW_LIB= && cp -f "src/dps8/dps8" "dps8.x86_64" && cp -f "src/prt2pdf/prt2pdf" "prt2pdf.x86_64" && cp -f "src/punutil/punutil" "punutil.x86_64"
    - make distclean && env CFLAGS="-target x86_64h-apple-macos10.15 -mmacosx-version-min=10.15 -march=haswell" LOCAL_CONFOPTS="--host=x86_64-apple-darwin" make libuvrel HOMEBREW_INC= HOMEBREW_LIB=
    - env CFLAGS="-target x86_64h-apple-macos10.15 -mmacosx-version-min=10.15 -march=haswell" LDFLAGS="-target x86_64h-apple-macos10.15 -mmacosx-version-min=10.15" make HOMEBREW_INC= HOMEBREW_LIB= && cp -f "src/dps8/dps8" "dps8.x86_64h" && cp -f "src/prt2pdf/prt2pdf" "prt2pdf.x86_64h" && cp -f "src/punutil/punutil" "punutil.x86_64h"
    - lipo -create -output "dps8" "dps8.x86_64" "dps8.x86_64h" "dps8.arm64" && lipo -create -output "prt2pdf" "prt2pdf.x86_64" "prt2pdf.x86_64h" "prt2pdf.arm64" && lipo -create -output "punutil" "punutil.x86_64" "punutil.x86_64h" "punutil.arm64" && make distclean && env rm -f *.x86_64 *.x86_64h *.arm64
    - lipo -detailed_info "dps8"
    - lipo -detailed_info "prt2pdf"
    - lipo -detailed_info "punutil"
    - rm -f "src/dps8/dps8" && cp -f "dps8" "src/dps8/dps8"
    - rm -f "src/prt2pdf/prt2pdf" && cp -f "prt2pdf" "src/prt2pdf/prt2pdf"
    - rm -f "src/punutil/punutil" && cp -f "punutil" "src/punutil/punutil"
    - export DISTDIR="dps8-master"
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cvf ../dps8m-master-macos-uni.tar "./${DISTDIR:?}" )
    - pigz -11 -f -m -n dps8m-master-macos-uni.tar
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/dps8m-master-macos-uni.tar.gz
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################
Option Verification Test:
  stage: cmb_test
  image: fedora:latest
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
  tags:
    - Docker-x64
    - amd64
    - Linux
  parallel: 4
  script:
    - export GLCICD_JOB="OptTestFedoraX64_${CI_NODE_INDEX:?}" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptDnfSetup
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - export NO_LTO=1
    - export CMB_OPTIONS="NO_LOCKLESS=1 TESTING=1 NEED_128=1 HDBG=1 ROUND_ROBIN=1 TRACKER=1"
    - make -C "src/mcmb" && export CMB_TOOL="$(command -p env PATH="$(command -p env getconf PATH)" mktemp)" && mv -f "src/mcmb/mcmb" "${CMB_TOOL:?}" && chmod a+x "${CMB_TOOL:?}"
    - touch part_x.sh && rm -f part_*.sh > /dev/null 2>&1 || true > /dev/null 2>&1
    - ( export NSPLIT=${CI_NODE_TOTAL:?}; for i in $(seq 1 ${CI_NODE_TOTAL:?}); do ( env CPUS="$(( $((grep -c "^model name" /proc/cpuinfo 2> /dev/null) | head -n 1) + 1 ))" bash -c '${CMB_TOOL:?} -N -e ${CMB_OPTIONS:?} -p "make -j ${CPUS:?} " -s " && printf %s\\\\n \"SHOW VERSION\" | ./src/dps8/dps8 && make distclean && \\"' ) | awk '{ print "env ITERATION="$0 }' 2> /dev/null | split -e -n "r/${i:?}/${NSPLIT:?}" | awk "BEGIN { print \"#\!/usr/bin/env bash\"; print \"# Part ${i:?} of ${NSPLIT:?}\"; printf \"\"; print \"set -eux -o pipefail\" } { print \$0 } END { print \"true\"; print \"\" }" > "part_${i:?}_of_${NSPLIT:?}.sh" 2> /dev/null; done )
    - export CMB_CI_JOB="part_${CI_NODE_INDEX:?}_of_${CI_NODE_TOTAL:?}.sh"
    - cat ./"${CMB_CI_JOB:?}" && chmod a+x ./"${CMB_CI_JOB:?}"
    - ./"${CMB_CI_JOB:?}" 2>&1 | tee -i options-test.txt | grep --line-buffered '^+ env ITERATION'
    - make clean > /dev/null 2>&1 && make PERF_STRIP=1 -j 3
    - ( cd src/perf_test && ../../src/dps8/dps8 2>&1 || true )
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/options-test.txt
  retry: 2
  timeout: 180 minutes
  interruptible: true

#############################################################################

DPS8M Omnibus Documentation:
  when: always
  stage: docs
  image: fedora:latest
  tags:
    - Docker-x64-fast
    - Linux
    - amd64
  needs:
    - job: Multics CI-Kit Test
  script:
    - export GLCICD_JOB="OmnibusDocsGenX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptDnfSetup
    - dnf -v install -y texlive-listings texlive-listingsutf8 texlive-microtype texlive-parskip texlive-footnotehyper texlive-footnoterange texlive-bookmark texlive-globalvals texlive-cprotect texlive-tcolorbox texlive-minted php-cli php jq util-linux graphviz texlive-graphviz graphviz-devil graphviz-gd graphviz-lua python3-pygments texlive-pygmentex biber texlive-enumitem-zref texlive-zref texlive-xurl texlive-xecjk texlive-upquote texlive-unicode-math texlive-ulem texlive-ucharcat texlive-titling texlive-sourcesanspro texlive-sourcecodepro texlive-pagecolor texlive-needspace texlive-mweights texlive-mdframed texlive-ly1 texlive-letltxmacro texlive-fvextra texlive-framed texlive-footmisc texlive-filehook texlive-everypage texlive-csquotes texlive-collectbox texlive-bidi texlive-background texlive-babel-german texlive-footnotebackref texlive-adjustbox telnet tmux mksh expect tcsh wget lzip dos2unix diffutils moreutils libfaketime nmap ansifilter poppler-utils pandoc qpdf ghostscript bc pdftk-java adobe-source-code-pro-fonts adobe-source-sans-pro-fonts texlive-scheme-basic texlive-collection-xetex bash || dnf -v install -y texlive-adjustbox telnet tmux mksh expect tcsh wget lzip dos2unix diffutils moreutils libfaketime nmap ansifilter poppler-utils pandoc qpdf ghostscript bc pdftk-java adobe-source-code-pro-fonts adobe-source-sans-pro-fonts texlive-scheme-basic texlive-collection-xetex bash texlive-footnotebackref texlive-babel-german texlive-background texlive-bidi texlive-collectbox texlive-csquotes texlive-everypage texlive-filehook texlive-footmisc texlive-framed texlive-fvextra texlive-letltxmacro texlive-ly1 texlive-mdframed texlive-mweights texlive-needspace texlive-pagecolor texlive-sourcecodepro texlive-sourcesanspro texlive-titling texlive-ucharcat texlive-ulem texlive-unicode-math texlive-upquote texlive-xecjk texlive-xurl texlive-zref texlive-enumitem-zref biber texlive-pygmentex python3-pygments graphviz texlive-graphviz graphviz-devil graphviz-gd graphviz-lua util-linux jq php php-cli texlive-minted texlive-tcolorbox texlive-cprotect texlive-globalvals texlive-bookmark texlive-footnotehyper texlive-footnoterange texlive-listings texlive-listingsutf8 texlive-microtype texlive-parskip
    - mktexfmt xelatex.fmt || true
    - *scriptSanity
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptExtraInfo
    - *scriptDPS8Mods
    - env WITH_BACKTRACE=1 NATIVE=1 gmake && env WITH_BACKTRACE=1 NATIVE=1 gmake docspdf
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/docs/dps8-omnibus.pdf
  retry: 2
  timeout: 45 minutes
  interruptible: true

############################################################################

Multics CI-Kit Test:
  stage: ci_test
  image: fedora:latest
  tags:
    - Docker-x64-fast
    - Linux
    - CIKit-x64
    - amd64
  needs:
    - job: Source Tree Checks
  script:
    - export GLCICD_JOB="CIKitTestFedoraX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptDnfSetup
    - dnf -q install -y telnet tmux mksh expect tcsh wget lzip dos2unix diffutils moreutils libfaketime nmap ansifilter || dnf -q install -y telnet tmux mksh expect tcsh wget lzip dos2unix diffutils moreutils libfaketime nmap ansifilter
    - *scriptSanity
    - ( cd src/ci-kit && env NO_CI_SYMLINK_TAPES=1 STASH_CI_TAPES=1 ./init.sh ) || true
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - bash -x -c '( set -o pipefail ; set -x ; cd src/ci-kit && export WITH_BACKTRACE=1 && env NO_CI_SYMLINK_TAPES=1 STASH_CI_TAPES=1 ./init.sh ; ./ci.sh ; make -f ci.makefile diff ; mv -f new.log new.txt)'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/src/ci-kit/new.txt
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu 18.04, Clang, GCC:
  image: ubuntu:bionic
  stage: build
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - export GLCICD_JOB="UbuntuLTSBionicx64" && export DTIMESTAMP="$(stat -c "%Y" /etc/os-release)"
    - ( (apt-get -qq -y update > /dev/null || apt-get -qq -y update > /dev/null); apt-get -qq -y install bzip2 wget > /dev/null || apt-get -qq -y install wget bzip2 > /dev/null )
    - *scriptAptSetup
    - *scriptInstallNfpm
    - *scriptAptInstallLibuv1
    - *scriptSanity
    - (apt-get -qq -y install tcsh passwd || apt-get -qq -y install tcsh passwd)
    - chsh -s /bin/tcsh root
    - export SHELL=/bin/tcsh
    - *scriptCommon
    - *scriptBuildlibbacktrace
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - make WITH_BACKTRACE=1 CC=clang -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - make distclean
    - *scriptDPS8Mods
    - make WITH_BACKTRACE=1 CC=gcc -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") --output-sync
    - printf %s\\n "show version" | ./src/dps8/dps8
    - *scriptBuildInfo
    - *scriptVerifyVersion
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_PROJECT_DIR:?}/src/dps8/dps8.lz
      - ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.lz
      - ${CI_PROJECT_DIR:?}/src/punutil/punutil.lz
      - ${CI_PROJECT_DIR:?}/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 30 minutes
  interruptible: true

#############################################################################

Flawfinder:
  stage: test
  allow_failure: false
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
    - job: Option Verification Test
  tags:
    - Linux
    - Flawfinder
    - amd64
    - Linux-Shell
    - POSIX
  script:
    - export GLCICD_JOB="Flawfinder" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - flawfinder -C -m 5 . 2>&1 > flawfinder.txt || true
    - sh -xc 'set +e; grep "No hits found" flawfinder.txt && exit 0;exit 2'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/flawfinder.txt
  retry: 1
  timeout: 30 minutes
  interruptible: true

#############################################################################

Clang Analyzer:
  image: fedora:latest
  stage: test
  allow_failure: false
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
    - job: Option Verification Test
  tags:
    - Linux
    - Docker-x64
    - amd64
  script:
    - export GLCICD_JOB="ClangAnalyzer" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - dnf -q install -y clang-devel clang-analyzer clang-tools-extra bzip2 llvm-devel || dnf -q install -y clang-devel clang-analyzer bzip2 clang-tools-extra llvm-devel
    - gmake superclean
    - gmake clsanalz
    - mkdir -p out
    - touch out/index.html
    - sh -xc 'set +e;C_OUTPUT="$(cat out/index.html 2> /dev/null)" && test -z "${C_OUTPUT:-}"'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/out/*
  timeout: 45 minutes
  interruptible: true

#############################################################################

PVS-Studio:
  image: fedora:latest
  stage: test
  allow_failure: true
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
    - job: Option Verification Test
  tags:
    - Linux
    - Docker-x64
    - amd64
  script:
    - export GLCICD_JOB="PVSStudioJob" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptDnfSetup
    - *scriptInstallNfpm
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - dnf -q install -y wget curl bear bzip2 || dnf -q install -y wget curl bear bzip2
    - wget -O /etc/yum.repos.d/viva64.repo http://files.viva64.com/etc/viva64.repo
    - curl -fsSL https://files.pvs-studio.com/beta/etc/viva64.repo | sed 's/^\[viva64\]$/\[viva64-beta\]/' | sed 's/^name=Viva64$/name=Viva64-beta/' > /etc/yum.repos.d/viva64-beta.repo
    - dnf --refresh -y install pvs-studio || dnf --refresh -y install pvs-studio
    - pvs-studio-analyzer credentials $PVS_STUDIO_NAME $PVS_STUDIO_KEY || true
    - rm -f compile_commands.json
    - rm -f compile_commands.events.json
    - bear -- gmake -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4")
    - ./src/dps8/dps8 --version
    - pvs-studio-analyzer analyze --intermodular -o log.pvs -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || printf %s\\n "4") || true
    - plog-converter -a "GA:1,2" -t fullhtml log.pvs -o pvsreport -d V536,V629,V1048,V768,V707,V701,V677,V728,V576 || true
    - mkdir -p pvsreport
    - touch pvsreport/index.html
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/pvsreport/*
  timeout: 45 minutes
  interruptible: true

#############################################################################

Cppcheck:
  stage: test
  allow_failure: false
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
    - job: Option Verification Test
  tags:
    - Linux
    - Cppcheck
    - amd64
    - Linux-Shell
    - POSIX
  script:
    - export GLCICD_JOB="Cppcheck" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - env HTMLOUT=1 make cppcheck
    - ansifilter -T cppcheck.txt > cppcheck.txt.1 2> /dev/null
    - env mv -f cppcheck.txt.1 cppcheck.txt > /dev/null 2>&1
    - sh -xc 'set +e;grep "A HREF=" cppcheck/index.html && exit 1;exit 0'
    - sh -xc 'set +e;grep -vE "(^#.*#$|^$)" cppcheck/index.html && exit 1;exit 0'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/cppcheck.txt
      - ${CI_PROJECT_DIR:?}/cppcheck/index.html
      - ${CI_PROJECT_DIR:?}/cppcheck/*/*
  timeout: 120 minutes
  interruptible: true

#############################################################################

Oracle Developer Studio Lint:
  stage: test
  allow_failure: false
  needs:
    - job: Linux/x86_64, Ubuntu LTS, Clang, GCC
    - job: Linux/x86_64, Fedora, Clang, GCC
    - job: Option Verification Test
  tags:
    - Linux
    - Sun-CC
    - amd64
    - Linux-Shell
    - POSIX
  script:
    - export GLCICD_JOB="OracleLint" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - pkill lint > /dev/null 2>&1 || true
    - sleep 20 || true
    - make orstlint || true
    - sleep 5 || true
    - pkill lint > /dev/null 2>&1 || true
    - sh -xc 'set +e;{ grep "^E_" orstlint.txt && exit 1; };exit 0'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/orstlint.txt
  timeout: 30 minutes
  interruptible: true

#############################################################################

Source Tree Checks:
  stage: src_test
  image: fedora:latest
  tags:
    - Docker-x64
    - Linux
    - amd64
  script:
    - export GLCICD_JOB="GitHooksCheckFedoraX64" && export DTIMESTAMP="$(stat -c "%Y" /etc/machine-id)"
    - dnf -q install -y bzip2 || dnf -q install -y bzip2
    - *scriptDnfSetup
    - dnf -q install -y cppi imake reuse python3-setuptools || dnf -q install -y cppi imake reuse python3-setuptools
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - ( env EXTRA_HOOK=1 DEBUG_HOOK=1 TEST_DEPENDS=1 ./.githooks/pre-commit 2>&1 ; env gmake -j 1 lmscspell spdxtest 2>&1 ) 2>&1 | tee -i pre-commit-test.txt
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - ${CI_PROJECT_DIR:?}/pre-commit-test.txt
  retry: 2
  timeout: 45 minutes
  interruptible: true

############################################################################

pages:
  image: alpine:latest
  tags:
    - Docker-amd64
    - DPS8M
    - Linux
    - amd64
  needs:
    - job: AIX/powerpc64, IBM AIX, GCC
    - job: AIX/powerpc64, IBM AIX, IBM XL C/C++ V16.1
    - job: Clang Analyzer
    - job: Cppcheck
    - job: Darwin/x86_64, macOS, Xcode
    - job: Darwin/x86_64, macOS, static, Xcode
    - job: Darwin/ARM64, macOS, static, Xcode
    - job: Darwin/Universal, macOS, static, Xcode
    - job: DPS8M Omnibus Documentation
    - job: Flawfinder
    - job: GNU GLOBAL Hypertext
    - job: Hugo
    - job: illumos/x86_64, OpenIndiana Hipster, Clang, GCC
    - job: Linux/powerpc64el, IBM Advance Toolchain 15
    - job: Linux/powerpc64el, IBM Advance Toolchain 16
    - job: Linux/powerpc64el, Ubuntu LTS, IBM XL C/C++
    - job: Linux/x86_64, Alpine Edge, Clang, GCC
    - job: Oracle Developer Studio Lint
    - job: Solaris/x86_64, Oracle Solaris 11.4, GCC
    - job: Source Kits
    - job: Windows/ARM64, LLVM-MinGW
    - job: Windows/ARMv7, LLVM-MinGW
    - job: Windows/i686, LLVM-MinGW
    - job: Windows/x86_64, Cygwin64-GCC
    - job: Windows/x86_64, MinGW64-GCC
  dependencies:
    - "AIX/powerpc64, IBM AIX, GCC"
    - "AIX/powerpc64, IBM AIX, IBM XL C/C++ V16.1"
    - "Clang Analyzer"
    - "Cppcheck"
    - "Darwin/x86_64, macOS, Xcode"
    - "Darwin/x86_64, macOS, static, Xcode"
    - "Darwin/ARM64, macOS, static, Xcode"
    - "Darwin/Universal, macOS, static, Xcode"
    - "DPS8M Omnibus Documentation"
    - "Flawfinder"
    - "GNU GLOBAL Hypertext"
    - "Hugo"
    - "illumos/x86_64, OpenIndiana Hipster, Clang, GCC"
    - "Linux/powerpc64el, IBM Advance Toolchain 15"
    - "Linux/powerpc64el, IBM Advance Toolchain 16"
    - "Linux/powerpc64el, Ubuntu LTS, IBM XL C/C++"
    - "Linux/x86_64, Alpine Edge, Clang, GCC"
    - "Oracle Developer Studio Lint"
    - "Solaris/x86_64, Oracle Solaris 11.4, GCC"
    - "Source Kits"
    - "Windows/ARM64, LLVM-MinGW"
    - "Windows/ARMv7, LLVM-MinGW"
    - "Windows/i686, LLVM-MinGW"
    - "Windows/x86_64, Cygwin64-GCC"
    - "Windows/x86_64, MinGW64-GCC"
  stage: deploy
  script:
  - apk update || true
  - apk upgrade || true
  - apk add advancecomp
  - mkdir -p public/master
  - mv -f ${CI_PROJECT_DIR:?}/docs/dps8-omnibus.pdf public/master/dps8m-omnibus.pdf
  - mv -f ${CI_PROJECT_DIR:?}/HTML public/master/global
  - mkdir -p public/master/lint/oracle || true
  - mv -f ${CI_PROJECT_DIR:?}/orstlint.txt public/master/lint/oracle/oracle.txt || true
  - mv -f ${CI_PROJECT_DIR:?}/cppcheck public/master/lint/cppcheck || true
  - mv -f ${CI_PROJECT_DIR:?}/cppcheck.txt public/master/lint/cppcheck/cppcheck.txt || true
  - mkdir -p public/master/lint/flawfinder
  - mv -f ${CI_PROJECT_DIR:?}/flawfinder.txt public/master/lint/flawfinder/flawfinder.txt || true
  - mv -f ${CI_PROJECT_DIR:?}/out public/master/lint/clang-analyzer || true
  - mv -f ${CI_PROJECT_DIR:?}/docs/hpages/public/* public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-src.tar.lz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-src.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-src.7z public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-src.zip public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-src.zpaq public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-aixv7-xlc.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-aixv7-gcc.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-x86.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-at8.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-ate.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-atn.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-att.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-linux-xlc.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-macos-x86.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mac10-x86.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mac11-a64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-macos-uni.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-s114-x86.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-iloi-x86.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mingw-x86.zip public
  - advzip -z4 public/dps8m-master-mingw-x86.zip
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mingw-x32.zip public
  - advzip -z4 public/dps8m-master-mingw-x32.zip
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mingw-a64.zip public
  - advzip -z4 public/dps8m-master-mingw-a64.zip
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-mingw-av7.zip public
  - advzip -z4 public/dps8m-master-mingw-av7.zip
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-master-cygwin-64.tar.gz public
  artifacts:
    paths:
    - public
    expire_in: 1 day
  only:
    - master
  retry: 2
  timeout: 30 minutes
  interruptible: false

############################################################################
