############################################################################
#
# Copyright (c) 2018-2019 Charles Anthony <charles.unix.pro@gmail.com>
# Copyright (c) 2019-2020 Eric Swenson <eric@swenson.org>
# Copyright (c) 2021 Jeffrey H. Johnson <trnsz@pobox.com>
# Copyright (c) 2021 The DPS8M Development Team
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered "AS-IS",
# without any warranty.
#
############################################################################
# GitLab CI/CD Configuraton
############################################################################

.scriptCommon: &scriptCommon |
    # scriptCommon
    echo "Project Name              : $CI_PROJECT_TITLE"
    echo "Project Git Commit        : $CI_COMMIT_SHA"
    echo "Project Git Branch        : $CI_COMMIT_BRANCH"
    echo "GitLab CI User Details    : $GITLAB_USER_LOGIN - $GITLAB_USER_NAME ($GITLAB_USER_ID) $GITLAB_USER_EMAIL"
    echo "GitLab CI Job Name        : $CI_JOB_NAME"
    echo "GitLab CI Job ID          : $CI_JOB_ID"
    echo "GitLab CI Job Stage       : $CI_JOB_STAGE"
    echo "GitLab CI Runner Details  : $CI_RUNNER_VERSION ($CI_RUNNER_REVISION)"

############################################################################

.buildInfo: &buildInfo |
    # buildInfo
    test -f /builds/dps8m/dps8m/src/dps8/dps8 && file /builds/dps8m/dps8m/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/dps8/dps8 && ldd /builds/dps8m/dps8m/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/dps8/dps8.exe && file /builds/dps8m/dps8m/src/dps8/dps8.exe 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/prt2pdf/prt2pdf && file /builds/dps8m/dps8m/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/prt2pdf/prt2pdf && ldd /builds/dps8m/dps8m/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.exe && file /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/punutil/punutil && file /builds/dps8m/dps8m/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/punutil/punutil && ldd /builds/dps8m/dps8m/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/punutil/punutil.exe && file /builds/dps8m/dps8m/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1

############################################################################

.compressArtifacts: &compressArtifacts |
    # compressArtifacts
    test -f /builds/dps8m/dps8m/src/dps8/dps8 && lzip -9v /builds/dps8m/dps8m/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/prt2pdf/prt2pdf && lzip -9v /builds/dps8m/dps8m/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/punutil/punutil && lzip -9v /builds/dps8m/dps8m/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/dps8/useddef.txt && lzip -9v /builds/dps8m/dps8m/src/dps8/useddef.txt 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/dps8/dps8.exe && zip /builds/dps8m/dps8m/dps8m.zip /builds/dps8m/dps8m/src/dps8/dps8.exe  2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.exe && zip /builds/dps8m/dps8m/dps8m.zip /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/punutil/punutil.exe && zip /builds/dps8m/dps8m/dps8m.zip /builds/dps8m/dps8m/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1
    test -f /builds/dps8m/dps8m/src/dps8/useddef.txt && zip /builds/dps8m/dps8m/dps8m.zip /builds/dps8m/dps8m/src/dps8/useddef.txt 2> /dev/null || true > /dev/null 2>&1

############################################################################

.scriptAptInstallLibuv1: &scriptAptInstallLibuv1 |
    # scriptAptInstallLibuv1
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq libuv1-dev || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq libuv1-dev

############################################################################

.scriptAptInstallMinGW64: &scriptAptInstallMinGW64 |
    # scriptAptInstallMinGW64
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq mingw-w64 || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq mingw-w64

############################################################################

.scriptBuildlibuvCLANGlatest: &scriptBuildlibuvCLANGlatest |
    # scriptBuildlibuvCLANGlatest
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    CC=clang-latest ./configure --disable-shared --enable-static --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvGCClatest: &scriptBuildlibuvGCClatest |
    # scriptBuildlibuvGCClatest
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    CC=gcc-latest ./configure --disable-shared --enable-static --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvCLANG: &scriptBuildlibuvCLANG |
    # scriptBuildlibuvCLANG
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    CC=clang ./configure --disable-shared --enable-static --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvGCC: &scriptBuildlibuvGCC |
    # scriptBuildlibuvGCC
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    CC=gcc ./configure --disable-shared --enable-static --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvMGW64: &scriptBuildlibuvMGW64 |
    # scriptBuildlibuvMGW64
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvLLVMMGW64-x86_64: &scriptBuildlibuvLLVMMGW64-x86_64 |
    # scriptBuildlibuvLLVMMGW64-x86_64
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    ./configure --disable-shared --enable-static --host=x86_64-w64-mingw32 --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvLLVMMGW64-aarch64: &scriptBuildlibuvLLVMMGW64-aarch64 |
    # scriptBuildlibuvLLVMMGW64-aarch64
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    ./configure --disable-shared --enable-static --host=aarch64-w64-mingw32 --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvLLVMMGW64-armv7: &scriptBuildlibuvLLVMMGW64-armv7 |
    # scriptBuildlibuvLLVMMGW64-armv7
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    ./configure --disable-shared --enable-static --host=armv7-w64-mingw32 --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptBuildlibuvLLVMMGW64-i686: &scriptBuildlibuvLLVMMGW64-i686 |
    # scriptBuildlibuvLLVMMGW64-i686
    wget -nv https://github.com/libuv/libuv/archive/v1.x.zip
    unzip -xa v1.x.zip && cd libuv-1.x && sh ./autogen.sh
    (curl -fsSL https://gist.githubusercontent.com/johnsonjh/0ee49cbafdc918cb8023b9ba8a041939/raw/eb746880657437f951d1f887ac474029c0b99f7d/gistfile0.txt 2> /dev/null || curl -fsSL https://gist.githubusercontent.com/johnsonjh/0ee49cbafdc918cb8023b9ba8a041939/raw/eb746880657437f951d1f887ac474029c0b99f7d/gistfile0.txt 2> /dev/null) | patch -p1
    ./configure --disable-shared --enable-static --host=i686-w64-mingw32 --disable-dependency-tracking
    make -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") && make install && cd ..

############################################################################

.scriptAptSetupLatestClang: &scriptAptSetupLatestClang |
    # scriptAptSetupLatestClang
    wget -nv https://apt.llvm.org/llvm.sh || wget -nv https://apt.llvm.org/llvm.sh
    grep -v '^set -eux' ./llvm.sh > ./llvmq.sh
    bash ./llvmq.sh $(grep '^LLVM_VERSION_PATTERNS' ./llvm.sh | cut -d '[' -f 2 | cut -d ']' -f 1 | sort -rn | head -n 1)
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq $( apt-cache search clang 2> /dev/null | grep "^clang-[1-9]\+ " 2> /dev/null | sort 2> /dev/null | head -n 1 2> /dev/null | awk '{ print $1 }' 2>/dev/null || echo clang)
    ln -fs "$( ( ls -1 /usr/bin/clang-* 2> /dev/null | grep 'clang-[0-9]' 2> /dev/null | sort -r 2> /dev/null | head -n 1 2> /dev/null ) || echo /usr/bin/clang)" /usr/bin/clang-latest

############################################################################

.scriptAptSetupLatestGCC: &scriptAptSetupLatestGCC |
    # scriptAptSetupLatestGCC
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq $( apt-cache search gcc 2> /dev/null | grep "^gcc-[1-9]\+ " 2> /dev/null | sort 2> /dev/null | head -n 1 2> /dev/null | awk '{ print $1 }' 2>/dev/null || echo gcc)
    ln -fs "$( ( ls -1 /usr/bin/gcc-* 2> /dev/null | grep 'gcc-[0-9]' 2> /dev/null | sort -r 2> /dev/null | head -n 1 2> /dev/null ) || echo /usr/bin/gcc)" /usr/bin/gcc-latest

############################################################################

.scriptSlackSetup: &scriptSlackSetup |
    # scriptSlackSetup
    (yes | slackpkg update) || (yes | slackpkg update)
    (yes | slackpkg upgrade slackpkg) || (yes | slackpkg upgrade slackpkg)
    (yes | slackpkg update) || (yes | slackpkg update)
    (yes | slackpkg upgrade-all) || (yes | slackpkg upgrade-all)
    export ARGS="libffi cscope flex bison ed patch cpio guile gc glibc binutils kernel-headers nghttp2 brotli sasl libuv ca-certificates perl git gcc llvm lzip wget curl make psmisc moreutils gnupg util-linux pigz autoconf autoconf-archive bzip2 ccache popt cmake libarchive openssl lz4 libxml2 automake libtool infozip"; (yes | slackpkg install ${ARGS:?}) || (yes | slackpkg install ${ARGS:?})
    /usr/sbin/update-ca-certificates --fresh 2> /dev/null || true > /dev/null 2>&1

############################################################################

.scriptExtraInfo: &scriptExtraInfo |
    # scriptExtraInfo
    uname -a 2> /dev/null || true > /dev/null 2>&1
    lsb_release -d 2> /dev/null || true > /dev/null 2>&1
    cat /etc/*elease 2> /dev/null || true > /dev/null 2>&1
    uptime 2> /dev/null || true > /dev/null 2>&1
    lscpu 2> /dev/null | grep -v Vulnerability 2> /dev/null || true > /dev/null 2>&1
    df . 2> /dev/null || true > /dev/null 2>&1
    free 2> /dev/null || true > /dev/null 2>&1

############################################################################

.scriptDPS8Mods: &scriptDPS8Mods |
    # scriptDPS8Mods
    echo "The DPS8M Development Team - CI/CD Test Build ${CI_JOB_ID:-}" 2> /dev/null | tee .builder.txt 2> /dev/null || true > /dev/null 2>&1

############################################################################

.scriptAlpineSetup: &scriptAlpineSetup |
    # scriptAlpineSetup 
    apk update || apk update
    apk upgrade || apk upgrade
    export ARGS="libc-dev musl-dev gcc g++ clang git unzip zip curl wget sed tar gawk file bash dash coreutils make ctags lzip gzip libuv-dev libuv-static psmisc grep mawk moreutils gnupg libtool util-linux pigz autoconf autoconf-archive bzip2 ccache popt-dev cmake ninja"; apk add ${ARGS:?} || apk add ${ARGS:?}

############################################################################

.scriptOSUSESetup: &scriptOSUSESetup |
    # scriptOSUSESetup
    zypper -qn update || zypper -qn update
    export ARGS="gcc clang git unzip zip curl wget sed tar gawk file bash dash coreutils make ctags lzip libuv-devel psmisc grep moreutils gnupg libtool util-linux pigz autoconf autoconf-archive bzip2 ccache popt-devel cmake ninja"; zypper -qn install ${ARGS:?} || zypper -qn install ${ARGS:?}

############################################################################

.scriptVoidSetup: &scriptVoidSetup |
    # scriptVoidSetup
    xbps-install -Suy xbps || xbps-install -Suy xbps
    xbps-install -Suy || xbps-install -Suy
    export ARGS="mksh gcc clang git unzip zip curl wget sed tar gawk file bash dash coreutils make ctags lzip gzip libuv-devel psmisc grep mawk moreutils gnupg libtool util-linux pigz autoconf autoconf-archive bzip2 ccache popt-devel cmake ninja"; xbps-install -Suy ${ARGS:?} || xbps-install -Suy ${ARGS:?}

############################################################################

.scriptAptSetup: &scriptAptSetup |
    # scriptAptSetup
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update -y -qq
    export ARGS="gawk moreutils apt-utils dash gnupg2 bash curl wget git lsb-release software-properties-common time"; env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?} || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?}
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade -y -qq
    env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y -qq
    export ARGS="lzip dash bash wget gcc libtool unzip autoconf-archive util-linux psmisc clang zip pigz make"; env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?} || env DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install -y -qq ${ARGS:?}

############################################################################

.scriptOUL8Setup: &scriptOUL8Setup |
    # scriptOUL8Setup
    dnf -y --refresh --allowerasing --nobest install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm || dnf -y --refresh --allowerasing install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    echo '[OL8_codeready_builder]' > /etc/yum.repos.d/codeready_builder.repo
    echo 'name=OL8_codeready_builder' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'baseurl=https://yum.oracle.com/repo/OracleLinux/OL8/codeready/builder/x86_64/' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'enabled=1' >> /etc/yum.repos.d/codeready_builder.repo
    echo 'gpgcheck=0' >> /etc/yum.repos.d/codeready_builder.repo

############################################################################

.scriptAlma8Setup: &scriptAlma8Setup |
    # scriptAlma8Setup
    dnf -y --refresh --allowerasing --best --disablerepo=appstream update || dnf -y --refresh --allowerasing --nobest --disablerepo=appstream update
    dnf -y --allowerasing --best install epel-release || dnf -y --allowerasing --nobest epel-release
    curl -fsSL https://repo.almalinux.org/almalinux/8/devel/almalinux-devel.repo -o /etc/yum.repos.d/almalinux-devel.repo || curl -fsSL https://repo.almalinux.org/almalinux/8/devel/almalinux-devel.repo -o /etc/yum.repos.d/almalinux-devel.repo
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-devel.repo
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-powertools.repo
    sed -i '0,/enabled=0/s//enabled=1/' /etc/yum.repos.d/almalinux-ha.repo

############################################################################

.scriptAmazonSetup: &scriptAmazonSetup |
    # scriptAmazonSetup
    yum -q -y update || yum -q -y update
    export ARGS="system-lsb lzip libuv-devel libtool unzip autoconf autoconf-archive util-linux psmisc zip pigz make dash gnupg2 bash curl wget git redhat-lsb time gcc clang"; yum -q -y install ${ARGS:?} || yum -q -y install ${ARGS:?}

############################################################################

.scriptDnfSetup: &scriptDnfSetup |
    # scriptDnfSetup
    dnf -y --refresh --allowerasing --best update || dnf -y --refresh --allowerasing --nobest update
    export ARGS="lzip libuv-devel libtool unzip autoconf autoconf-archive util-linux psmisc zip pigz make dash gnupg2 bash curl wget git redhat-lsb time gcc clang"; dnf -y --allowerasing --best install ${ARGS:?} || dnf -y --allowerasing --nobest install ${ARGS:?}

############################################################################

stages:
  - build

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, TESTING:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" TESTING=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, TESTING TRACKER HDBG WAM ISOLTS:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" TESTING=1 TRACKER=1 HDBG=1 WAM=1 W=1 V=1 ISOLTS=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, L68:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" L68=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, gcc, libuv/git:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestGCC
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvGCClatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc-latest LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, NO_LOCKLESS:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" NO_LOCKLESS=1 LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, NO_LOCKLESS ROUND_ROBIN:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" NO_LOCKLESS=1 LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" ROUND_ROBIN=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Debian sid, clang/git, libuv/git, L68 NO_LOCKLESS:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptSetupLatestClang
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvCLANGlatest
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang-latest LIBUV="/usr/local/lib/libuv.a -lpthread" NO_LOCKLESS=1 LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" L68=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Windows/x86_64, Debian, MinGW64-gcc, libuv/git:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptAptInstallMinGW64
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvMGW64
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC="x86_64-w64-mingw32-gcc -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/dps8m.zip
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Source Kit:
  image: debian:sid
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptCommon
    - sh -x -c 'make dist V=1 COMPRESS="pigz -9 -f" COMPRESSXT="gz" -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/sources.tar.gz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu LTS, clang:
  image: ubuntu:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptCommon
    - *scriptAptInstallLibuv1
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu LTS, gcc:
  image: ubuntu:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptCommon
    - *scriptAptInstallLibuv1
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, clang:
  image: fedora:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Fedora, gcc:
  image: fedora:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Oracle Linux 8, clang:
  image: oraclelinux:8
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOUL8Setup
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Oracle Linux 8, gcc:
  image: oraclelinux:8
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOUL8Setup
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu, clang:
  image: ubuntu:rolling
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptCommon
    - *scriptAptInstallLibuv1
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Ubuntu, gcc:
  image: ubuntu:rolling
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAptSetup
    - *scriptCommon
    - *scriptAptInstallLibuv1
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Windows/x86_64, Ubuntu, LLVM-MinGW, libuv/git:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvLLVMMGW64-x86_64
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC="x86_64-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/dps8m.zip
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Windows/ARM64, Ubuntu, LLVM-MinGW, libuv/git:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvLLVMMGW64-aarch64
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC="aarch64-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/dps8m.zip
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, AlmaLinux 8, clang:
  image: almalinux:8
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAlma8Setup
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, AlmaLinux 8, gcc:
  image: almalinux:8
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAlma8Setup
    - *scriptDnfSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Alpine Edge, gcc, mimalloc, static:
  image:
    name: alpine:edge
    entrypoint: [ '/bin/sh', '-c', 'sed -i "s/https/http/g" /etc/apk/repositories; apk update; apk update; apk add bash; apk add bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAlpineSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c '(CC=gcc git clone https://github.com/microsoft/mimalloc && cd mimalloc && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE="Release" -DMI_BUILD_STATIC=1 -DMI_LOCAL_DYNAMIC_TLS=1 -DMI_INSTALL_TOPLEVEL=1 -G Ninja && ninja && ninja test && ninja install)'
    - LD_PRELOAD=libmimalloc.so dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-L/usr/local/lib -lmimalloc -static -Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Alpine Edge, clang, mimalloc, static:
  image:
    name: alpine:edge
    entrypoint: [ '/bin/sh', '-c', 'sed -i "s/https/http/g" /etc/apk/repositories; apk update; apk update; apk add bash; apk add bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAlpineSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c '(CC=clang git clone https://github.com/microsoft/mimalloc && cd mimalloc && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE="Release" -DMI_BUILD_STATIC=1 -DMI_LOCAL_DYNAMIC_TLS=1 -DMI_INSTALL_TOPLEVEL=1 -G Ninja && ninja && ninja test && ninja install)'
    - LD_PRELOAD=libmimalloc.so dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-L/usr/local/lib -lmimalloc -static -Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void musl, gcc, mimalloc, static:
  image:
    name: voidlinux/voidlinux-musl:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptVoidSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c '(git clone https://github.com/microsoft/mimalloc && cd mimalloc && mkdir build && cd build && CC=gcc cmake .. -DCMAKE_BUILD_TYPE="Release" -DMI_BUILD_STATIC=1 -DMI_LOCAL_DYNAMIC_TLS=1 -DMI_INSTALL_TOPLEVEL=1 -G Ninja && ninja && ninja test && ninja install)'
    - LD_PRELOAD=libmimalloc.so dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-L/usr/local/lib -lmimalloc -static -Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void musl, clang, mimalloc, static:
  image:
    name: voidlinux/voidlinux-musl:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptVoidSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c '(git clone https://github.com/microsoft/mimalloc && cd mimalloc && mkdir build && cd build && CC=clang cmake .. -DCMAKE_BUILD_TYPE="Release" -DMI_BUILD_STATIC=1 -DMI_LOCAL_DYNAMIC_TLS=1 -DMI_INSTALL_TOPLEVEL=1 -G Ninja && ninja && ninja test && ninja install)'
    - LD_PRELOAD=libmimalloc.so dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-L/usr/local/lib -lmimalloc -static -Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void glibc, gcc:
  image:
    name: voidlinux/voidlinux:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptVoidSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Void glibc, clang:
  image:
    name: voidlinux/voidlinux:latest
    entrypoint: [ '/bin/sh', '-c', 'xbps-install -Suy xbps; xbps-install -Suy xbps; xbps-install -Suy bash; xbps-install -Suy bash && ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptVoidSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - dash -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - dash -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Amazon Linux, clang:
  image: amazonlinux:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAmazonSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Amazon Linux, gcc:
  image: amazonlinux:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptAmazonSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Windows/i686, Ubuntu, LLVM-MinGW, libuv/git:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvLLVMMGW64-i686
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC="i686-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread -D__int64_t=int64_t -D__MINGW64__" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections" NEED_128=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/dps8m.zip
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Windows/ARMv7, Ubuntu, LLVM-MinGW, libuv/git:
  image: mstorsjo/llvm-mingw:dev
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - *scriptBuildlibuvLLVMMGW64-armv7
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC="armv7-w64-mingw32-clang -I/usr/local/include -L/usr/local/lib -pthread -D__int64_t=int64_t -D__MINGW64__" CROSS="MINGW64" LIBUV="/usr/local/lib/libuv.a -lpthread" LDFLAGS="-Wl,--gc-sections" NEED_128=1 W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --output-sync --print-directory -k; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/dps8m.zip
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, OpenSUSE Tumbleweed, clang:
  image: opensuse/tumbleweed:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOSUSESetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, OpenSUSE Leap, clang:
  image: opensuse/leap:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOSUSESetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, OpenSUSE Tumbleweed, gcc:
  image: opensuse/tumbleweed:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOSUSESetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, OpenSUSE Leap, gcc:
  image: opensuse/leap:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptOSUSESetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Slackware64 Current, gcc:
  image: vbatts/slackware:current
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptSlackSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory --output-sync -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Slackware64 Current, clang:
  image: vbatts/slackware:current
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptSlackSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory --output-sync -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Slackware64, gcc:
  image: vbatts/slackware:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptSlackSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=gcc LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory --output-sync -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################

Linux/x86_64, Slackware64, clang:
  image: vbatts/slackware:latest
  stage: build
  tags:
    - Docker-amd64
  script:
    - *scriptSlackSetup
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - sh -x -c 'export CFLAGS="${CFLAGS:-} -Wall -Wextra -fdata-sections -ffunction-sections -Wno-unused-parameter -Wshadow -Wno-missing-field-initializers -Wno-sign-conversion -Wdouble-promotion -Wformat=2"; make CC=clang LDFLAGS="-Wl,--gc-sections -Wl,--print-gc-sections" W=1 V=1 -j $(grep -c "^model name" /proc/cpuinfo 2> /dev/null || echo "4") --print-directory --output-sync -k; exit "${?}"'
    - sh -x -c 'printf %s\\n "show version" | ./src/dps8/dps8 ; exit "${?}"'
    - *buildInfo
    - *compressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - /builds/dps8m/dps8m/src/dps8/dps8.lz
      - /builds/dps8m/dps8m/src/prt2pdf/prt2pdf.lz
      - /builds/dps8m/dps8m/src/punutil/punutil.lz
      - /builds/dps8m/dps8m/src/dps8/useddef.txt.lz
  retry: 2
  timeout: 40 minutes
  interruptible: true

############################################################################
