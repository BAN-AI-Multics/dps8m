# SPDX-License-Identifier: MIT-0
# scspell-id: 5a5d276b-f778-11ec-bbe8-80ee73e9b8e7
# Copyright (c) 2018-2019 Charles Anthony <charles.unix.pro@gmail.com>
# Copyright (c) 2019-2020 Eric Swenson <eric@swenson.org>
# Copyright (c) 2021-2022 Jeffrey H. Johnson <trnsz@pobox.com>
# Copyright (c) 2021-2025 The DPS8M Development Team

############################################################################

.scriptBuildInfo: &scriptBuildInfo |
    # *scriptBuildInfo - Show information on completed build
    echo -e "section_start:`date +%s`:buildinfo_section[collapsed=true]\r\e[0K\033[0;36mBuild Information ...\033[0m" || true
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && file ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && ldd ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe && file ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw && file ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw && ldd ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw.exe && file ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && file ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && ldd ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe && file ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && file ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && ldd ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe && file ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:buildinfo_section\r\e[0K" || true

############################################################################

.scriptCommon: &scriptCommon |
    # *scriptCommon - Show common CI/CD configuration information
    echo -e "section_start:`date +%s`:common_section[collapsed=false]\r\e[0K\033[0;36mCommon Information ...\033[0m" || true
    echo "Project Name                : ${CI_PROJECT_TITLE:-Unknown}"
    echo "Project Git Commit          : ${CI_COMMIT_SHA:-Unknown}"
    echo "Project Git Branch          : ${CI_COMMIT_BRANCH:-Unknown}"
    echo "GitLab CI User Details      : ${GITLAB_USER_LOGIN:-Unknown} - ${GITLAB_USER_NAME:-Unknown} (${GITLAB_USER_ID:-Unknown}) ${GITLAB_USER_EMAIL:-}"
    echo "GitLab CI Pipeline IID      : ${CI_PIPELINE_IID:-Unknown}"
    echo "GitLab CI Job Name          : ${CI_JOB_NAME:-Unknown}"
    echo "GitLab CI Job ID            : ${CI_JOB_ID:-Unknown}"
    echo "GitLab CI Job Stage         : ${CI_JOB_STAGE:-Unknown}"
    echo "GitLab CI Runner Details    : ${CI_RUNNER_VERSION:-Unknown} (${CI_RUNNER_REVISION:-Unknown})"
    echo "GitLab CI Project Directory : ${CI_PROJECT_DIR:-Unknown}"
    git status || true > /dev/null 2>&1
    ulimit -c 0 || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:common_section\r\e[0K" || true

############################################################################

.scriptCompressArtifacts: &scriptCompressArtifacts |
    # *scriptCompressArtifacts - Compress build artifacts
    echo -e "section_start:`date +%s`:compress_section[collapsed=true]\r\e[0K\033[0;36mCompress Artifacts ...\033[0m" || true
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8 && lzip -9v ${CI_PROJECT_DIR:?}/src/dps8/dps8 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw && lzip -9v ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf && lzip -9v ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil && lzip -9v ${CI_PROJECT_DIR:?}/src/punutil/punutil 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/dps8/dps8.exe  2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/tap2raw/tap2raw.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/prt2pdf/prt2pdf.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/src/punutil/punutil.exe 2> /dev/null || true > /dev/null 2>&1
    test -f ${CI_PROJECT_DIR:?}/libwinpthread-1.dll && zip -9 ${CI_PROJECT_DIR:?}/dps8m.zip ${CI_PROJECT_DIR:?}/libwinpthread-1.dll 2> /dev/null || true > /dev/null 2>&1
    echo -e "section_end:`date +%s`:compress_section\r\e[0K" || true

############################################################################

.scriptDPS8Mods: &scriptDPS8Mods |
    # *scriptDPS8Mods - Configure build for CI/CD environment ...
    echo -e "section_start:`date +%s`:dps8mods_section[collapsed=true]\r\e[0K\033[0;36mConfigure build system ...\033[0m" || true
    echo -n "Setting Build string ... "
    echo "The DPS8M Development Team - Build ${CI_PIPELINE_IID:-${CI_JOB_ID:-0}}" 2> /dev/null | tee .builder.txt 2> /dev/null || true > /dev/null 2>&1
    echo ""
    echo -e "section_end:`date +%s`:dps8mods_section\r\e[0K" || true

############################################################################

.scriptExtraInfo: &scriptExtraInfo |
    # *scriptExtraInfo - Show extra system information ...
    echo -e "section_start:`date +%s`:extrainfo_section[collapsed=true]\r\e[0K\033[0;36mExtra system information ...\033[0m" || true
    echo -n "uname -a         : "; uname -a 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "cat /etc/*elease : "; cat /etc/*elease 2> /dev/null | awk '{ print $0", " }' | xargs | sed 's/,$//' || true > /dev/null 2>&1; echo ""
    echo -n "uptime           : "; uptime 2> /dev/null || true > /dev/null 2>&1; echo ""
    echo -n "df               : "; df . 2> /dev/null | tail -1 || true > /dev/null 2>&1; echo ""
    echo -n "git status       : "; git status 2> /dev/null | awk '{ print $0", " }' | xargs | sed 's/,$//' || true > /dev/null 2>&1; echo ""
    echo -n "ulimit -a        : "; ulimit -a 2> /dev/null | awk '{ print $0", " }' | xargs | sed 's/,$//' || true > /dev/null 2>&1; echo ""
    echo -e "section_end:`date +%s`:extrainfo_section\r\e[0K" || true

############################################################################

.scriptSanity: &scriptSanity |
    # *scriptSanity - Ensure commit is on a branch and valid working directory
    echo -e "section_start:`date +%s`:sanity_section[collapsed=true]\r\e[0K\033[0;36mSanity Check ...\033[0m" || true
    echo "Checking that a branch exists ..."
    echo "${CI_COMMIT_BRANCH:?}" > /dev/null 2>&1
    echo "Checking for a valid working directory ..."
    IPWD="$(pwd -P)" && export IPWD && if [ "X${CI_PROJECT_DIR:?}X" != "X${IPWD:?}X" ]; then { exit 1; }; fi
    echo "Checking out branch \"${CI_COMMIT_BRANCH:?}\" with git ..."
    git checkout -b "${CI_COMMIT_BRANCH:?}"
    echo -e "section_end:`date +%s`:sanity_section\r\e[0K" || true

############################################################################

.scriptVerifyVersion: &scriptVerifyVersion |
    # *scriptVerifyVersion - Smoke-test ...
    echo -e "section_start:`date +%s`:version_section[collapsed=true]\r\e[0K\033[0;36mVerify version ...\033[0m" || true
    ./src/dps8/dps8 --version | grep 'imulator'
    printf '%s\n' "SHOW BUILDINFO" "ECHO" "SHOW VERSION" | ./src/dps8/dps8 -t
    echo -e "section_end:`date +%s`:version_section\r\e[0K" || true

############################################################################
# Workflow

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /-noci$/
      when: never
    - if: $CI_COMMIT_BRANCH =~ /-no_ci$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "chat"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external"
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

############################################################################
# CI/CD Stages

stages:
  - src_test
  - build
  - cmb_test
  - test
  - ci_test
  - docs
  - nsis_installer
  - coverity_test
  - deploy
  - trigger

############################################################################
# Jobs

Cross-compiled release binaries:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  parallel: 8
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - |
      # Start of Configuration ...
      echo -e "section_start:`date +%s`:config_section[collapsed=true]\r\e[0K\033[0;36mConfiguration ...\033[0m" || true
    - ulimit -c 0 2> /dev/null || true > /dev/null 2>&1
    - export CI_SKIP_MKREBUILD=1
    - mkdir -p /tmp 2> /dev/null || true > /dev/null 2>&1
    - PARALLEL_CI_COUNT=0
    - export DISTDIR="dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - export LOCAL_CLONEOPTS=""
    - git config --global user.name "GitLab CI" || true
    - git config --global user.email "ci@example.com" || true
    - |
      # End of Configuration ...
      echo -e "section_end:`date +%s`:config_section\r\e[0K" || true
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-unknown-haiku.tar.lz.aa https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-unknown-haiku.tar.lz.ab | lzip -dc | tar xf - ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-unknown-haiku/generated/cross-tools-x86_64/bin/:${PATH:-} LOCAL_CONFOPTS="--host=x86_64-unknown-haiku" CC=/home/jhj/x-tools/x86_64-unknown-haiku/generated/cross-tools-x86_64/bin//x86_64-unknown-haiku-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CC=/home/jhj/x-tools/x86_64-unknown-haiku/generated/cross-tools-x86_64/bin/x86_64-unknown-haiku-gcc gmake -j $(nproc) LIBS="../../libuv-local/local/lib/libuv.a -lnetwork" EMPTYLIBS="-lbsd"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-haiku-x64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-haiku-x64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/x86_64-unknown-haiku/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-gcc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-cc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} LOCAL_CONFOPTS="--host=x86_64-linux-android24" CFLAGS="-include limits.h" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-clang gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} CFLAGS="-DFORCE_STATIC=1" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android24-clang LIBUTIL="" gmake -j $(nproc) LIBS="../../libuv-local/libuv/../local/lib/libuv.a -ldl"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-ndk24-x64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-ndk24-x64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-gcc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-cc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} LOCAL_CONFOPTS="--host=i686-linux-android24" CFLAGS="-include limits.h" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-clang gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} CFLAGS="-DFORCE_STATIC=1" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android24-clang LIBUTIL="" gmake -j $(nproc) LIBS="../../libuv-local/libuv/../local/lib/libuv.a -ldl" NEED_128=1; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-ndk24-x32.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-ndk24-x32.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-gcc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-cc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} LOCAL_CONFOPTS="--host=armv7a-linux-androideabi24" CFLAGS="-include limits.h" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} CFLAGS="-DFORCE_STATIC=1" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi24-clang gmake -j $(nproc) LIBS="../../libuv-local/libuv/../local/lib/libuv.a -ldl" NEED_128=1; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-ndk24-a32.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-ndk24-a32.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-gcc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ln -fs /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang /opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-cc; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} LOCAL_CONFOPTS="--host=aarch64-linux-android24" CFLAGS="-include limits.h" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH:-} CFLAGS="-DFORCE_STATIC=1" CC=/opt/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android24-clang LIBUTIL="" gmake -j $(nproc) LIBS="../../libuv-local/libuv/../local/lib/libuv.a -ldl"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-ndk24-a64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-ndk24-a64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/s390x-ibm-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/s390x-ibm-linux-musl/bin:${PATH:-} LOCAL_CONFOPTS="--host=s390x-ibm-linux-musl" CC=/home/jhj/x-tools/s390x-ibm-linux-musl/bin/s390x-ibm-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CFLAGS="-DFORCE_STATIC=1" PATH=/home/jhj/x-tools/s390x-ibm-linux-musl/bin:${PATH:-} CC=/home/jhj/x-tools/s390x-ibm-linux-musl/bin/s390x-ibm-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-390.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-390.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/s390x-ibm-linux-musl; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/riscv64-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/riscv64-unknown-linux-musl/bin:${PATH:-} LOCAL_CONFOPTS="--host=riscv64-unknown-linux-musl" CC=/home/jhj/x-tools/riscv64-unknown-linux-musl/bin/riscv64-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CFLAGS="-DFORCE_STATIC=1" PATH=/home/jhj/x-tools/riscv64-unknown-linux-musl/bin:${PATH:-} CC=/home/jhj/x-tools/riscv64-unknown-linux-musl/bin/riscv64-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc) LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-r64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-r64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/riscv64-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/powerpc-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=740; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/powerpc-unknown-linux-musl/bin:${PATH:-} CFLAGS="-mcpu=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=powerpc-unknown-linux-musl" CC=/home/jhj/x-tools/powerpc-unknown-linux-musl/bin/powerpc-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/powerpc-unknown-linux-musl/bin:${PATH:-} CFLAGS="-mcpu=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/powerpc-unknown-linux-musl/bin/powerpc-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-740.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-740.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/powerpc-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/arm-unknown-linux-musleabi.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE="armv6"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=arm-unknown-linux-musleabi" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-a6s.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-a6s.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE="armv6+fp"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=arm-unknown-linux-musleabi" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-a6f.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-a6f.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE="armv7-a"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=arm-unknown-linux-musleabi" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-a7s.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-a7s.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE="armv7-a+fp"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=arm-unknown-linux-musleabi" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/arm-unknown-linux-musleabi/bin/arm-unknown-linux-musleabi-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-a7f.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-a7f.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/arm-unknown-linux-musleabi/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/aarch64-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE="armv8-a"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/aarch64-unknown-linux-musl/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=aarch64-unknown-linux-musl" CC=/home/jhj/x-tools/aarch64-unknown-linux-musl/bin/aarch64-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/aarch64-unknown-linux-musl/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/aarch64-unknown-linux-musl/bin/aarch64-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-a8a.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-a8a.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/aarch64-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/i386-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/i386-unknown-linux-musl/bin:${PATH:-} CFLAGS="-march=i686" LOCAL_CONFOPTS="--host=i386-unknown-linux-musl" CC=/home/jhj/x-tools/i386-unknown-linux-musl/bin/i386-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/i386-unknown-linux-musl/bin:${PATH:-} CFLAGS="-march=i686 -DFORCE_STATIC=1" CC=/home/jhj/x-tools/i386-unknown-linux-musl/bin/i386-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-686.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-686.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/i386-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=x86-64; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-unknown-linux-musl/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE} -DFORCE_STATIC=1" LOCAL_CONFOPTS="--host=x86_64-unknown-linux-musl" CC=/home/jhj/x-tools/x86_64-unknown-linux-musl/bin/x86_64-unknown-linux-musl-gcc LDFLAGS="-static" LIBUVVER="libuvdev" ./src/pgo/Build.PGO.GCC.sh -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-641.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-641.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/x86_64-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/powerpc64le-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=power8; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/powerpc64le-unknown-linux-musl/bin:${PATH:-} CFLAGS="-mcpu=${DPS8_CPUTYPE}" LOCAL_CONFOPTS="--host=powerpc64le-unknown-linux-musl" CC=/home/jhj/x-tools/powerpc64le-unknown-linux-musl/bin/powerpc64le-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/powerpc64le-unknown-linux-musl/bin:${PATH:-} CFLAGS="-mcpu=${DPS8_CPUTYPE} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/powerpc64le-unknown-linux-musl/bin/powerpc64le-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-pw8.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-pw8.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/powerpc64le-unknown-linux-musl/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/sparc64-local-linux-gnu.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc64-local-linux-gnu/bin:${PATH:-} LOCAL_CONFOPTS="--host=sparc64-local-linux-gnu" CC=/home/jhj/x-tools/sparc64-local-linux-gnu/bin/sparc64-local-linux-gnu-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc64-local-linux-gnu/bin:${PATH:-} CC=/home/jhj/x-tools/sparc64-local-linux-gnu/bin/sparc64-local-linux-gnu-gcc gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-s64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-s64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/sparc64-local-linux-gnu/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/sparc-local-linux-gnu.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc-local-linux-gnu/bin:${PATH:-} LOCAL_CONFOPTS="--host=sparc-local-linux-gnu" CC=/home/jhj/x-tools/sparc-local-linux-gnu/bin/sparc-local-linux-gnu-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc-local-linux-gnu/bin:${PATH:-} CC=/home/jhj/x-tools/sparc-local-linux-gnu/bin/sparc-local-linux-gnu-gcc gmake -j $(nproc) NEED_128=1 LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-s32.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-s32.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/sparc-local-linux-gnu/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/loongarch64-unknown-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unset DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { unexport DPS8_CPUTYPE > /dev/null 2>&1 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/loongarch64-unknown-linux-musl/bin:${PATH:-} LOCAL_CONFOPTS="--host=loongarch64-unknown-linux-musl" CC=/home/jhj/x-tools/loongarch64-unknown-linux-musl/bin/loongarch64-unknown-linux-musl-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CFLAGS="-DFORCE_STATIC=1" PATH=/home/jhj/x-tools/loongarch64-unknown-linux-musl/bin:${PATH:-} CC=/home/jhj/x-tools/loongarch64-unknown-linux-musl/bin/loongarch64-unknown-linux-musl-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-l64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-l64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/loongarch64-unknown-linux-musl; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd / && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/amd64-unknown-freebsd13.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=x86-64; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-AMD64-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=amd64-unknown-freebsd13" CC=/home/jhj/src/FreeBSD-AMD64-crossgcc/out/bin/amd64-unknown-freebsd13-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-AMD64-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/src/FreeBSD-AMD64-crossgcc/out/bin/amd64-unknown-freebsd13-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-fbd13-x61.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-fbd13-x61.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/src/FreeBSD-AMD64-crossgcc/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd / && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/i386-unknown-freebsd13.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=i686; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-i386-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=i386-unknown-freebsd13" CC=/home/jhj/src/FreeBSD-i386-crossgcc/out/bin/i386-unknown-freebsd13-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-i386-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/src/FreeBSD-i386-crossgcc/out/bin/i386-unknown-freebsd13-gcc LDFLAGS="-static" gmake -j $(nproc) NEED_128=1 ATOMICS=GNU LOCALLIBS="-latomic"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-fbd13-x32.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-fbd13-x32.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/src/FreeBSD-i386-crossgcc/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd / && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/aarch64-local-freebsd13.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=armv8-a; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-ARM64-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=aarch64-local-freebsd13" CC=/home/jhj/src/FreeBSD-ARM64-crossgcc/out/bin/aarch64-local-freebsd13-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/src/FreeBSD-ARM64-crossgcc/out/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/src/FreeBSD-ARM64-crossgcc/out/bin/aarch64-local-freebsd13-gcc LDFLAGS="-static" gmake -j $(nproc); }; fi
    - mkdir -p "src/${DISTDIR:?}"
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-fbd13-a64.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-fbd13-a64.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/src/FreeBSD-ARM64-crossgcc/; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-illumos.tar.lz.aa https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-illumos.tar.lz.ab https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-illumos.tar.lz.ac | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=x86-64; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=x86_64-pc-solaris2.11" CC=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin/x86_64-pc-solaris2.11-gcc gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" CC=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin/x86_64-pc-solaris2.11-gcc gmake -j $(nproc) LOCALLIBS="-lmtmalloc -lmp -lmd -lsocket -lnsl -lm -lpthread"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-iloi-641.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-iloi-641.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { chmod u+rwx /home/jhj/x-tools/x86_64-pc-solaris2.11 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/x86_64-pc-solaris2.11; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.aa https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.ab https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.ac https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.ad https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.ae https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/x86_64-pc-solaris2.11.tar.lz.af | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=x86-64; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=x86_64-pc-solaris2.11" CC=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin/x86_64-pc-solaris2.11-gcc gmake libuvrel -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin:${PATH:-} CFLAGS="-march=${DPS8_CPUTYPE:?}" CC=/home/jhj/x-tools/x86_64-pc-solaris2.11/bin/x86_64-pc-solaris2.11-gcc gmake -j $(nproc) LOCALLIBS="-lmtmalloc -lmp -lmd -lsocket -lnsl -lm -lpthread" LIBUTIL="" LIBUTIL="" OVR_FLOCK=""; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-s114-641.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-s114-641.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { chmod -R u+rwx /home/jhj/x-tools/x86_64-pc-solaris2.11 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/x86_64-pc-solaris2.11; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/powerpc64-local-linux-musl.tar.lz | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=970; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH="/home/jhj/x-tools/powerpc64-local-linux-musl/bin:${PATH}" CC="/home/jhj/x-tools/powerpc64-local-linux-musl/bin/powerpc64-local-linux-musl-gcc" CFLAGS="-mcpu=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=powerpc64-local-linux-musl" gmake libuvdev -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH="/home/jhj/x-tools/powerpc64-local-linux-musl/bin:${PATH}" CC="/home/jhj/x-tools/powerpc64-local-linux-musl/bin/powerpc64-local-linux-musl-gcc" CFLAGS="-mcpu=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" LDFLAGS="-static" gmake -j $(nproc); }; fi
    - mkdir -p "src/${DISTDIR:?}"
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-linux-970.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-970.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { chmod -R u+rwx /home/jhj/x-tools/powerpc64-local-linux-musl || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/powerpc64-local-linux-musl || true; }; fi
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/sparc64-sun-solaris2.11.tar.lz.aa https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/sparc64-sun-solaris2.11.tar.lz.ab https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/sparc64-sun-solaris2.11.tar.lz.ac https://gitlab.com/dps8m/ci-tools/-/releases/1/downloads/sparc64-sun-solaris2.11.tar.lz.ad | lzip -dc | tar xf - ); }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { export DPS8_CPUTYPE=v9; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc64-sun-solaris2.11/sparc64-sun-solaris2.11/bin:/home/jhj/x-tools/sparc64-sun-solaris2.11/sparc64-sun-solaris2.11/bin:/home/jhj/x-tools/sparc64-sun-solaris2.11/bin:${PATH:-} CFLAGS="-static-libgcc -m64 -mcpu=${DPS8_CPUTYPE:?}" LOCAL_CONFOPTS="--host=sparc64-sun-solaris2.11" CC=/home/jhj/x-tools/sparc64-sun-solaris2.11/bin/sparc64-sun-solaris2.11-gcc gmake libuvrel -j $(nproc); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env PATH=/home/jhj/x-tools/sparc64-sun-solaris2.11/sparc64-sun-solaris2.11/bin:/home/jhj/x-tools/sparc64-sun-solaris2.11/sparc64-sun-solaris2.11/bin:/home/jhj/x-tools/sparc64-sun-solaris2.11/bin:${PATH:-} CFLAGS="-static-libgcc -m64 -mcpu=${DPS8_CPUTYPE:?} -DFORCE_STATIC=1" CC=/home/jhj/x-tools/sparc64-sun-solaris2.11/bin/sparc64-sun-solaris2.11-gcc gmake -j $(nproc) LOCALLIBS="-lmtmalloc -lmp -lmd -lsocket -lnsl -lm -lpthread" LIBUTIL="" OVR_FLOCK=""; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-s114-sv9.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-s114-sv9.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { chmod -R u+rwx /home/jhj/x-tools/sparc64-sun-solaris2.11 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/sparc64-sun-solaris2.11 || true; }; fi
    - *scriptDPS8Mods
    - PARALLEL_CI_COUNT=$(( PARALLEL_CI_COUNT + 1 )) ; test ${PARALLEL_CI_COUNT:?} -gt ${CI_NODE_TOTAL:?} && PARALLEL_CI_COUNT=1 || true
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( mkdir -p /home/jhj/x-tools && cd /home/jhj/x-tools && curl -fsSL https://gitlab.com/dps8m/dps8m-archive/-/raw/master/CI/toolchains/MacOSX13.1-Xcode14.3.tar.lz | lzip -dc | tar xf - && ln -s MacOSX13.1-Xcode14.3 MacOSX.sdk; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { mkdir -p "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { gmake distclean; env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=x86_64-apple-darwin17.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=core2" LOCAL_CONFOPTS="--host=x86_64-apple-darwin17.0.0" gmake libuvdev -j $(nproc) && llvm-ranlib libuv-local/libuv/../local/lib/libuv.a; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=x86_64-apple-darwin17.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=core2" LOCAL_CONFOPTS="--host=x86_64-apple-darwin17.0.0" gmake -j $(nproc) LIBRT="" && cp -f src/dps8/dps8 dps8.x86_64 && cp -f src/punutil/punutil punutil.x86_64 && cp -f src/tap2raw/tap2raw tap2raw.x86_64 && cp -f src/prt2pdf/prt2pdf prt2pdf.x86_64 && gmake distclean; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=x86_64-apple-darwin17.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=haswell" LOCAL_CONFOPTS="--host=x86_64-apple-darwin17.0.0" gmake libuvdev -j $(nproc) && llvm-ranlib libuv-local/libuv/../local/lib/libuv.a; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=x86_64-apple-darwin17.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=haswell" LOCAL_CONFOPTS="--host=x86_64-apple-darwin17.0.0" gmake -j $(nproc) LIBRT="" && cp -f src/dps8/dps8 dps8.x86_64h && cp -f src/punutil/punutil punutil.x86_64h && cp -f src/tap2raw/tap2raw tap2raw.x86_64h && cp -f src/prt2pdf/prt2pdf prt2pdf.x86_64h && sed -i'' -e 's/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x03/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x08/' dps8.x86_64h && sed -i'' -e 's/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x03/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x08/' prt2pdf.x86_64h && sed -i'' -e 's/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x03/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x08/' tap2raw.x86_64h && sed -i'' -e 's/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x03/\xCF\xFA\xED\xFE\x07\x00\x00\x01\x08/' punutil.x86_64h && gmake distclean; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=arm64-apple-darwin20.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=armv8.4-a+simd+nosve+nosve2" LOCAL_CONFOPTS="--host=arm64-apple-darwin20.0.0" gmake libuvdev -j $(nproc) && llvm-ranlib libuv-local/libuv/../local/lib/libuv.a; }; fi
    - *scriptDPS8Mods
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { env CI_SKIP_MKREBUILD=1 PATH="/home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin:${PATH:?}" CSTD="c11" CC="clang -Wno-macro-redefined -Wno-typedef-redefinition -Wno-nullability-extension -Wno-unused-command-line-argument -Wno-expansion-to-defined -Wno-nullability-completeness -m64 -fpic -fPIC --target=arm64-apple-darwin20.0.0 -B/home/jhj/x-tools/MacOSX.sdk/usr/lib -L/home/jhj/x-tools/MacOSX.sdk/usr/lib -I/home/jhj/x-tools/MacOSX.sdk/usr/include -fuse-ld=lld -fno-stack-protector -march=armv8.4-a+simd+nosve+nosve2" LOCAL_CONFOPTS="--host=arm64-apple-darwin20.0.0" gmake -j $(nproc) LIBRT="" && cp -f src/dps8/dps8 dps8.arm64 && cp -f src/punutil/punutil punutil.arm64 && cp -f src/tap2raw/tap2raw tap2raw.arm64 && cp -f src/prt2pdf/prt2pdf prt2pdf.arm64 && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/lipo -create -output "dps8" "dps8.x86_64" "dps8.x86_64h" "dps8.arm64" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/lipo -create -output "tap2raw" "tap2raw.x86_64" "tap2raw.x86_64h" "tap2raw.arm64" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/lipo -create -output "prt2pdf" "prt2pdf.x86_64" "prt2pdf.x86_64h" "prt2pdf.arm64" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/lipo -create -output "punutil" "punutil.x86_64" "punutil.x86_64h" "punutil.arm64" && env rm -f *.x86_64 *.x86_64h *.arm64 && mv -f "dps8" "tap2raw" "prt2pdf" "punutil" "src/${DISTDIR:?}" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/otool -l "src/${DISTDIR:?}/dps8" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/otool -l "src/${DISTDIR:?}/prt2pdf" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/otool -l "src/${DISTDIR:?}/tap2raw" && /home/jhj/x-tools/MacOSX13.1-Xcode14.3/linux64bin/otool -l "src/${DISTDIR:?}/punutil"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { cp -f docs/txt/README-macOS.txt docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { ( cd src && tar cf ../dps8m-git-macos-uni.tar "./${DISTDIR:?}"; ); }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-macos-uni.tar; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf "src/${DISTDIR:?}"; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { git clean -fdxq -e '*.tar*' -e 'dps8m*'; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { chmod -R u+rwx /home/jhj/x-tools/MacOSX13.1-Xcode14.3 || true; }; fi
    - if [ ${PARALLEL_CI_COUNT:?} -eq ${CI_NODE_INDEX:?} ]; then { rm -rf /home/jhj/x-tools/MacOSX13.1-Xcode14.3 || true; }; fi
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m-git-macos-uni.tar.gz
      - dps8m-git-s114-sv9.tar.gz
      - dps8m-git-linux-970.tar.gz
      - dps8m-git-iloi-641.tar.gz
      - dps8m-git-s114-641.tar.gz
      - dps8m-git-fbd13-a64.tar.gz
      - dps8m-git-fbd13-x61.tar.gz
      - dps8m-git-fbd13-x32.tar.gz
      - dps8m-git-linux-l64.tar.gz
      - dps8m-git-linux-pw8.tar.gz
      - dps8m-git-linux-s32.tar.gz
      - dps8m-git-linux-s64.tar.gz
      - dps8m-git-linux-641.tar.gz
      - dps8m-git-linux-a8a.tar.gz
      - dps8m-git-linux-a7f.tar.gz
      - dps8m-git-linux-a7s.tar.gz
      - dps8m-git-linux-a6f.tar.gz
      - dps8m-git-linux-a6s.tar.gz
      - dps8m-git-linux-740.tar.gz
      - dps8m-git-linux-r64.tar.gz
      - dps8m-git-linux-390.tar.gz
      - dps8m-git-ndk24-a64.tar.gz
      - dps8m-git-ndk24-a32.tar.gz
      - dps8m-git-ndk24-x64.tar.gz
      - dps8m-git-ndk24-x32.tar.gz
      - dps8m-git-haiku-x64.tar.gz
      - dps8m-git-linux-686.tar.gz
  retry: 2
  timeout: 480 minutes
  interruptible: true

############################################################################

KVX binaries:
  image: registry.gitlab.com/dps8m/dps8m/kvx:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - |
      # Start of Configuration ...
      echo -e "section_start:`date +%s`:config_section[collapsed=true]\r\e[0K\033[0;36mConfiguration ...\033[0m" || true
    - ulimit -c 0 2> /dev/null || true > /dev/null 2>&1
    - export CI_SKIP_MKREBUILD=1
    - mkdir -p /tmp 2> /dev/null || true > /dev/null 2>&1
    - export DISTDIR="dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - export LOCAL_CLONEOPTS=""
    - git config --global user.name "GitLab CI" || true
    - git config --global user.email "ci@example.com" || true
    - |
      # End of Configuration ...
      echo -e "section_end:`date +%s`:config_section\r\e[0K" || true
    - *scriptDPS8Mods
    - mkdir -p "/home/jhj/src/kalray/buildroot/build_kvx"
    - ln -s "${HOME}/x-tools/kvx-buildroot-linux-uclibc" "/home/jhj/src/kalray/buildroot/build_kvx/host"
    - export LDFLAGS="-static"
    - export CFLAGS="-DFORCE_STATIC=1"
    - export PATH="${HOME}/x-tools/kvx-buildroot-linux-uclibc/bin:${PATH}"
    - export CC="${HOME}/x-tools/kvx-buildroot-linux-uclibc/bin/kvx-linux-cc"
    - env LOCAL_CONFOPTS="--host=kvx-linux" gmake libuvdev -j $(nproc)
    - env NO_LOCALE=1 gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-kvx3.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-kvx3.tar
    - rm -rf "src/${DISTDIR:?}"
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m-git-linux-kvx3.tar.gz
  retry: 2
  timeout: 480 minutes
  interruptible: true

############################################################################

Elbrus binaries:
  image: registry.gitlab.com/dps8m/dps8m/mcst:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - |
      # Start of Configuration ...
      echo -e "section_start:`date +%s`:config_section[collapsed=true]\r\e[0K\033[0;36mConfiguration ...\033[0m" || true
    - ulimit -c 0 2> /dev/null || true > /dev/null 2>&1
    - export CI_SKIP_MKREBUILD=1
    - mkdir -p /tmp 2> /dev/null || true > /dev/null 2>&1
    - export DISTDIR="dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - export LOCAL_CLONEOPTS=""
    - git config --global user.name "GitLab CI" || true
    - git config --global user.email "ci@example.com" || true
    - |
      # End of Configuration ...
      echo -e "section_end:`date +%s`:config_section\r\e[0K" || true
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v3.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v3.5.10/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v3.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v3.5.10/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2kv3.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2kv3.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v4.1c+.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v4.1c+.5.10/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v4.1c+.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v4.1c+.5.10/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2k1c.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2k1c.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v4.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v4.5.10/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v4.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v4.5.10/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2kv4.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2kv4.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v5.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v5.5.10/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v5.5.10/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v5.5.10/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2kv5.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2kv5.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e16c/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e16c/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e16c/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e16c/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2k6c.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2k6c.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
    - *scriptDPS8Mods
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e2c3/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e2c3/bin/lcc LOCAL_CONFOPTS="--host=e2k-linux" gmake libuvdev -j $(nproc)
    - env PATH=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e2c3/bin.toolchain:$PATH CC=/opt/mcst/lcc-1.27.21.e2k-v6.5.10-e2c3/bin/lcc gmake -j $(nproc)
    - mkdir -p "src/${DISTDIR:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/${DISTDIR:?}"
    - cp -f src/dps8/dps8 src/tap2raw/tap2raw src/prt2pdf/prt2pdf src/punutil/punutil "src/${DISTDIR:?}"
    - ( cd src && tar cf ../dps8m-git-linux-e2k63.tar "./${DISTDIR:?}"; )
    - pigz -C "${CI_COMMIT_SHA:?}" -9 -f -m -n dps8m-git-linux-e2k63.tar
    - rm -rf "src/${DISTDIR:?}"
    - git clean -fdxq -e '*.tar*' -e 'dps8m*'
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m-git-linux-e2kv3.tar.gz
      - dps8m-git-linux-e2kv4.tar.gz
      - dps8m-git-linux-e2k1c.tar.gz
      - dps8m-git-linux-e2kv5.tar.gz
      - dps8m-git-linux-e2k6c.tar.gz
      - dps8m-git-linux-e2k63.tar.gz
  retry: 2
  timeout: 480 minutes
  interruptible: true

############################################################################

GNU GLOBAL Hypertext:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: docs
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - global --version | head -1 || true
    - |
      # Start of configure gtags ...
      echo -e "section_start:`date +%s`:cgtags_section[collapsed=true]\r\e[0K\033[0;36mConfigure gtags ...\033[0m" || true
    - make distclean
    - cp -f ./.gtags.conf /etc/gtags.conf
    - |
      # End of configure gtags ...
      echo -e "section_end:`date +%s`:cgtags_section\r\e[0K" || true
    - *scriptDPS8Mods
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - make -j $(nproc)
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - |
      # Start of preprocessing ...
      echo -e "section_start:`date +%s`:preproc_section[collapsed=true]\r\e[0K\033[0;36mGtags preprocessing ...\033[0m" || true
    - mv -f src/libsir .
    - sh -c 'OUT=$(find ./src -name "*.[ch]" -exec unifdef -U0 -b -k -m {} \; 2>&1); test -z "${OUT:-}" && exit 0; echo "${OUT:?}"; exit 1'
    - mv -f libsir src
    - |
      # End of preprocessing ...
      echo -e "section_end:`date +%s`:preproc_section\r\e[0K" || true
    - |
      # Start of gtags ...
      echo -e "section_start:`date +%s`:gtags_section[collapsed=true]\r\e[0K\033[0;36mGtags ...\033[0m" || true
    - htags --map-file --auto-completion --colorize-warned-line -h -I --tabs 4 -n -o -s --table-flist --statistics
    - |
      # End of gtags ...
      echo -e "section_end:`date +%s`:gtags_section\r\e[0K" || true
    - |
      # Start of postprocessing ...
      echo -e "section_start:`date +%s`:postproc_section[collapsed=true]\r\e[0K\033[0;36mGtags postprocessing ...\033[0m" || true
    - sed -e "s/http:\/\/www.gnu.org\/software\/global\//https:\/\/gitlab.com\/dps8m\/dps8m/" -e "s/ title='Go to the GLOBAL project page.'//" -e "s/ alt='\[Powered by GLOBAL-.*\]'//" -e "s/^<a href='http/<br \/><a href='http/" "HTML/index.html" > "HTML/index.html.tmp" && mv -f "HTML/index.html.tmp" "HTML/index.html" && cp -f "HTML/index.html" "HTML/mains.html"
    - cp -f ./.gtags-style.css HTML/style.css
    - cp -f ./docs/hpages/static/pglobe.png HTML/icons/pglobe.png
    - |
      # End of postprocessing ...
      echo -e "section_end:`date +%s`:postproc_section\r\e[0K" || true
  dependencies: []
  artifacts:
    expire_in: 30 days
    paths:
      - HTML
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Hugo:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: docs
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - hugo version
    - |
      # Start of Hugo build ...
      echo -e "section_start:`date +%s`:Hugo_section[collapsed=true]\r\e[0K\033[0;36mHugo build ...\033[0m" || true
    - cd docs/hpages && ./hugobuild.sh
    - |
      # End of Hugo build ...
      echo -e "section_end:`date +%s`:Hugo_section\r\e[0K" || true
  dependencies: []
  artifacts:
    expire_in: 30 days
    paths:
      - docs/hpages/public
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Linux/x86_64, NVIDIA HPC SDK C:
  image: registry.gitlab.com/dps8m/dps8m/nvhpc:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
    - AVX
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - |
      # Start of configure ...
      echo -e "section_start:`date +%s`:config_section[collapsed=true]\r\e[0K\033[0;36mConfigure ...\033[0m" || true
    - export NVPLAT="Linux_x86_64"
    - export NVCPATH="/opt/nvidia/hpc_sdk/${NVPLAT}/*.*/compilers/bin"
    - |
      # End of configure ...
      echo -e "section_end:`date +%s`:config_section\r\e[0K" || true
    - ${NVCPATH}/nvc -V
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env CFLAGS="-noswitcherror --diag_suppress=mixed_enum_type --diag_suppress=branch_past_initialization --diag_suppress=set_but_not_used" CC="${NVCPATH}/nvc" NO_LTO=1 make -j $(nproc) OPTFLAGS="-fast -O4 -Mnofprelaxed"
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *scriptVerifyVersion
    - *scriptBuildInfo
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Linux/x86_64, Oracle Developer Studio:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - /opt/oracle/developerstudio12.6/bin/suncc -V
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env CFLAGS="-DNO_C_ELLIPSIS -Qy -xO5 -m64 -xlibmil -xCC -mt -xlibmopt -fno-semantic-interposition -xprefetch=auto -xprefetch_level=3" CC="/opt/oracle/developerstudio12.6/bin/suncc" NO_LTO=1 SUNPRO=1 NEED_128=1 CSTD="c11" make -j $(nproc)
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - *scriptVerifyVersion
    - *scriptBuildInfo
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Windows/ARM64, LLVM-MinGW:
  image: registry.gitlab.com/dps8m/dps8m/llvm-mingw:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - aarch64-w64-mingw32-clang --version | head -1 || true
    - |
      # Start of libuv build ...
      echo -e "section_start:`date +%s`:libuv_section[collapsed=true]\r\e[0K\033[0;36mBuild libuv ...\033[0m" || true
    - mkdir -p "${HOME}/libuv-build" && mkdir -p "${HOME}/libuv-win32-arm64" && ( cd "${HOME}/libuv-build" && wget -q "https://github.com/libuv/libuv/archive/v1.x.zip" && unzip -xa "v1.x.zip" && cd "libuv-1.x" && sh ./autogen.sh && ./configure --prefix="${HOME}/libuv-win32-arm64" --enable-static --disable-shared --host="aarch64-w64-mingw32" && make -j $(nproc) && make install )
    - |
      # End of libuv build ...
      echo -e "section_end:`date +%s`:libuv_section\r\e[0K" || true
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env CC="aarch64-w64-mingw32-clang" CFLAGS="-I${HOME}/libuv-win32-arm64/include -D__MINGW64__" LDFLAGS="-L${HOME}/libuv-win32-arm64/lib" make -j $(nproc) CROSS="MINGW64"
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - mkdir -p "src/dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - cp -f docs/txt/README.txt docs/txt/LICENSE.txt "src/dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - cp -f src/dps8/dps8.exe src/tap2raw/tap2raw.exe src/prt2pdf/prt2pdf.exe src/punutil/punutil.exe "src/dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - cp -f /opt/llvm-mingw/aarch64-w64-mingw32/bin/libwinpthread-1.dll "src/dps8m-${CI_COMMIT_SHORT_SHA:?}"
    - ( cd src && zip -9 ../dps8m-git-mingw-a64.zip ./dps8m-${CI_COMMIT_SHORT_SHA:?}/* )
    - rm -rf "src/dps8m-${CI_COMMIT_SHORT_SHA:?}" || true
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m-git-mingw-a64.zip
      - dps8m.zip
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Windows/i686, LLVM-MinGW:
  image: registry.gitlab.com/dps8m/dps8m/llvm-mingw:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - i686-w64-mingw32-clang --version | head -1 || true
    - |
      # Start of libuv build ...
      echo -e "section_start:`date +%s`:libuv_section[collapsed=true]\r\e[0K\033[0;36mBuild libuv ...\033[0m" || true
    - mkdir -p "${HOME}/libuv-build" && mkdir -p "${HOME}/libuv-win32-i686" && ( cd "${HOME}/libuv-build" && wget -q "https://github.com/libuv/libuv/archive/v1.x.zip" && unzip -xa "v1.x.zip" && cd "libuv-1.x" && sh ./autogen.sh && ./configure --prefix="${HOME}/libuv-win32-i686" --enable-static --disable-shared --host="i686-w64-mingw32" && make -j $(nproc) && make install )
    - |
      # End of libuv build ...
      echo -e "section_end:`date +%s`:libuv_section\r\e[0K" || true
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env CC="i686-w64-mingw32-clang" CFLAGS="-I${HOME}/libuv-win32-i686/include -D__MINGW64__" LDFLAGS="-L${HOME}/libuv-win32-i686/lib" NEED_128=1 make -j $(nproc) CROSS="MINGW64"
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m.zip
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Windows/x86_64, LLVM-MinGW:
  image: registry.gitlab.com/dps8m/dps8m/llvm-mingw:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - x86_64-w64-mingw32-clang --version | head -1 || true
    - |
      # Start of libuv build ...
      echo -e "section_start:`date +%s`:libuv_section[collapsed=true]\r\e[0K\033[0;36mBuild libuv ...\033[0m" || true
    - mkdir -p "${HOME}/libuv-build" && mkdir -p "${HOME}/libuv-win32-x86_64" && ( cd "${HOME}/libuv-build" && wget -q "https://github.com/libuv/libuv/archive/v1.x.zip" && unzip -xa "v1.x.zip" && cd "libuv-1.x" && sh ./autogen.sh && ./configure --prefix="${HOME}/libuv-win32-x86_64" --enable-static --disable-shared --host="x86_64-w64-mingw32" && make -j $(nproc) && make install )
    - |
      # End of libuv build ...
      echo -e "section_end:`date +%s`:libuv_section\r\e[0K" || true
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env CC="x86_64-w64-mingw32-clang" CFLAGS="-I${HOME}/libuv-win32-x86_64/include -D__MINGW64__" LDFLAGS="-L${HOME}/libuv-win32-x86_64/lib" make -j $(nproc) CROSS="MINGW64"
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - test -f src/dps8/dps8.exe
    - *scriptBuildInfo
    - *scriptCompressArtifacts
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m.zip
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

Source Kits:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: build
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - pigz --version 2>&1 || true
    - zip --version 2>&1 | grep -i 'Zip .*\.' | tail -1 || true
    - lzip --version 2>&1 | grep -i 'lzip .*\.' || true
    - 7za --help 2>&1 | grep -i 'zip .*\.' | head -1 || true
    - zpaq --help 2>&1 | grep -i 'zpaq .*\.' | head -1 || true
    - |
      # Start of tar.gz kit ...
      echo -e "section_start:`date +%s`:tgz_section[collapsed=true]\r\e[0K\033[0;36mBuild tar.gz kit ...\033[0m" || true
    - make distclean && make dist COMPRESS="pigz -C "${CI_COMMIT_SHA:?}" -11 -f -m -n" COMPRESSXT="gz"
    - cp -f sources.tar.gz /tmp
    - |
      # End of tar.gz kit ...
      echo -e "section_end:`date +%s`:tgz_section\r\e[0K" || true
    - |
      # Start of zip kit ...
      echo -e "section_start:`date +%s`:zip_section[collapsed=true]\r\e[0K\033[0;36mBuild zip kit ...\033[0m" || true
    - make distclean && make zipdist
    - cp -f /tmp/sources.tar.gz .
    - mv sources.zip dps8m-git-src.zip
    - mv sources.tar.gz dps8m-git-src.tar.gz
    - |
      # End of zip kit ...
      echo -e "section_end:`date +%s`:zip_section\r\e[0K" || true
    - |
      # Start of tar.lz kit ...
      echo -e "section_start:`date +%s`:tlz_section[collapsed=true]\r\e[0K\033[0;36mBuild tar.lz kit ...\033[0m" || true
    - make distclean && make dist COMPRESS="lzip -9 -s 512Mi" COMPRESSXT="lz"
    - mv sources.tar.lz dps8m-git-src.tar.lz
    - |
      # End of tar.lz kit ...
      echo -e "section_end:`date +%s`:tlz_section\r\e[0K" || true
    - |
      # Start of 7z kit ...
      echo -e "section_start:`date +%s`:7z_section[collapsed=true]\r\e[0K\033[0;36mBuild 7z kit ...\033[0m" || true
    - make distclean && env COMPRESSXT="7z" COMPRESS='( mkdir -p 7ztmp && cd 7ztmp && tar xf ../../../$(KITNAME).$(TARXT) && 7za a -y -m0=lzma -mx=9 -mfb=273 -ssc -ssw -spf -snl -md=512m -ms=on -stl -sdel ../../../$(KITNAME).$(COMPRESSXT) . ) && $(RMDIR) 7ztmp && $(RMF) $(KITNAME).$(TARXT)' make dist
    - mv sources.7z dps8m-git-src.7z
    - |
      # End of 7z kit ...
      echo -e "section_end:`date +%s`:7z_section\r\e[0K" || true
    - |
      # Start of zpaq kit ...
      echo -e "section_start:`date +%s`:zpaq_section[collapsed=true]\r\e[0K\033[0;36mBuild zpaq kit ...\033[0m" || true
    - make distclean && env COMPRESSXT="zpaq" COMPRESS='( mkdir -p zpaqtmp && cd zpaqtmp && tar xf ../../../$(KITNAME).$(TARXT) && zpaq -f add ../../../$(KITNAME).$(COMPRESSXT) . -m5 ) && $(RMF) -r ./zpaqtmp && $(RMF) $(KITNAME).$(TARXT)' make dist
    - mv sources.zpaq dps8m-git-src.zpaq
    - |
      # End of zpaq kit ...
      echo -e "section_end:`date +%s`:zpaq_section\r\e[0K" || true
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - dps8m-git-src.tar.lz
      - dps8m-git-src.tar.gz
      - dps8m-git-src.7z
      - dps8m-git-src.zip
      - dps8m-git-src.zpaq
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

NSIS Installer:
  stage: nsis_installer
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  needs:
    - job: Source Tree Checks
    - job: DPS8M Omnibus Documentation
    - job: Source Kits
  dependencies:
    - "DPS8M Omnibus Documentation"
    - "Source Kits"
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - x86_64-w64-mingw32ucrt-gcc --version | head -1 || true
    - i686-w64-mingw32-gcc --version | head -1 || true
    - rpm -qi $(rpm -qf $(command -v makensis)) | grep -i version || true
    - |
      # Start NSIS build ...
      echo -e "section_start:`date +%s`:nsis_section[collapsed=true]\r\e[0K\033[0;36mNSIS build ...\033[0m" || true
    - cd "${CI_PROJECT_DIR:?}/.nsis" && env USE_CI=1 ./build-nsis.sh
    - cd "${CI_PROJECT_DIR:?}" && make distclean
    - test -f "${CI_PROJECT_DIR:?}/.nsis/dps8m-git-win-setup.exe"
    - |
      # End NSIS build ...
      echo -e "section_end:`date +%s`:nsis_section\r\e[0K" || true
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - .nsis/dps8m-git-win-setup.exe
  retry: 2
  timeout: 120 minutes
  interruptible: true

#############################################################################

Option Verification Test:
  stage: cmb_test
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  needs:
    - job: Source Tree Checks
  tags:
    - Docker-x64
    - amd64
    - Linux
  parallel: 4
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - |
      # Start of job setup ...
      echo -e "section_start:`date +%s`:setup_section[collapsed=true]\r\e[0K\033[0;36mJob setup ...\033[0m" || true
    - export NO_LTO=1
    - export CMB_OPTIONS="NO_LOCKLESS=1 TESTING=1 NEED_128=1 ROUND_ROBIN=1"
    - make -C "src/mcmb" && export CMB_TOOL="$(command -p env PATH="$(command -p env getconf PATH)" mktemp)" && mv -f "src/mcmb/mcmb" "${CMB_TOOL:?}" && chmod a+x "${CMB_TOOL:?}"
    - touch part_x.sh && rm -f part_*.sh > /dev/null 2>&1 || true > /dev/null 2>&1
    - ( export NSPLIT=${CI_NODE_TOTAL:?}; for i in $(seq 1 ${CI_NODE_TOTAL:?}); do ( bash -c '${CMB_TOOL:?} -N -e ${CMB_OPTIONS:?} -p "make -j $(nproc) " -s " && printf %s\\\\n \"SHOW VERSION\" | ./src/dps8/dps8 -t && make distclean && \\"' ) | awk '{ print "env ITERATION="$0 }' 2> /dev/null | split -e -n "r/${i:?}/${NSPLIT:?}" | awk "BEGIN { print \"#!/usr/bin/env bash\"; print \"# Part ${i:?} of ${NSPLIT:?}\"; printf \"\"; print \"set -eux -o pipefail\" } { print \$0 } END { print \"true\"; print \"\" }" | tr -d '\r' > "part_${i:?}_of_${NSPLIT:?}.sh" 2> /dev/null; done )
    - export CMB_CI_JOB="part_${CI_NODE_INDEX:?}_of_${CI_NODE_TOTAL:?}.sh"
    - dos2unix ./"${CMB_CI_JOB:?}" || true
    - chmod a+x ./"${CMB_CI_JOB:?}"
    - |
      # End of job setup ...
      echo -e "section_end:`date +%s`:setup_section\r\e[0K" || true
    - |
      # Start of test ...
      echo -e "section_start:`date +%s`:test_section[collapsed=true]\r\e[0K\033[0;36mTest ...\033[0m" || tru
    - ./"${CMB_CI_JOB:?}" 2>&1 | tee -i options-test.txt | grep --line-buffered 'env ITERATION'
    - |
      # End of test ...
      echo -e "section_end:`date +%s`:test_section\r\e[0K" || true
    - |
      # Start of perf_strip ...
      echo -e "section_start:`date +%s`:perf_section[collapsed=true]\r\e[0K\033[0;36mPERF_STRIP ...\033[0m" || true
    - make clean > /dev/null 2>&1 && make -j $(nproc) PERF_STRIP=1
    - ( cd src/perf_test && ../../src/dps8/dps8 2>&1 || true )
    - |
      # End of perf_strip ...
      echo -e "section_end:`date +%s`:perf_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - options-test.txt
  retry: 2
  timeout: 120 minutes
  interruptible: true

#############################################################################

DPS8M Omnibus Documentation:
  when: always
  stage: docs
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-x64-fast
    - Linux
    - amd64
  needs:
    - job: Source Tree Checks
  script:
    - |
      # Start of mktexfmt ...
      echo -e "section_start:`date +%s`:mktexfmt_section[collapsed=true]\r\e[0K\033[0;36mmktexfmt ...\033[0m" || true
    - mktexfmt xelatex.fmt || true
    - |
      # End of docspdf ...
      echo -e "section_end:`date +%s`:mktexfmt_section\r\e[0K" || true
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - *scriptDPS8Mods
    - |
      # Start of DPS8M Omnibus Documentation build ...
      echo -e "section_start:`date +%s`:docspdf_section[collapsed=true]\r\e[0K\033[0;36mBuild DPS8M Omnibus Documentation ...\033[0m" || true
    - gmake -j $(nproc) && gmake docspdf
    - |
      # End of docspdf ...
      echo -e "section_end:`date +%s`:docspdf_section\r\e[0K" || true
    - test -f ${CI_PROJECT_DIR:?}/docs/dps8-omnibus.pdf
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - docs/dps8-omnibus.pdf
  retry: 2
  timeout: 120 minutes
  interruptible: true

############################################################################

Multics CI-Kit Test:
  stage: ci_test
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-x64-fast
    - Linux
    - CIKit-x64
    - amd64
  needs:
    - job: Source Tree Checks
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptDPS8Mods
    - *scriptExtraInfo
    - |
      # Start of CI-Kit ...
      echo -e "section_start:`date +%s`:cikit_section[collapsed=true]\r\e[0K\033[0;36mCI-Kit ...\033[0m" || true
    - bash -x -c '( set -x ; cd src/ci-kit && env NO_CI_SYMLINK_TAPES=1 ./init.sh ; ./ci.sh ; make -f ci.makefile diff ; mv -f new.log new.txt )'
    - |
      # End of CI-Kit ...
      echo -e "section_end:`date +%s`:cikit_section\r\e[0K" || true
  cache:
    key: tape-cache
    paths:
      - src/ci-kit/tapes/*.tap
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - src/ci-kit/new.txt
  retry: 2
  timeout: 120 minutes
  interruptible: true

#############################################################################

Flawfinder:
  stage: test
  allow_failure: false
  needs:
    - job: Source Tree Checks
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-x64
    - amd64
    - Linux
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - flawfinder --version
    - |
      # Start of flawfinder ...
      echo -e "section_start:`date +%s`:flawfinder_section[collapsed=true]\r\e[0K\033[0;36mFlawfinder ...\033[0m" || true
    - flawfinder -C -m 5 -c . 2>&1 > flawfinder.txt || true
    - |
      # End of flawfinder ...
      echo -e "section_end:`date +%s`:flawfinder_section\r\e[0K" || true
    - sh -xc 'set +e; grep "No hits found" flawfinder.txt && exit 0;exit 2'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - flawfinder.txt
  retry: 2
  timeout: 90 minutes
  interruptible: true

#############################################################################

Clang Analyzer:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: test
  allow_failure: false
  needs:
    - job: Source Tree Checks
  tags:
    - Linux
    - Docker-x64
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - clang --version 2>&1 | head -1 || true
    - |
      # Start of analyzer ...
      echo -e "section_start:`date +%s`:analyze_section[collapsed=true]\r\e[0K\033[0;36mClang Analyzer ...\033[0m" || true
    - gmake superclean
    - gmake clsanalz
    - mkdir -p out
    - touch out/index.html
    - |
      # End of analyzer ...
      echo -e "section_end:`date +%s`:analyze_section\r\e[0K" || true
    - sh -xc 'set +e;C_OUTPUT="$(cat out/index.html 2> /dev/null)" && test -z "${C_OUTPUT:-}"'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - out/*
  timeout: 90 minutes
  interruptible: true

#############################################################################

PVS-Studio:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: test
  allow_failure: false
  needs:
    - job: Source Tree Checks
  tags:
    - Linux
    - Docker-x64
    - amd64
    - AVX
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - pvs-studio --version
    - pvs-studio-analyzer credentials "${PVS_STUDIO_NAME:?}" "${PVS_STUDIO_KEY:?}" || true
    - rm -f compile_commands.json
    - rm -f compile_commands.events.json
    - |
      # Start of build ...
      echo -e "section_start:`date +%s`:Build_section[collapsed=true]\r\e[0K\033[0;36mBuild ...\033[0m" || true
    - env WITH_ABSI_DEV=1 WITH_MGP_DEV=1 WITH_SOCKET_DEV=1 bear -- gmake -j $(nproc)
    - |
      # End of build ...
      echo -e "section_end:`date +%s`:Build_section\r\e[0K" || true
    - ./src/dps8/dps8 --version
    - |
      # Start of analyzer ...
      echo -e "section_start:`date +%s`:analyzer_section[collapsed=true]\r\e[0K\033[0;36mPVS-Studio Analyzer ...\033[0m" || true
    - pvs-studio-analyzer analyze --intermodular -o log.pvs || true
    - plog-converter -a "GA:1,2" -t fullhtml log.pvs -o pvsreport -d V576,V629,V701,V768 > pvs.txt 2>&1 || true
    - cat pvs.txt || true
    - |
      # End of analyzer ...
      echo -e "section_end:`date +%s`:analyzer_section\r\e[0K" || true
    - grep -Eiq '(Exception. No valid messages|No messages generated)' pvs.txt && { echo 'PASSED'; mkdir -p ./pvsreport; printf '%s\n' "Congratulations!" > ./pvsreport/index.html; } || true
    - mkdir -p ./pvsreport
    - touch pvsreport/index.html
    - rm -f pvs.txt || true
    - grep -Eiq '(Congratulations!|No messages generated)' pvsreport/index.html
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - pvsreport/*
  timeout: 90 minutes
  interruptible: true

#############################################################################

Coverity:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  stage: coverity_test
  allow_failure: true
  when: manual
  needs:
    - job: Source Tree Checks
  tags:
    - Linux
    - Docker-x64
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - |
      # Start of Coverity submission ...
      echo -e "section_start:`date +%s`:cov_section[collapsed=true]\r\e[0K\033[0;36mCoverity submission ...\033[0m" || true
    - mkdir -p .coverity-dl
    - export COVERITY_DLDIR="$(pwd)/.coverity-dl"
    - ./src/ci-kit/coverity-submit.sh
    - |
      # End of Coverity submission ...
      echo -e "section_end:`date +%s`:cov_section\r\e[0K" || true
    - touch OK
  cache:
    key: coverity-cache
    paths:
      - .coverity-dl
  dependencies: []
  artifacts:
    when: always
    expire_in: 3 days
    paths:
      - OK
  timeout: 90 minutes
  interruptible: true

#############################################################################

Cppcheck:
  stage: test
  allow_failure: false
  needs:
    - job: Source Tree Checks
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-x64
    - Linux
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - cppcheck --version
    - |
      # Start of Cppcheck ...
      echo -e "section_start:`date +%s`:cppcheck_section[collapsed=true]\r\e[0K\033[0;36mCppcheck ...\033[0m" || true
    - env HTMLOUT=1 make cppcheck
    - ansifilter -T cppcheck.txt > cppcheck.txt.1 2> /dev/null
    - env mv -f cppcheck.txt.1 cppcheck.txt > /dev/null 2>&1
    - |
      # End of Cppcheck ...
      echo -e "section_end:`date +%s`:cppcheck_section\r\e[0K" || true
    - sh -xc 'set +e; grep "A HREF=" cppcheck/index.html && exit 1; exit 0'
    - sh -xc 'set +e; grep -vE "(^#.*#$|^$)" cppcheck/index.html && exit 1; exit 0'
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - cppcheck.txt
      - cppcheck/index.html
      - cppcheck/*/*
  timeout: 360 minutes
  interruptible: true

#############################################################################

Source Tree Checks:
  stage: src_test
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-x64
    - Linux
    - amd64
  script:
    - *scriptSanity
    - *scriptCommon
    - *scriptExtraInfo
    - |
      # Start of editorconfig-checker ...
      echo -e "section_start:`date +%s`:ecc_section[collapsed=true]\r\e[0K\033[0;36meditorconfig-checker ...\033[0m" || true
    - ${HOME}/go/bin/editorconfig-checker
    - |
      # End of editorconfig-checker ...
      echo -e "section_end:`date +%s`:ecc_section\r\e[0K" || true
    - |
      # Start of source check ...
      echo -e "section_start:`date +%s`:checksrc_section[collapsed=true]\r\e[0K\033[0;36mSource check ...\033[0m" || true
    - ( env EXTRA_HOOK=1 DEBUG_HOOK=1 TEST_DEPENDS=1 ./.githooks/pre-commit 2>&1 ; env gmake -j 1 lmscspell spdxtest 2>&1 ) 2>&1 | tee -i pre-commit-test.txt
    - |
      # End of source check ...
      echo -e "section_end:`date +%s`:checksrc_section\r\e[0K" || true
  dependencies: []
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - pre-commit-test.txt
  retry: 2
  timeout: 90 minutes
  interruptible: true

############################################################################

pages:
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-amd64
    - Linux
    - amd64
  needs:
    - job: Clang Analyzer
    - job: Cppcheck
    - job: Cross-compiled release binaries
    - job: Elbrus binaries
    - job: KVX binaries
    - job: DPS8M Omnibus Documentation
    - job: Flawfinder
    - job: GNU GLOBAL Hypertext
    - job: Hugo
    - job: Linux/x86_64, NVIDIA HPC SDK C
    - job: Linux/x86_64, Oracle Developer Studio
    - job: Multics CI-Kit Test
    - job: NSIS Installer
    - job: Option Verification Test
    - job: PVS-Studio
    - job: Source Kits
    - job: Windows/ARM64, LLVM-MinGW
    - job: Windows/i686, LLVM-MinGW
    - job: Windows/x86_64, LLVM-MinGW
  dependencies:
    - "Clang Analyzer"
    - "Cppcheck"
    - "Cross-compiled release binaries"
    - "Elbrus binaries"
    - "KVX binaries"
    - "DPS8M Omnibus Documentation"
    - "Flawfinder"
    - "GNU GLOBAL Hypertext"
    - "Hugo"
    - "NSIS Installer"
    - "PVS-Studio"
    - "Source Kits"
    - "Windows/ARM64, LLVM-MinGW"
  stage: deploy
  script:
  - brotli --version
  - pigz --version
  - |
    # Start of Pages deploy ...
    echo -e "section_start:`date +%s`:deploy_section[collapsed=true]\r\e[0K\033[0;36mPages deploy ...\033[0m" || true
  - mkdir -p public/master
  - mv -f ${CI_PROJECT_DIR:?}/docs/dps8-omnibus.pdf public/master/dps8m-omnibus.pdf
  - mv -f ${CI_PROJECT_DIR:?}/HTML public/master/global
  - mkdir -p public/master/lint/oracle || true
  - mv -f ${CI_PROJECT_DIR:?}/orstlint.txt public/master/lint/oracle/oracle.txt || true
  - mv -f ${CI_PROJECT_DIR:?}/cppcheck public/master/lint/cppcheck || true
  - mv -f ${CI_PROJECT_DIR:?}/cppcheck.txt public/master/lint/cppcheck/cppcheck.txt || true
  - mkdir -p public/master/lint/flawfinder || true
  - mv -f ${CI_PROJECT_DIR:?}/flawfinder.txt public/master/lint/flawfinder/flawfinder.txt || true
  - mv -f ${CI_PROJECT_DIR:?}/out public/master/lint/clang-analyzer || true
  - mv -f ${CI_PROJECT_DIR:?}/pvsreport public/master/lint/pvs || true
  - mv -f ${CI_PROJECT_DIR:?}/docs/hpages/public/* public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-src.tar.lz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-src.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-src.7z public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-src.zip public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-src.zpaq public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-s114-sv9.tar.gz publi
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-fbd13-a64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-fbd13-x61.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-fbd13-x32.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-l64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-s64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-s32.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-641.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-a8a.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-a7f.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-a7s.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-a6f.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-a6s.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-740.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-r64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-390.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-ndk24-a64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-ndk24-a32.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-ndk24-x64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-ndk24-x32.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-haiku-x64.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-686.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-pw8.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-macos-uni.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-s114-641.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-iloi-641.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-970.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-mingw-a64.zip public
  - mv -f ${CI_PROJECT_DIR:?}/.nsis/dps8m-git-win-setup.exe public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2kv3.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2kv4.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2k1c.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2kv5.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2k6c.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-e2k63.tar.gz public
  - mv -f ${CI_PROJECT_DIR:?}/dps8m-git-linux-kvx3.tar.gz public
  - find "public" -type f -name '*-mingw-*.zip' -print0 | xargs -0 -n 1 -P 0 advzip -k -z4 || true
  - find "public" -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -print0 | xargs -0 -n 1 -P 0 brotli -f -k -v -Z -- || true
  - find "public" -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -print0 | xargs -0 -n 1 -P 0 pigz -9 -f -k -m -v -- || true
  - |
    # End of Pages deploy ...
    echo -e "section_end:`date +%s`:deploy_section\r\e[0K" || true
  artifacts:
    paths:
    - public
    expire_in: 1 day
  only:
    - master
  retry: 2
  timeout: 120 minutes
  interruptible: false

############################################################################

trigger:
  stage: trigger
  image: registry.gitlab.com/dps8m/dps8m/base:latest
  tags:
    - Docker-amd64
    - Linux
    - amd64
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: pages
  script:
    - curl -X POST --fail -F token=$REPO_TOKEN -F ref=master https://gitlab.com/api/v4/projects/55311038/trigger/pipeline
  retry: 2
  timeout: 120 minutes
  interruptible: false

############################################################################
