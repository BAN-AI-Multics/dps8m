!SIZE 001431
!SEGNAME Utils
!SEGDEF A0 000005
!SEGDEF A1 000016
!SEGDEF rd_clockA 000020
!SEGDEF ioa 000100
!SEGDEF typeA 000023
000000 xxxx 000005710000         tra     A0
000001 xxxx 000016710000         tra     A1
000002 xxxx 000100710000         tra     ioa
000003 xxxx 000020710000         tra     rd_clockA
000004 xxxx 000023710000         tra     typeA
000005 xxxx 000010252000 A0:     spri2   save2
000006 xxxx 000010610000         rtcd    save2
000007 xxxx 000000011000             even "(allocating 1 nop)
000010 xxxx 000000000000 save2:      bss     ,2
000012 xxxx 000000000000 save2p:     bss     ,2
000014 xxxx 000000000000 save3p:     bss     ,2
000016 xxxx 000010252000 A1:     spri2   save2
000017 xxxx 000010610000         rtcd    save2
000020 xxxx 000010252000         spri2   save2
000021 xxxx 000553702000         tsx2	rd_clock
000022 xxxx 000010610000         rtcd    save2
000023 xxxx 000010252000 typeA:  spri2   save2
000024 xxxx 000012542000         sprp2   save2p      " save a packed version of pr2
000025 xxxx 000014543000         sprp3   save3p      " save a packed version of pr3
000026 xxxx 000012763000         lprp3   save2p      " get PR2's segment number into PR3
000027 xxxx 000070753000         sreg    saveX       " save registers
000030 xxxx 200000235100         lda     pr2|0       " get descriptor ADDR=au, CNT=al
000031 xxxx 000000313401         eawp3   0,au        " put address into PR3's WORDNO
000032 xxxx 000077375007         ana     =077,dl     " only 6-bits
000033 xxxx 000040751003         stca    typeA2, 3   " save 6-bits of length in descriptor
000034 xxxx 000043751003         stca    typeA3, 3   " save 6-bits of length in descriptor
000035 xxxx 000001626000         eax6    1
000036 xxxx 000011046000         asx6    save2+1		"set correct pr2 return value ere we meet a horrible death
000037 xxxx 000020100500         mlr     (pr),(id)   " grab all characters
000040 xxxx 300000000000 typeA2: desc9a  pr3|0,0     " ... from descriptor following the tsp2 call 
000041 xxxx 000043000000         arg     typeA3      " ... and save for descriptor
000042 xxxx 000350702000         tsx2    type        " write it out
000043 xxxx 000050000000 typeA3: desc9a  typeChr,0 
000044 xxxx 000070073000         lreg    saveX       " restore regsiters
000045 xxxx 000014763000         lprp3   save3p      " restore PR3
000046 xxxx 000012762000         lprp2   save2p      " restore PR2
000047 xxxx 000010610000         rtcd    save2
000050 xxxx 000000000000 typeChr:bss     ,16
000070 xxxx 000000000000 saveX:  bss     ,8
000100 xxxx 000010252000 ioa:    spri2   save2       " save pr2 for return to caller
000101 xxxx 000012542000         sprp2   save2p      " save a packed version of pr2
000102 xxxx 000014543000         sprp3   save3p      " save a packed version of pr3
000103 xxxx 000012763000         lprp3   save2p      " get PR2's segment number into PR3
000104 xxxx 000306743000         stx3	ioax3       " save X3
000105 xxxx 000305746000         stx6	ioax6       " save X6
000106 xxxx 200000235100         lda     pr2|0       " get character count from string
000107 xxxx 000033771000         arl     27          " ..
000110 xxxx 000000627005         eax7    0,al		" length of string in X7
000111 xxxx 000463747000         stx7    erlen		" save length
000112 xxxx 000001626000         eax6    1           " X6 is offset into input string
000113 xxxx 000002771000         arl     2           " divide character count by 4
000114 xxxx 000001623005         eax3    1,al		" round
000115 xxxx 000463106000 ioaloop:cmpx6	erlen		"is input string exhausted?
000116 xxxx 000304605400         tpnz    ioaend      "if so, exit
000117 xxxx 000000100516         mlr     (pr,x6),()  " grab one character
000120 xxxx 200000000001         desc9a  pr2|0,1 
000121 xxxx 000461000004         desc9a	errarg,4 
000122 xxxx 000001626016         eax6    1,6         "step offset over character
000123 xxxx 000461235000         lda     errarg      "pick up character
000124 xxxx 136000115003         cmpa    =1a^,du		"is it "^"?
000125 xxxx 000131600000         tze     ioa2		"if so, go process it
000126 xxxx 000350702000         tsx2    type
000127 xxxx 000461000001         zero    errarg,1    " write char to console
000130 xxxx 000115710000         tra     ioaloop     " and loop
000131 xxxx 000116124400 ioa2:	scm     (),(pr,x6)  "search table of keys
000132 xxxx 000312000013         desc9a	ioakey,11 
000133 xxxx 200000000001         desc9a  pr2|0,1 
000134 xxxx 000460000000         arg     ertally
000135 xxxx 000115606400         ttn     ioaloop		" tra if not legal key
000136 xxxx 000001626016         eax6    1,6         " step over key
000137 xxxx 200000235113         lda     pr2|0,3     " pick up argument pointer
000140 xxxx 000000313401         eawp3   0,au        " put address into PR3's WORDNO
000141 xxxx 300000235100         lda     pr3|0       " ****** THIS INSTRUCTION NO LONGER GETS MODIFIED ******
000142 xxxx 000461755000         sta     errarg      " and save for conversion
000143 xxxx 000001623013         eax3    1,3         " step to next parameter
000144 xxxx 000460236000         ldq     ertally		" get character key index
000145 xxxx 000315710026         tra     ioatbl,ql*  " dispatch on key
000146 xxxx 777777623013 ioa_pc: eax3    -1,3        " no parameter.
000147 xxxx 000350702000         tsx2    type        " just print a single ^
000150 xxxx 001416000001         zero    =1a^, 1
000151 xxxx 000115710000         tra     ioaloop
000152 xxxx 000461235000 ioa_4:  lda     errarg      " desc4a descriptor is in errarg. Adjust PR3 to point to the strings contents
000153 xxxx 000000313401         eawp3   0,au        " put address into PR3's WORDNO
000154 xxxx 000077375007         ana     =077,dl     " only 6-bit
000155 xxxx 000163751003         stca    ioa_4d, 3   " save length in desc4a output descriptor
000156 xxxx 000000160540         mvt     (pr,rl),()  " copy 4-bit decimal and translate to ASCII
000157 xxxx 300000040005         desc4a  pr3|0,al 
000160 xxxx 000420000100         desc9a	errtemp,64 
000161 xxxx 000547000000         arg     decastab
000162 xxxx 000350702000         tsx2    type
000163 xxxx 000420000100 ioa_4d: desc9a  errtemp,64 
000164 xxxx 000115710000         tra     ioaloop
000165 xxxx 000461235000 ioa_A:  lda     errarg              " desc9a descriptor is in errarg. Adjust PR3 to point to the strings contents
000166 xxxx 000000313401         eawp3   0,au                " put address into PR3's WORDNO
000167 xxxx 000077375007         ana     =077,dl             " only 6-bits
000170 xxxx 040000100540         mlr     (pr,rl),(),fill(040)" copy ASCII string
000171 xxxx 300000000005         desc9a  pr3|0,al 
000172 xxxx 000420000100         desc9a	errtemp,64 
000173 xxxx 001130702000 ioastrip:	tsx2	stripa              " strip trailing blanks
000174 xxxx 000420000100         desc9a	errtemp,64 
000175 xxxx 000262710000         tra     ioatrim                 " and trim leading blanks
000176 xxxx 000461235000 ioa_G:	lda     errarg                  " desc6a descriptor is in errarg. Adjust PR3 to point to the strings contents
000177 xxxx 000000313401         eawp3   0,au                    " put address into PR3's WORDNO
000200 xxxx 000077375007         ana     =077,dl                 " only 12-bits
000201 xxxx 020000160540         mvt     (pr,rl),(),fill(020)    " copy GEBCD and translate to ASCII
000202 xxxx 300000020005         desc6a  pr3|0,al 
000203 xxxx 000420000100         desc9a	errtemp,64 
000204 xxxx 001042000000         arg     geastabu
000205 xxxx 000173710000         tra     ioastrip	"join common code
000206 xxxx 000350702000 ioa_a:  tsx2    type
000207 xxxx 000461000004         zero    errarg,4    " write 4 chars to console
000210 xxxx 000115710000         tra     ioaloop
000211 xxxx 000000160400 ioa_g:  mvt     (),()
000212 xxxx 000461020006         desc6a	errarg,6 
000213 xxxx 000420000006         desc9a	errtemp,6 
000214 xxxx 001042000000         arg     geastabu
000215 xxxx 000350702000         tsx2    type
000216 xxxx 000420000006         zero    errtemp, 6
000217 xxxx 000115710000         tra     ioaloop
000220 xxxx 000000301400 ioa_d:	btd     (),()       " convert decimal number
000221 xxxx 000461000004         desc9a	errarg,4    " 36-bit integer 
000222 xxxx 000416050014         desc4ls	errnum,12   " max 12-digits (incl sign) 
000223 xxxx 000000024400         mvne	(),(),()	" edit the output
000224 xxxx 000416050014         desc4ls	errnum,12 
000225 xxxx 000367000011         desc9a	eredit_d,9 
000226 xxxx 000420000014         desc9a	errtemp,12  " max 12-digits 
000227 xxxx 000014235007         lda     =12,dl      "length of output is 12 characters
000230 xxxx 000262710000         tra     ioatrim     "trim leading blanks from output
000231 xxxx 000010627000 ioa_n:	eax7    (eredit_n-eredit_o)*4  "set offset for conversion with no blank
000232 xxxx 000246710000         tra     ioa_ow		"join common code
000233 xxxx 000001627000 ioa_o:	eax7    1           "set offset of 1 to skip ses micro-op
000234 xxxx 000246710000         tra     ioa_ow		"common code for "^o" and "^w"
000235 xxxx 000461236000 ioa_S:  ldq     errarg      " get string descriptor
000236 xxxx 060000376007         anq     =o060000,dl " mask off everything but TA
000237 xxxx 000165600000         tze     ioa_A       " 00 => 9-bit
000240 xxxx 020000116007         cmpq    =o020000,dl
000241 xxxx 000176600000         tze     ioa_G       " 01 => 6-bit
000242 xxxx 040000116007         cmpq    =o040000,dl
000243 xxxx 000152600000         tze     ioa_4       " 10 => 4-bit
000244 xxxx 000115710000         tra     ioaloop
000245 xxxx 000000627000 ioa_w:	eax7    0           "offset of 0 to turn off zero suppression
000246 xxxx 000753702000 ioa_ow:	tsx2	octwd		"convert octal
000247 xxxx 000416757000         staq	errnum		"save word
000250 xxxx 000017020400         mve     (),(x7),()  "insert a blank in the middle
000251 xxxx 000416020014         desc6a	errnum,12 
000252 xxxx 000372000007         desc9a	eredit_o,7 
000253 xxxx 000440020015         desc6a	errtempo,13 
000254 xxxx 000000160400         mvt     (),()
000255 xxxx 000440020015         desc6a	errtempo,13 
000256 xxxx 000420000015         desc9a	errtemp,13 
000257 xxxx 001022000000         arg     geastab
000260 xxxx 000015235007         lda     13,dl		"length is 13
000261 xxxx 000262710000         tra     ioatrim		"copy into output
000262 xxxx 000000164440 ioatrim:tct     (rl)        "search for last non-blank
000263 xxxx 000420000005         desc9a	errtemp,al 
000264 xxxx 001156000000         arg     abtable
000265 xxxx 000460000000         arg     ertally
000266 xxxx 000460236000         ldq     ertally		"offset of first non-blank in Q
000267 xxxx 000460175000         sba     ertally		"compute # of non-blank characters
000270 xxxx 000022735000 ioamov:	als     18          "place in AU
000271 xxxx 000460755000         sta     ertally		"and save
000272 xxxx 000276600000         tze     ioanomov		"skip zero length move
000273 xxxx 000055100446         mlr     (rl,ql),(rl,x5)	"copy the string
000274 xxxx 000420000001         desc9a	errtemp,au 
000275 xxxx 000376000001         desc9a	erbuf,au 
000276 xxxx 000460235000         lda     ertally     " get count
000277 xxxx 000022775000         alr     18          " shift into al
000300 xxxx 000302751007         stca	ioact,07     " store in erct
000301 xxxx 000350702000         tsx2	type		" print output
000302 xxxx 000376000302 ioact:	desc9a	erbuf,* 
000303 xxxx 000115710000         tra     ioaloop		" and loop
000304 xxxx 000011043000 ioaend: asx3	save2+1		"set correct X3 return value 
000305 xxxx 000305626000 ioax6:	eax6	*           "restore X6
000306 xxxx 000306623000 ioax3:	eax3	*           "restore X3
000307 xxxx 000014763000         lprp3   save3p
000310 xxxx 000012762000         lprp2   save2p
000311 xxxx 000010610000         rtcd    save2       " and return
000312 xxxx 101107167157 ioakey: aci	"AGwondagS4^" 
000313 xxxx 156144141147  
000314 xxxx 123064136000  
000315 xxxx 000165710000 ioatbl: tra     ioa_A
000316 xxxx 000176710000         tra     ioa_G
000317 xxxx 000245710000         tra     ioa_w
000320 xxxx 000233710000         tra     ioa_o
000321 xxxx 000231710000         tra     ioa_n
000322 xxxx 000220710000         tra     ioa_d
000323 xxxx 000206710000         tra     ioa_a
000324 xxxx 000211710000         tra     ioa_g
000325 xxxx 000235710000         tra     ioa_S
000326 xxxx 000152710000         tra     ioa_4
000327 xxxx 000146710000         tra     ioa_pc
000330 xxxx 000000000000 ioatmp:	bss	,16
000350 xxxx 000362742000 type:   stx2	typex2          "here to write tty
000351 xxxx 000000236012         ldq     0,2             "get address and length
000352 xxxx 000366752070         stcq	tlydesc,70      "place address into tally descriptor
000353 xxxx 007777376007         anq     =o7777,dl       "mask the length
000354 xxxx 000006736000         qls     6
000355 xxxx 000040276007         orq     =o40,dl
000356 xxxx 000366752007         stcq	tlydesc,07      "and place in tally word
000357 xxxx 000366235052 type2:  lda     tlydesc, sc
000360 xxxx 000001420400         emcall  1
000361 xxxx 000357607000         ttf     type2
000362 xxxx 000362622000 typex2:	eax2	*
000363 xxxx 000001710012         tra     1,2
000364 xxxx 000000000040 tally:  vfd 18/0, 12/0, 1/1, 5/0        " addr/count
000365 xxxx 000000000000 tallySC:    bss ,1
000366 xxxx 000000000000 tlydesc:    bss ,1
000367 xxxx 401040403040 eredit_d:	vfd	9/lte+1,o9/40,9/lte+3,o9/40,9/lte+4,o9/55,9/mfls+10,9/enf
000370 xxxx 404055152040 
000371 xxxx 321000000000             vfd	9/mvc+1
000372 xxxx 070401020106 eredit_o:	vfd	9/ses+if0,9/lte+1,o9/20,9/mvzb+6,9/insm+1,9/mvzb+5,9/mvc+1,9/ses+if0
000373 xxxx 021105321070 
000374 xxxx 401020021113 eredit_n:	vfd	9/lte+1,o9/20,9/insm+1,9/mvzb+11,9/mvc+1,9/ses+if0,9/ses+if0
000375 xxxx 321070070000 
000376 xxxx 000000000000 erbuf:      bss	,16
000416 xxxx 000000000000 errnum:     bss	,2
000420 xxxx 000000000000 errtemp:	bss	,16
000440 xxxx 000000000000 errtempo:	bss	,16
000460 xxxx 000000000000 ertally:	bss	,1
000461 xxxx 000000000000 errarg:     bss	,1
000462 xxxx 000462000001 errin:      desc9a	*,1 
000463 xxxx 000000000000 erlen:      bss	,1
000464 xxxx 001417375000 asge:	ana     =o177177177177	"make it  legit ASCII
000465 xxxx 000476755000         sta     wd9             "setup to loop through word
000466 xxxx 040000160400         mvt     (),(),fill(040)	"move and translate
000467 xxxx 000476000004         desc9a	wd9,4 
000470 xxxx 000475020006         desc6a	wd6,6 
000471 xxxx 000500000000         arg     asgetab
000472 xxxx 000475235000         lda     wd6             "get ge word
000473 xxxx 000000710012         tra     0,2
000474 xxxx 000000000000 wd4:    oct     0
000475 xxxx 000000000000 wd6:	oct     0
000476 xxxx 000000000000 wd9:	oct     0, 0
000477 xxxx 000000000000
000500 xxxx 020020020020     oct	020020020020,020020020020   "00
000501 xxxx 020020020020
000502 xxxx 020020020020 	oct	020020020020,020020020020   "10
000503 xxxx 020020020020
000504 xxxx 020020020020 	oct	020020020020,020020020020   "20
000505 xxxx 020020020020
000506 xxxx 020020020020 	oct	020020020020,020020020020   "30
000507 xxxx 020020020020
000510 xxxx 020057076013 	oct	020057076013,053074032057   "40
000511 xxxx 053074032057
000512 xxxx 035055054060 	oct	035055054060,073052033061   "50
000513 xxxx 073052033061
000514 xxxx 000001002003 	oct	000001002003,004005006007   "60
000515 xxxx 004005006007
000516 xxxx 010011015056 	oct	010011015056,036075016020   "70
000517 xxxx 036075016020
000520 xxxx 014021022023 	oct	014021022023,024025026027   "100
000521 xxxx 024025026027
000522 xxxx 030031041042 	oct	030031041042,043044045046   "110
000523 xxxx 043044045046
000524 xxxx 047050051062 	oct	047050051062,063064065066   "120
000525 xxxx 063064065066
000526 xxxx 067070071012 	oct	067070071012,020034020072   "130
000527 xxxx 020034020072
000530 xxxx 037021022023 	oct	037021022023,024025026027   "140
000531 xxxx 024025026027
000532 xxxx 030031041042 	oct	030031041042,043044045046   "150
000533 xxxx 043044045046
000534 xxxx 047050051062 	oct	047050051062,063064065066   "160
000535 xxxx 063064065066
000536 xxxx 067070071020 	oct	067070071020,040020020020   "170
000537 xxxx 040020020020
000540 xxxx 000474755000 decas:	sta	wd4		"setup char tally words
000541 xxxx 000000160400 	mvt	(),()
000542 xxxx 000474040010 	desc4a	wd4,8 
000543 xxxx 000476000010 	desc9a	wd9,8 
000544 xxxx 000547000000 	arg     decastab
000545 xxxx 000476235000 	lda     wd9		 "get comverted word
000546 xxxx 000000710012 	tra     0,2
000547 xxxx 060061062063 decastab:	aci	/0123456789+++-++/ 
000550 xxxx 064065066067  
000551 xxxx 070071053053  
000552 xxxx 053055053053  
000553 xxxx 000040413000 rd_clock:	rscr	4*8			"read the clock
000554 xxxx 000706757000 cv_clock:	staq	rdctime		"save clock reading
000555 xxxx 000656742000 	stx2	datx2               "save XR's
000556 xxxx 000657740000 	stx0	datx2+1             "..
000557 xxxx 000034235007 	lda     28,dl               "Initialize montab
000560 xxxx 000711755000 	sta     montab+1            "	to prime Feb
000561 xxxx 001420235000 	lda     =aclok              "find clock config card
000562 xxxx 000752702000 	tsx2	getconf
000563 xxxx 000570710000 	tra     no_clok_card		"Use default
000564 xxxx 600001236117 	ldq     com|1,7
000565 xxxx 000701756000 	stq     rdclock.zone_temp	"Delta hours
000566 xxxx 600002236117 	ldq     com|2,7
000567 xxxx 000702756000 	stq     rdclock.zone_name	"Name of zone
000570 xxxx 000706237000 	ldaq	rdctime             "Get clock reading
000571 xxxx 000001737000 	lls     1                   "Set for dvf
000572 xxxx 001421507000 	dvf     =1000000            "Get seconds since 1900.
000573 xxxx 000044777000 	llr     36                  "Into Q.
000574 xxxx 000074506007 	div     60,dl               "Seconds since min to A, mins to Q.
000575 xxxx 000671755000 	sta     rdclock.sec         "Save for inspection.
000576 xxxx 000074506007 	div     60,dl               "Min since hr to A, hrs to Q.
000577 xxxx 000670755000 	sta     rdclock.min
000600 xxxx 000006627000 	eax7	6
000601 xxxx 000661702000 	tsx2	datecv              "Convert the minutes.
000602 xxxx 000701176000 	sbq     rdclock.zone_temp	"Adjust for GMT.
000603 xxxx 000030506007 	div     24,dl               "Days since 1900 in q.
000604 xxxx 000700756000 	stq     rdclock.day_of_century	"save for  later.
000605 xxxx 000667755000 	sta     rdclock.hr          "Hours since daybreak.
000606 xxxx 000661702000 	tsx2	datecv              "Convert the hours
000607 xxxx 002665506007 	div     365*4+1,dl          "get leap year cycle
000610 xxxx 002110115007 	cmpa	365*3+1,dl          "if in last year of cycle (the leap year)
000611 xxxx 000613604000 	tmi     *+2                 "no
000612 xxxx 000711054000 	aos     montab+1            "allow for feb 29
000613 xxxx 000002736000 	qls     2                   "4*# leap year cycles
000614 xxxx 003555036007 	adlq	1901,dl
000615 xxxx 000677756000 	stq     rdclock.year        "Save
000616 xxxx 000044777000 	llr     36
000617 xxxx 000555506007 	div     365,dl              "Years complete since l.y.c. =>Q
000620 xxxx 000004116007 	cmpq	4,dl                "Dec 31st of leap year?
000621 xxxx 000624601000 	tnz     *+3                 "No.
000622 xxxx 000001176007 	sbq     1,dl                "Adjust year and
000623 xxxx 000555235007 	lda     365,dl              "day numbers.
000624 xxxx 000677056000 	asq     rdclock.year        "Add in years complete.
000625 xxxx 000000626000 	eax6	0                   "search for correct month
000626 xxxx 030220520201 	rpt     12,1,tmi            ".. 
000627 xxxx 000710175016 	sba     montab,6            "subtract off days for each month
000630 xxxx 777777075016 	ada     -1,6                "put back last entry
000631 xxxx 000001075007 	ada     1,dl                "plus one more
000632 xxxx 000674755000 	sta     rdclock.day_of_month	"Day of month
000633 xxxx 000661702000 	tsx2	datecv              "convert day
000634 xxxx 000000635016 	eaa     0,6
000635 xxxx 000710135003 	sbla	montab,du           "get index into month table
000636 xxxx 000022771000 	arl     18                  "..
000637 xxxx 000672755000 	sta     rdclock.month       "Save month number
000640 xxxx 000735236005 	ldq     rdc.months-1,al     "Get name of month.
000641 xxxx 000673756000 	stq     rdclock.month_name
000642 xxxx 000661702000 	tsx2	datecv              "convert month
000643 xxxx 000000024400 	mvne	(),(),()            "edit the date and time
000644 xxxx 000704070010 	desc4ns	date,8 
000645 xxxx 000724000014 	desc9a	datedit,12 
000646 xxxx 000706020014 	desc6a	rdctime,12 
000647 xxxx 000700236000 	ldq     rdclock.day_of_century
000650 xxxx 000002076007 	adq     2,dl                "Bump Tuesday into place.
000651 xxxx 000007506007 	div     7,dl
000652 xxxx 000675755000 	sta     rdclock.day_of_week
000653 xxxx 000727236005 	ldq     rdc.days,al         "Get name of day.
000654 xxxx 000676756000 	stq     rdclock.day_name
000655 xxxx 000706237000 	ldaq	rdctime             "get conversion in AQ
000656 xxxx 000656622000 datx2:	eax2	*               "restore XR's
000657 xxxx 000657620000 	eax0	*                   "..
000660 xxxx 000000710012 	tra     0,2                 "return to caller
000661 xxxx 000703755000 datecv:	sta	datenum             "save number
000662 xxxx 000017301400 	btd     (),(x7)             "convert into proper place
000663 xxxx 000703000004 	desc9a	datenum,4 
000664 xxxx 000704070002 	desc4ns	date,2 
000665 xxxx 777776627017 	eax7	-2,7                "move offset index
000666 xxxx 000000710012 	tra     0,2                 "and return
000667 xxxx 000000000000 rdclock.hr:             bss     ,1
000670 xxxx 000000000000 rdclock.min:            bss     ,1
000671 xxxx 000000000000 rdclock.sec:            bss     ,1
000672 xxxx 000000000000 rdclock.month:          bss     ,1
000673 xxxx 000000000000 rdclock.month_name:     bss     ,1
000674 xxxx 000000000000 rdclock.day_of_month:	bss     ,1
000675 xxxx 000000000000 rdclock.day_of_week:	bss     ,1
000676 xxxx 000000000000 rdclock.day_name:       bss     ,1
000677 xxxx 000000000000 rdclock.year:           bss     ,1
000700 xxxx 000000000000 rdclock.day_of_century:	bss     ,1
000701 xxxx 000000000007 rdclock.zone_temp:      dec     7   "8 5
000702 xxxx 160163164040 rdclock.zone_name:      aci     'pst '  "aci	'est ' 
000703 xxxx 000000000000 datenum:                bss	,1
000704 xxxx 000000000000 date:                   bss	,1
000705 xxxx 000000011000 	even "(allocating 1 nop)
000706 xxxx 000000000000 rdctime:        bss	,2
000710 xxxx 000000000037 montab:         dec	31,28,31,30,31,30,31,31,30,31,30,31
000711 xxxx 000000000034
000712 xxxx 000000000037
000713 xxxx 000000000036
000714 xxxx 000000000037
000715 xxxx 000000000036
000716 xxxx 000000000037
000717 xxxx 000000000037
000720 xxxx 000000000036
000721 xxxx 000000000037
000722 xxxx 000000000036
000723 xxxx 000000000037
000724 xxxx 401020102260 datedit:        vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
000725 xxxx 061322021322 
000726 xxxx 260015322021                 vfd	9/insp,o9/15,9/mvc+2,9/insm+1
000727 xxxx 123165156040 rdc.days:       aci	'Sun Mon Tue Wed ThurFri Sat ' 
000730 xxxx 115157156040  
000731 xxxx 124165145040  
000732 xxxx 127145144040  
000733 xxxx 124150165162  
000734 xxxx 106162151040  
000735 xxxx 123141164040  
000736 xxxx 112141156040 rdc.months: 	aci	'Jan Feb Mar Apr May Jun Jul Aug SeptOct Nov Nec ' 
000737 xxxx 106145142040  
000740 xxxx 115141162040  
000741 xxxx 101160162040  
000742 xxxx 115141171040  
000743 xxxx 112165156040  
000744 xxxx 112165154040  
000745 xxxx 101165147040  
000746 xxxx 123145160164  
000747 xxxx 117143164040  
000750 xxxx 116157166040  
000751 xxxx 116145143040  
000752 xxxx 000000710012 getconf:	tra     0,2		"if found return
000753 xxxx 000770742000 octwd:	stx2	octx2
000754 xxxx 000006622000 	eax2	6
000755 xxxx 000003736000 	qls     3
000756 xxxx 000003777000 	llr     3
000757 xxxx 777777622012 	eax2	-1,2
000760 xxxx 000755605400 	tpnz	*-3
000761 xxxx 001012756000 	stq     octtemp
000762 xxxx 000006622000 	eax2	6
000763 xxxx 000003736000 	qls     3
000764 xxxx 000003777000 	llr     3
000765 xxxx 777777622012 	eax2	-1,2
000766 xxxx 000763605400 	tpnz	*-3
000767 xxxx 001012235000 	lda     octtemp
000770 xxxx 000770622000 octx2:	eax2	*
000771 xxxx 000000710012 	tra     0,2
000772 xxxx 001010742000 hexwd:	stx2	hexx2
000773 xxxx 000044773000 	lrl     36          "shift to Q
000774 xxxx 000006622000 	eax2	6           "	process 6 characters
000775 xxxx 000000235007 hexloop:	lda	=0,dl	"	clear A
000776 xxxx 000004737000 	lls     4           "shift in 4 bits
000777 xxxx 000011115007 	cmpa	=9,dl		"greater than 9?
001000 xxxx 001002604400 	tmoz	*+2
001001 xxxx 000007035007 	adla	=7,dl       "if so, change to letter
001002 xxxx 000006773000 	lrl     6
001003 xxxx 001012235000 	lda     octtemp		"get temporary
001004 xxxx 000006737000 	lls     6           "insert new character
001005 xxxx 001012755000 	sta     octtemp		"and store
001006 xxxx 777777622012 	eax2	-1,2		"decrement index
001007 xxxx 000775605400 	tpnz	hexloop
001010 xxxx 001010622000 hexx2:	eax2	*
001011 xxxx 000000710012 	tra     0,2		"return to caller
001012 xxxx 000000000000 octtemp:	oct	0
001013 xxxx 000475755000 geas:	sta	wd6		"setup char tally words
001014 xxxx 000000160400 	mvt	(),()
001015 xxxx 000475020004 	desc6a	wd6,4 
001016 xxxx 000476000004 	desc9a	wd9,4 
001017 xxxx 001022000000 	arg	geastab
001020 xxxx 000476235000 	lda	wd9		 "get comverted word
001021 xxxx 000000710012 	tra	0,2
001022 xxxx 060061062063 geastab:	aci	X0123456789[#@:>?X 
001023 xxxx 064065066067  
001024 xxxx 070071133043  
001025 xxxx 100072076077  
001026 xxxx 040141142143 	aci	X abcdefghi&.](<\X 
001027 xxxx 144145146147  
001030 xxxx 150151046056  
001031 xxxx 135050074077  
001032 xxxx 174152153154 	aci	X|jklmnopqr-$*);'X 
001033 xxxx 155156157160  
001034 xxxx 161162055044  
001035 xxxx 052051073047  
001036 xxxx 053057163164 	aci	X+/stuvwxyz_,%=" X 
001037 xxxx 165166167170  
001040 xxxx 171172137054  
001041 xxxx 045075042040  
001042 xxxx 060061062063 geastabu:	aci	o0123456789[#@:>?o 
001043 xxxx 064065066067  
001044 xxxx 070071133043  
001045 xxxx 100072076077  
001046 xxxx 040101102103 	aci	o ABCDEFGHI&.](<\o 
001047 xxxx 104105106107  
001050 xxxx 110111046056  
001051 xxxx 135050074077  
001052 xxxx 136112113114 	aci	o^JKLMNOPQR-$*);'o 
001053 xxxx 115116117120  
001054 xxxx 121122055044  
001055 xxxx 052051073047  
001056 xxxx 053057123124 	aci	o+/STUVWXYZ_,%="!o 
001057 xxxx 125126127130  
001060 xxxx 131132137054  
001061 xxxx 045075042041  
001062 xxxx 001422115000 ljust:	cmpa	=h      "		check for blank
001063 xxxx 000000600012 	tze	0,2
001064 xxxx 001423236000 	ldq	=o007777777777	"to left adjust ge word
001065 xxxx 200000211003 	cmk	=o200000,du
001066 xxxx 000000601012 	tnz	0,2
001067 xxxx 000006775000 	alr	6
001070 xxxx 001065710000 	tra	*-3
001071 xxxx 001424115000 rjust:	cmpa	=h      "		check for blank
001072 xxxx 000000600012 	tze	0,2
001073 xxxx 000100336007 	lcq	=o100,dl		"to right adjust ge word
001074 xxxx 000020211007 	cmk	=o20,dl
001075 xxxx 000000601012 	tnz	0,2
001076 xxxx 000036775000 	alr	30
001077 xxxx 001074710000 	tra	*-3
001100 xxxx 001107755000 bzel:	sta	bzin		"replace leading zeros with blanks
001101 xxxx 000000020400 	mve	(),(),()
001102 xxxx 001107020006 	desc6a	bzin,6 
001103 xxxx 001111000004 	desc9a	bzedit,4 
001104 xxxx 001110020006 	desc6a	bzout,6 
001105 xxxx 001110235000 	lda	bzout
001106 xxxx 000000710012 	tra	0,2
001107 xxxx 000000000000 bzin:	bss	,1
001110 xxxx 000000000000 bzout:	bss	,1
001111 xxxx 401020105321 bzedit:	vfd	9/lte+1,o9/20,9/mvzb+5,9/mvc+1
001112 xxxx 001425115000 ljusta:	cmpa	=a      "		check for blank
001113 xxxx 000000600012 	tze	0,2
001114 xxxx 001426236000 	ldq	=o000777777777	"to left adjust ASCII word
001115 xxxx 040000211003 	cmk	=o040000,du
001116 xxxx 000000601012 	tnz	0,2
001117 xxxx 000011775000 	alr	9   "6
001120 xxxx 001115710000 	tra	*-3
001121 xxxx 001427115000 rjusta:	cmpa	=a      "		check for blank
001122 xxxx 000000600012 	tze	0,2
001123 xxxx 777000236007 	ldq	=o777777777000,dl		"to right adjust ge word
001124 xxxx 000040211007 	cmk	=o040,dl
001125 xxxx 000000601012 	tnz	0,2
001126 xxxx 000033775000 	alr	27  "30
001127 xxxx 001124710000 	tra	*-3
001130 xxxx 001156627000 stripa:	eax7	abtable		"X7 -> table for stripping ASCII blanks
001131 xxxx 000000165420 stripj:	tctr	(id)		"scan characters in reverse
001132 xxxx 000000000012 	arg	0,2
001133 xxxx 000000000017 	arg	0,7
001134 xxxx 001145000000 	arg	tctally
001135 xxxx 001430235000 	lda	=o77777777	"mask out extraneous info in tally
001136 xxxx 001145355000 	ansa	tctally		"..
001137 xxxx 000000235012 	lda	0,2		"descriptor in A
001140 xxxx 007777375007 	ana	=o7777,dl	"	extract string length
001141 xxxx 001145135000 	sbla	tctally		"subtract blanks skipped over
001142 xxxx 000001710012 	tra	1,2		"return with new length in A
001143 xxxx 001146627000 stripg:	eax7	gbtable		"X7 -> table for stripping GEBCD blanks
001144 xxxx 001131710000 	tra	stripj		"join common code
001145 xxxx 000000000000 tctally:	bss	,1
001146 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001147 xxxx 001001001001 
001150 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001151 xxxx 001001001001 
001152 xxxx 000001001001 	vfd	9/0,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001153 xxxx 001001001001 
001154 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001155 xxxx 001001001001 
001156 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001157 xxxx 001001001001 
001160 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001161 xxxx 001001001001 
001162 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001163 xxxx 001001001001 
001164 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001165 xxxx 001001001001 
001166 xxxx 000001001001 	vfd	9/0,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001167 xxxx 001001001001 
001170 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001171 xxxx 001001001001 
001172 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001173 xxxx 001001001001 
001174 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001175 xxxx 001001001001 
001176 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001177 xxxx 001001001001 
001200 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001201 xxxx 001001001001 
001202 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001203 xxxx 001001001001 
001204 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001205 xxxx 001001001001 
001206 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001207 xxxx 001001001001 
001210 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001211 xxxx 001001001001 
001212 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001213 xxxx 001001001001 
001214 xxxx 001001001001 	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
001215 xxxx 001001001001 
001216 xxxx 000000000000     bss , 128 - (* - abtable)
001416 xxxx 136040040040 lit Lit000150 (=1a^)
001417 xxxx 177177177177 lit Lit000464 (=o177177177177)
001420 xxxx 143154157153 lit Lit000561 (=aclok)
001421 xxxx 000003641100 lit Lit000572 (=1000000)
001422 xxxx 202020202020 lit Lit001062 (=h)
001423 xxxx 007777777777 lit Lit001064 (=o007777777777)
001424 xxxx 202020202020 lit Lit001071 (=h)
001425 xxxx 040040040040 lit Lit001112 (=a)
001426 xxxx 000777777777 lit Lit001114 (=o000777777777)
001427 xxxx 040040040040 lit Lit001121 (=a)
001430 xxxx 000077777777 lit Lit001135 (=o77777777)
